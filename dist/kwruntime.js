var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// src/lib/babel.min.js
var require_babel_min = __commonJS({
  "src/lib/babel.min.js"(exports2, module2) {
    !function(e, t) {
      typeof exports2 == "object" && typeof module2 != "undefined" ? t(exports2) : typeof define == "function" && define.amd ? define(["exports"], t) : t((e = typeof globalThis != "undefined" ? globalThis : e || self).Babel = {});
    }(exports2, function(e) {
      "use strict";
      var t = Object.freeze({ __proto__: null, get version() {
        return wF;
      }, get types() {
        return Pc;
      }, get DEFAULT_EXTENSIONS() {
        return CF;
      }, get OptionManager() {
        return SF;
      }, get Plugin() {
        return TF;
      }, get File() {
        return aA;
      }, get buildExternalHelpers() {
        return pA;
      }, get resolvePlugin() {
        return AA;
      }, get resolvePreset() {
        return wA;
      }, get getEnv() {
        return TA;
      }, get tokTypes() {
        return lm;
      }, get traverse() {
        return vv;
      }, get template() {
        return Eg;
      }, get createConfigItem() {
        return YP;
      }, get createConfigItemSync() {
        return zP;
      }, get createConfigItemAsync() {
        return JP;
      }, get loadPartialConfig() {
        return WP;
      }, get loadPartialConfigSync() {
        return HP;
      }, get loadPartialConfigAsync() {
        return XP;
      }, get loadOptions() {
        return qP;
      }, get loadOptionsSync() {
        return $P;
      }, get loadOptionsAsync() {
        return KP;
      }, get transform() {
        return cF;
      }, get transformSync() {
        return pF;
      }, get transformAsync() {
        return dF;
      }, get transformFile() {
        return fF;
      }, get transformFileSync() {
        return hF;
      }, get transformFileAsync() {
        return mF;
      }, get transformFromAst() {
        return gF;
      }, get transformFromAstSync() {
        return vF;
      }, get transformFromAstAsync() {
        return bF;
      }, get parse() {
        return xF;
      }, get parseSync() {
        return DF;
      }, get parseAsync() {
        return AF;
      } });
      function r(e2, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var n2 = t2[r2];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
        }
      }
      function n(e2, t2, n2) {
        return t2 && r(e2.prototype, t2), n2 && r(e2, n2), e2;
      }
      function s(e2, t2) {
        if (typeof t2 != "function" && t2 !== null)
          throw new TypeError("Super expression must either be null or a function");
        e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && a(e2, t2);
      }
      function a(e2, t2) {
        return (a = Object.setPrototypeOf || function(e3, t3) {
          return e3.__proto__ = t3, e3;
        })(e2, t2);
      }
      function i(e2, t2) {
        if (e2 == null)
          return {};
        var r2, n2, s2 = {}, a2 = Object.keys(e2);
        for (n2 = 0; n2 < a2.length; n2++)
          r2 = a2[n2], t2.indexOf(r2) >= 0 || (s2[r2] = e2[r2]);
        return s2;
      }
      function o(e2, t2) {
        if (e2 == null)
          return {};
        var r2, n2, s2 = i(e2, t2);
        if (Object.getOwnPropertySymbols) {
          var a2 = Object.getOwnPropertySymbols(e2);
          for (n2 = 0; n2 < a2.length; n2++)
            r2 = a2[n2], t2.indexOf(r2) >= 0 || Object.prototype.propertyIsEnumerable.call(e2, r2) && (s2[r2] = e2[r2]);
        }
        return s2;
      }
      function u(e2, t2) {
        return t2 || (t2 = e2.slice(0)), e2.raw = t2, e2;
      }
      function l(e2, t2) {
        return function(e3) {
          if (Array.isArray(e3))
            return e3;
        }(e2) || function(e3, t3) {
          var r2 = e3 == null ? null : typeof Symbol != "undefined" && e3[Symbol.iterator] || e3["@@iterator"];
          if (r2 == null)
            return;
          var n2, s2, a2 = [], i2 = true, o2 = false;
          try {
            for (r2 = r2.call(e3); !(i2 = (n2 = r2.next()).done) && (a2.push(n2.value), !t3 || a2.length !== t3); i2 = true)
              ;
          } catch (e4) {
            o2 = true, s2 = e4;
          } finally {
            try {
              i2 || r2.return == null || r2.return();
            } finally {
              if (o2)
                throw s2;
            }
          }
          return a2;
        }(e2, t2) || p(e2, t2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function c(e2) {
        return function(e3) {
          if (Array.isArray(e3))
            return d(e3);
        }(e2) || function(e3) {
          if (typeof Symbol != "undefined" && e3[Symbol.iterator] != null || e3["@@iterator"] != null)
            return Array.from(e3);
        }(e2) || p(e2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function p(e2, t2) {
        if (e2) {
          if (typeof e2 == "string")
            return d(e2, t2);
          var r2 = Object.prototype.toString.call(e2).slice(8, -1);
          return r2 === "Object" && e2.constructor && (r2 = e2.constructor.name), r2 === "Map" || r2 === "Set" ? Array.from(e2) : r2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2) ? d(e2, t2) : void 0;
        }
      }
      function d(e2, t2) {
        (t2 == null || t2 > e2.length) && (t2 = e2.length);
        for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
          n2[r2] = e2[r2];
        return n2;
      }
      function f(e2, t2) {
        var r2 = typeof Symbol != "undefined" && e2[Symbol.iterator] || e2["@@iterator"];
        if (r2)
          return (r2 = r2.call(e2)).next.bind(r2);
        if (Array.isArray(e2) || (r2 = p(e2)) || t2 && e2 && typeof e2.length == "number") {
          r2 && (e2 = r2);
          var n2 = 0;
          return function() {
            return n2 >= e2.length ? { done: true } : { done: false, value: e2[n2++] };
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function h(e2, t2) {
        for (var r2 = 0, n2 = Object.keys(t2); r2 < n2.length; r2++) {
          var s2 = n2[r2];
          if (e2[s2] !== t2[s2])
            return false;
        }
        return true;
      }
      function m(e2, t2) {
        return !!e2 && (e2.type === "ArrayExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function y(e2, t2) {
        return !!e2 && (e2.type === "AssignmentExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function g(e2, t2) {
        return !!e2 && (e2.type === "BinaryExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function v(e2, t2) {
        return !!e2 && (e2.type === "BlockStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function b(e2, t2) {
        return !!e2 && (e2.type === "BreakStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function E(e2, t2) {
        return !!e2 && (e2.type === "CallExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function x(e2, t2) {
        return !!e2 && (e2.type === "CatchClause" && (t2 === void 0 || h(e2, t2)));
      }
      function D(e2, t2) {
        return !!e2 && (e2.type === "ConditionalExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function A(e2, t2) {
        return !!e2 && (e2.type === "ContinueStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function w(e2, t2) {
        return !!e2 && (e2.type === "EmptyStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function C(e2, t2) {
        return !!e2 && (e2.type === "ExpressionStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function S(e2, t2) {
        return !!e2 && (e2.type === "File" && (t2 === void 0 || h(e2, t2)));
      }
      function T(e2, t2) {
        return !!e2 && (e2.type === "ForInStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function j(e2, t2) {
        return !!e2 && (e2.type === "ForStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function P(e2, t2) {
        return !!e2 && (e2.type === "FunctionDeclaration" && (t2 === void 0 || h(e2, t2)));
      }
      function I(e2, t2) {
        return !!e2 && (e2.type === "FunctionExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function F(e2, t2) {
        return !!e2 && (e2.type === "Identifier" && (t2 === void 0 || h(e2, t2)));
      }
      function k(e2, t2) {
        return !!e2 && (e2.type === "IfStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function O(e2, t2) {
        return !!e2 && (e2.type === "LabeledStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function R(e2, t2) {
        return !!e2 && (e2.type === "StringLiteral" && (t2 === void 0 || h(e2, t2)));
      }
      function N(e2, t2) {
        return !!e2 && (e2.type === "NumericLiteral" && (t2 === void 0 || h(e2, t2)));
      }
      function B(e2, t2) {
        return !!e2 && (e2.type === "NullLiteral" && (t2 === void 0 || h(e2, t2)));
      }
      function _(e2, t2) {
        return !!e2 && (e2.type === "RegExpLiteral" && (t2 === void 0 || h(e2, t2)));
      }
      function L(e2, t2) {
        return !!e2 && (e2.type === "LogicalExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function M(e2, t2) {
        return !!e2 && (e2.type === "MemberExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function U(e2, t2) {
        return !!e2 && (e2.type === "NewExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function G(e2, t2) {
        return !!e2 && (e2.type === "Program" && (t2 === void 0 || h(e2, t2)));
      }
      function V(e2, t2) {
        return !!e2 && (e2.type === "ObjectExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function W(e2, t2) {
        return !!e2 && (e2.type === "ObjectMethod" && (t2 === void 0 || h(e2, t2)));
      }
      function H(e2, t2) {
        return !!e2 && (e2.type === "ObjectProperty" && (t2 === void 0 || h(e2, t2)));
      }
      function X(e2, t2) {
        return !!e2 && (e2.type === "RestElement" && (t2 === void 0 || h(e2, t2)));
      }
      function q(e2, t2) {
        return !!e2 && (e2.type === "ReturnStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function $(e2, t2) {
        return !!e2 && (e2.type === "SequenceExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function K(e2, t2) {
        return !!e2 && (e2.type === "ParenthesizedExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function z(e2, t2) {
        return !!e2 && (e2.type === "SwitchStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function J(e2, t2) {
        return !!e2 && (e2.type === "ThisExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function Y(e2, t2) {
        return !!e2 && (e2.type === "ThrowStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function Q(e2, t2) {
        return !!e2 && (e2.type === "UnaryExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function Z(e2, t2) {
        return !!e2 && (e2.type === "VariableDeclaration" && (t2 === void 0 || h(e2, t2)));
      }
      function ee(e2, t2) {
        return !!e2 && (e2.type === "VariableDeclarator" && (t2 === void 0 || h(e2, t2)));
      }
      function te(e2, t2) {
        return !!e2 && (e2.type === "WhileStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function re(e2, t2) {
        return !!e2 && (e2.type === "AssignmentPattern" && (t2 === void 0 || h(e2, t2)));
      }
      function ne(e2, t2) {
        return !!e2 && (e2.type === "ArrayPattern" && (t2 === void 0 || h(e2, t2)));
      }
      function se(e2, t2) {
        return !!e2 && (e2.type === "ArrowFunctionExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function ae(e2, t2) {
        return !!e2 && (e2.type === "ClassBody" && (t2 === void 0 || h(e2, t2)));
      }
      function ie(e2, t2) {
        return !!e2 && (e2.type === "ClassExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function oe(e2, t2) {
        return !!e2 && (e2.type === "ClassDeclaration" && (t2 === void 0 || h(e2, t2)));
      }
      function ue(e2, t2) {
        return !!e2 && (e2.type === "ExportAllDeclaration" && (t2 === void 0 || h(e2, t2)));
      }
      function le(e2, t2) {
        return !!e2 && (e2.type === "ExportDefaultDeclaration" && (t2 === void 0 || h(e2, t2)));
      }
      function ce(e2, t2) {
        return !!e2 && (e2.type === "ExportNamedDeclaration" && (t2 === void 0 || h(e2, t2)));
      }
      function pe(e2, t2) {
        return !!e2 && (e2.type === "ExportSpecifier" && (t2 === void 0 || h(e2, t2)));
      }
      function de(e2, t2) {
        return !!e2 && (e2.type === "ForOfStatement" && (t2 === void 0 || h(e2, t2)));
      }
      function fe(e2, t2) {
        return !!e2 && (e2.type === "ImportDeclaration" && (t2 === void 0 || h(e2, t2)));
      }
      function he(e2, t2) {
        return !!e2 && (e2.type === "ImportDefaultSpecifier" && (t2 === void 0 || h(e2, t2)));
      }
      function me(e2, t2) {
        return !!e2 && (e2.type === "ImportNamespaceSpecifier" && (t2 === void 0 || h(e2, t2)));
      }
      function ye(e2, t2) {
        return !!e2 && (e2.type === "ImportSpecifier" && (t2 === void 0 || h(e2, t2)));
      }
      function ge(e2, t2) {
        return !!e2 && (e2.type === "ClassMethod" && (t2 === void 0 || h(e2, t2)));
      }
      function ve(e2, t2) {
        return !!e2 && (e2.type === "ObjectPattern" && (t2 === void 0 || h(e2, t2)));
      }
      function be(e2, t2) {
        return !!e2 && (e2.type === "SpreadElement" && (t2 === void 0 || h(e2, t2)));
      }
      function Ee(e2, t2) {
        return !!e2 && (e2.type === "Super" && (t2 === void 0 || h(e2, t2)));
      }
      function xe(e2, t2) {
        return !!e2 && (e2.type === "TaggedTemplateExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function De(e2, t2) {
        return !!e2 && (e2.type === "TemplateLiteral" && (t2 === void 0 || h(e2, t2)));
      }
      function Ae(e2, t2) {
        return !!e2 && (e2.type === "YieldExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function we(e2, t2) {
        return !!e2 && (e2.type === "AwaitExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function Ce(e2, t2) {
        return !!e2 && (e2.type === "Import" && (t2 === void 0 || h(e2, t2)));
      }
      function Se(e2, t2) {
        return !!e2 && (e2.type === "BigIntLiteral" && (t2 === void 0 || h(e2, t2)));
      }
      function Te(e2, t2) {
        return !!e2 && (e2.type === "ExportNamespaceSpecifier" && (t2 === void 0 || h(e2, t2)));
      }
      function je(e2, t2) {
        return !!e2 && (e2.type === "OptionalMemberExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function Pe(e2, t2) {
        return !!e2 && (e2.type === "OptionalCallExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function Ie(e2, t2) {
        return !!e2 && (e2.type === "AnyTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Fe(e2, t2) {
        return !!e2 && (e2.type === "ArrayTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function ke(e2, t2) {
        return !!e2 && (e2.type === "BooleanTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Oe(e2, t2) {
        return !!e2 && (e2.type === "DeclareExportDeclaration" && (t2 === void 0 || h(e2, t2)));
      }
      function Re(e2, t2) {
        return !!e2 && (e2.type === "GenericTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Ne(e2, t2) {
        return !!e2 && (e2.type === "IntersectionTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Be(e2, t2) {
        return !!e2 && (e2.type === "MixedTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function _e(e2, t2) {
        return !!e2 && (e2.type === "EmptyTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Le(e2, t2) {
        return !!e2 && (e2.type === "NullableTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Me(e2, t2) {
        return !!e2 && (e2.type === "NumberTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Ue(e2, t2) {
        return !!e2 && (e2.type === "StringTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Ge(e2, t2) {
        return !!e2 && (e2.type === "TypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Ve(e2, t2) {
        return !!e2 && (e2.type === "TypeCastExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function We(e2, t2) {
        return !!e2 && (e2.type === "UnionTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function He(e2, t2) {
        return !!e2 && (e2.type === "VoidTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function Xe(e2, t2) {
        return !!e2 && (e2.type === "IndexedAccessType" && (t2 === void 0 || h(e2, t2)));
      }
      function qe(e2, t2) {
        return !!e2 && (e2.type === "JSXAttribute" && (t2 === void 0 || h(e2, t2)));
      }
      function $e(e2, t2) {
        return !!e2 && (e2.type === "JSXElement" && (t2 === void 0 || h(e2, t2)));
      }
      function Ke(e2, t2) {
        return !!e2 && (e2.type === "JSXEmptyExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function ze(e2, t2) {
        return !!e2 && (e2.type === "JSXExpressionContainer" && (t2 === void 0 || h(e2, t2)));
      }
      function Je(e2, t2) {
        return !!e2 && (e2.type === "JSXIdentifier" && (t2 === void 0 || h(e2, t2)));
      }
      function Ye(e2, t2) {
        return !!e2 && (e2.type === "JSXMemberExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function Qe(e2, t2) {
        return !!e2 && (e2.type === "JSXNamespacedName" && (t2 === void 0 || h(e2, t2)));
      }
      function Ze(e2, t2) {
        return !!e2 && (e2.type === "JSXSpreadAttribute" && (t2 === void 0 || h(e2, t2)));
      }
      function et(e2, t2) {
        return !!e2 && (e2.type === "JSXText" && (t2 === void 0 || h(e2, t2)));
      }
      function tt(e2, t2) {
        return !!e2 && (e2.type === "Placeholder" && (t2 === void 0 || h(e2, t2)));
      }
      function rt(e2, t2) {
        return !!e2 && (e2.type === "BindExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function nt(e2, t2) {
        return !!e2 && (e2.type === "ClassProperty" && (t2 === void 0 || h(e2, t2)));
      }
      function st(e2, t2) {
        return !!e2 && (e2.type === "PipelineTopicExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function at(e2, t2) {
        return !!e2 && (e2.type === "ClassPrivateProperty" && (t2 === void 0 || h(e2, t2)));
      }
      function it(e2, t2) {
        return !!e2 && (e2.type === "ExportDefaultSpecifier" && (t2 === void 0 || h(e2, t2)));
      }
      function ot(e2, t2) {
        return !!e2 && (e2.type === "PrivateName" && (t2 === void 0 || h(e2, t2)));
      }
      function ut(e2, t2) {
        return !!e2 && (e2.type === "TSAnyKeyword" && (t2 === void 0 || h(e2, t2)));
      }
      function lt(e2, t2) {
        return !!e2 && (e2.type === "TSArrayType" && (t2 === void 0 || h(e2, t2)));
      }
      function ct(e2, t2) {
        return !!e2 && (e2.type === "TSOptionalType" && (t2 === void 0 || h(e2, t2)));
      }
      function pt(e2, t2) {
        return !!e2 && (e2.type === "TSRestType" && (t2 === void 0 || h(e2, t2)));
      }
      function dt(e2, t2) {
        return !!e2 && (e2.type === "TSUnionType" && (t2 === void 0 || h(e2, t2)));
      }
      function ft(e2, t2) {
        return !!e2 && (e2.type === "TSIntersectionType" && (t2 === void 0 || h(e2, t2)));
      }
      function ht(e2, t2) {
        return !!e2 && (e2.type === "TSAsExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function mt(e2, t2) {
        return !!e2 && (e2.type === "TSTypeAssertion" && (t2 === void 0 || h(e2, t2)));
      }
      function yt(e2, t2) {
        return !!e2 && (e2.type === "TSNonNullExpression" && (t2 === void 0 || h(e2, t2)));
      }
      function gt(e2, t2) {
        return !!e2 && (e2.type === "TSTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }
      function vt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ArrayExpression" || r2 === "AssignmentExpression" || r2 === "BinaryExpression" || r2 === "CallExpression" || r2 === "ConditionalExpression" || r2 === "FunctionExpression" || r2 === "Identifier" || r2 === "StringLiteral" || r2 === "NumericLiteral" || r2 === "NullLiteral" || r2 === "BooleanLiteral" || r2 === "RegExpLiteral" || r2 === "LogicalExpression" || r2 === "MemberExpression" || r2 === "NewExpression" || r2 === "ObjectExpression" || r2 === "SequenceExpression" || r2 === "ParenthesizedExpression" || r2 === "ThisExpression" || r2 === "UnaryExpression" || r2 === "UpdateExpression" || r2 === "ArrowFunctionExpression" || r2 === "ClassExpression" || r2 === "MetaProperty" || r2 === "Super" || r2 === "TaggedTemplateExpression" || r2 === "TemplateLiteral" || r2 === "YieldExpression" || r2 === "AwaitExpression" || r2 === "Import" || r2 === "BigIntLiteral" || r2 === "OptionalMemberExpression" || r2 === "OptionalCallExpression" || r2 === "TypeCastExpression" || r2 === "JSXElement" || r2 === "JSXFragment" || r2 === "BindExpression" || r2 === "PipelinePrimaryTopicReference" || r2 === "DoExpression" || r2 === "RecordExpression" || r2 === "TupleExpression" || r2 === "DecimalLiteral" || r2 === "ModuleExpression" || r2 === "TSAsExpression" || r2 === "TSTypeAssertion" || r2 === "TSNonNullExpression" || r2 === "Placeholder" && (e2.expectedNode === "Expression" || e2.expectedNode === "Identifier" || e2.expectedNode === "StringLiteral")) && (t2 === void 0 || h(e2, t2));
      }
      function bt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "BinaryExpression" || r2 === "LogicalExpression") && (t2 === void 0 || h(e2, t2));
      }
      function Et(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "BlockStatement" || r2 === "CatchClause" || r2 === "DoWhileStatement" || r2 === "ForInStatement" || r2 === "ForStatement" || r2 === "FunctionDeclaration" || r2 === "FunctionExpression" || r2 === "Program" || r2 === "ObjectMethod" || r2 === "SwitchStatement" || r2 === "WhileStatement" || r2 === "ArrowFunctionExpression" || r2 === "ClassExpression" || r2 === "ClassDeclaration" || r2 === "ForOfStatement" || r2 === "ClassMethod" || r2 === "ClassPrivateMethod" || r2 === "StaticBlock" || r2 === "TSModuleBlock" || r2 === "Placeholder" && e2.expectedNode === "BlockStatement") && (t2 === void 0 || h(e2, t2));
      }
      function xt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "BlockStatement" || r2 === "BreakStatement" || r2 === "ContinueStatement" || r2 === "DebuggerStatement" || r2 === "DoWhileStatement" || r2 === "EmptyStatement" || r2 === "ExpressionStatement" || r2 === "ForInStatement" || r2 === "ForStatement" || r2 === "FunctionDeclaration" || r2 === "IfStatement" || r2 === "LabeledStatement" || r2 === "ReturnStatement" || r2 === "SwitchStatement" || r2 === "ThrowStatement" || r2 === "TryStatement" || r2 === "VariableDeclaration" || r2 === "WhileStatement" || r2 === "WithStatement" || r2 === "ClassDeclaration" || r2 === "ExportAllDeclaration" || r2 === "ExportDefaultDeclaration" || r2 === "ExportNamedDeclaration" || r2 === "ForOfStatement" || r2 === "ImportDeclaration" || r2 === "DeclareClass" || r2 === "DeclareFunction" || r2 === "DeclareInterface" || r2 === "DeclareModule" || r2 === "DeclareModuleExports" || r2 === "DeclareTypeAlias" || r2 === "DeclareOpaqueType" || r2 === "DeclareVariable" || r2 === "DeclareExportDeclaration" || r2 === "DeclareExportAllDeclaration" || r2 === "InterfaceDeclaration" || r2 === "OpaqueType" || r2 === "TypeAlias" || r2 === "EnumDeclaration" || r2 === "TSDeclareFunction" || r2 === "TSInterfaceDeclaration" || r2 === "TSTypeAliasDeclaration" || r2 === "TSEnumDeclaration" || r2 === "TSModuleDeclaration" || r2 === "TSImportEqualsDeclaration" || r2 === "TSExportAssignment" || r2 === "TSNamespaceExportDeclaration" || r2 === "Placeholder" && (e2.expectedNode === "Statement" || e2.expectedNode === "Declaration" || e2.expectedNode === "BlockStatement")) && (t2 === void 0 || h(e2, t2));
      }
      function Dt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ConditionalExpression" || r2 === "IfStatement") && (t2 === void 0 || h(e2, t2));
      }
      function At(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "DoWhileStatement" || r2 === "ForInStatement" || r2 === "ForStatement" || r2 === "WhileStatement" || r2 === "ForOfStatement") && (t2 === void 0 || h(e2, t2));
      }
      function wt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ForInStatement" || r2 === "ForStatement" || r2 === "ForOfStatement") && (t2 === void 0 || h(e2, t2));
      }
      function Ct(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ForInStatement" || r2 === "ForOfStatement") && (t2 === void 0 || h(e2, t2));
      }
      function St(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "FunctionDeclaration" || r2 === "FunctionExpression" || r2 === "ObjectMethod" || r2 === "ArrowFunctionExpression" || r2 === "ClassMethod" || r2 === "ClassPrivateMethod") && (t2 === void 0 || h(e2, t2));
      }
      function Tt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "FunctionDeclaration" || r2 === "FunctionExpression" || r2 === "StringLiteral" || r2 === "NumericLiteral" || r2 === "NullLiteral" || r2 === "BooleanLiteral" || r2 === "RegExpLiteral" || r2 === "ArrowFunctionExpression" || r2 === "BigIntLiteral" || r2 === "DecimalLiteral" || r2 === "Placeholder" && e2.expectedNode === "StringLiteral") && (t2 === void 0 || h(e2, t2));
      }
      function jt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "FunctionDeclaration" || r2 === "VariableDeclaration" || r2 === "ClassDeclaration" || r2 === "ExportAllDeclaration" || r2 === "ExportDefaultDeclaration" || r2 === "ExportNamedDeclaration" || r2 === "ImportDeclaration" || r2 === "DeclareClass" || r2 === "DeclareFunction" || r2 === "DeclareInterface" || r2 === "DeclareModule" || r2 === "DeclareModuleExports" || r2 === "DeclareTypeAlias" || r2 === "DeclareOpaqueType" || r2 === "DeclareVariable" || r2 === "DeclareExportDeclaration" || r2 === "DeclareExportAllDeclaration" || r2 === "InterfaceDeclaration" || r2 === "OpaqueType" || r2 === "TypeAlias" || r2 === "EnumDeclaration" || r2 === "TSDeclareFunction" || r2 === "TSInterfaceDeclaration" || r2 === "TSTypeAliasDeclaration" || r2 === "TSEnumDeclaration" || r2 === "TSModuleDeclaration" || r2 === "Placeholder" && e2.expectedNode === "Declaration") && (t2 === void 0 || h(e2, t2));
      }
      function Pt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "StringLiteral" || r2 === "NumericLiteral" || r2 === "NullLiteral" || r2 === "BooleanLiteral" || r2 === "RegExpLiteral" || r2 === "TemplateLiteral" || r2 === "BigIntLiteral" || r2 === "DecimalLiteral" || r2 === "Placeholder" && e2.expectedNode === "StringLiteral") && (t2 === void 0 || h(e2, t2));
      }
      function It(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ObjectMethod" || r2 === "ClassMethod" || r2 === "ClassPrivateMethod") && (t2 === void 0 || h(e2, t2));
      }
      function Ft(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ObjectProperty" || r2 === "ClassProperty" || r2 === "ClassPrivateProperty") && (t2 === void 0 || h(e2, t2));
      }
      function kt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "UnaryExpression" || r2 === "SpreadElement") && (t2 === void 0 || h(e2, t2));
      }
      function Ot(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "AssignmentPattern" || r2 === "ArrayPattern" || r2 === "ObjectPattern" || r2 === "Placeholder" && e2.expectedNode === "Pattern") && (t2 === void 0 || h(e2, t2));
      }
      function Rt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ClassExpression" || r2 === "ClassDeclaration") && (t2 === void 0 || h(e2, t2));
      }
      function Nt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ExportAllDeclaration" || r2 === "ExportDefaultDeclaration" || r2 === "ExportNamedDeclaration" || r2 === "ImportDeclaration") && (t2 === void 0 || h(e2, t2));
      }
      function Bt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ExportAllDeclaration" || r2 === "ExportDefaultDeclaration" || r2 === "ExportNamedDeclaration") && (t2 === void 0 || h(e2, t2));
      }
      function _t(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ExportSpecifier" || r2 === "ImportDefaultSpecifier" || r2 === "ImportNamespaceSpecifier" || r2 === "ImportSpecifier" || r2 === "ExportNamespaceSpecifier" || r2 === "ExportDefaultSpecifier") && (t2 === void 0 || h(e2, t2));
      }
      function Lt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "AnyTypeAnnotation" || r2 === "ArrayTypeAnnotation" || r2 === "BooleanTypeAnnotation" || r2 === "BooleanLiteralTypeAnnotation" || r2 === "NullLiteralTypeAnnotation" || r2 === "ClassImplements" || r2 === "DeclareClass" || r2 === "DeclareFunction" || r2 === "DeclareInterface" || r2 === "DeclareModule" || r2 === "DeclareModuleExports" || r2 === "DeclareTypeAlias" || r2 === "DeclareOpaqueType" || r2 === "DeclareVariable" || r2 === "DeclareExportDeclaration" || r2 === "DeclareExportAllDeclaration" || r2 === "DeclaredPredicate" || r2 === "ExistsTypeAnnotation" || r2 === "FunctionTypeAnnotation" || r2 === "FunctionTypeParam" || r2 === "GenericTypeAnnotation" || r2 === "InferredPredicate" || r2 === "InterfaceExtends" || r2 === "InterfaceDeclaration" || r2 === "InterfaceTypeAnnotation" || r2 === "IntersectionTypeAnnotation" || r2 === "MixedTypeAnnotation" || r2 === "EmptyTypeAnnotation" || r2 === "NullableTypeAnnotation" || r2 === "NumberLiteralTypeAnnotation" || r2 === "NumberTypeAnnotation" || r2 === "ObjectTypeAnnotation" || r2 === "ObjectTypeInternalSlot" || r2 === "ObjectTypeCallProperty" || r2 === "ObjectTypeIndexer" || r2 === "ObjectTypeProperty" || r2 === "ObjectTypeSpreadProperty" || r2 === "OpaqueType" || r2 === "QualifiedTypeIdentifier" || r2 === "StringLiteralTypeAnnotation" || r2 === "StringTypeAnnotation" || r2 === "SymbolTypeAnnotation" || r2 === "ThisTypeAnnotation" || r2 === "TupleTypeAnnotation" || r2 === "TypeofTypeAnnotation" || r2 === "TypeAlias" || r2 === "TypeAnnotation" || r2 === "TypeCastExpression" || r2 === "TypeParameter" || r2 === "TypeParameterDeclaration" || r2 === "TypeParameterInstantiation" || r2 === "UnionTypeAnnotation" || r2 === "Variance" || r2 === "VoidTypeAnnotation" || r2 === "IndexedAccessType" || r2 === "OptionalIndexedAccessType") && (t2 === void 0 || h(e2, t2));
      }
      function Mt(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "AnyTypeAnnotation" || r2 === "BooleanTypeAnnotation" || r2 === "NullLiteralTypeAnnotation" || r2 === "MixedTypeAnnotation" || r2 === "EmptyTypeAnnotation" || r2 === "NumberTypeAnnotation" || r2 === "StringTypeAnnotation" || r2 === "SymbolTypeAnnotation" || r2 === "ThisTypeAnnotation" || r2 === "VoidTypeAnnotation") && (t2 === void 0 || h(e2, t2));
      }
      function Ut(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "TSAnyKeyword" || r2 === "TSBooleanKeyword" || r2 === "TSBigIntKeyword" || r2 === "TSIntrinsicKeyword" || r2 === "TSNeverKeyword" || r2 === "TSNullKeyword" || r2 === "TSNumberKeyword" || r2 === "TSObjectKeyword" || r2 === "TSStringKeyword" || r2 === "TSSymbolKeyword" || r2 === "TSUndefinedKeyword" || r2 === "TSUnknownKeyword" || r2 === "TSVoidKeyword" || r2 === "TSThisType" || r2 === "TSLiteralType") && (t2 === void 0 || h(e2, t2));
      }
      function Gt(e2, t2, r2) {
        if (!M(e2))
          return false;
        var n2, s2 = Array.isArray(t2) ? t2 : t2.split("."), a2 = [];
        for (n2 = e2; M(n2); n2 = n2.object)
          a2.push(n2.property);
        if (a2.push(n2), a2.length < s2.length)
          return false;
        if (!r2 && a2.length > s2.length)
          return false;
        for (var i2 = 0, o2 = a2.length - 1; i2 < s2.length; i2++, o2--) {
          var u2 = a2[o2], l2 = void 0;
          if (F(u2))
            l2 = u2.name;
          else if (R(u2))
            l2 = u2.value;
          else {
            if (!J(u2))
              return false;
            l2 = "this";
          }
          if (s2[i2] !== l2)
            return false;
        }
        return true;
      }
      function Vt(e2, t2) {
        var r2 = e2.split(".");
        return function(e3) {
          return Gt(e3, r2, t2);
        };
      }
      var Wt = Vt("React.Component");
      var Ht = null;
      function Xt(e2) {
        if (Ht !== null && (Ht.property, 1)) {
          var t2 = Ht;
          return Ht = Xt.prototype = null, t2;
        }
        return Ht = Xt.prototype = e2 == null ? Object.create(null) : e2, new Xt();
      }
      Xt();
      var qt = function(e2) {
        return Xt(e2);
      }, $t = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
      function Kt(e2) {
        if (e2.__esModule)
          return e2;
        var t2 = Object.defineProperty({}, "__esModule", { value: true });
        return Object.keys(e2).forEach(function(r2) {
          var n2 = Object.getOwnPropertyDescriptor(e2, r2);
          Object.defineProperty(t2, r2, n2.get ? n2 : { enumerable: true, get: function() {
            return e2[r2];
          } });
        }), t2;
      }
      function zt(e2, t2, r2) {
        return e2(r2 = { path: t2, exports: {}, require: function(e3, t3) {
          return sr(e3, t3 == null ? r2.path : t3);
        } }, r2.exports), r2.exports;
      }
      const Jt = Object.create(null), Yt = Object.create(null), Qt = { id: "<rollup>", exports: {}, parent: void 0, filename: null, loaded: false, children: [], paths: [] }, Zt = ["", ".js", ".json"];
      function er(e2) {
        const t2 = (e2 = e2.replace(/\\/g, "/")).split("/"), r2 = t2[0] === "";
        for (let e3 = 1; e3 < t2.length; e3++)
          t2[e3] !== "." && t2[e3] !== "" || t2.splice(e3--, 1);
        for (let e3 = 1; e3 < t2.length; e3++)
          t2[e3] === ".." && e3 > 0 && t2[e3 - 1] !== ".." && t2[e3 - 1] !== "." && (t2.splice(--e3, 2), e3--);
        return e2 = t2.join("/"), r2 && e2[0] !== "/" ? e2 = "/" + e2 : e2.length === 0 && (e2 = "."), e2;
      }
      function tr() {
        if (arguments.length === 0)
          return ".";
        let e2;
        for (let t2 = 0; t2 < arguments.length; ++t2) {
          let r2 = arguments[t2];
          r2.length > 0 && (e2 === void 0 ? e2 = r2 : e2 += "/" + r2);
        }
        return e2 === void 0 ? "." : e2;
      }
      function rr(e2) {
        if (e2.length === 0)
          return ".";
        let t2 = e2.length - 1;
        for (; t2 > 0; ) {
          const r2 = e2.charCodeAt(t2);
          if ((r2 === 47 || r2 === 92) && t2 !== e2.length - 1)
            break;
          t2--;
        }
        return t2 > 0 ? e2.substr(0, t2) : e2.chartCodeAt(0) === 47 || e2.chartCodeAt(0) === 92 ? e2.charAt(0) : ".";
      }
      function nr(e2, t2, r2) {
        const n2 = function(e3) {
          let t3 = e3[0];
          if (t3 === "/" || t3 === "\\")
            return false;
          let r3 = e3[1], n3 = e3[2];
          return !(!(t3 !== "." || r3 && r3 !== "/" && r3 !== "\\") || !(t3 !== "." || r3 !== "." || n3 && n3 !== "/" && n3 !== "\\")) && (r3 !== ":" || n3 !== "/" && n3 !== "\\");
        }(e2);
        let s2;
        for ((e2 = er(e2))[0] === "/" && (t2 = "/"); s2 = n2 ? er(t2 ? t2 + "/node_modules/" + e2 : tr("node_modules", e2)) : t2 ? er(t2 + "/" + e2) : e2, !s2.endsWith("/.."); ) {
          for (let e4 = 0; e4 < Zt.length; e4++) {
            const t3 = s2 + Zt[e4];
            if (Yt[t3])
              return t3;
            if (Jt[t3])
              return t3;
          }
          if (!n2)
            break;
          const e3 = er(t2 + "/..");
          if (e3 === t2)
            break;
          t2 = e3;
        }
        return null;
      }
      function sr(e2, t2) {
        const r2 = nr(e2, t2);
        if (r2 !== null) {
          let e3 = Yt[r2];
          if (e3)
            return e3.exports;
          const t3 = Jt[r2];
          if (t3) {
            Yt[r2] = e3 = { id: r2, filename: r2, path: rr(r2), exports: {}, parent: Qt, loaded: false, children: [], paths: [], require: function(t4, r3) {
              return sr(t4, r3 == null ? e3.path : r3);
            } };
            try {
              t3.call($t, e3, e3.exports);
            } catch (e4) {
              throw delete Yt[r2], e4;
            }
            return e3.loaded = true, e3.exports;
          }
        }
        return require(e2);
      }
      sr.cache = Yt, sr.resolve = function(e2, t2) {
        const r2 = nr(e2, t2);
        return r2 !== null ? r2 : require.resolve(e2);
      };
      var ar = zt(function(e2) {
        var t2, r2, n2 = e2.exports = {};
        function s2() {
          throw new Error("setTimeout has not been defined");
        }
        function a2() {
          throw new Error("clearTimeout has not been defined");
        }
        function i2(e3) {
          if (t2 === setTimeout)
            return setTimeout(e3, 0);
          if ((t2 === s2 || !t2) && setTimeout)
            return t2 = setTimeout, setTimeout(e3, 0);
          try {
            return t2(e3, 0);
          } catch (r3) {
            try {
              return t2.call(null, e3, 0);
            } catch (r4) {
              return t2.call(this, e3, 0);
            }
          }
        }
        !function() {
          try {
            t2 = typeof setTimeout == "function" ? setTimeout : s2;
          } catch (e3) {
            t2 = s2;
          }
          try {
            r2 = typeof clearTimeout == "function" ? clearTimeout : a2;
          } catch (e3) {
            r2 = a2;
          }
        }();
        var o2, u2 = [], l2 = false, c2 = -1;
        function p2() {
          l2 && o2 && (l2 = false, o2.length ? u2 = o2.concat(u2) : c2 = -1, u2.length && d2());
        }
        function d2() {
          if (!l2) {
            var e3 = i2(p2);
            l2 = true;
            for (var t3 = u2.length; t3; ) {
              for (o2 = u2, u2 = []; ++c2 < t3; )
                o2 && o2[c2].run();
              c2 = -1, t3 = u2.length;
            }
            o2 = null, l2 = false, function(e4) {
              if (r2 === clearTimeout)
                return clearTimeout(e4);
              if ((r2 === a2 || !r2) && clearTimeout)
                return r2 = clearTimeout, clearTimeout(e4);
              try {
                r2(e4);
              } catch (t4) {
                try {
                  return r2.call(null, e4);
                } catch (t5) {
                  return r2.call(this, e4);
                }
              }
            }(e3);
          }
        }
        function f2(e3, t3) {
          this.fun = e3, this.array = t3;
        }
        function h2() {
        }
        n2.nextTick = function(e3) {
          var t3 = new Array(arguments.length - 1);
          if (arguments.length > 1)
            for (var r3 = 1; r3 < arguments.length; r3++)
              t3[r3 - 1] = arguments[r3];
          u2.push(new f2(e3, t3)), u2.length !== 1 || l2 || i2(d2);
        }, f2.prototype.run = function() {
          this.fun.apply(null, this.array);
        }, n2.title = "browser", n2.browser = true, n2.env = {}, n2.argv = [], n2.version = "", n2.versions = {}, n2.on = h2, n2.addListener = h2, n2.once = h2, n2.off = h2, n2.removeListener = h2, n2.removeAllListeners = h2, n2.emit = h2, n2.prependListener = h2, n2.prependOnceListener = h2, n2.listeners = function(e3) {
          return [];
        }, n2.binding = function(e3) {
          throw new Error("process.binding is not supported");
        }, n2.cwd = function() {
          return "/";
        }, n2.chdir = function(e3) {
          throw new Error("process.chdir is not supported");
        }, n2.umask = function() {
          return 0;
        };
      }, "/$$rollup_base$$/node_modules/process");
      function ir(e2, t2) {
        if (e2 === t2)
          return true;
        if (Zr[t2])
          return false;
        var r2 = en[t2];
        if (r2) {
          if (r2[0] === e2)
            return true;
          for (var n2, s2 = f(r2); !(n2 = s2()).done; ) {
            if (e2 === n2.value)
              return true;
          }
        }
        return false;
      }
      function or(e2, t2) {
        if (e2 === t2)
          return true;
        var r2 = Ln[e2];
        if (r2)
          for (var n2, s2 = f(r2); !(n2 = s2()).done; ) {
            if (t2 === n2.value)
              return true;
          }
        return false;
      }
      function ur(e2, t2, r2) {
        return !!t2 && (ir(t2.type, e2) ? r2 === void 0 || h(t2, r2) : !r2 && t2.type === "Placeholder" && e2 in en && or(t2.expectedNode, e2));
      }
      var lr = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC", cr = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F", pr = new RegExp("[" + lr + "]"), dr = new RegExp("[" + lr + cr + "]");
      lr = cr = null;
      var fr = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938], hr = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
      function mr(e2, t2) {
        for (var r2 = 65536, n2 = 0, s2 = t2.length; n2 < s2; n2 += 2) {
          if ((r2 += t2[n2]) > e2)
            return false;
          if ((r2 += t2[n2 + 1]) >= e2)
            return true;
        }
        return false;
      }
      function yr(e2) {
        return e2 < 65 ? e2 === 36 : e2 <= 90 || (e2 < 97 ? e2 === 95 : e2 <= 122 || (e2 <= 65535 ? e2 >= 170 && pr.test(String.fromCharCode(e2)) : mr(e2, fr)));
      }
      function gr(e2) {
        return e2 < 48 ? e2 === 36 : e2 < 58 || !(e2 < 65) && (e2 <= 90 || (e2 < 97 ? e2 === 95 : e2 <= 122 || (e2 <= 65535 ? e2 >= 170 && dr.test(String.fromCharCode(e2)) : mr(e2, fr) || mr(e2, hr))));
      }
      function vr(e2) {
        for (var t2 = true, r2 = 0; r2 < e2.length; r2++) {
          var n2 = e2.charCodeAt(r2);
          if ((64512 & n2) == 55296 && r2 + 1 < e2.length) {
            var s2 = e2.charCodeAt(++r2);
            (64512 & s2) == 56320 && (n2 = 65536 + ((1023 & n2) << 10) + (1023 & s2));
          }
          if (t2) {
            if (t2 = false, !yr(n2))
              return false;
          } else if (!gr(n2))
            return false;
        }
        return !t2;
      }
      var br = ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"], Er = ["eval", "arguments"], xr = new Set(["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete"]), Dr = new Set(br), Ar = new Set(Er);
      function wr(e2, t2) {
        return t2 && e2 === "await" || e2 === "enum";
      }
      function Cr(e2, t2) {
        return wr(e2, t2) || Dr.has(e2);
      }
      function Sr(e2) {
        return Ar.has(e2);
      }
      function Tr(e2, t2) {
        return Cr(e2, t2) || Sr(e2);
      }
      function jr(e2) {
        return xr.has(e2);
      }
      function Pr(e2, t2) {
        return t2 === void 0 && (t2 = true), typeof e2 == "string" && ((!t2 || !jr(e2) && !Cr(e2, true)) && vr(e2));
      }
      var Ir = ["consequent", "body", "alternate"], Fr = ["left", "init"], kr = ["leadingComments", "trailingComments", "innerComments"], Or = ["||", "&&", "??"], Rr = ["++", "--"], Nr = [">", "<", ">=", "<="], Br = ["==", "===", "!=", "!=="], _r = [].concat(Br, ["in", "instanceof"]), Lr = [].concat(c(_r), Nr), Mr = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"], Ur = ["+"].concat(Mr, c(Lr)), Gr = ["=", "+="].concat(c(Mr.map(function(e2) {
        return e2 + "=";
      })), c(Or.map(function(e2) {
        return e2 + "=";
      }))), Vr = ["delete", "!"], Wr = ["+", "-", "~"], Hr = ["typeof"], Xr = ["void", "throw"].concat(Vr, Wr, Hr), qr = { optional: ["typeAnnotation", "typeParameters", "returnType"], force: ["start", "loc", "end"] }, $r = Symbol.for("var used to be block scoped"), Kr = Symbol.for("should not be considered a local binding");
      function zr(e2, t2, r2) {
        if (e2) {
          var n2 = tn[e2.type];
          if (n2)
            Jr(e2, t2, r2, n2[t2]), Yr(e2, t2, r2);
        }
      }
      function Jr(e2, t2, r2, n2) {
        n2 != null && n2.validate && (n2.optional && r2 == null || n2.validate(e2, t2, r2));
      }
      function Yr(e2, t2, r2) {
        if (r2 != null) {
          var n2 = sn[r2.type];
          n2 && n2(e2, t2, r2);
        }
      }
      var Qr = {}, Zr = {}, en = {}, tn = {}, rn = {}, nn = {}, sn = {};
      function an(e2) {
        return Array.isArray(e2) ? "array" : e2 === null ? "null" : typeof e2;
      }
      function on(e2) {
        return { validate: e2 };
      }
      function un(e2) {
        return typeof e2 == "string" ? yn(e2) : yn.apply(void 0, c(e2));
      }
      function ln(e2) {
        return on(un(e2));
      }
      function cn(e2) {
        return { validate: e2, optional: true };
      }
      function pn(e2) {
        return { validate: un(e2), optional: true };
      }
      function dn(e2) {
        return t2 = un(e2), En(vn("array"), hn(t2));
        var t2;
      }
      function fn(e2) {
        return on(dn(e2));
      }
      function hn(e2) {
        function t2(t3, r2, n2) {
          if (Array.isArray(n2))
            for (var s2 = 0; s2 < n2.length; s2++) {
              var a2 = r2 + "[" + s2 + "]", i2 = n2[s2];
              e2(t3, a2, i2), ar.env.BABEL_TYPES_8_BREAKING && Yr(t3, a2, i2);
            }
        }
        return t2.each = e2, t2;
      }
      function mn() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        function n2(e3, r3, n3) {
          if (t2.indexOf(n3) < 0)
            throw new TypeError("Property " + r3 + " expected value to be one of " + JSON.stringify(t2) + " but got " + JSON.stringify(n3));
        }
        return n2.oneOf = t2, n2;
      }
      function yn() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        function n2(e3, r3, n3) {
          for (var s2, a2 = f(t2); !(s2 = a2()).done; ) {
            if (ur(s2.value, n3))
              return void Yr(e3, r3, n3);
          }
          throw new TypeError("Property " + r3 + " of " + e3.type + " expected node to be of a type " + JSON.stringify(t2) + " but instead got " + JSON.stringify(n3 == null ? void 0 : n3.type));
        }
        return n2.oneOfNodeTypes = t2, n2;
      }
      function gn() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        function n2(e3, r3, n3) {
          for (var s2, a2 = f(t2); !(s2 = a2()).done; ) {
            var i2 = s2.value;
            if (an(n3) === i2 || ur(i2, n3))
              return void Yr(e3, r3, n3);
          }
          throw new TypeError("Property " + r3 + " of " + e3.type + " expected node to be of a type " + JSON.stringify(t2) + " but instead got " + JSON.stringify(n3 == null ? void 0 : n3.type));
        }
        return n2.oneOfNodeOrValueTypes = t2, n2;
      }
      function vn(e2) {
        function t2(t3, r2, n2) {
          if (!(an(n2) === e2))
            throw new TypeError("Property " + r2 + " expected type of " + e2 + " but got " + an(n2));
        }
        return t2.type = e2, t2;
      }
      function bn() {
        return function(e2) {
          for (var t2, r2 = e2; e2; ) {
            var n2 = r2.type;
            if (n2 !== "OptionalCallExpression") {
              if (n2 !== "OptionalMemberExpression")
                break;
              if (r2.optional)
                return;
              r2 = r2.object;
            } else {
              if (r2.optional)
                return;
              r2 = r2.callee;
            }
          }
          throw new TypeError("Non-optional " + e2.type + " must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from " + ((t2 = r2) == null ? void 0 : t2.type));
        };
      }
      function En() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        function n2() {
          for (var e3, r3 = f(t2); !(e3 = r3()).done; ) {
            var n3 = e3.value;
            n3.apply(void 0, arguments);
          }
        }
        if (n2.chainOf = t2, t2.length >= 2 && "type" in t2[0] && t2[0].type === "array" && !("each" in t2[1]))
          throw new Error('An assertValueType("array") validator can only be followed by an assertEach(...) validator.');
        return n2;
      }
      var xn = ["aliases", "builder", "deprecatedAlias", "fields", "inherits", "visitor", "validate"], Dn = ["default", "optional", "validate"];
      function An(e2, t2) {
        t2 === void 0 && (t2 = {});
        var r2 = t2.inherits && wn[t2.inherits] || {}, n2 = t2.fields;
        if (!n2 && (n2 = {}, r2.fields))
          for (var s2, a2 = f(Object.getOwnPropertyNames(r2.fields)); !(s2 = a2()).done; ) {
            var i2 = s2.value, o2 = r2.fields[i2], u2 = o2.default;
            if (Array.isArray(u2) ? u2.length > 0 : u2 && typeof u2 == "object")
              throw new Error("field defaults can only be primitives or empty arrays currently");
            n2[i2] = { default: Array.isArray(u2) ? [] : u2, optional: o2.optional, validate: o2.validate };
          }
        for (var l2 = t2.visitor || r2.visitor || [], c2 = t2.aliases || r2.aliases || [], p2 = t2.builder || r2.builder || t2.visitor || [], d2 = 0, h2 = Object.keys(t2); d2 < h2.length; d2++) {
          var m2 = h2[d2];
          if (xn.indexOf(m2) === -1)
            throw new Error('Unknown type option "' + m2 + '" on ' + e2);
        }
        t2.deprecatedAlias && (nn[t2.deprecatedAlias] = e2);
        for (var y2, g2 = f(l2.concat(p2)); !(y2 = g2()).done; ) {
          var v2 = y2.value;
          n2[v2] = n2[v2] || {};
        }
        for (var b2 = 0, E2 = Object.keys(n2); b2 < E2.length; b2++) {
          var x2 = E2[b2], D2 = n2[x2];
          D2.default !== void 0 && p2.indexOf(x2) === -1 && (D2.optional = true), D2.default === void 0 ? D2.default = null : D2.validate || D2.default == null || (D2.validate = vn(an(D2.default)));
          for (var A2 = 0, w2 = Object.keys(D2); A2 < w2.length; A2++) {
            var C2 = w2[A2];
            if (Dn.indexOf(C2) === -1)
              throw new Error('Unknown field key "' + C2 + '" on ' + e2 + "." + x2);
          }
        }
        Qr[e2] = t2.visitor = l2, rn[e2] = t2.builder = p2, tn[e2] = t2.fields = n2, Zr[e2] = t2.aliases = c2, c2.forEach(function(t3) {
          en[t3] = en[t3] || [], en[t3].push(e2);
        }), t2.validate && (sn[e2] = t2.validate), wn[e2] = t2;
      }
      var wn = {};
      An("ArrayExpression", { fields: { elements: { validate: En(vn("array"), hn(gn("null", "Expression", "SpreadElement"))), default: ar.env.BABEL_TYPES_8_BREAKING ? void 0 : [] } }, visitor: ["elements"], aliases: ["Expression"] }), An("AssignmentExpression", { fields: { operator: { validate: function() {
        if (!ar.env.BABEL_TYPES_8_BREAKING)
          return vn("string");
        var e2 = mn.apply(void 0, c(Gr)), t2 = mn("=");
        return function(r2, n2, s2) {
          (ur("Pattern", r2.left) ? t2 : e2)(r2, n2, s2);
        };
      }() }, left: { validate: ar.env.BABEL_TYPES_8_BREAKING ? yn("Identifier", "MemberExpression", "ArrayPattern", "ObjectPattern") : yn("LVal") }, right: { validate: yn("Expression") } }, builder: ["operator", "left", "right"], visitor: ["left", "right"], aliases: ["Expression"] }), An("BinaryExpression", { builder: ["operator", "left", "right"], fields: { operator: { validate: mn.apply(void 0, c(Ur)) }, left: { validate: function() {
        var e2 = yn("Expression"), t2 = yn("Expression", "PrivateName"), r2 = function(r3, n2, s2) {
          var a2 = r3.operator === "in" ? t2 : e2;
          a2(r3, n2, s2);
        };
        return r2.oneOfNodeTypes = ["Expression", "PrivateName"], r2;
      }() }, right: { validate: yn("Expression") } }, visitor: ["left", "right"], aliases: ["Binary", "Expression"] }), An("InterpreterDirective", { builder: ["value"], fields: { value: { validate: vn("string") } } }), An("Directive", { visitor: ["value"], fields: { value: { validate: yn("DirectiveLiteral") } } }), An("DirectiveLiteral", { builder: ["value"], fields: { value: { validate: vn("string") } } }), An("BlockStatement", { builder: ["body", "directives"], visitor: ["directives", "body"], fields: { directives: { validate: En(vn("array"), hn(yn("Directive"))), default: [] }, body: { validate: En(vn("array"), hn(yn("Statement"))) } }, aliases: ["Scopable", "BlockParent", "Block", "Statement"] }), An("BreakStatement", { visitor: ["label"], fields: { label: { validate: yn("Identifier"), optional: true } }, aliases: ["Statement", "Terminatorless", "CompletionStatement"] }), An("CallExpression", { visitor: ["callee", "arguments", "typeParameters", "typeArguments"], builder: ["callee", "arguments"], aliases: ["Expression"], fields: Object.assign({ callee: { validate: yn("Expression", "V8IntrinsicIdentifier") }, arguments: { validate: En(vn("array"), hn(yn("Expression", "SpreadElement", "JSXNamespacedName", "ArgumentPlaceholder"))) } }, ar.env.BABEL_TYPES_8_BREAKING ? {} : { optional: { validate: mn(true, false), optional: true } }, { typeArguments: { validate: yn("TypeParameterInstantiation"), optional: true }, typeParameters: { validate: yn("TSTypeParameterInstantiation"), optional: true } }) }), An("CatchClause", { visitor: ["param", "body"], fields: { param: { validate: yn("Identifier", "ArrayPattern", "ObjectPattern"), optional: true }, body: { validate: yn("BlockStatement") } }, aliases: ["Scopable", "BlockParent"] }), An("ConditionalExpression", { visitor: ["test", "consequent", "alternate"], fields: { test: { validate: yn("Expression") }, consequent: { validate: yn("Expression") }, alternate: { validate: yn("Expression") } }, aliases: ["Expression", "Conditional"] }), An("ContinueStatement", { visitor: ["label"], fields: { label: { validate: yn("Identifier"), optional: true } }, aliases: ["Statement", "Terminatorless", "CompletionStatement"] }), An("DebuggerStatement", { aliases: ["Statement"] }), An("DoWhileStatement", { visitor: ["test", "body"], fields: { test: { validate: yn("Expression") }, body: { validate: yn("Statement") } }, aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"] }), An("EmptyStatement", { aliases: ["Statement"] }), An("ExpressionStatement", { visitor: ["expression"], fields: { expression: { validate: yn("Expression") } }, aliases: ["Statement", "ExpressionWrapper"] }), An("File", { builder: ["program", "comments", "tokens"], visitor: ["program"], fields: { program: { validate: yn("Program") }, comments: { validate: ar.env.BABEL_TYPES_8_BREAKING ? hn(yn("CommentBlock", "CommentLine")) : Object.assign(function() {
      }, { each: { oneOfNodeTypes: ["CommentBlock", "CommentLine"] } }), optional: true }, tokens: { validate: hn(Object.assign(function() {
      }, { type: "any" })), optional: true } } }), An("ForInStatement", { visitor: ["left", "right", "body"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"], fields: { left: { validate: ar.env.BABEL_TYPES_8_BREAKING ? yn("VariableDeclaration", "Identifier", "MemberExpression", "ArrayPattern", "ObjectPattern") : yn("VariableDeclaration", "LVal") }, right: { validate: yn("Expression") }, body: { validate: yn("Statement") } } }), An("ForStatement", { visitor: ["init", "test", "update", "body"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"], fields: { init: { validate: yn("VariableDeclaration", "Expression"), optional: true }, test: { validate: yn("Expression"), optional: true }, update: { validate: yn("Expression"), optional: true }, body: { validate: yn("Statement") } } });
      var Cn = { params: { validate: En(vn("array"), hn(yn("Identifier", "Pattern", "RestElement"))) }, generator: { default: false }, async: { default: false } }, Sn = { returnType: { validate: yn("TypeAnnotation", "TSTypeAnnotation", "Noop"), optional: true }, typeParameters: { validate: yn("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"), optional: true } }, Tn = Object.assign({}, Cn, { declare: { validate: vn("boolean"), optional: true }, id: { validate: yn("Identifier"), optional: true } });
      An("FunctionDeclaration", { builder: ["id", "params", "body", "generator", "async"], visitor: ["id", "params", "body", "returnType", "typeParameters"], fields: Object.assign({}, Tn, Sn, { body: { validate: yn("BlockStatement") } }), aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"], validate: function() {
        if (!ar.env.BABEL_TYPES_8_BREAKING)
          return function() {
          };
        var e2 = yn("Identifier");
        return function(t2, r2, n2) {
          ur("ExportDefaultDeclaration", t2) || e2(n2, "id", n2.id);
        };
      }() }), An("FunctionExpression", { inherits: "FunctionDeclaration", aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"], fields: Object.assign({}, Cn, Sn, { id: { validate: yn("Identifier"), optional: true }, body: { validate: yn("BlockStatement") } }) });
      var jn, Pn, In, Fn, kn, On = { typeAnnotation: { validate: yn("TypeAnnotation", "TSTypeAnnotation", "Noop"), optional: true }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))) } };
      An("Identifier", { builder: ["name"], visitor: ["typeAnnotation", "decorators"], aliases: ["Expression", "PatternLike", "LVal", "TSEntityName"], fields: Object.assign({}, On, { name: { validate: En(vn("string"), Object.assign(function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING && !Pr(r2, false))
          throw new TypeError('"' + r2 + '" is not a valid identifier name');
      }, { type: "string" })) }, optional: { validate: vn("boolean"), optional: true } }), validate: function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING) {
          var n2 = /\.(\w+)$/.exec(t2);
          if (n2) {
            var s2 = l(n2, 2)[1], a2 = { computed: false };
            if (s2 === "property") {
              if (ur("MemberExpression", e2, a2))
                return;
              if (ur("OptionalMemberExpression", e2, a2))
                return;
            } else if (s2 === "key") {
              if (ur("Property", e2, a2))
                return;
              if (ur("Method", e2, a2))
                return;
            } else if (s2 === "exported") {
              if (ur("ExportSpecifier", e2))
                return;
            } else if (s2 === "imported") {
              if (ur("ImportSpecifier", e2, { imported: r2 }))
                return;
            } else if (s2 === "meta" && ur("MetaProperty", e2, { meta: r2 }))
              return;
            if ((jr(r2.name) || wr(r2.name, false)) && r2.name !== "this")
              throw new TypeError('"' + r2.name + '" is not a valid identifier');
          }
        }
      } }), An("IfStatement", { visitor: ["test", "consequent", "alternate"], aliases: ["Statement", "Conditional"], fields: { test: { validate: yn("Expression") }, consequent: { validate: yn("Statement") }, alternate: { optional: true, validate: yn("Statement") } } }), An("LabeledStatement", { visitor: ["label", "body"], aliases: ["Statement"], fields: { label: { validate: yn("Identifier") }, body: { validate: yn("Statement") } } }), An("StringLiteral", { builder: ["value"], fields: { value: { validate: vn("string") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), An("NumericLiteral", { builder: ["value"], deprecatedAlias: "NumberLiteral", fields: { value: { validate: vn("number") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), An("NullLiteral", { aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), An("BooleanLiteral", { builder: ["value"], fields: { value: { validate: vn("boolean") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), An("RegExpLiteral", { builder: ["pattern", "flags"], deprecatedAlias: "RegexLiteral", aliases: ["Expression", "Pureish", "Literal"], fields: { pattern: { validate: vn("string") }, flags: { validate: En(vn("string"), Object.assign(function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING) {
          var n2 = /[^gimsuy]/.exec(r2);
          if (n2)
            throw new TypeError('"' + n2[0] + '" is not a valid RegExp flag');
        }
      }, { type: "string" })), default: "" } } }), An("LogicalExpression", { builder: ["operator", "left", "right"], visitor: ["left", "right"], aliases: ["Binary", "Expression"], fields: { operator: { validate: mn.apply(void 0, c(Or)) }, left: { validate: yn("Expression") }, right: { validate: yn("Expression") } } }), An("MemberExpression", { builder: ["object", "property", "computed"].concat(c(ar.env.BABEL_TYPES_8_BREAKING ? [] : ["optional"])), visitor: ["object", "property"], aliases: ["Expression", "LVal"], fields: Object.assign({ object: { validate: yn("Expression") }, property: { validate: (jn = yn("Identifier", "PrivateName"), Pn = yn("Expression"), In = function(e2, t2, r2) {
        var n2 = e2.computed ? Pn : jn;
        n2(e2, t2, r2);
      }, In.oneOfNodeTypes = ["Expression", "Identifier", "PrivateName"], In) }, computed: { default: false } }, ar.env.BABEL_TYPES_8_BREAKING ? {} : { optional: { validate: mn(true, false), optional: true } }) }), An("NewExpression", { inherits: "CallExpression" }), An("Program", { visitor: ["directives", "body"], builder: ["body", "directives", "sourceType", "interpreter"], fields: { sourceFile: { validate: vn("string") }, sourceType: { validate: mn("script", "module"), default: "script" }, interpreter: { validate: yn("InterpreterDirective"), default: null, optional: true }, directives: { validate: En(vn("array"), hn(yn("Directive"))), default: [] }, body: { validate: En(vn("array"), hn(yn("Statement"))) } }, aliases: ["Scopable", "BlockParent", "Block"] }), An("ObjectExpression", { visitor: ["properties"], aliases: ["Expression"], fields: { properties: { validate: En(vn("array"), hn(yn("ObjectMethod", "ObjectProperty", "SpreadElement"))) } } }), An("ObjectMethod", { builder: ["kind", "key", "params", "body", "computed", "generator", "async"], fields: Object.assign({}, Cn, Sn, { kind: Object.assign({ validate: mn("method", "get", "set") }, ar.env.BABEL_TYPES_8_BREAKING ? {} : { default: "method" }), computed: { default: false }, key: { validate: function() {
        var e2 = yn("Identifier", "StringLiteral", "NumericLiteral"), t2 = yn("Expression"), r2 = function(r3, n2, s2) {
          var a2 = r3.computed ? t2 : e2;
          a2(r3, n2, s2);
        };
        return r2.oneOfNodeTypes = ["Expression", "Identifier", "StringLiteral", "NumericLiteral"], r2;
      }() }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))), optional: true }, body: { validate: yn("BlockStatement") } }), visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"], aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"] }), An("ObjectProperty", { builder: ["key", "value", "computed", "shorthand"].concat(c(ar.env.BABEL_TYPES_8_BREAKING ? [] : ["decorators"])), fields: { computed: { default: false }, key: { validate: function() {
        var e2 = yn("Identifier", "StringLiteral", "NumericLiteral"), t2 = yn("Expression"), r2 = function(r3, n2, s2) {
          var a2 = r3.computed ? t2 : e2;
          a2(r3, n2, s2);
        };
        return r2.oneOfNodeTypes = ["Expression", "Identifier", "StringLiteral", "NumericLiteral"], r2;
      }() }, value: { validate: yn("Expression", "PatternLike") }, shorthand: { validate: En(vn("boolean"), Object.assign(function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING && r2 && e2.computed)
          throw new TypeError("Property shorthand of ObjectProperty cannot be true if computed is true");
      }, { type: "boolean" }), function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING && r2 && !ur("Identifier", e2.key))
          throw new TypeError("Property shorthand of ObjectProperty cannot be true if key is not an Identifier");
      }), default: false }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))), optional: true } }, visitor: ["key", "value", "decorators"], aliases: ["UserWhitespacable", "Property", "ObjectMember"], validate: function() {
        var e2 = yn("Identifier", "Pattern"), t2 = yn("Expression");
        return function(r2, n2, s2) {
          ar.env.BABEL_TYPES_8_BREAKING && (ur("ObjectPattern", r2) ? e2 : t2)(s2, "value", s2.value);
        };
      }() }), An("RestElement", { visitor: ["argument", "typeAnnotation"], builder: ["argument"], aliases: ["LVal", "PatternLike"], deprecatedAlias: "RestProperty", fields: Object.assign({}, On, { argument: { validate: ar.env.BABEL_TYPES_8_BREAKING ? yn("Identifier", "Pattern", "MemberExpression") : yn("LVal") } }), validate: function(e2, t2) {
        if (ar.env.BABEL_TYPES_8_BREAKING) {
          var r2 = /(\w+)\[(\d+)\]/.exec(t2);
          if (!r2)
            throw new Error("Internal Babel error: malformed key.");
          var n2 = l(r2, 3), s2 = n2[1], a2 = n2[2];
          if (e2[s2].length > a2 + 1)
            throw new TypeError("RestElement must be last element of " + s2);
        }
      } }), An("ReturnStatement", { visitor: ["argument"], aliases: ["Statement", "Terminatorless", "CompletionStatement"], fields: { argument: { validate: yn("Expression"), optional: true } } }), An("SequenceExpression", { visitor: ["expressions"], fields: { expressions: { validate: En(vn("array"), hn(yn("Expression"))) } }, aliases: ["Expression"] }), An("ParenthesizedExpression", { visitor: ["expression"], aliases: ["Expression", "ExpressionWrapper"], fields: { expression: { validate: yn("Expression") } } }), An("SwitchCase", { visitor: ["test", "consequent"], fields: { test: { validate: yn("Expression"), optional: true }, consequent: { validate: En(vn("array"), hn(yn("Statement"))) } } }), An("SwitchStatement", { visitor: ["discriminant", "cases"], aliases: ["Statement", "BlockParent", "Scopable"], fields: { discriminant: { validate: yn("Expression") }, cases: { validate: En(vn("array"), hn(yn("SwitchCase"))) } } }), An("ThisExpression", { aliases: ["Expression"] }), An("ThrowStatement", { visitor: ["argument"], aliases: ["Statement", "Terminatorless", "CompletionStatement"], fields: { argument: { validate: yn("Expression") } } }), An("TryStatement", { visitor: ["block", "handler", "finalizer"], aliases: ["Statement"], fields: { block: { validate: En(yn("BlockStatement"), Object.assign(function(e2) {
        if (ar.env.BABEL_TYPES_8_BREAKING && !e2.handler && !e2.finalizer)
          throw new TypeError("TryStatement expects either a handler or finalizer, or both");
      }, { oneOfNodeTypes: ["BlockStatement"] })) }, handler: { optional: true, validate: yn("CatchClause") }, finalizer: { optional: true, validate: yn("BlockStatement") } } }), An("UnaryExpression", { builder: ["operator", "argument", "prefix"], fields: { prefix: { default: true }, argument: { validate: yn("Expression") }, operator: { validate: mn.apply(void 0, c(Xr)) } }, visitor: ["argument"], aliases: ["UnaryLike", "Expression"] }), An("UpdateExpression", { builder: ["operator", "argument", "prefix"], fields: { prefix: { default: false }, argument: { validate: ar.env.BABEL_TYPES_8_BREAKING ? yn("Identifier", "MemberExpression") : yn("Expression") }, operator: { validate: mn.apply(void 0, c(Rr)) } }, visitor: ["argument"], aliases: ["Expression"] }), An("VariableDeclaration", { builder: ["kind", "declarations"], visitor: ["declarations"], aliases: ["Statement", "Declaration"], fields: { declare: { validate: vn("boolean"), optional: true }, kind: { validate: mn("var", "let", "const") }, declarations: { validate: En(vn("array"), hn(yn("VariableDeclarator"))) } }, validate: function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING && ur("ForXStatement", e2, { left: r2 }) && r2.declarations.length !== 1)
          throw new TypeError("Exactly one VariableDeclarator is required in the VariableDeclaration of a " + e2.type);
      } }), An("VariableDeclarator", { visitor: ["id", "init"], fields: { id: { validate: function() {
        if (!ar.env.BABEL_TYPES_8_BREAKING)
          return yn("LVal");
        var e2 = yn("Identifier", "ArrayPattern", "ObjectPattern"), t2 = yn("Identifier");
        return function(r2, n2, s2) {
          (r2.init ? e2 : t2)(r2, n2, s2);
        };
      }() }, definite: { optional: true, validate: vn("boolean") }, init: { optional: true, validate: yn("Expression") } } }), An("WhileStatement", { visitor: ["test", "body"], aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"], fields: { test: { validate: yn("Expression") }, body: { validate: yn("Statement") } } }), An("WithStatement", { visitor: ["object", "body"], aliases: ["Statement"], fields: { object: { validate: yn("Expression") }, body: { validate: yn("Statement") } } }), An("AssignmentPattern", { visitor: ["left", "right", "decorators"], builder: ["left", "right"], aliases: ["Pattern", "PatternLike", "LVal"], fields: Object.assign({}, On, { left: { validate: yn("Identifier", "ObjectPattern", "ArrayPattern", "MemberExpression") }, right: { validate: yn("Expression") }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))), optional: true } }) }), An("ArrayPattern", { visitor: ["elements", "typeAnnotation"], builder: ["elements"], aliases: ["Pattern", "PatternLike", "LVal"], fields: Object.assign({}, On, { elements: { validate: En(vn("array"), hn(gn("null", "PatternLike"))) }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))), optional: true } }) }), An("ArrowFunctionExpression", { builder: ["params", "body", "async"], visitor: ["params", "body", "returnType", "typeParameters"], aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"], fields: Object.assign({}, Cn, Sn, { expression: { validate: vn("boolean") }, body: { validate: yn("BlockStatement", "Expression") } }) }), An("ClassBody", { visitor: ["body"], fields: { body: { validate: En(vn("array"), hn(yn("ClassMethod", "ClassPrivateMethod", "ClassProperty", "ClassPrivateProperty", "TSDeclareMethod", "TSIndexSignature"))) } } }), An("ClassExpression", { builder: ["id", "superClass", "body", "decorators"], visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"], aliases: ["Scopable", "Class", "Expression"], fields: { id: { validate: yn("Identifier"), optional: true }, typeParameters: { validate: yn("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"), optional: true }, body: { validate: yn("ClassBody") }, superClass: { optional: true, validate: yn("Expression") }, superTypeParameters: { validate: yn("TypeParameterInstantiation", "TSTypeParameterInstantiation"), optional: true }, implements: { validate: En(vn("array"), hn(yn("TSExpressionWithTypeArguments", "ClassImplements"))), optional: true }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))), optional: true }, mixins: { validate: yn("InterfaceExtends"), optional: true } } }), An("ClassDeclaration", { inherits: "ClassExpression", aliases: ["Scopable", "Class", "Statement", "Declaration"], fields: { id: { validate: yn("Identifier") }, typeParameters: { validate: yn("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"), optional: true }, body: { validate: yn("ClassBody") }, superClass: { optional: true, validate: yn("Expression") }, superTypeParameters: { validate: yn("TypeParameterInstantiation", "TSTypeParameterInstantiation"), optional: true }, implements: { validate: En(vn("array"), hn(yn("TSExpressionWithTypeArguments", "ClassImplements"))), optional: true }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))), optional: true }, mixins: { validate: yn("InterfaceExtends"), optional: true }, declare: { validate: vn("boolean"), optional: true }, abstract: { validate: vn("boolean"), optional: true } }, validate: function() {
        var e2 = yn("Identifier");
        return function(t2, r2, n2) {
          ar.env.BABEL_TYPES_8_BREAKING && (ur("ExportDefaultDeclaration", t2) || e2(n2, "id", n2.id));
        };
      }() }), An("ExportAllDeclaration", { visitor: ["source"], aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"], fields: { source: { validate: yn("StringLiteral") }, exportKind: cn(mn("type", "value")), assertions: { optional: true, validate: En(vn("array"), hn(yn("ImportAttribute"))) } } }), An("ExportDefaultDeclaration", { visitor: ["declaration"], aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"], fields: { declaration: { validate: yn("FunctionDeclaration", "TSDeclareFunction", "ClassDeclaration", "Expression") } } }), An("ExportNamedDeclaration", { visitor: ["declaration", "specifiers", "source"], aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"], fields: { declaration: { optional: true, validate: En(yn("Declaration"), Object.assign(function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING && r2 && e2.specifiers.length)
          throw new TypeError("Only declaration or specifiers is allowed on ExportNamedDeclaration");
      }, { oneOfNodeTypes: ["Declaration"] }), function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING && r2 && e2.source)
          throw new TypeError("Cannot export a declaration from a source");
      }) }, assertions: { optional: true, validate: En(vn("array"), hn(yn("ImportAttribute"))) }, specifiers: { default: [], validate: En(vn("array"), hn((Fn = yn("ExportSpecifier", "ExportDefaultSpecifier", "ExportNamespaceSpecifier"), kn = yn("ExportSpecifier"), ar.env.BABEL_TYPES_8_BREAKING ? function(e2, t2, r2) {
        (e2.source ? Fn : kn)(e2, t2, r2);
      } : Fn))) }, source: { validate: yn("StringLiteral"), optional: true }, exportKind: cn(mn("type", "value")) } }), An("ExportSpecifier", { visitor: ["local", "exported"], aliases: ["ModuleSpecifier"], fields: { local: { validate: yn("Identifier") }, exported: { validate: yn("Identifier", "StringLiteral") } } }), An("ForOfStatement", { visitor: ["left", "right", "body"], builder: ["left", "right", "body", "await"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"], fields: { left: { validate: function() {
        if (!ar.env.BABEL_TYPES_8_BREAKING)
          return yn("VariableDeclaration", "LVal");
        var e2 = yn("VariableDeclaration"), t2 = yn("Identifier", "MemberExpression", "ArrayPattern", "ObjectPattern");
        return function(r2, n2, s2) {
          ur("VariableDeclaration", s2) ? e2(r2, n2, s2) : t2(r2, n2, s2);
        };
      }() }, right: { validate: yn("Expression") }, body: { validate: yn("Statement") }, await: { default: false } } }), An("ImportDeclaration", { visitor: ["specifiers", "source"], aliases: ["Statement", "Declaration", "ModuleDeclaration"], fields: { assertions: { optional: true, validate: En(vn("array"), hn(yn("ImportAttribute"))) }, specifiers: { validate: En(vn("array"), hn(yn("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier"))) }, source: { validate: yn("StringLiteral") }, importKind: { validate: mn("type", "typeof", "value"), optional: true } } }), An("ImportDefaultSpecifier", { visitor: ["local"], aliases: ["ModuleSpecifier"], fields: { local: { validate: yn("Identifier") } } }), An("ImportNamespaceSpecifier", { visitor: ["local"], aliases: ["ModuleSpecifier"], fields: { local: { validate: yn("Identifier") } } }), An("ImportSpecifier", { visitor: ["local", "imported"], aliases: ["ModuleSpecifier"], fields: { local: { validate: yn("Identifier") }, imported: { validate: yn("Identifier", "StringLiteral") }, importKind: { validate: mn("type", "typeof"), optional: true } } }), An("MetaProperty", { visitor: ["meta", "property"], aliases: ["Expression"], fields: { meta: { validate: En(yn("Identifier"), Object.assign(function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING) {
          var n2;
          switch (r2.name) {
            case "function":
              n2 = "sent";
              break;
            case "new":
              n2 = "target";
              break;
            case "import":
              n2 = "meta";
          }
          if (!ur("Identifier", e2.property, { name: n2 }))
            throw new TypeError("Unrecognised MetaProperty");
        }
      }, { oneOfNodeTypes: ["Identifier"] })) }, property: { validate: yn("Identifier") } } });
      var Rn = { abstract: { validate: vn("boolean"), optional: true }, accessibility: { validate: mn("public", "private", "protected"), optional: true }, static: { default: false }, override: { default: false }, computed: { default: false }, optional: { validate: vn("boolean"), optional: true }, key: { validate: En(function() {
        var e2 = yn("Identifier", "StringLiteral", "NumericLiteral"), t2 = yn("Expression");
        return function(r2, n2, s2) {
          (r2.computed ? t2 : e2)(r2, n2, s2);
        };
      }(), yn("Identifier", "StringLiteral", "NumericLiteral", "Expression")) } }, Nn = Object.assign({}, Cn, Rn, { params: { validate: En(vn("array"), hn(yn("Identifier", "Pattern", "RestElement", "TSParameterProperty"))) }, kind: { validate: mn("get", "set", "method", "constructor"), default: "method" }, access: { validate: En(vn("string"), mn("public", "private", "protected")), optional: true }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))), optional: true } });
      An("ClassMethod", { aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"], builder: ["kind", "key", "params", "body", "computed", "static", "generator", "async"], visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"], fields: Object.assign({}, Nn, Sn, { body: { validate: yn("BlockStatement") } }) }), An("ObjectPattern", { visitor: ["properties", "typeAnnotation", "decorators"], builder: ["properties"], aliases: ["Pattern", "PatternLike", "LVal"], fields: Object.assign({}, On, { properties: { validate: En(vn("array"), hn(yn("RestElement", "ObjectProperty"))) } }) }), An("SpreadElement", { visitor: ["argument"], aliases: ["UnaryLike"], deprecatedAlias: "SpreadProperty", fields: { argument: { validate: yn("Expression") } } }), An("Super", { aliases: ["Expression"] }), An("TaggedTemplateExpression", { visitor: ["tag", "quasi"], aliases: ["Expression"], fields: { tag: { validate: yn("Expression") }, quasi: { validate: yn("TemplateLiteral") }, typeParameters: { validate: yn("TypeParameterInstantiation", "TSTypeParameterInstantiation"), optional: true } } }), An("TemplateElement", { builder: ["value", "tail"], fields: { value: { validate: function(e2) {
        function t2(t3, r2, n2) {
          for (var s2 = [], a2 = 0, i2 = Object.keys(e2); a2 < i2.length; a2++) {
            var o2 = i2[a2];
            try {
              Jr(t3, o2, n2[o2], e2[o2]);
            } catch (e3) {
              if (e3 instanceof TypeError) {
                s2.push(e3.message);
                continue;
              }
              throw e3;
            }
          }
          if (s2.length)
            throw new TypeError("Property " + r2 + " of " + t3.type + " expected to have the following:\n" + s2.join("\n"));
        }
        return t2.shapeOf = e2, t2;
      }({ raw: { validate: vn("string") }, cooked: { validate: vn("string"), optional: true } }) }, tail: { default: false } } }), An("TemplateLiteral", { visitor: ["quasis", "expressions"], aliases: ["Expression", "Literal"], fields: { quasis: { validate: En(vn("array"), hn(yn("TemplateElement"))) }, expressions: { validate: En(vn("array"), hn(yn("Expression", "TSType")), function(e2, t2, r2) {
        if (e2.quasis.length !== r2.length + 1)
          throw new TypeError("Number of " + e2.type + " quasis should be exactly one more than the number of expressions.\nExpected " + (r2.length + 1) + " quasis but got " + e2.quasis.length);
      }) } } }), An("YieldExpression", { builder: ["argument", "delegate"], visitor: ["argument"], aliases: ["Expression", "Terminatorless"], fields: { delegate: { validate: En(vn("boolean"), Object.assign(function(e2, t2, r2) {
        if (ar.env.BABEL_TYPES_8_BREAKING && r2 && !e2.argument)
          throw new TypeError("Property delegate of YieldExpression cannot be true if there is no argument");
      }, { type: "boolean" })), default: false }, argument: { optional: true, validate: yn("Expression") } } }), An("AwaitExpression", { builder: ["argument"], visitor: ["argument"], aliases: ["Expression", "Terminatorless"], fields: { argument: { validate: yn("Expression") } } }), An("Import", { aliases: ["Expression"] }), An("BigIntLiteral", { builder: ["value"], fields: { value: { validate: vn("string") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), An("ExportNamespaceSpecifier", { visitor: ["exported"], aliases: ["ModuleSpecifier"], fields: { exported: { validate: yn("Identifier") } } }), An("OptionalMemberExpression", { builder: ["object", "property", "computed", "optional"], visitor: ["object", "property"], aliases: ["Expression"], fields: { object: { validate: yn("Expression") }, property: { validate: function() {
        var e2 = yn("Identifier"), t2 = yn("Expression"), r2 = function(r3, n2, s2) {
          var a2 = r3.computed ? t2 : e2;
          a2(r3, n2, s2);
        };
        return r2.oneOfNodeTypes = ["Expression", "Identifier"], r2;
      }() }, computed: { default: false }, optional: { validate: ar.env.BABEL_TYPES_8_BREAKING ? En(vn("boolean"), bn()) : vn("boolean") } } }), An("OptionalCallExpression", { visitor: ["callee", "arguments", "typeParameters", "typeArguments"], builder: ["callee", "arguments", "optional"], aliases: ["Expression"], fields: { callee: { validate: yn("Expression") }, arguments: { validate: En(vn("array"), hn(yn("Expression", "SpreadElement", "JSXNamespacedName", "ArgumentPlaceholder"))) }, optional: { validate: ar.env.BABEL_TYPES_8_BREAKING ? En(vn("boolean"), bn()) : vn("boolean") }, typeArguments: { validate: yn("TypeParameterInstantiation"), optional: true }, typeParameters: { validate: yn("TSTypeParameterInstantiation"), optional: true } } });
      var Bn = function(e2, t2) {
        t2 === void 0 && (t2 = "TypeParameterDeclaration"), An(e2, { builder: ["id", "typeParameters", "extends", "body"], visitor: ["id", "typeParameters", "extends", "mixins", "implements", "body"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: ln("Identifier"), typeParameters: pn(t2), extends: cn(dn("InterfaceExtends")), mixins: cn(dn("InterfaceExtends")), implements: cn(dn("ClassImplements")), body: ln("ObjectTypeAnnotation") } });
      };
      An("AnyTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("ArrayTypeAnnotation", { visitor: ["elementType"], aliases: ["Flow", "FlowType"], fields: { elementType: ln("FlowType") } }), An("BooleanTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("BooleanLiteralTypeAnnotation", { builder: ["value"], aliases: ["Flow", "FlowType"], fields: { value: on(vn("boolean")) } }), An("NullLiteralTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("ClassImplements", { visitor: ["id", "typeParameters"], aliases: ["Flow"], fields: { id: ln("Identifier"), typeParameters: pn("TypeParameterInstantiation") } }), Bn("DeclareClass"), An("DeclareFunction", { visitor: ["id"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: ln("Identifier"), predicate: pn("DeclaredPredicate") } }), Bn("DeclareInterface"), An("DeclareModule", { builder: ["id", "body", "kind"], visitor: ["id", "body"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: ln(["Identifier", "StringLiteral"]), body: ln("BlockStatement"), kind: cn(mn("CommonJS", "ES")) } }), An("DeclareModuleExports", { visitor: ["typeAnnotation"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { typeAnnotation: ln("TypeAnnotation") } }), An("DeclareTypeAlias", { visitor: ["id", "typeParameters", "right"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: ln("Identifier"), typeParameters: pn("TypeParameterDeclaration"), right: ln("FlowType") } }), An("DeclareOpaqueType", { visitor: ["id", "typeParameters", "supertype"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: ln("Identifier"), typeParameters: pn("TypeParameterDeclaration"), supertype: pn("FlowType") } }), An("DeclareVariable", { visitor: ["id"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: ln("Identifier") } }), An("DeclareExportDeclaration", { visitor: ["declaration", "specifiers", "source"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { declaration: pn("Flow"), specifiers: cn(dn(["ExportSpecifier", "ExportNamespaceSpecifier"])), source: pn("StringLiteral"), default: cn(vn("boolean")) } }), An("DeclareExportAllDeclaration", { visitor: ["source"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { source: ln("StringLiteral"), exportKind: cn(mn("type", "value")) } }), An("DeclaredPredicate", { visitor: ["value"], aliases: ["Flow", "FlowPredicate"], fields: { value: ln("Flow") } }), An("ExistsTypeAnnotation", { aliases: ["Flow", "FlowType"] }), An("FunctionTypeAnnotation", { visitor: ["typeParameters", "params", "rest", "returnType"], aliases: ["Flow", "FlowType"], fields: { typeParameters: pn("TypeParameterDeclaration"), params: on(dn("FunctionTypeParam")), rest: pn("FunctionTypeParam"), this: pn("FunctionTypeParam"), returnType: ln("FlowType") } }), An("FunctionTypeParam", { visitor: ["name", "typeAnnotation"], aliases: ["Flow"], fields: { name: pn("Identifier"), typeAnnotation: ln("FlowType"), optional: cn(vn("boolean")) } }), An("GenericTypeAnnotation", { visitor: ["id", "typeParameters"], aliases: ["Flow", "FlowType"], fields: { id: ln(["Identifier", "QualifiedTypeIdentifier"]), typeParameters: pn("TypeParameterInstantiation") } }), An("InferredPredicate", { aliases: ["Flow", "FlowPredicate"] }), An("InterfaceExtends", { visitor: ["id", "typeParameters"], aliases: ["Flow"], fields: { id: ln(["Identifier", "QualifiedTypeIdentifier"]), typeParameters: pn("TypeParameterInstantiation") } }), Bn("InterfaceDeclaration"), An("InterfaceTypeAnnotation", { visitor: ["extends", "body"], aliases: ["Flow", "FlowType"], fields: { extends: cn(dn("InterfaceExtends")), body: ln("ObjectTypeAnnotation") } }), An("IntersectionTypeAnnotation", { visitor: ["types"], aliases: ["Flow", "FlowType"], fields: { types: on(dn("FlowType")) } }), An("MixedTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("EmptyTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("NullableTypeAnnotation", { visitor: ["typeAnnotation"], aliases: ["Flow", "FlowType"], fields: { typeAnnotation: ln("FlowType") } }), An("NumberLiteralTypeAnnotation", { builder: ["value"], aliases: ["Flow", "FlowType"], fields: { value: on(vn("number")) } }), An("NumberTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("ObjectTypeAnnotation", { visitor: ["properties", "indexers", "callProperties", "internalSlots"], aliases: ["Flow", "FlowType"], builder: ["properties", "indexers", "callProperties", "internalSlots", "exact"], fields: { properties: on(dn(["ObjectTypeProperty", "ObjectTypeSpreadProperty"])), indexers: cn(dn("ObjectTypeIndexer")), callProperties: cn(dn("ObjectTypeCallProperty")), internalSlots: cn(dn("ObjectTypeInternalSlot")), exact: { validate: vn("boolean"), default: false }, inexact: cn(vn("boolean")) } }), An("ObjectTypeInternalSlot", { visitor: ["id", "value", "optional", "static", "method"], aliases: ["Flow", "UserWhitespacable"], fields: { id: ln("Identifier"), value: ln("FlowType"), optional: on(vn("boolean")), static: on(vn("boolean")), method: on(vn("boolean")) } }), An("ObjectTypeCallProperty", { visitor: ["value"], aliases: ["Flow", "UserWhitespacable"], fields: { value: ln("FlowType"), static: on(vn("boolean")) } }), An("ObjectTypeIndexer", { visitor: ["id", "key", "value", "variance"], aliases: ["Flow", "UserWhitespacable"], fields: { id: pn("Identifier"), key: ln("FlowType"), value: ln("FlowType"), static: on(vn("boolean")), variance: pn("Variance") } }), An("ObjectTypeProperty", { visitor: ["key", "value", "variance"], aliases: ["Flow", "UserWhitespacable"], fields: { key: ln(["Identifier", "StringLiteral"]), value: ln("FlowType"), kind: on(mn("init", "get", "set")), static: on(vn("boolean")), proto: on(vn("boolean")), optional: on(vn("boolean")), variance: pn("Variance"), method: on(vn("boolean")) } }), An("ObjectTypeSpreadProperty", { visitor: ["argument"], aliases: ["Flow", "UserWhitespacable"], fields: { argument: ln("FlowType") } }), An("OpaqueType", { visitor: ["id", "typeParameters", "supertype", "impltype"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: ln("Identifier"), typeParameters: pn("TypeParameterDeclaration"), supertype: pn("FlowType"), impltype: ln("FlowType") } }), An("QualifiedTypeIdentifier", { visitor: ["id", "qualification"], aliases: ["Flow"], fields: { id: ln("Identifier"), qualification: ln(["Identifier", "QualifiedTypeIdentifier"]) } }), An("StringLiteralTypeAnnotation", { builder: ["value"], aliases: ["Flow", "FlowType"], fields: { value: on(vn("string")) } }), An("StringTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("SymbolTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("ThisTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("TupleTypeAnnotation", { visitor: ["types"], aliases: ["Flow", "FlowType"], fields: { types: on(dn("FlowType")) } }), An("TypeofTypeAnnotation", { visitor: ["argument"], aliases: ["Flow", "FlowType"], fields: { argument: ln("FlowType") } }), An("TypeAlias", { visitor: ["id", "typeParameters", "right"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: ln("Identifier"), typeParameters: pn("TypeParameterDeclaration"), right: ln("FlowType") } }), An("TypeAnnotation", { aliases: ["Flow"], visitor: ["typeAnnotation"], fields: { typeAnnotation: ln("FlowType") } }), An("TypeCastExpression", { visitor: ["expression", "typeAnnotation"], aliases: ["Flow", "ExpressionWrapper", "Expression"], fields: { expression: ln("Expression"), typeAnnotation: ln("TypeAnnotation") } }), An("TypeParameter", { aliases: ["Flow"], visitor: ["bound", "default", "variance"], fields: { name: on(vn("string")), bound: pn("TypeAnnotation"), default: pn("FlowType"), variance: pn("Variance") } }), An("TypeParameterDeclaration", { aliases: ["Flow"], visitor: ["params"], fields: { params: on(dn("TypeParameter")) } }), An("TypeParameterInstantiation", { aliases: ["Flow"], visitor: ["params"], fields: { params: on(dn("FlowType")) } }), An("UnionTypeAnnotation", { visitor: ["types"], aliases: ["Flow", "FlowType"], fields: { types: on(dn("FlowType")) } }), An("Variance", { aliases: ["Flow"], builder: ["kind"], fields: { kind: on(mn("minus", "plus")) } }), An("VoidTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), An("EnumDeclaration", { aliases: ["Statement", "Declaration"], visitor: ["id", "body"], fields: { id: ln("Identifier"), body: ln(["EnumBooleanBody", "EnumNumberBody", "EnumStringBody", "EnumSymbolBody"]) } }), An("EnumBooleanBody", { aliases: ["EnumBody"], visitor: ["members"], fields: { explicitType: on(vn("boolean")), members: fn("EnumBooleanMember"), hasUnknownMembers: on(vn("boolean")) } }), An("EnumNumberBody", { aliases: ["EnumBody"], visitor: ["members"], fields: { explicitType: on(vn("boolean")), members: fn("EnumNumberMember"), hasUnknownMembers: on(vn("boolean")) } }), An("EnumStringBody", { aliases: ["EnumBody"], visitor: ["members"], fields: { explicitType: on(vn("boolean")), members: fn(["EnumStringMember", "EnumDefaultedMember"]), hasUnknownMembers: on(vn("boolean")) } }), An("EnumSymbolBody", { aliases: ["EnumBody"], visitor: ["members"], fields: { members: fn("EnumDefaultedMember"), hasUnknownMembers: on(vn("boolean")) } }), An("EnumBooleanMember", { aliases: ["EnumMember"], visitor: ["id"], fields: { id: ln("Identifier"), init: ln("BooleanLiteral") } }), An("EnumNumberMember", { aliases: ["EnumMember"], visitor: ["id", "init"], fields: { id: ln("Identifier"), init: ln("NumericLiteral") } }), An("EnumStringMember", { aliases: ["EnumMember"], visitor: ["id", "init"], fields: { id: ln("Identifier"), init: ln("StringLiteral") } }), An("EnumDefaultedMember", { aliases: ["EnumMember"], visitor: ["id"], fields: { id: ln("Identifier") } }), An("IndexedAccessType", { visitor: ["objectType", "indexType"], aliases: ["Flow", "FlowType"], fields: { objectType: ln("FlowType"), indexType: ln("FlowType") } }), An("OptionalIndexedAccessType", { visitor: ["objectType", "indexType"], aliases: ["Flow", "FlowType"], fields: { objectType: ln("FlowType"), indexType: ln("FlowType"), optional: on(vn("boolean")) } }), An("JSXAttribute", { visitor: ["name", "value"], aliases: ["JSX", "Immutable"], fields: { name: { validate: yn("JSXIdentifier", "JSXNamespacedName") }, value: { optional: true, validate: yn("JSXElement", "JSXFragment", "StringLiteral", "JSXExpressionContainer") } } }), An("JSXClosingElement", { visitor: ["name"], aliases: ["JSX", "Immutable"], fields: { name: { validate: yn("JSXIdentifier", "JSXMemberExpression", "JSXNamespacedName") } } }), An("JSXElement", { builder: ["openingElement", "closingElement", "children", "selfClosing"], visitor: ["openingElement", "children", "closingElement"], aliases: ["JSX", "Immutable", "Expression"], fields: { openingElement: { validate: yn("JSXOpeningElement") }, closingElement: { optional: true, validate: yn("JSXClosingElement") }, children: { validate: En(vn("array"), hn(yn("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement", "JSXFragment"))) }, selfClosing: { validate: vn("boolean"), optional: true } } }), An("JSXEmptyExpression", { aliases: ["JSX"] }), An("JSXExpressionContainer", { visitor: ["expression"], aliases: ["JSX", "Immutable"], fields: { expression: { validate: yn("Expression", "JSXEmptyExpression") } } }), An("JSXSpreadChild", { visitor: ["expression"], aliases: ["JSX", "Immutable"], fields: { expression: { validate: yn("Expression") } } }), An("JSXIdentifier", { builder: ["name"], aliases: ["JSX"], fields: { name: { validate: vn("string") } } }), An("JSXMemberExpression", { visitor: ["object", "property"], aliases: ["JSX"], fields: { object: { validate: yn("JSXMemberExpression", "JSXIdentifier") }, property: { validate: yn("JSXIdentifier") } } }), An("JSXNamespacedName", { visitor: ["namespace", "name"], aliases: ["JSX"], fields: { namespace: { validate: yn("JSXIdentifier") }, name: { validate: yn("JSXIdentifier") } } }), An("JSXOpeningElement", { builder: ["name", "attributes", "selfClosing"], visitor: ["name", "attributes"], aliases: ["JSX", "Immutable"], fields: { name: { validate: yn("JSXIdentifier", "JSXMemberExpression", "JSXNamespacedName") }, selfClosing: { default: false }, attributes: { validate: En(vn("array"), hn(yn("JSXAttribute", "JSXSpreadAttribute"))) }, typeParameters: { validate: yn("TypeParameterInstantiation", "TSTypeParameterInstantiation"), optional: true } } }), An("JSXSpreadAttribute", { visitor: ["argument"], aliases: ["JSX"], fields: { argument: { validate: yn("Expression") } } }), An("JSXText", { aliases: ["JSX", "Immutable"], builder: ["value"], fields: { value: { validate: vn("string") } } }), An("JSXFragment", { builder: ["openingFragment", "closingFragment", "children"], visitor: ["openingFragment", "children", "closingFragment"], aliases: ["JSX", "Immutable", "Expression"], fields: { openingFragment: { validate: yn("JSXOpeningFragment") }, closingFragment: { validate: yn("JSXClosingFragment") }, children: { validate: En(vn("array"), hn(yn("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement", "JSXFragment"))) } } }), An("JSXOpeningFragment", { aliases: ["JSX", "Immutable"] }), An("JSXClosingFragment", { aliases: ["JSX", "Immutable"] });
      for (var _n = ["Identifier", "StringLiteral", "Expression", "Statement", "Declaration", "BlockStatement", "ClassBody", "Pattern"], Ln = { Declaration: ["Statement"], Pattern: ["PatternLike", "LVal"] }, Mn = 0, Un = _n; Mn < Un.length; Mn++) {
        var Gn = Un[Mn], Vn = Zr[Gn];
        Vn != null && Vn.length && (Ln[Gn] = Vn);
      }
      var Wn = {};
      Object.keys(Ln).forEach(function(e2) {
        Ln[e2].forEach(function(t2) {
          Object.hasOwnProperty.call(Wn, t2) || (Wn[t2] = []), Wn[t2].push(e2);
        });
      }), An("Noop", { visitor: [] }), An("Placeholder", { visitor: [], builder: ["expectedNode", "name"], fields: { name: { validate: yn("Identifier") }, expectedNode: { validate: mn.apply(void 0, c(_n)) } } }), An("V8IntrinsicIdentifier", { builder: ["name"], fields: { name: { validate: vn("string") } } }), An("ArgumentPlaceholder", {}), An("BindExpression", { visitor: ["object", "callee"], aliases: ["Expression"], fields: ar.env.BABEL_TYPES_8_BREAKING ? { object: { validate: yn("Expression") }, callee: { validate: yn("Expression") } } : { object: { validate: Object.assign(function() {
      }, { oneOfNodeTypes: ["Expression"] }) }, callee: { validate: Object.assign(function() {
      }, { oneOfNodeTypes: ["Expression"] }) } } }), An("ClassProperty", { visitor: ["key", "value", "typeAnnotation", "decorators"], builder: ["key", "value", "typeAnnotation", "decorators", "computed", "static"], aliases: ["Property"], fields: Object.assign({}, Rn, { value: { validate: yn("Expression"), optional: true }, definite: { validate: vn("boolean"), optional: true }, typeAnnotation: { validate: yn("TypeAnnotation", "TSTypeAnnotation", "Noop"), optional: true }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))), optional: true }, readonly: { validate: vn("boolean"), optional: true }, declare: { validate: vn("boolean"), optional: true } }) }), An("PipelineTopicExpression", { builder: ["expression"], visitor: ["expression"], fields: { expression: { validate: yn("Expression") } } }), An("PipelineBareFunction", { builder: ["callee"], visitor: ["callee"], fields: { callee: { validate: yn("Expression") } } }), An("PipelinePrimaryTopicReference", { aliases: ["Expression"] }), An("ClassPrivateProperty", { visitor: ["key", "value", "decorators"], builder: ["key", "value", "decorators", "static"], aliases: ["Property", "Private"], fields: { key: { validate: yn("PrivateName") }, value: { validate: yn("Expression"), optional: true }, typeAnnotation: { validate: yn("TypeAnnotation", "TSTypeAnnotation", "Noop"), optional: true }, decorators: { validate: En(vn("array"), hn(yn("Decorator"))), optional: true } } }), An("ClassPrivateMethod", { builder: ["kind", "key", "params", "body", "static"], visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"], aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method", "Private"], fields: Object.assign({}, Nn, Sn, { key: { validate: yn("PrivateName") }, body: { validate: yn("BlockStatement") } }) }), An("ImportAttribute", { visitor: ["key", "value"], fields: { key: { validate: yn("Identifier", "StringLiteral") }, value: { validate: yn("StringLiteral") } } }), An("Decorator", { visitor: ["expression"], fields: { expression: { validate: yn("Expression") } } }), An("DoExpression", { visitor: ["body"], builder: ["body", "async"], aliases: ["Expression"], fields: { body: { validate: yn("BlockStatement") }, async: { validate: vn("boolean"), default: false } } }), An("ExportDefaultSpecifier", { visitor: ["exported"], aliases: ["ModuleSpecifier"], fields: { exported: { validate: yn("Identifier") } } }), An("PrivateName", { visitor: ["id"], aliases: ["Private"], fields: { id: { validate: yn("Identifier") } } }), An("RecordExpression", { visitor: ["properties"], aliases: ["Expression"], fields: { properties: { validate: En(vn("array"), hn(yn("ObjectProperty", "SpreadElement"))) } } }), An("TupleExpression", { fields: { elements: { validate: En(vn("array"), hn(yn("Expression", "SpreadElement"))), default: [] } }, visitor: ["elements"], aliases: ["Expression"] }), An("DecimalLiteral", { builder: ["value"], fields: { value: { validate: vn("string") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), An("StaticBlock", { visitor: ["body"], fields: { body: { validate: En(vn("array"), hn(yn("Statement"))) } }, aliases: ["Scopable", "BlockParent"] }), An("ModuleExpression", { visitor: ["body"], fields: { body: { validate: yn("Program") } }, aliases: ["Expression"] });
      var Hn = vn("boolean"), Xn = { returnType: { validate: yn("TSTypeAnnotation", "Noop"), optional: true }, typeParameters: { validate: yn("TSTypeParameterDeclaration", "Noop"), optional: true } };
      An("TSParameterProperty", { aliases: ["LVal"], visitor: ["parameter"], fields: { accessibility: { validate: mn("public", "private", "protected"), optional: true }, readonly: { validate: vn("boolean"), optional: true }, parameter: { validate: yn("Identifier", "AssignmentPattern") } } }), An("TSDeclareFunction", { aliases: ["Statement", "Declaration"], visitor: ["id", "typeParameters", "params", "returnType"], fields: Object.assign({}, Tn, Xn) }), An("TSDeclareMethod", { visitor: ["decorators", "key", "typeParameters", "params", "returnType"], fields: Object.assign({}, Nn, Xn) }), An("TSQualifiedName", { aliases: ["TSEntityName"], visitor: ["left", "right"], fields: { left: ln("TSEntityName"), right: ln("Identifier") } });
      var qn = { typeParameters: pn("TSTypeParameterDeclaration"), parameters: fn(["Identifier", "RestElement"]), typeAnnotation: pn("TSTypeAnnotation") }, $n = { aliases: ["TSTypeElement"], visitor: ["typeParameters", "parameters", "typeAnnotation"], fields: qn };
      An("TSCallSignatureDeclaration", $n), An("TSConstructSignatureDeclaration", $n);
      var Kn = { key: ln("Expression"), computed: on(Hn), optional: cn(Hn) };
      An("TSPropertySignature", { aliases: ["TSTypeElement"], visitor: ["key", "typeAnnotation", "initializer"], fields: Object.assign({}, Kn, { readonly: cn(Hn), typeAnnotation: pn("TSTypeAnnotation"), initializer: pn("Expression") }) }), An("TSMethodSignature", { aliases: ["TSTypeElement"], visitor: ["key", "typeParameters", "parameters", "typeAnnotation"], fields: Object.assign({}, qn, Kn, { kind: { validate: mn("method", "get", "set") } }) }), An("TSIndexSignature", { aliases: ["TSTypeElement"], visitor: ["parameters", "typeAnnotation"], fields: { readonly: cn(Hn), static: cn(Hn), parameters: fn("Identifier"), typeAnnotation: pn("TSTypeAnnotation") } });
      for (var zn = 0, Jn = ["TSAnyKeyword", "TSBooleanKeyword", "TSBigIntKeyword", "TSIntrinsicKeyword", "TSNeverKeyword", "TSNullKeyword", "TSNumberKeyword", "TSObjectKeyword", "TSStringKeyword", "TSSymbolKeyword", "TSUndefinedKeyword", "TSUnknownKeyword", "TSVoidKeyword"]; zn < Jn.length; zn++) {
        An(Jn[zn], { aliases: ["TSType", "TSBaseType"], visitor: [], fields: {} });
      }
      An("TSThisType", { aliases: ["TSType", "TSBaseType"], visitor: [], fields: {} });
      var Yn = { aliases: ["TSType"], visitor: ["typeParameters", "parameters", "typeAnnotation"] };
      An("TSFunctionType", Object.assign({}, Yn, { fields: qn })), An("TSConstructorType", Object.assign({}, Yn, { fields: Object.assign({}, qn, { abstract: cn(Hn) }) })), An("TSTypeReference", { aliases: ["TSType"], visitor: ["typeName", "typeParameters"], fields: { typeName: ln("TSEntityName"), typeParameters: pn("TSTypeParameterInstantiation") } }), An("TSTypePredicate", { aliases: ["TSType"], visitor: ["parameterName", "typeAnnotation"], builder: ["parameterName", "typeAnnotation", "asserts"], fields: { parameterName: ln(["Identifier", "TSThisType"]), typeAnnotation: pn("TSTypeAnnotation"), asserts: cn(Hn) } }), An("TSTypeQuery", { aliases: ["TSType"], visitor: ["exprName"], fields: { exprName: ln(["TSEntityName", "TSImportType"]) } }), An("TSTypeLiteral", { aliases: ["TSType"], visitor: ["members"], fields: { members: fn("TSTypeElement") } }), An("TSArrayType", { aliases: ["TSType"], visitor: ["elementType"], fields: { elementType: ln("TSType") } }), An("TSTupleType", { aliases: ["TSType"], visitor: ["elementTypes"], fields: { elementTypes: fn(["TSType", "TSNamedTupleMember"]) } }), An("TSOptionalType", { aliases: ["TSType"], visitor: ["typeAnnotation"], fields: { typeAnnotation: ln("TSType") } }), An("TSRestType", { aliases: ["TSType"], visitor: ["typeAnnotation"], fields: { typeAnnotation: ln("TSType") } }), An("TSNamedTupleMember", { visitor: ["label", "elementType"], builder: ["label", "elementType", "optional"], fields: { label: ln("Identifier"), optional: { validate: Hn, default: false }, elementType: ln("TSType") } });
      var Qn = { aliases: ["TSType"], visitor: ["types"], fields: { types: fn("TSType") } };
      An("TSUnionType", Qn), An("TSIntersectionType", Qn), An("TSConditionalType", { aliases: ["TSType"], visitor: ["checkType", "extendsType", "trueType", "falseType"], fields: { checkType: ln("TSType"), extendsType: ln("TSType"), trueType: ln("TSType"), falseType: ln("TSType") } }), An("TSInferType", { aliases: ["TSType"], visitor: ["typeParameter"], fields: { typeParameter: ln("TSTypeParameter") } }), An("TSParenthesizedType", { aliases: ["TSType"], visitor: ["typeAnnotation"], fields: { typeAnnotation: ln("TSType") } }), An("TSTypeOperator", { aliases: ["TSType"], visitor: ["typeAnnotation"], fields: { operator: on(vn("string")), typeAnnotation: ln("TSType") } }), An("TSIndexedAccessType", { aliases: ["TSType"], visitor: ["objectType", "indexType"], fields: { objectType: ln("TSType"), indexType: ln("TSType") } }), An("TSMappedType", { aliases: ["TSType"], visitor: ["typeParameter", "typeAnnotation", "nameType"], fields: { readonly: cn(Hn), typeParameter: ln("TSTypeParameter"), optional: cn(Hn), typeAnnotation: pn("TSType"), nameType: pn("TSType") } }), An("TSLiteralType", { aliases: ["TSType", "TSBaseType"], visitor: ["literal"], fields: { literal: ln(["NumericLiteral", "StringLiteral", "BooleanLiteral", "BigIntLiteral"]) } }), An("TSExpressionWithTypeArguments", { aliases: ["TSType"], visitor: ["expression", "typeParameters"], fields: { expression: ln("TSEntityName"), typeParameters: pn("TSTypeParameterInstantiation") } }), An("TSInterfaceDeclaration", { aliases: ["Statement", "Declaration"], visitor: ["id", "typeParameters", "extends", "body"], fields: { declare: cn(Hn), id: ln("Identifier"), typeParameters: pn("TSTypeParameterDeclaration"), extends: cn(dn("TSExpressionWithTypeArguments")), body: ln("TSInterfaceBody") } }), An("TSInterfaceBody", { visitor: ["body"], fields: { body: fn("TSTypeElement") } }), An("TSTypeAliasDeclaration", { aliases: ["Statement", "Declaration"], visitor: ["id", "typeParameters", "typeAnnotation"], fields: { declare: cn(Hn), id: ln("Identifier"), typeParameters: pn("TSTypeParameterDeclaration"), typeAnnotation: ln("TSType") } }), An("TSAsExpression", { aliases: ["Expression"], visitor: ["expression", "typeAnnotation"], fields: { expression: ln("Expression"), typeAnnotation: ln("TSType") } }), An("TSTypeAssertion", { aliases: ["Expression"], visitor: ["typeAnnotation", "expression"], fields: { typeAnnotation: ln("TSType"), expression: ln("Expression") } }), An("TSEnumDeclaration", { aliases: ["Statement", "Declaration"], visitor: ["id", "members"], fields: { declare: cn(Hn), const: cn(Hn), id: ln("Identifier"), members: fn("TSEnumMember"), initializer: pn("Expression") } }), An("TSEnumMember", { visitor: ["id", "initializer"], fields: { id: ln(["Identifier", "StringLiteral"]), initializer: pn("Expression") } }), An("TSModuleDeclaration", { aliases: ["Statement", "Declaration"], visitor: ["id", "body"], fields: { declare: cn(Hn), global: cn(Hn), id: ln(["Identifier", "StringLiteral"]), body: ln(["TSModuleBlock", "TSModuleDeclaration"]) } }), An("TSModuleBlock", { aliases: ["Scopable", "Block", "BlockParent"], visitor: ["body"], fields: { body: fn("Statement") } }), An("TSImportType", { aliases: ["TSType"], visitor: ["argument", "qualifier", "typeParameters"], fields: { argument: ln("StringLiteral"), qualifier: pn("TSEntityName"), typeParameters: pn("TSTypeParameterInstantiation") } }), An("TSImportEqualsDeclaration", { aliases: ["Statement"], visitor: ["id", "moduleReference"], fields: { isExport: on(Hn), id: ln("Identifier"), moduleReference: ln(["TSEntityName", "TSExternalModuleReference"]) } }), An("TSExternalModuleReference", { visitor: ["expression"], fields: { expression: ln("StringLiteral") } }), An("TSNonNullExpression", { aliases: ["Expression"], visitor: ["expression"], fields: { expression: ln("Expression") } }), An("TSExportAssignment", { aliases: ["Statement"], visitor: ["expression"], fields: { expression: ln("Expression") } }), An("TSNamespaceExportDeclaration", { aliases: ["Statement"], visitor: ["id"], fields: { id: ln("Identifier") } }), An("TSTypeAnnotation", { visitor: ["typeAnnotation"], fields: { typeAnnotation: { validate: yn("TSType") } } }), An("TSTypeParameterInstantiation", { visitor: ["params"], fields: { params: { validate: En(vn("array"), hn(yn("TSType"))) } } }), An("TSTypeParameterDeclaration", { visitor: ["params"], fields: { params: { validate: En(vn("array"), hn(yn("TSTypeParameter"))) } } }), An("TSTypeParameter", { builder: ["constraint", "default", "name"], visitor: ["constraint", "default"], fields: { name: { validate: vn("string") }, constraint: { validate: yn("TSType"), optional: true }, default: { validate: yn("TSType"), optional: true } } }), qt(Qr), qt(Zr), qt(en), qt(tn), qt(rn), qt(nn), qt(Ln), qt(Wn);
      var Zn = Object.keys(Qr).concat(Object.keys(en)).concat(Object.keys(nn));
      function es(e2) {
        for (var t2 = arguments.length, r2 = new Array(t2 > 1 ? t2 - 1 : 0), n2 = 1; n2 < t2; n2++)
          r2[n2 - 1] = arguments[n2];
        var s2 = rn[e2], a2 = r2.length;
        if (a2 > s2.length)
          throw new Error(e2 + ": Too many arguments passed. Received " + a2 + " but can receive no more than " + s2.length);
        var i2 = { type: e2 }, o2 = 0;
        s2.forEach(function(t3) {
          var n3, s3 = tn[e2][t3];
          o2 < a2 && (n3 = r2[o2]), n3 === void 0 && (n3 = Array.isArray(s3.default) ? [] : s3.default), i2[t3] = n3, o2++;
        });
        for (var u2 = 0, l2 = Object.keys(i2); u2 < l2.length; u2++) {
          var c2 = l2[u2];
          zr(i2, c2, i2[c2]);
        }
        return i2;
      }
      function ts(e2) {
        return es.apply(void 0, ["ArrayExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function rs(e2, t2, r2) {
        return es.apply(void 0, ["AssignmentExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function ns(e2, t2, r2) {
        return es.apply(void 0, ["BinaryExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function ss(e2) {
        return es.apply(void 0, ["InterpreterDirective"].concat(Array.prototype.slice.call(arguments)));
      }
      function as(e2) {
        return es.apply(void 0, ["Directive"].concat(Array.prototype.slice.call(arguments)));
      }
      function is(e2) {
        return es.apply(void 0, ["DirectiveLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function os(e2, t2) {
        return es.apply(void 0, ["BlockStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function us(e2) {
        return es.apply(void 0, ["BreakStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function ls(e2, t2) {
        return es.apply(void 0, ["CallExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function cs(e2, t2) {
        return es.apply(void 0, ["CatchClause"].concat(Array.prototype.slice.call(arguments)));
      }
      function ps(e2, t2, r2) {
        return es.apply(void 0, ["ConditionalExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function ds(e2) {
        return es.apply(void 0, ["ContinueStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function fs2() {
        return es.apply(void 0, ["DebuggerStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function hs(e2, t2) {
        return es.apply(void 0, ["DoWhileStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function ms() {
        return es.apply(void 0, ["EmptyStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function ys(e2) {
        return es.apply(void 0, ["ExpressionStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function gs(e2, t2, r2) {
        return es.apply(void 0, ["File"].concat(Array.prototype.slice.call(arguments)));
      }
      function vs(e2, t2, r2) {
        return es.apply(void 0, ["ForInStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function bs(e2, t2, r2, n2) {
        return es.apply(void 0, ["ForStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Es(e2, t2, r2, n2, s2) {
        return es.apply(void 0, ["FunctionDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function xs(e2, t2, r2, n2, s2) {
        return es.apply(void 0, ["FunctionExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ds(e2) {
        return es.apply(void 0, ["Identifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function As(e2, t2, r2) {
        return es.apply(void 0, ["IfStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function ws(e2, t2) {
        return es.apply(void 0, ["LabeledStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Cs(e2) {
        return es.apply(void 0, ["StringLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ss(e2) {
        return es.apply(void 0, ["NumericLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ts() {
        return es.apply(void 0, ["NullLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function js(e2) {
        return es.apply(void 0, ["BooleanLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ps(e2, t2) {
        return es.apply(void 0, ["RegExpLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function Is(e2, t2, r2) {
        return es.apply(void 0, ["LogicalExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Fs2(e2, t2, r2, n2) {
        return es.apply(void 0, ["MemberExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function ks(e2, t2) {
        return es.apply(void 0, ["NewExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Os2(e2, t2, r2, n2) {
        return es.apply(void 0, ["Program"].concat(Array.prototype.slice.call(arguments)));
      }
      function Rs(e2) {
        return es.apply(void 0, ["ObjectExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ns(e2, t2, r2, n2, s2, a2, i2) {
        return es.apply(void 0, ["ObjectMethod"].concat(Array.prototype.slice.call(arguments)));
      }
      function Bs(e2, t2, r2, n2, s2) {
        return es.apply(void 0, ["ObjectProperty"].concat(Array.prototype.slice.call(arguments)));
      }
      function _s(e2) {
        return es.apply(void 0, ["RestElement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ls(e2) {
        return es.apply(void 0, ["ReturnStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ms(e2) {
        return es.apply(void 0, ["SequenceExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Us(e2) {
        return es.apply(void 0, ["ParenthesizedExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Gs(e2, t2) {
        return es.apply(void 0, ["SwitchCase"].concat(Array.prototype.slice.call(arguments)));
      }
      function Vs(e2, t2) {
        return es.apply(void 0, ["SwitchStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ws() {
        return es.apply(void 0, ["ThisExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Hs(e2) {
        return es.apply(void 0, ["ThrowStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Xs(e2, t2, r2) {
        return es.apply(void 0, ["TryStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function qs(e2, t2, r2) {
        return es.apply(void 0, ["UnaryExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function $s(e2, t2, r2) {
        return es.apply(void 0, ["UpdateExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ks(e2, t2) {
        return es.apply(void 0, ["VariableDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function zs(e2, t2) {
        return es.apply(void 0, ["VariableDeclarator"].concat(Array.prototype.slice.call(arguments)));
      }
      function Js(e2, t2) {
        return es.apply(void 0, ["WhileStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ys(e2, t2) {
        return es.apply(void 0, ["WithStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Qs(e2, t2) {
        return es.apply(void 0, ["AssignmentPattern"].concat(Array.prototype.slice.call(arguments)));
      }
      function Zs(e2) {
        return es.apply(void 0, ["ArrayPattern"].concat(Array.prototype.slice.call(arguments)));
      }
      function ea(e2, t2, r2) {
        return es.apply(void 0, ["ArrowFunctionExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function ta(e2) {
        return es.apply(void 0, ["ClassBody"].concat(Array.prototype.slice.call(arguments)));
      }
      function ra(e2, t2, r2, n2) {
        return es.apply(void 0, ["ClassExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function na(e2, t2, r2, n2) {
        return es.apply(void 0, ["ClassDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function sa(e2) {
        return es.apply(void 0, ["ExportAllDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function aa(e2) {
        return es.apply(void 0, ["ExportDefaultDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function ia(e2, t2, r2) {
        return es.apply(void 0, ["ExportNamedDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function oa(e2, t2) {
        return es.apply(void 0, ["ExportSpecifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function ua(e2, t2, r2, n2) {
        return es.apply(void 0, ["ForOfStatement"].concat(Array.prototype.slice.call(arguments)));
      }
      function la(e2, t2) {
        return es.apply(void 0, ["ImportDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function ca(e2) {
        return es.apply(void 0, ["ImportDefaultSpecifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function pa(e2) {
        return es.apply(void 0, ["ImportNamespaceSpecifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function da(e2, t2) {
        return es.apply(void 0, ["ImportSpecifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function fa(e2, t2) {
        return es.apply(void 0, ["MetaProperty"].concat(Array.prototype.slice.call(arguments)));
      }
      function ha(e2, t2, r2, n2, s2, a2, i2, o2) {
        return es.apply(void 0, ["ClassMethod"].concat(Array.prototype.slice.call(arguments)));
      }
      function ma(e2) {
        return es.apply(void 0, ["ObjectPattern"].concat(Array.prototype.slice.call(arguments)));
      }
      function ya(e2) {
        return es.apply(void 0, ["SpreadElement"].concat(Array.prototype.slice.call(arguments)));
      }
      function ga() {
        return es.apply(void 0, ["Super"].concat(Array.prototype.slice.call(arguments)));
      }
      function va(e2, t2) {
        return es.apply(void 0, ["TaggedTemplateExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function ba(e2, t2) {
        return es.apply(void 0, ["TemplateElement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ea(e2, t2) {
        return es.apply(void 0, ["TemplateLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function xa(e2, t2) {
        return es.apply(void 0, ["YieldExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Da(e2) {
        return es.apply(void 0, ["AwaitExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Aa() {
        return es.apply(void 0, ["Import"].concat(Array.prototype.slice.call(arguments)));
      }
      function wa(e2) {
        return es.apply(void 0, ["BigIntLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ca(e2) {
        return es.apply(void 0, ["ExportNamespaceSpecifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function Sa(e2, t2, r2, n2) {
        return es.apply(void 0, ["OptionalMemberExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ta(e2, t2, r2) {
        return es.apply(void 0, ["OptionalCallExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function ja() {
        return es.apply(void 0, ["AnyTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function Pa(e2) {
        return es.apply(void 0, ["ArrayTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ia() {
        return es.apply(void 0, ["BooleanTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function Fa(e2) {
        return es.apply(void 0, ["BooleanLiteralTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function ka() {
        return es.apply(void 0, ["NullLiteralTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function Oa(e2, t2) {
        return es.apply(void 0, ["ClassImplements"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ra(e2, t2, r2, n2) {
        return es.apply(void 0, ["DeclareClass"].concat(Array.prototype.slice.call(arguments)));
      }
      function Na(e2) {
        return es.apply(void 0, ["DeclareFunction"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ba(e2, t2, r2, n2) {
        return es.apply(void 0, ["DeclareInterface"].concat(Array.prototype.slice.call(arguments)));
      }
      function _a(e2, t2, r2) {
        return es.apply(void 0, ["DeclareModule"].concat(Array.prototype.slice.call(arguments)));
      }
      function La(e2) {
        return es.apply(void 0, ["DeclareModuleExports"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ma(e2, t2, r2) {
        return es.apply(void 0, ["DeclareTypeAlias"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ua(e2, t2, r2) {
        return es.apply(void 0, ["DeclareOpaqueType"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ga(e2) {
        return es.apply(void 0, ["DeclareVariable"].concat(Array.prototype.slice.call(arguments)));
      }
      function Va(e2, t2, r2) {
        return es.apply(void 0, ["DeclareExportDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function Wa(e2) {
        return es.apply(void 0, ["DeclareExportAllDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ha(e2) {
        return es.apply(void 0, ["DeclaredPredicate"].concat(Array.prototype.slice.call(arguments)));
      }
      function Xa() {
        return es.apply(void 0, ["ExistsTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function qa(e2, t2, r2, n2) {
        return es.apply(void 0, ["FunctionTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function $a(e2, t2) {
        return es.apply(void 0, ["FunctionTypeParam"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ka(e2, t2) {
        return es.apply(void 0, ["GenericTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function za() {
        return es.apply(void 0, ["InferredPredicate"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ja(e2, t2) {
        return es.apply(void 0, ["InterfaceExtends"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ya(e2, t2, r2, n2) {
        return es.apply(void 0, ["InterfaceDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function Qa(e2, t2) {
        return es.apply(void 0, ["InterfaceTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function Za(e2) {
        return es.apply(void 0, ["IntersectionTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function ei() {
        return es.apply(void 0, ["MixedTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function ti() {
        return es.apply(void 0, ["EmptyTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function ri(e2) {
        return es.apply(void 0, ["NullableTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function ni(e2) {
        return es.apply(void 0, ["NumberLiteralTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function si() {
        return es.apply(void 0, ["NumberTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function ai(e2, t2, r2, n2, s2) {
        return es.apply(void 0, ["ObjectTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function ii(e2, t2, r2, n2, s2) {
        return es.apply(void 0, ["ObjectTypeInternalSlot"].concat(Array.prototype.slice.call(arguments)));
      }
      function oi(e2) {
        return es.apply(void 0, ["ObjectTypeCallProperty"].concat(Array.prototype.slice.call(arguments)));
      }
      function ui(e2, t2, r2, n2) {
        return es.apply(void 0, ["ObjectTypeIndexer"].concat(Array.prototype.slice.call(arguments)));
      }
      function li(e2, t2, r2) {
        return es.apply(void 0, ["ObjectTypeProperty"].concat(Array.prototype.slice.call(arguments)));
      }
      function ci(e2) {
        return es.apply(void 0, ["ObjectTypeSpreadProperty"].concat(Array.prototype.slice.call(arguments)));
      }
      function pi(e2, t2, r2, n2) {
        return es.apply(void 0, ["OpaqueType"].concat(Array.prototype.slice.call(arguments)));
      }
      function di(e2, t2) {
        return es.apply(void 0, ["QualifiedTypeIdentifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function fi(e2) {
        return es.apply(void 0, ["StringLiteralTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function hi() {
        return es.apply(void 0, ["StringTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function mi() {
        return es.apply(void 0, ["SymbolTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function yi() {
        return es.apply(void 0, ["ThisTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function gi(e2) {
        return es.apply(void 0, ["TupleTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function vi(e2) {
        return es.apply(void 0, ["TypeofTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function bi(e2, t2, r2) {
        return es.apply(void 0, ["TypeAlias"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ei(e2) {
        return es.apply(void 0, ["TypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function xi(e2, t2) {
        return es.apply(void 0, ["TypeCastExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Di(e2, t2, r2) {
        return es.apply(void 0, ["TypeParameter"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ai(e2) {
        return es.apply(void 0, ["TypeParameterDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function wi(e2) {
        return es.apply(void 0, ["TypeParameterInstantiation"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ci(e2) {
        return es.apply(void 0, ["UnionTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function Si(e2) {
        return es.apply(void 0, ["Variance"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ti() {
        return es.apply(void 0, ["VoidTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function ji(e2, t2) {
        return es.apply(void 0, ["EnumDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function Pi(e2) {
        return es.apply(void 0, ["EnumBooleanBody"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ii(e2) {
        return es.apply(void 0, ["EnumNumberBody"].concat(Array.prototype.slice.call(arguments)));
      }
      function Fi(e2) {
        return es.apply(void 0, ["EnumStringBody"].concat(Array.prototype.slice.call(arguments)));
      }
      function ki(e2) {
        return es.apply(void 0, ["EnumSymbolBody"].concat(Array.prototype.slice.call(arguments)));
      }
      function Oi(e2) {
        return es.apply(void 0, ["EnumBooleanMember"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ri(e2, t2) {
        return es.apply(void 0, ["EnumNumberMember"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ni(e2, t2) {
        return es.apply(void 0, ["EnumStringMember"].concat(Array.prototype.slice.call(arguments)));
      }
      function Bi(e2) {
        return es.apply(void 0, ["EnumDefaultedMember"].concat(Array.prototype.slice.call(arguments)));
      }
      function _i(e2, t2) {
        return es.apply(void 0, ["IndexedAccessType"].concat(Array.prototype.slice.call(arguments)));
      }
      function Li(e2, t2) {
        return es.apply(void 0, ["OptionalIndexedAccessType"].concat(Array.prototype.slice.call(arguments)));
      }
      function Mi(e2, t2) {
        return es.apply(void 0, ["JSXAttribute"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ui(e2) {
        return es.apply(void 0, ["JSXClosingElement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Gi(e2, t2, r2, n2) {
        return es.apply(void 0, ["JSXElement"].concat(Array.prototype.slice.call(arguments)));
      }
      function Vi() {
        return es.apply(void 0, ["JSXEmptyExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Wi(e2) {
        return es.apply(void 0, ["JSXExpressionContainer"].concat(Array.prototype.slice.call(arguments)));
      }
      function Hi(e2) {
        return es.apply(void 0, ["JSXSpreadChild"].concat(Array.prototype.slice.call(arguments)));
      }
      function Xi(e2) {
        return es.apply(void 0, ["JSXIdentifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function qi(e2, t2) {
        return es.apply(void 0, ["JSXMemberExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function $i(e2, t2) {
        return es.apply(void 0, ["JSXNamespacedName"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ki(e2, t2, r2) {
        return es.apply(void 0, ["JSXOpeningElement"].concat(Array.prototype.slice.call(arguments)));
      }
      function zi(e2) {
        return es.apply(void 0, ["JSXSpreadAttribute"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ji(e2) {
        return es.apply(void 0, ["JSXText"].concat(Array.prototype.slice.call(arguments)));
      }
      function Yi(e2, t2, r2) {
        return es.apply(void 0, ["JSXFragment"].concat(Array.prototype.slice.call(arguments)));
      }
      function Qi() {
        return es.apply(void 0, ["JSXOpeningFragment"].concat(Array.prototype.slice.call(arguments)));
      }
      function Zi() {
        return es.apply(void 0, ["JSXClosingFragment"].concat(Array.prototype.slice.call(arguments)));
      }
      function eo() {
        return es.apply(void 0, ["Noop"].concat(Array.prototype.slice.call(arguments)));
      }
      function to(e2, t2) {
        return es.apply(void 0, ["Placeholder"].concat(Array.prototype.slice.call(arguments)));
      }
      function ro(e2) {
        return es.apply(void 0, ["V8IntrinsicIdentifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function no() {
        return es.apply(void 0, ["ArgumentPlaceholder"].concat(Array.prototype.slice.call(arguments)));
      }
      function so(e2, t2) {
        return es.apply(void 0, ["BindExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function ao(e2, t2, r2, n2, s2, a2) {
        return es.apply(void 0, ["ClassProperty"].concat(Array.prototype.slice.call(arguments)));
      }
      function io(e2) {
        return es.apply(void 0, ["PipelineTopicExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function oo(e2) {
        return es.apply(void 0, ["PipelineBareFunction"].concat(Array.prototype.slice.call(arguments)));
      }
      function uo() {
        return es.apply(void 0, ["PipelinePrimaryTopicReference"].concat(Array.prototype.slice.call(arguments)));
      }
      function lo(e2, t2, r2, n2) {
        return es.apply(void 0, ["ClassPrivateProperty"].concat(Array.prototype.slice.call(arguments)));
      }
      function co(e2, t2, r2, n2, s2) {
        return es.apply(void 0, ["ClassPrivateMethod"].concat(Array.prototype.slice.call(arguments)));
      }
      function po(e2, t2) {
        return es.apply(void 0, ["ImportAttribute"].concat(Array.prototype.slice.call(arguments)));
      }
      function fo(e2) {
        return es.apply(void 0, ["Decorator"].concat(Array.prototype.slice.call(arguments)));
      }
      function ho(e2, t2) {
        return es.apply(void 0, ["DoExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function mo(e2) {
        return es.apply(void 0, ["ExportDefaultSpecifier"].concat(Array.prototype.slice.call(arguments)));
      }
      function yo(e2) {
        return es.apply(void 0, ["PrivateName"].concat(Array.prototype.slice.call(arguments)));
      }
      function go(e2) {
        return es.apply(void 0, ["RecordExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function vo(e2) {
        return es.apply(void 0, ["TupleExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function bo(e2) {
        return es.apply(void 0, ["DecimalLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function Eo(e2) {
        return es.apply(void 0, ["StaticBlock"].concat(Array.prototype.slice.call(arguments)));
      }
      function xo(e2) {
        return es.apply(void 0, ["ModuleExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Do(e2) {
        return es.apply(void 0, ["TSParameterProperty"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ao(e2, t2, r2, n2) {
        return es.apply(void 0, ["TSDeclareFunction"].concat(Array.prototype.slice.call(arguments)));
      }
      function wo(e2, t2, r2, n2, s2) {
        return es.apply(void 0, ["TSDeclareMethod"].concat(Array.prototype.slice.call(arguments)));
      }
      function Co(e2, t2) {
        return es.apply(void 0, ["TSQualifiedName"].concat(Array.prototype.slice.call(arguments)));
      }
      function So(e2, t2, r2) {
        return es.apply(void 0, ["TSCallSignatureDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function To(e2, t2, r2) {
        return es.apply(void 0, ["TSConstructSignatureDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function jo(e2, t2, r2) {
        return es.apply(void 0, ["TSPropertySignature"].concat(Array.prototype.slice.call(arguments)));
      }
      function Po(e2, t2, r2, n2) {
        return es.apply(void 0, ["TSMethodSignature"].concat(Array.prototype.slice.call(arguments)));
      }
      function Io(e2, t2) {
        return es.apply(void 0, ["TSIndexSignature"].concat(Array.prototype.slice.call(arguments)));
      }
      function Fo() {
        return es.apply(void 0, ["TSAnyKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function ko() {
        return es.apply(void 0, ["TSBooleanKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Oo() {
        return es.apply(void 0, ["TSBigIntKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ro() {
        return es.apply(void 0, ["TSIntrinsicKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function No() {
        return es.apply(void 0, ["TSNeverKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Bo() {
        return es.apply(void 0, ["TSNullKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function _o() {
        return es.apply(void 0, ["TSNumberKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Lo() {
        return es.apply(void 0, ["TSObjectKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Mo() {
        return es.apply(void 0, ["TSStringKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Uo() {
        return es.apply(void 0, ["TSSymbolKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Go() {
        return es.apply(void 0, ["TSUndefinedKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Vo() {
        return es.apply(void 0, ["TSUnknownKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Wo() {
        return es.apply(void 0, ["TSVoidKeyword"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ho() {
        return es.apply(void 0, ["TSThisType"].concat(Array.prototype.slice.call(arguments)));
      }
      function Xo(e2, t2, r2) {
        return es.apply(void 0, ["TSFunctionType"].concat(Array.prototype.slice.call(arguments)));
      }
      function qo(e2, t2, r2) {
        return es.apply(void 0, ["TSConstructorType"].concat(Array.prototype.slice.call(arguments)));
      }
      function $o(e2, t2) {
        return es.apply(void 0, ["TSTypeReference"].concat(Array.prototype.slice.call(arguments)));
      }
      function Ko(e2, t2, r2) {
        return es.apply(void 0, ["TSTypePredicate"].concat(Array.prototype.slice.call(arguments)));
      }
      function zo(e2) {
        return es.apply(void 0, ["TSTypeQuery"].concat(Array.prototype.slice.call(arguments)));
      }
      function Jo(e2) {
        return es.apply(void 0, ["TSTypeLiteral"].concat(Array.prototype.slice.call(arguments)));
      }
      function Yo(e2) {
        return es.apply(void 0, ["TSArrayType"].concat(Array.prototype.slice.call(arguments)));
      }
      function Qo(e2) {
        return es.apply(void 0, ["TSTupleType"].concat(Array.prototype.slice.call(arguments)));
      }
      function Zo(e2) {
        return es.apply(void 0, ["TSOptionalType"].concat(Array.prototype.slice.call(arguments)));
      }
      function eu(e2) {
        return es.apply(void 0, ["TSRestType"].concat(Array.prototype.slice.call(arguments)));
      }
      function tu(e2, t2, r2) {
        return es.apply(void 0, ["TSNamedTupleMember"].concat(Array.prototype.slice.call(arguments)));
      }
      function ru(e2) {
        return es.apply(void 0, ["TSUnionType"].concat(Array.prototype.slice.call(arguments)));
      }
      function nu(e2) {
        return es.apply(void 0, ["TSIntersectionType"].concat(Array.prototype.slice.call(arguments)));
      }
      function su(e2, t2, r2, n2) {
        return es.apply(void 0, ["TSConditionalType"].concat(Array.prototype.slice.call(arguments)));
      }
      function au(e2) {
        return es.apply(void 0, ["TSInferType"].concat(Array.prototype.slice.call(arguments)));
      }
      function iu(e2) {
        return es.apply(void 0, ["TSParenthesizedType"].concat(Array.prototype.slice.call(arguments)));
      }
      function ou(e2) {
        return es.apply(void 0, ["TSTypeOperator"].concat(Array.prototype.slice.call(arguments)));
      }
      function uu(e2, t2) {
        return es.apply(void 0, ["TSIndexedAccessType"].concat(Array.prototype.slice.call(arguments)));
      }
      function lu(e2, t2, r2) {
        return es.apply(void 0, ["TSMappedType"].concat(Array.prototype.slice.call(arguments)));
      }
      function cu(e2) {
        return es.apply(void 0, ["TSLiteralType"].concat(Array.prototype.slice.call(arguments)));
      }
      function pu(e2, t2) {
        return es.apply(void 0, ["TSExpressionWithTypeArguments"].concat(Array.prototype.slice.call(arguments)));
      }
      function du(e2, t2, r2, n2) {
        return es.apply(void 0, ["TSInterfaceDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function fu(e2) {
        return es.apply(void 0, ["TSInterfaceBody"].concat(Array.prototype.slice.call(arguments)));
      }
      function hu(e2, t2, r2) {
        return es.apply(void 0, ["TSTypeAliasDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function mu(e2, t2) {
        return es.apply(void 0, ["TSAsExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function yu(e2, t2) {
        return es.apply(void 0, ["TSTypeAssertion"].concat(Array.prototype.slice.call(arguments)));
      }
      function gu(e2, t2) {
        return es.apply(void 0, ["TSEnumDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function vu(e2, t2) {
        return es.apply(void 0, ["TSEnumMember"].concat(Array.prototype.slice.call(arguments)));
      }
      function bu(e2, t2) {
        return es.apply(void 0, ["TSModuleDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function Eu(e2) {
        return es.apply(void 0, ["TSModuleBlock"].concat(Array.prototype.slice.call(arguments)));
      }
      function xu(e2, t2, r2) {
        return es.apply(void 0, ["TSImportType"].concat(Array.prototype.slice.call(arguments)));
      }
      function Du(e2, t2) {
        return es.apply(void 0, ["TSImportEqualsDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function Au(e2) {
        return es.apply(void 0, ["TSExternalModuleReference"].concat(Array.prototype.slice.call(arguments)));
      }
      function wu(e2) {
        return es.apply(void 0, ["TSNonNullExpression"].concat(Array.prototype.slice.call(arguments)));
      }
      function Cu(e2) {
        return es.apply(void 0, ["TSExportAssignment"].concat(Array.prototype.slice.call(arguments)));
      }
      function Su(e2) {
        return es.apply(void 0, ["TSNamespaceExportDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function Tu(e2) {
        return es.apply(void 0, ["TSTypeAnnotation"].concat(Array.prototype.slice.call(arguments)));
      }
      function ju(e2) {
        return es.apply(void 0, ["TSTypeParameterInstantiation"].concat(Array.prototype.slice.call(arguments)));
      }
      function Pu(e2) {
        return es.apply(void 0, ["TSTypeParameterDeclaration"].concat(Array.prototype.slice.call(arguments)));
      }
      function Iu(e2, t2, r2) {
        return es.apply(void 0, ["TSTypeParameter"].concat(Array.prototype.slice.call(arguments)));
      }
      function Fu() {
        console.trace("The node type NumberLiteral has been renamed to NumericLiteral");
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return es.apply(void 0, ["NumberLiteral"].concat(t2));
      }
      function ku() {
        console.trace("The node type RegexLiteral has been renamed to RegExpLiteral");
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return es.apply(void 0, ["RegexLiteral"].concat(t2));
      }
      function Ou() {
        console.trace("The node type RestProperty has been renamed to RestElement");
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return es.apply(void 0, ["RestProperty"].concat(t2));
      }
      function Ru() {
        console.trace("The node type SpreadProperty has been renamed to SpreadElement");
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return es.apply(void 0, ["SpreadProperty"].concat(t2));
      }
      function Nu(e2, t2) {
        for (var r2 = e2.value.split(/\r\n|\n|\r/), n2 = 0, s2 = 0; s2 < r2.length; s2++)
          r2[s2].match(/[^ \t]/) && (n2 = s2);
        for (var a2 = "", i2 = 0; i2 < r2.length; i2++) {
          var o2 = r2[i2], u2 = i2 === 0, l2 = i2 === r2.length - 1, c2 = i2 === n2, p2 = o2.replace(/\t/g, " ");
          u2 || (p2 = p2.replace(/^[ ]+/, "")), l2 || (p2 = p2.replace(/[ ]+$/, "")), p2 && (c2 || (p2 += " "), a2 += p2);
        }
        a2 && t2.push(Cs(a2));
      }
      function Bu(e2) {
        return !(!e2 || !Qr[e2.type]);
      }
      function _u(e2, t2, r2) {
        if (!ur(e2, t2, r2))
          throw new Error('Expected type "' + e2 + '" with option ' + JSON.stringify(r2) + ', but instead got "' + t2.type + '".');
      }
      function Lu(e2, t2) {
        _u("ExpressionStatement", e2, t2);
      }
      function Mu(e2, t2) {
        _u("Identifier", e2, t2);
      }
      function Uu(e2, t2) {
        _u("RestElement", e2, t2);
      }
      function Gu(e2, t2) {
        _u("Expression", e2, t2);
      }
      function Vu(e2) {
        if (e2 === "string")
          return hi();
        if (e2 === "number")
          return si();
        if (e2 === "undefined")
          return Ti();
        if (e2 === "boolean")
          return Ia();
        if (e2 === "function")
          return Ka(Ds("Function"));
        if (e2 === "object")
          return Ka(Ds("Object"));
        if (e2 === "symbol")
          return Ka(Ds("Symbol"));
        if (e2 === "bigint")
          return ja();
        throw new Error("Invalid typeof value: " + e2);
      }
      function Wu(e2) {
        return F(e2) ? e2.name : e2.id.name + "." + Wu(e2.qualification);
      }
      function Hu(e2) {
        for (var t2 = {}, r2 = {}, n2 = [], s2 = [], a2 = 0; a2 < e2.length; a2++) {
          var i2 = e2[a2];
          if (i2 && !(s2.indexOf(i2) >= 0)) {
            if (Ie(i2))
              return [i2];
            if (Mt(i2))
              r2[i2.type] = i2;
            else if (We(i2))
              n2.indexOf(i2.types) < 0 && (e2 = e2.concat(i2.types), n2.push(i2.types));
            else if (Re(i2)) {
              var o2 = Wu(i2.id);
              if (t2[o2]) {
                var u2 = t2[o2];
                u2.typeParameters ? i2.typeParameters && (u2.typeParameters.params = Hu(u2.typeParameters.params.concat(i2.typeParameters.params))) : u2 = i2.typeParameters;
              } else
                t2[o2] = i2;
            } else
              s2.push(i2);
          }
        }
        for (var l2 = 0, c2 = Object.keys(r2); l2 < c2.length; l2++) {
          var p2 = c2[l2];
          s2.push(r2[p2]);
        }
        for (var d2 = 0, f2 = Object.keys(t2); d2 < f2.length; d2++) {
          var h2 = f2[d2];
          s2.push(t2[h2]);
        }
        return s2;
      }
      function Xu(e2) {
        var t2 = Hu(e2);
        return t2.length === 1 ? t2[0] : Ci(t2);
      }
      function qu(e2) {
        var t2 = function(e3) {
          for (var t3 = {}, r2 = {}, n2 = [], s2 = [], a2 = 0; a2 < e3.length; a2++) {
            var i2 = e3[a2];
            if (i2 && !(s2.indexOf(i2) >= 0)) {
              if (ut(i2))
                return [i2];
              Ut(i2) ? r2[i2.type] = i2 : dt(i2) ? n2.indexOf(i2.types) < 0 && (e3 = e3.concat(i2.types), n2.push(i2.types)) : s2.push(i2);
            }
          }
          for (var o2 = 0, u2 = Object.keys(r2); o2 < u2.length; o2++) {
            var l2 = u2[o2];
            s2.push(r2[l2]);
          }
          for (var c2 = 0, p2 = Object.keys(t3); c2 < p2.length; c2++) {
            var d2 = p2[c2];
            s2.push(t3[d2]);
          }
          return s2;
        }(e2.map(function(e3) {
          return e3.typeAnnotation;
        }));
        return t2.length === 1 ? t2[0] : ru(t2);
      }
      var $u = Function.call.bind(Object.prototype.hasOwnProperty);
      function Ku(e2, t2, r2) {
        return e2 && typeof e2.type == "string" ? Ju(e2, t2, r2) : e2;
      }
      function zu(e2, t2, r2) {
        return Array.isArray(e2) ? e2.map(function(e3) {
          return Ku(e3, t2, r2);
        }) : Ku(e2, t2, r2);
      }
      function Ju(e2, t2, r2) {
        if (t2 === void 0 && (t2 = true), r2 === void 0 && (r2 = false), !e2)
          return e2;
        var n2 = e2.type, s2 = { type: e2.type };
        if (F(e2))
          s2.name = e2.name, $u(e2, "optional") && typeof e2.optional == "boolean" && (s2.optional = e2.optional), $u(e2, "typeAnnotation") && (s2.typeAnnotation = t2 ? zu(e2.typeAnnotation, true, r2) : e2.typeAnnotation);
        else {
          if (!$u(tn, n2))
            throw new Error('Unknown node type: "' + n2 + '"');
          for (var a2 = 0, i2 = Object.keys(tn[n2]); a2 < i2.length; a2++) {
            var o2 = i2[a2];
            $u(e2, o2) && (s2[o2] = t2 ? S(e2) && o2 === "comments" ? Yu(e2.comments, t2, r2) : zu(e2[o2], true, r2) : e2[o2]);
          }
        }
        return $u(e2, "loc") && (s2.loc = r2 ? null : e2.loc), $u(e2, "leadingComments") && (s2.leadingComments = Yu(e2.leadingComments, t2, r2)), $u(e2, "innerComments") && (s2.innerComments = Yu(e2.innerComments, t2, r2)), $u(e2, "trailingComments") && (s2.trailingComments = Yu(e2.trailingComments, t2, r2)), $u(e2, "extra") && (s2.extra = Object.assign({}, e2.extra)), s2;
      }
      function Yu(e2, t2, r2) {
        return e2 && t2 ? e2.map(function(e3) {
          var t3 = e3.type, n2 = e3.value, s2 = e3.loc;
          return r2 ? { type: t3, value: n2, loc: null } : { type: t3, value: n2, loc: s2 };
        }) : e2;
      }
      function Qu(e2) {
        return Ju(e2, false);
      }
      function Zu(e2, t2, r2) {
        if (!r2 || !e2)
          return e2;
        var n2 = t2 + "Comments";
        return e2[n2] ? e2[n2] = t2 === "leading" ? r2.concat(e2[n2]) : e2[n2].concat(r2) : e2[n2] = r2, e2;
      }
      function el(e2, t2, r2, n2) {
        return Zu(e2, t2, [{ type: n2 ? "CommentLine" : "CommentBlock", value: r2 }]);
      }
      function tl(e2, t2, r2) {
        t2 && r2 && (t2[e2] = Array.from(new Set([].concat(t2[e2], r2[e2]).filter(Boolean))));
      }
      function rl(e2, t2) {
        tl("innerComments", e2, t2);
      }
      function nl(e2, t2) {
        tl("leadingComments", e2, t2);
      }
      function sl(e2, t2) {
        tl("trailingComments", e2, t2);
      }
      function al(e2, t2) {
        return sl(e2, t2), nl(e2, t2), rl(e2, t2), e2;
      }
      function il(e2) {
        return kr.forEach(function(t2) {
          e2[t2] = null;
        }), e2;
      }
      var ol = en.Expression, ul = en.Binary, ll = en.Scopable, cl = en.BlockParent, pl = en.Block, dl = en.Statement, fl = en.Terminatorless, hl = en.CompletionStatement, ml = en.Conditional, yl = en.Loop, gl = en.While, vl = en.ExpressionWrapper, bl = en.For, El = en.ForXStatement, xl = en.Function, Dl = en.FunctionParent, Al = en.Pureish, wl = en.Declaration, Cl = en.PatternLike, Sl = en.LVal, Tl = en.TSEntityName, jl = en.Literal, Pl = en.Immutable, Il = en.UserWhitespacable, Fl = en.Method, kl = en.ObjectMember, Ol = en.Property, Rl = en.UnaryLike, Nl = en.Pattern, Bl = en.Class, _l = en.ModuleDeclaration, Ll = en.ExportDeclaration, Ml = en.ModuleSpecifier, Ul = en.Flow, Gl = en.FlowType, Vl = en.FlowBaseAnnotation, Wl = en.FlowDeclaration, Hl = en.FlowPredicate, Xl = en.EnumBody, ql = en.EnumMember, $l = en.JSX, Kl = en.Private, zl = en.TSTypeElement, Jl = en.TSType, Yl = en.TSBaseType;
      function Ql(e2, t2) {
        if (v(e2))
          return e2;
        var r2 = [];
        return w(e2) ? r2 = [] : (xt(e2) || (e2 = St(t2) ? Ls(e2) : ys(e2)), r2 = [e2]), os(r2);
      }
      function Zl(e2, t2) {
        return t2 === void 0 && (t2 = "body"), e2[t2] = Ql(e2[t2], e2);
      }
      function ec(e2) {
        for (var t2, r2 = "", n2 = f(e2 += ""); !(t2 = n2()).done; ) {
          var s2 = t2.value;
          r2 += gr(s2.codePointAt(0)) ? s2 : "-";
        }
        return Pr(r2 = (r2 = r2.replace(/^[-0-9]+/, "")).replace(/[-\s]+(.)?/g, function(e3, t3) {
          return t3 ? t3.toUpperCase() : "";
        })) || (r2 = "_" + r2), r2 || "_";
      }
      function tc(e2) {
        return (e2 = ec(e2)) !== "eval" && e2 !== "arguments" || (e2 = "_" + e2), e2;
      }
      function rc(e2, t2) {
        return t2 === void 0 && (t2 = e2.key || e2.property), !e2.computed && F(t2) && (t2 = Cs(t2.name)), t2;
      }
      function nc(e2) {
        if (C(e2) && (e2 = e2.expression), vt(e2))
          return e2;
        if (Rt(e2) ? e2.type = "ClassExpression" : St(e2) && (e2.type = "FunctionExpression"), !vt(e2))
          throw new Error("cannot turn " + e2.type + " to an expression");
        return e2;
      }
      function sc(e2, t2, r2) {
        if (e2) {
          var n2 = Qr[e2.type];
          if (n2) {
            t2(e2, r2 = r2 || {});
            for (var s2, a2 = f(n2); !(s2 = a2()).done; ) {
              var i2 = e2[s2.value];
              if (Array.isArray(i2))
                for (var o2, u2 = f(i2); !(o2 = u2()).done; ) {
                  sc(o2.value, t2, r2);
                }
              else
                sc(i2, t2, r2);
            }
          }
        }
      }
      var ac = ["tokens", "start", "end", "loc", "raw", "rawValue"], ic = kr.concat(["comments"]).concat(ac);
      function oc(e2, t2) {
        t2 === void 0 && (t2 = {});
        for (var r2, n2 = f(t2.preserveComments ? ac : ic); !(r2 = n2()).done; ) {
          var s2 = r2.value;
          e2[s2] != null && (e2[s2] = void 0);
        }
        for (var a2 = 0, i2 = Object.keys(e2); a2 < i2.length; a2++) {
          var o2 = i2[a2];
          o2[0] === "_" && e2[o2] != null && (e2[o2] = void 0);
        }
        for (var u2, l2 = f(Object.getOwnPropertySymbols(e2)); !(u2 = l2()).done; ) {
          e2[u2.value] = null;
        }
      }
      function uc(e2, t2) {
        return sc(e2, oc, t2), e2;
      }
      function lc(e2, t2) {
        var r2;
        return t2 === void 0 && (t2 = e2.key), e2.kind === "method" ? lc.increment() + "" : (r2 = F(t2) ? t2.name : R(t2) ? JSON.stringify(t2.value) : JSON.stringify(uc(Ju(t2))), e2.computed && (r2 = "[" + r2 + "]"), e2.static && (r2 = "static:" + r2), r2);
      }
      function cc(e2, t2, r2) {
        for (var n2 = [].concat(e2), s2 = Object.create(null); n2.length; ) {
          var a2 = n2.shift();
          if (a2) {
            var i2 = cc.keys[a2.type];
            if (F(a2))
              t2 ? (s2[a2.name] = s2[a2.name] || []).push(a2) : s2[a2.name] = a2;
            else if (!Bt(a2) || ue(a2)) {
              if (r2) {
                if (P(a2)) {
                  n2.push(a2.id);
                  continue;
                }
                if (I(a2))
                  continue;
              }
              if (i2)
                for (var o2 = 0; o2 < i2.length; o2++) {
                  var u2 = i2[o2];
                  a2[u2] && (n2 = n2.concat(a2[u2]));
                }
            } else
              jt(a2.declaration) && n2.push(a2.declaration);
          }
        }
        return s2;
      }
      function pc(e2, t2, r2) {
        for (var n2, s2 = [], a2 = true, i2 = f(e2); !(n2 = i2()).done; ) {
          var o2 = n2.value;
          if (w(o2) || (a2 = false), vt(o2))
            s2.push(o2);
          else if (C(o2))
            s2.push(o2.expression);
          else if (Z(o2)) {
            if (o2.kind !== "var")
              return;
            for (var u2, l2 = f(o2.declarations); !(u2 = l2()).done; ) {
              for (var c2 = u2.value, p2 = cc(c2), d2 = 0, h2 = Object.keys(p2); d2 < h2.length; d2++) {
                var m2 = h2[d2];
                r2.push({ kind: o2.kind, id: Ju(p2[m2]) });
              }
              c2.init && s2.push(rs("=", c2.id, c2.init));
            }
            a2 = true;
          } else if (k(o2)) {
            var y2 = o2.consequent ? pc([o2.consequent], t2, r2) : t2.buildUndefinedNode(), g2 = o2.alternate ? pc([o2.alternate], t2, r2) : t2.buildUndefinedNode();
            if (!y2 || !g2)
              return;
            s2.push(ps(o2.test, y2, g2));
          } else if (v(o2)) {
            var b2 = pc(o2.body, t2, r2);
            if (!b2)
              return;
            s2.push(b2);
          } else {
            if (!w(o2))
              return;
            e2.indexOf(o2) === 0 && (a2 = true);
          }
        }
        return a2 && s2.push(t2.buildUndefinedNode()), s2.length === 1 ? s2[0] : Ms(s2);
      }
      function dc(e2, t2) {
        if (e2 != null && e2.length) {
          var r2 = [], n2 = pc(e2, t2, r2);
          if (n2) {
            for (var s2 = 0, a2 = r2; s2 < a2.length; s2++) {
              var i2 = a2[s2];
              t2.push(i2);
            }
            return n2;
          }
        }
      }
      function fc(e2, t2) {
        if (xt(e2))
          return e2;
        var r2, n2 = false;
        if (Rt(e2))
          n2 = true, r2 = "ClassDeclaration";
        else if (St(e2))
          n2 = true, r2 = "FunctionDeclaration";
        else if (y(e2))
          return ys(e2);
        if (n2 && !e2.id && (r2 = false), !r2) {
          if (t2)
            return false;
          throw new Error("cannot turn " + e2.type + " to a statement");
        }
        return e2.type = r2, e2;
      }
      lc.uid = 0, lc.increment = function() {
        return lc.uid >= Number.MAX_SAFE_INTEGER ? lc.uid = 0 : lc.uid++;
      }, cc.keys = { DeclareClass: ["id"], DeclareFunction: ["id"], DeclareModule: ["id"], DeclareVariable: ["id"], DeclareInterface: ["id"], DeclareTypeAlias: ["id"], DeclareOpaqueType: ["id"], InterfaceDeclaration: ["id"], TypeAlias: ["id"], OpaqueType: ["id"], CatchClause: ["param"], LabeledStatement: ["label"], UnaryExpression: ["argument"], AssignmentExpression: ["left"], ImportSpecifier: ["local"], ImportNamespaceSpecifier: ["local"], ImportDefaultSpecifier: ["local"], ImportDeclaration: ["specifiers"], ExportSpecifier: ["exported"], ExportNamespaceSpecifier: ["exported"], ExportDefaultSpecifier: ["exported"], FunctionDeclaration: ["id", "params"], FunctionExpression: ["id", "params"], ArrowFunctionExpression: ["params"], ObjectMethod: ["params"], ClassMethod: ["params"], ForInStatement: ["left"], ForOfStatement: ["left"], ClassDeclaration: ["id"], ClassExpression: ["id"], RestElement: ["argument"], UpdateExpression: ["argument"], ObjectProperty: ["value"], AssignmentPattern: ["left"], ArrayPattern: ["elements"], ObjectPattern: ["properties"], VariableDeclaration: ["declarations"], VariableDeclarator: ["id"] };
      var hc = Function.call.bind(Object.prototype.toString);
      function mc(e2) {
        if (e2 === void 0)
          return Ds("undefined");
        if (e2 === true || e2 === false)
          return js(e2);
        if (e2 === null)
          return Ts();
        if (typeof e2 == "string")
          return Cs(e2);
        if (typeof e2 == "number") {
          var t2;
          if (Number.isFinite(e2))
            t2 = Ss(Math.abs(e2));
          else
            t2 = ns("/", Number.isNaN(e2) ? Ss(0) : Ss(1), Ss(0));
          return (e2 < 0 || Object.is(e2, -0)) && (t2 = qs("-", t2)), t2;
        }
        if (function(e3) {
          return hc(e3) === "[object RegExp]";
        }(e2))
          return Ps(e2.source, e2.toString().match(/\/([a-z]+|)$/)[1]);
        if (Array.isArray(e2))
          return ts(e2.map(mc));
        if (function(e3) {
          if (typeof e3 != "object" || e3 === null || Object.prototype.toString.call(e3) !== "[object Object]")
            return false;
          var t3 = Object.getPrototypeOf(e3);
          return t3 === null || Object.getPrototypeOf(t3) === null;
        }(e2)) {
          for (var r2 = [], n2 = 0, s2 = Object.keys(e2); n2 < s2.length; n2++) {
            var a2 = s2[n2], i2 = void 0;
            i2 = Pr(a2) ? Ds(a2) : Cs(a2), r2.push(Bs(i2, mc(e2[a2])));
          }
          return Rs(r2);
        }
        throw new Error("don't know how to turn this value into a node");
      }
      function yc(e2, t2) {
        if (!e2 || !t2)
          return e2;
        for (var r2, n2 = f(qr.optional); !(r2 = n2()).done; ) {
          var s2 = r2.value;
          e2[s2] == null && (e2[s2] = t2[s2]);
        }
        for (var a2 = 0, i2 = Object.keys(t2); a2 < i2.length; a2++) {
          var o2 = i2[a2];
          o2[0] === "_" && o2 !== "__clone" && (e2[o2] = t2[o2]);
        }
        for (var u2, l2 = f(qr.force); !(u2 = l2()).done; ) {
          var c2 = u2.value;
          e2[c2] = t2[c2];
        }
        return al(e2, t2), e2;
      }
      function gc(e2, t2) {
        return cc(e2, t2, true);
      }
      function vc(e2, t2, r2) {
        typeof t2 == "function" && (t2 = { enter: t2 });
        var n2 = t2;
        bc(e2, n2.enter, n2.exit, r2, []);
      }
      function bc(e2, t2, r2, n2, s2) {
        var a2 = Qr[e2.type];
        if (a2) {
          t2 && t2(e2, s2, n2);
          for (var i2, o2 = f(a2); !(i2 = o2()).done; ) {
            var u2 = i2.value, l2 = e2[u2];
            if (Array.isArray(l2))
              for (var c2 = 0; c2 < l2.length; c2++) {
                var p2 = l2[c2];
                p2 && (s2.push({ node: e2, key: u2, index: c2 }), bc(p2, t2, r2, n2, s2), s2.pop());
              }
            else
              l2 && (s2.push({ node: e2, key: u2 }), bc(l2, t2, r2, n2, s2), s2.pop());
          }
          r2 && r2(e2, s2, n2);
        }
      }
      function Ec(e2, t2, r2) {
        if (r2 && e2.type === "Identifier" && t2.type === "ObjectProperty" && r2.type === "ObjectExpression")
          return false;
        var n2 = cc.keys[t2.type];
        if (n2)
          for (var s2 = 0; s2 < n2.length; s2++) {
            var a2 = t2[n2[s2]];
            if (Array.isArray(a2)) {
              if (a2.indexOf(e2) >= 0)
                return true;
            } else if (a2 === e2)
              return true;
          }
        return false;
      }
      function xc(e2) {
        return Z(e2) && (e2.kind !== "var" || e2[$r]);
      }
      function Dc(e2) {
        return P(e2) || oe(e2) || xc(e2);
      }
      function Ac(e2, t2, r2) {
        switch (t2.type) {
          case "MemberExpression":
          case "JSXMemberExpression":
          case "OptionalMemberExpression":
            return t2.property === e2 ? !!t2.computed : t2.object === e2;
          case "VariableDeclarator":
            return t2.init === e2;
          case "ArrowFunctionExpression":
            return t2.body === e2;
          case "PrivateName":
            return false;
          case "ClassMethod":
          case "ClassPrivateMethod":
          case "ObjectMethod":
            if (t2.params.includes(e2))
              return false;
          case "ObjectProperty":
          case "ClassProperty":
          case "ClassPrivateProperty":
            return t2.key === e2 ? !!t2.computed : t2.value !== e2 || (!r2 || r2.type !== "ObjectPattern");
          case "ClassDeclaration":
          case "ClassExpression":
            return t2.superClass === e2;
          case "AssignmentExpression":
          case "AssignmentPattern":
            return t2.right === e2;
          case "LabeledStatement":
          case "CatchClause":
          case "RestElement":
            return false;
          case "BreakStatement":
          case "ContinueStatement":
            return false;
          case "FunctionDeclaration":
          case "FunctionExpression":
            return false;
          case "ExportNamespaceSpecifier":
          case "ExportDefaultSpecifier":
            return false;
          case "ExportSpecifier":
            return (r2 == null || !r2.source) && t2.local === e2;
          case "ImportDefaultSpecifier":
          case "ImportNamespaceSpecifier":
          case "ImportSpecifier":
          case "JSXAttribute":
            return false;
          case "ObjectPattern":
          case "ArrayPattern":
          case "MetaProperty":
            return false;
          case "ObjectTypeProperty":
            return t2.key !== e2;
          case "TSEnumMember":
            return t2.id !== e2;
          case "TSPropertySignature":
            return t2.key !== e2 || !!t2.computed;
        }
        return true;
      }
      function wc(e2, t2) {
        return (!v(e2) || !St(t2) && !x(t2)) && (!(!Ot(e2) || !St(t2) && !x(t2)) || Et(e2));
      }
      var Cc = new Set(["abstract", "boolean", "byte", "char", "double", "enum", "final", "float", "goto", "implements", "int", "interface", "long", "native", "package", "private", "protected", "public", "short", "static", "synchronized", "throws", "transient", "volatile"]);
      function Sc(e2) {
        return Pr(e2) && !Cc.has(e2);
      }
      function Tc(e2) {
        return Z(e2, { kind: "var" }) && !e2[$r];
      }
      var jc = { isReactComponent: Wt, isCompatTag: function(e2) {
        return !!e2 && /^[a-z]/.test(e2);
      }, buildChildren: function(e2) {
        for (var t2 = [], r2 = 0; r2 < e2.children.length; r2++) {
          var n2 = e2.children[r2];
          et(n2) ? Nu(n2, t2) : (ze(n2) && (n2 = n2.expression), Ke(n2) || t2.push(n2));
        }
        return t2;
      } }, Pc = Object.freeze({ __proto__: null, react: jc, assertNode: function(e2) {
        if (!Bu(e2)) {
          var t2, r2 = (t2 = e2 == null ? void 0 : e2.type) != null ? t2 : JSON.stringify(e2);
          throw new TypeError('Not a valid node of type "' + r2 + '"');
        }
      }, createTypeAnnotationBasedOnTypeof: Vu, createUnionTypeAnnotation: Xu, createFlowUnionType: Xu, createTSUnionType: qu, cloneNode: Ju, clone: Qu, cloneDeep: function(e2) {
        return Ju(e2);
      }, cloneDeepWithoutLoc: function(e2) {
        return Ju(e2, true, true);
      }, cloneWithoutLoc: function(e2) {
        return Ju(e2, false, true);
      }, addComment: el, addComments: Zu, inheritInnerComments: rl, inheritLeadingComments: nl, inheritsComments: al, inheritTrailingComments: sl, removeComments: il, ensureBlock: Zl, toBindingIdentifierName: tc, toBlock: Ql, toComputedKey: rc, toExpression: nc, toIdentifier: ec, toKeyAlias: lc, toSequenceExpression: dc, toStatement: fc, valueToNode: mc, appendToMemberExpression: function(e2, t2, r2) {
        return r2 === void 0 && (r2 = false), e2.object = Fs2(e2.object, e2.property, e2.computed), e2.property = t2, e2.computed = !!r2, e2;
      }, inherits: yc, prependToMemberExpression: function(e2, t2) {
        return e2.object = Fs2(t2, e2.object), e2;
      }, removeProperties: oc, removePropertiesDeep: uc, removeTypeDuplicates: Hu, getBindingIdentifiers: cc, getOuterBindingIdentifiers: gc, traverse: vc, traverseFast: sc, shallowEqual: h, is: ur, isBinding: Ec, isBlockScoped: Dc, isImmutable: function(e2) {
        return !!ir(e2.type, "Immutable") || !!F(e2) && e2.name === "undefined";
      }, isLet: xc, isNode: Bu, isNodesEquivalent: function e2(t2, r2) {
        if (typeof t2 != "object" || typeof r2 != "object" || t2 == null || r2 == null)
          return t2 === r2;
        if (t2.type !== r2.type)
          return false;
        for (var n2 = Object.keys(tn[t2.type] || t2.type), s2 = Qr[t2.type], a2 = 0, i2 = n2; a2 < i2.length; a2++) {
          var o2 = i2[a2];
          if (typeof t2[o2] != typeof r2[o2])
            return false;
          if (t2[o2] != null || r2[o2] != null) {
            if (t2[o2] == null || r2[o2] == null)
              return false;
            if (Array.isArray(t2[o2])) {
              if (!Array.isArray(r2[o2]))
                return false;
              if (t2[o2].length !== r2[o2].length)
                return false;
              for (var u2 = 0; u2 < t2[o2].length; u2++)
                if (!e2(t2[o2][u2], r2[o2][u2]))
                  return false;
            } else if (typeof t2[o2] != "object" || s2 != null && s2.includes(o2)) {
              if (!e2(t2[o2], r2[o2]))
                return false;
            } else
              for (var l2 = 0, c2 = Object.keys(t2[o2]); l2 < c2.length; l2++) {
                var p2 = c2[l2];
                if (t2[o2][p2] !== r2[o2][p2])
                  return false;
              }
          }
        }
        return true;
      }, isPlaceholderType: or, isReferenced: Ac, isScope: wc, isSpecifierDefault: function(e2) {
        return he(e2) || F(e2.imported || e2.exported, { name: "default" });
      }, isType: ir, isValidES3Identifier: Sc, isValidIdentifier: Pr, isVar: Tc, matchesPattern: Gt, validate: zr, buildMatchMemberExpression: Vt, assertArrayExpression: function(e2, t2) {
        _u("ArrayExpression", e2, t2);
      }, assertAssignmentExpression: function(e2, t2) {
        _u("AssignmentExpression", e2, t2);
      }, assertBinaryExpression: function(e2, t2) {
        _u("BinaryExpression", e2, t2);
      }, assertInterpreterDirective: function(e2, t2) {
        _u("InterpreterDirective", e2, t2);
      }, assertDirective: function(e2, t2) {
        _u("Directive", e2, t2);
      }, assertDirectiveLiteral: function(e2, t2) {
        _u("DirectiveLiteral", e2, t2);
      }, assertBlockStatement: function(e2, t2) {
        _u("BlockStatement", e2, t2);
      }, assertBreakStatement: function(e2, t2) {
        _u("BreakStatement", e2, t2);
      }, assertCallExpression: function(e2, t2) {
        _u("CallExpression", e2, t2);
      }, assertCatchClause: function(e2, t2) {
        _u("CatchClause", e2, t2);
      }, assertConditionalExpression: function(e2, t2) {
        _u("ConditionalExpression", e2, t2);
      }, assertContinueStatement: function(e2, t2) {
        _u("ContinueStatement", e2, t2);
      }, assertDebuggerStatement: function(e2, t2) {
        _u("DebuggerStatement", e2, t2);
      }, assertDoWhileStatement: function(e2, t2) {
        _u("DoWhileStatement", e2, t2);
      }, assertEmptyStatement: function(e2, t2) {
        _u("EmptyStatement", e2, t2);
      }, assertExpressionStatement: Lu, assertFile: function(e2, t2) {
        _u("File", e2, t2);
      }, assertForInStatement: function(e2, t2) {
        _u("ForInStatement", e2, t2);
      }, assertForStatement: function(e2, t2) {
        _u("ForStatement", e2, t2);
      }, assertFunctionDeclaration: function(e2, t2) {
        _u("FunctionDeclaration", e2, t2);
      }, assertFunctionExpression: function(e2, t2) {
        _u("FunctionExpression", e2, t2);
      }, assertIdentifier: Mu, assertIfStatement: function(e2, t2) {
        _u("IfStatement", e2, t2);
      }, assertLabeledStatement: function(e2, t2) {
        _u("LabeledStatement", e2, t2);
      }, assertStringLiteral: function(e2, t2) {
        _u("StringLiteral", e2, t2);
      }, assertNumericLiteral: function(e2, t2) {
        _u("NumericLiteral", e2, t2);
      }, assertNullLiteral: function(e2, t2) {
        _u("NullLiteral", e2, t2);
      }, assertBooleanLiteral: function(e2, t2) {
        _u("BooleanLiteral", e2, t2);
      }, assertRegExpLiteral: function(e2, t2) {
        _u("RegExpLiteral", e2, t2);
      }, assertLogicalExpression: function(e2, t2) {
        _u("LogicalExpression", e2, t2);
      }, assertMemberExpression: function(e2, t2) {
        _u("MemberExpression", e2, t2);
      }, assertNewExpression: function(e2, t2) {
        _u("NewExpression", e2, t2);
      }, assertProgram: function(e2, t2) {
        _u("Program", e2, t2);
      }, assertObjectExpression: function(e2, t2) {
        _u("ObjectExpression", e2, t2);
      }, assertObjectMethod: function(e2, t2) {
        _u("ObjectMethod", e2, t2);
      }, assertObjectProperty: function(e2, t2) {
        _u("ObjectProperty", e2, t2);
      }, assertRestElement: Uu, assertReturnStatement: function(e2, t2) {
        _u("ReturnStatement", e2, t2);
      }, assertSequenceExpression: function(e2, t2) {
        _u("SequenceExpression", e2, t2);
      }, assertParenthesizedExpression: function(e2, t2) {
        _u("ParenthesizedExpression", e2, t2);
      }, assertSwitchCase: function(e2, t2) {
        _u("SwitchCase", e2, t2);
      }, assertSwitchStatement: function(e2, t2) {
        _u("SwitchStatement", e2, t2);
      }, assertThisExpression: function(e2, t2) {
        _u("ThisExpression", e2, t2);
      }, assertThrowStatement: function(e2, t2) {
        _u("ThrowStatement", e2, t2);
      }, assertTryStatement: function(e2, t2) {
        _u("TryStatement", e2, t2);
      }, assertUnaryExpression: function(e2, t2) {
        _u("UnaryExpression", e2, t2);
      }, assertUpdateExpression: function(e2, t2) {
        _u("UpdateExpression", e2, t2);
      }, assertVariableDeclaration: function(e2, t2) {
        _u("VariableDeclaration", e2, t2);
      }, assertVariableDeclarator: function(e2, t2) {
        _u("VariableDeclarator", e2, t2);
      }, assertWhileStatement: function(e2, t2) {
        _u("WhileStatement", e2, t2);
      }, assertWithStatement: function(e2, t2) {
        _u("WithStatement", e2, t2);
      }, assertAssignmentPattern: function(e2, t2) {
        _u("AssignmentPattern", e2, t2);
      }, assertArrayPattern: function(e2, t2) {
        _u("ArrayPattern", e2, t2);
      }, assertArrowFunctionExpression: function(e2, t2) {
        _u("ArrowFunctionExpression", e2, t2);
      }, assertClassBody: function(e2, t2) {
        _u("ClassBody", e2, t2);
      }, assertClassExpression: function(e2, t2) {
        _u("ClassExpression", e2, t2);
      }, assertClassDeclaration: function(e2, t2) {
        _u("ClassDeclaration", e2, t2);
      }, assertExportAllDeclaration: function(e2, t2) {
        _u("ExportAllDeclaration", e2, t2);
      }, assertExportDefaultDeclaration: function(e2, t2) {
        _u("ExportDefaultDeclaration", e2, t2);
      }, assertExportNamedDeclaration: function(e2, t2) {
        _u("ExportNamedDeclaration", e2, t2);
      }, assertExportSpecifier: function(e2, t2) {
        _u("ExportSpecifier", e2, t2);
      }, assertForOfStatement: function(e2, t2) {
        _u("ForOfStatement", e2, t2);
      }, assertImportDeclaration: function(e2, t2) {
        _u("ImportDeclaration", e2, t2);
      }, assertImportDefaultSpecifier: function(e2, t2) {
        _u("ImportDefaultSpecifier", e2, t2);
      }, assertImportNamespaceSpecifier: function(e2, t2) {
        _u("ImportNamespaceSpecifier", e2, t2);
      }, assertImportSpecifier: function(e2, t2) {
        _u("ImportSpecifier", e2, t2);
      }, assertMetaProperty: function(e2, t2) {
        _u("MetaProperty", e2, t2);
      }, assertClassMethod: function(e2, t2) {
        _u("ClassMethod", e2, t2);
      }, assertObjectPattern: function(e2, t2) {
        _u("ObjectPattern", e2, t2);
      }, assertSpreadElement: function(e2, t2) {
        _u("SpreadElement", e2, t2);
      }, assertSuper: function(e2, t2) {
        _u("Super", e2, t2);
      }, assertTaggedTemplateExpression: function(e2, t2) {
        _u("TaggedTemplateExpression", e2, t2);
      }, assertTemplateElement: function(e2, t2) {
        _u("TemplateElement", e2, t2);
      }, assertTemplateLiteral: function(e2, t2) {
        _u("TemplateLiteral", e2, t2);
      }, assertYieldExpression: function(e2, t2) {
        _u("YieldExpression", e2, t2);
      }, assertAwaitExpression: function(e2, t2) {
        _u("AwaitExpression", e2, t2);
      }, assertImport: function(e2, t2) {
        _u("Import", e2, t2);
      }, assertBigIntLiteral: function(e2, t2) {
        _u("BigIntLiteral", e2, t2);
      }, assertExportNamespaceSpecifier: function(e2, t2) {
        _u("ExportNamespaceSpecifier", e2, t2);
      }, assertOptionalMemberExpression: function(e2, t2) {
        _u("OptionalMemberExpression", e2, t2);
      }, assertOptionalCallExpression: function(e2, t2) {
        _u("OptionalCallExpression", e2, t2);
      }, assertAnyTypeAnnotation: function(e2, t2) {
        _u("AnyTypeAnnotation", e2, t2);
      }, assertArrayTypeAnnotation: function(e2, t2) {
        _u("ArrayTypeAnnotation", e2, t2);
      }, assertBooleanTypeAnnotation: function(e2, t2) {
        _u("BooleanTypeAnnotation", e2, t2);
      }, assertBooleanLiteralTypeAnnotation: function(e2, t2) {
        _u("BooleanLiteralTypeAnnotation", e2, t2);
      }, assertNullLiteralTypeAnnotation: function(e2, t2) {
        _u("NullLiteralTypeAnnotation", e2, t2);
      }, assertClassImplements: function(e2, t2) {
        _u("ClassImplements", e2, t2);
      }, assertDeclareClass: function(e2, t2) {
        _u("DeclareClass", e2, t2);
      }, assertDeclareFunction: function(e2, t2) {
        _u("DeclareFunction", e2, t2);
      }, assertDeclareInterface: function(e2, t2) {
        _u("DeclareInterface", e2, t2);
      }, assertDeclareModule: function(e2, t2) {
        _u("DeclareModule", e2, t2);
      }, assertDeclareModuleExports: function(e2, t2) {
        _u("DeclareModuleExports", e2, t2);
      }, assertDeclareTypeAlias: function(e2, t2) {
        _u("DeclareTypeAlias", e2, t2);
      }, assertDeclareOpaqueType: function(e2, t2) {
        _u("DeclareOpaqueType", e2, t2);
      }, assertDeclareVariable: function(e2, t2) {
        _u("DeclareVariable", e2, t2);
      }, assertDeclareExportDeclaration: function(e2, t2) {
        _u("DeclareExportDeclaration", e2, t2);
      }, assertDeclareExportAllDeclaration: function(e2, t2) {
        _u("DeclareExportAllDeclaration", e2, t2);
      }, assertDeclaredPredicate: function(e2, t2) {
        _u("DeclaredPredicate", e2, t2);
      }, assertExistsTypeAnnotation: function(e2, t2) {
        _u("ExistsTypeAnnotation", e2, t2);
      }, assertFunctionTypeAnnotation: function(e2, t2) {
        _u("FunctionTypeAnnotation", e2, t2);
      }, assertFunctionTypeParam: function(e2, t2) {
        _u("FunctionTypeParam", e2, t2);
      }, assertGenericTypeAnnotation: function(e2, t2) {
        _u("GenericTypeAnnotation", e2, t2);
      }, assertInferredPredicate: function(e2, t2) {
        _u("InferredPredicate", e2, t2);
      }, assertInterfaceExtends: function(e2, t2) {
        _u("InterfaceExtends", e2, t2);
      }, assertInterfaceDeclaration: function(e2, t2) {
        _u("InterfaceDeclaration", e2, t2);
      }, assertInterfaceTypeAnnotation: function(e2, t2) {
        _u("InterfaceTypeAnnotation", e2, t2);
      }, assertIntersectionTypeAnnotation: function(e2, t2) {
        _u("IntersectionTypeAnnotation", e2, t2);
      }, assertMixedTypeAnnotation: function(e2, t2) {
        _u("MixedTypeAnnotation", e2, t2);
      }, assertEmptyTypeAnnotation: function(e2, t2) {
        _u("EmptyTypeAnnotation", e2, t2);
      }, assertNullableTypeAnnotation: function(e2, t2) {
        _u("NullableTypeAnnotation", e2, t2);
      }, assertNumberLiteralTypeAnnotation: function(e2, t2) {
        _u("NumberLiteralTypeAnnotation", e2, t2);
      }, assertNumberTypeAnnotation: function(e2, t2) {
        _u("NumberTypeAnnotation", e2, t2);
      }, assertObjectTypeAnnotation: function(e2, t2) {
        _u("ObjectTypeAnnotation", e2, t2);
      }, assertObjectTypeInternalSlot: function(e2, t2) {
        _u("ObjectTypeInternalSlot", e2, t2);
      }, assertObjectTypeCallProperty: function(e2, t2) {
        _u("ObjectTypeCallProperty", e2, t2);
      }, assertObjectTypeIndexer: function(e2, t2) {
        _u("ObjectTypeIndexer", e2, t2);
      }, assertObjectTypeProperty: function(e2, t2) {
        _u("ObjectTypeProperty", e2, t2);
      }, assertObjectTypeSpreadProperty: function(e2, t2) {
        _u("ObjectTypeSpreadProperty", e2, t2);
      }, assertOpaqueType: function(e2, t2) {
        _u("OpaqueType", e2, t2);
      }, assertQualifiedTypeIdentifier: function(e2, t2) {
        _u("QualifiedTypeIdentifier", e2, t2);
      }, assertStringLiteralTypeAnnotation: function(e2, t2) {
        _u("StringLiteralTypeAnnotation", e2, t2);
      }, assertStringTypeAnnotation: function(e2, t2) {
        _u("StringTypeAnnotation", e2, t2);
      }, assertSymbolTypeAnnotation: function(e2, t2) {
        _u("SymbolTypeAnnotation", e2, t2);
      }, assertThisTypeAnnotation: function(e2, t2) {
        _u("ThisTypeAnnotation", e2, t2);
      }, assertTupleTypeAnnotation: function(e2, t2) {
        _u("TupleTypeAnnotation", e2, t2);
      }, assertTypeofTypeAnnotation: function(e2, t2) {
        _u("TypeofTypeAnnotation", e2, t2);
      }, assertTypeAlias: function(e2, t2) {
        _u("TypeAlias", e2, t2);
      }, assertTypeAnnotation: function(e2, t2) {
        _u("TypeAnnotation", e2, t2);
      }, assertTypeCastExpression: function(e2, t2) {
        _u("TypeCastExpression", e2, t2);
      }, assertTypeParameter: function(e2, t2) {
        _u("TypeParameter", e2, t2);
      }, assertTypeParameterDeclaration: function(e2, t2) {
        _u("TypeParameterDeclaration", e2, t2);
      }, assertTypeParameterInstantiation: function(e2, t2) {
        _u("TypeParameterInstantiation", e2, t2);
      }, assertUnionTypeAnnotation: function(e2, t2) {
        _u("UnionTypeAnnotation", e2, t2);
      }, assertVariance: function(e2, t2) {
        _u("Variance", e2, t2);
      }, assertVoidTypeAnnotation: function(e2, t2) {
        _u("VoidTypeAnnotation", e2, t2);
      }, assertEnumDeclaration: function(e2, t2) {
        _u("EnumDeclaration", e2, t2);
      }, assertEnumBooleanBody: function(e2, t2) {
        _u("EnumBooleanBody", e2, t2);
      }, assertEnumNumberBody: function(e2, t2) {
        _u("EnumNumberBody", e2, t2);
      }, assertEnumStringBody: function(e2, t2) {
        _u("EnumStringBody", e2, t2);
      }, assertEnumSymbolBody: function(e2, t2) {
        _u("EnumSymbolBody", e2, t2);
      }, assertEnumBooleanMember: function(e2, t2) {
        _u("EnumBooleanMember", e2, t2);
      }, assertEnumNumberMember: function(e2, t2) {
        _u("EnumNumberMember", e2, t2);
      }, assertEnumStringMember: function(e2, t2) {
        _u("EnumStringMember", e2, t2);
      }, assertEnumDefaultedMember: function(e2, t2) {
        _u("EnumDefaultedMember", e2, t2);
      }, assertIndexedAccessType: function(e2, t2) {
        _u("IndexedAccessType", e2, t2);
      }, assertOptionalIndexedAccessType: function(e2, t2) {
        _u("OptionalIndexedAccessType", e2, t2);
      }, assertJSXAttribute: function(e2, t2) {
        _u("JSXAttribute", e2, t2);
      }, assertJSXClosingElement: function(e2, t2) {
        _u("JSXClosingElement", e2, t2);
      }, assertJSXElement: function(e2, t2) {
        _u("JSXElement", e2, t2);
      }, assertJSXEmptyExpression: function(e2, t2) {
        _u("JSXEmptyExpression", e2, t2);
      }, assertJSXExpressionContainer: function(e2, t2) {
        _u("JSXExpressionContainer", e2, t2);
      }, assertJSXSpreadChild: function(e2, t2) {
        _u("JSXSpreadChild", e2, t2);
      }, assertJSXIdentifier: function(e2, t2) {
        _u("JSXIdentifier", e2, t2);
      }, assertJSXMemberExpression: function(e2, t2) {
        _u("JSXMemberExpression", e2, t2);
      }, assertJSXNamespacedName: function(e2, t2) {
        _u("JSXNamespacedName", e2, t2);
      }, assertJSXOpeningElement: function(e2, t2) {
        _u("JSXOpeningElement", e2, t2);
      }, assertJSXSpreadAttribute: function(e2, t2) {
        _u("JSXSpreadAttribute", e2, t2);
      }, assertJSXText: function(e2, t2) {
        _u("JSXText", e2, t2);
      }, assertJSXFragment: function(e2, t2) {
        _u("JSXFragment", e2, t2);
      }, assertJSXOpeningFragment: function(e2, t2) {
        _u("JSXOpeningFragment", e2, t2);
      }, assertJSXClosingFragment: function(e2, t2) {
        _u("JSXClosingFragment", e2, t2);
      }, assertNoop: function(e2, t2) {
        _u("Noop", e2, t2);
      }, assertPlaceholder: function(e2, t2) {
        _u("Placeholder", e2, t2);
      }, assertV8IntrinsicIdentifier: function(e2, t2) {
        _u("V8IntrinsicIdentifier", e2, t2);
      }, assertArgumentPlaceholder: function(e2, t2) {
        _u("ArgumentPlaceholder", e2, t2);
      }, assertBindExpression: function(e2, t2) {
        _u("BindExpression", e2, t2);
      }, assertClassProperty: function(e2, t2) {
        _u("ClassProperty", e2, t2);
      }, assertPipelineTopicExpression: function(e2, t2) {
        _u("PipelineTopicExpression", e2, t2);
      }, assertPipelineBareFunction: function(e2, t2) {
        _u("PipelineBareFunction", e2, t2);
      }, assertPipelinePrimaryTopicReference: function(e2, t2) {
        _u("PipelinePrimaryTopicReference", e2, t2);
      }, assertClassPrivateProperty: function(e2, t2) {
        _u("ClassPrivateProperty", e2, t2);
      }, assertClassPrivateMethod: function(e2, t2) {
        _u("ClassPrivateMethod", e2, t2);
      }, assertImportAttribute: function(e2, t2) {
        _u("ImportAttribute", e2, t2);
      }, assertDecorator: function(e2, t2) {
        _u("Decorator", e2, t2);
      }, assertDoExpression: function(e2, t2) {
        _u("DoExpression", e2, t2);
      }, assertExportDefaultSpecifier: function(e2, t2) {
        _u("ExportDefaultSpecifier", e2, t2);
      }, assertPrivateName: function(e2, t2) {
        _u("PrivateName", e2, t2);
      }, assertRecordExpression: function(e2, t2) {
        _u("RecordExpression", e2, t2);
      }, assertTupleExpression: function(e2, t2) {
        _u("TupleExpression", e2, t2);
      }, assertDecimalLiteral: function(e2, t2) {
        _u("DecimalLiteral", e2, t2);
      }, assertStaticBlock: function(e2, t2) {
        _u("StaticBlock", e2, t2);
      }, assertModuleExpression: function(e2, t2) {
        _u("ModuleExpression", e2, t2);
      }, assertTSParameterProperty: function(e2, t2) {
        _u("TSParameterProperty", e2, t2);
      }, assertTSDeclareFunction: function(e2, t2) {
        _u("TSDeclareFunction", e2, t2);
      }, assertTSDeclareMethod: function(e2, t2) {
        _u("TSDeclareMethod", e2, t2);
      }, assertTSQualifiedName: function(e2, t2) {
        _u("TSQualifiedName", e2, t2);
      }, assertTSCallSignatureDeclaration: function(e2, t2) {
        _u("TSCallSignatureDeclaration", e2, t2);
      }, assertTSConstructSignatureDeclaration: function(e2, t2) {
        _u("TSConstructSignatureDeclaration", e2, t2);
      }, assertTSPropertySignature: function(e2, t2) {
        _u("TSPropertySignature", e2, t2);
      }, assertTSMethodSignature: function(e2, t2) {
        _u("TSMethodSignature", e2, t2);
      }, assertTSIndexSignature: function(e2, t2) {
        _u("TSIndexSignature", e2, t2);
      }, assertTSAnyKeyword: function(e2, t2) {
        _u("TSAnyKeyword", e2, t2);
      }, assertTSBooleanKeyword: function(e2, t2) {
        _u("TSBooleanKeyword", e2, t2);
      }, assertTSBigIntKeyword: function(e2, t2) {
        _u("TSBigIntKeyword", e2, t2);
      }, assertTSIntrinsicKeyword: function(e2, t2) {
        _u("TSIntrinsicKeyword", e2, t2);
      }, assertTSNeverKeyword: function(e2, t2) {
        _u("TSNeverKeyword", e2, t2);
      }, assertTSNullKeyword: function(e2, t2) {
        _u("TSNullKeyword", e2, t2);
      }, assertTSNumberKeyword: function(e2, t2) {
        _u("TSNumberKeyword", e2, t2);
      }, assertTSObjectKeyword: function(e2, t2) {
        _u("TSObjectKeyword", e2, t2);
      }, assertTSStringKeyword: function(e2, t2) {
        _u("TSStringKeyword", e2, t2);
      }, assertTSSymbolKeyword: function(e2, t2) {
        _u("TSSymbolKeyword", e2, t2);
      }, assertTSUndefinedKeyword: function(e2, t2) {
        _u("TSUndefinedKeyword", e2, t2);
      }, assertTSUnknownKeyword: function(e2, t2) {
        _u("TSUnknownKeyword", e2, t2);
      }, assertTSVoidKeyword: function(e2, t2) {
        _u("TSVoidKeyword", e2, t2);
      }, assertTSThisType: function(e2, t2) {
        _u("TSThisType", e2, t2);
      }, assertTSFunctionType: function(e2, t2) {
        _u("TSFunctionType", e2, t2);
      }, assertTSConstructorType: function(e2, t2) {
        _u("TSConstructorType", e2, t2);
      }, assertTSTypeReference: function(e2, t2) {
        _u("TSTypeReference", e2, t2);
      }, assertTSTypePredicate: function(e2, t2) {
        _u("TSTypePredicate", e2, t2);
      }, assertTSTypeQuery: function(e2, t2) {
        _u("TSTypeQuery", e2, t2);
      }, assertTSTypeLiteral: function(e2, t2) {
        _u("TSTypeLiteral", e2, t2);
      }, assertTSArrayType: function(e2, t2) {
        _u("TSArrayType", e2, t2);
      }, assertTSTupleType: function(e2, t2) {
        _u("TSTupleType", e2, t2);
      }, assertTSOptionalType: function(e2, t2) {
        _u("TSOptionalType", e2, t2);
      }, assertTSRestType: function(e2, t2) {
        _u("TSRestType", e2, t2);
      }, assertTSNamedTupleMember: function(e2, t2) {
        _u("TSNamedTupleMember", e2, t2);
      }, assertTSUnionType: function(e2, t2) {
        _u("TSUnionType", e2, t2);
      }, assertTSIntersectionType: function(e2, t2) {
        _u("TSIntersectionType", e2, t2);
      }, assertTSConditionalType: function(e2, t2) {
        _u("TSConditionalType", e2, t2);
      }, assertTSInferType: function(e2, t2) {
        _u("TSInferType", e2, t2);
      }, assertTSParenthesizedType: function(e2, t2) {
        _u("TSParenthesizedType", e2, t2);
      }, assertTSTypeOperator: function(e2, t2) {
        _u("TSTypeOperator", e2, t2);
      }, assertTSIndexedAccessType: function(e2, t2) {
        _u("TSIndexedAccessType", e2, t2);
      }, assertTSMappedType: function(e2, t2) {
        _u("TSMappedType", e2, t2);
      }, assertTSLiteralType: function(e2, t2) {
        _u("TSLiteralType", e2, t2);
      }, assertTSExpressionWithTypeArguments: function(e2, t2) {
        _u("TSExpressionWithTypeArguments", e2, t2);
      }, assertTSInterfaceDeclaration: function(e2, t2) {
        _u("TSInterfaceDeclaration", e2, t2);
      }, assertTSInterfaceBody: function(e2, t2) {
        _u("TSInterfaceBody", e2, t2);
      }, assertTSTypeAliasDeclaration: function(e2, t2) {
        _u("TSTypeAliasDeclaration", e2, t2);
      }, assertTSAsExpression: function(e2, t2) {
        _u("TSAsExpression", e2, t2);
      }, assertTSTypeAssertion: function(e2, t2) {
        _u("TSTypeAssertion", e2, t2);
      }, assertTSEnumDeclaration: function(e2, t2) {
        _u("TSEnumDeclaration", e2, t2);
      }, assertTSEnumMember: function(e2, t2) {
        _u("TSEnumMember", e2, t2);
      }, assertTSModuleDeclaration: function(e2, t2) {
        _u("TSModuleDeclaration", e2, t2);
      }, assertTSModuleBlock: function(e2, t2) {
        _u("TSModuleBlock", e2, t2);
      }, assertTSImportType: function(e2, t2) {
        _u("TSImportType", e2, t2);
      }, assertTSImportEqualsDeclaration: function(e2, t2) {
        _u("TSImportEqualsDeclaration", e2, t2);
      }, assertTSExternalModuleReference: function(e2, t2) {
        _u("TSExternalModuleReference", e2, t2);
      }, assertTSNonNullExpression: function(e2, t2) {
        _u("TSNonNullExpression", e2, t2);
      }, assertTSExportAssignment: function(e2, t2) {
        _u("TSExportAssignment", e2, t2);
      }, assertTSNamespaceExportDeclaration: function(e2, t2) {
        _u("TSNamespaceExportDeclaration", e2, t2);
      }, assertTSTypeAnnotation: function(e2, t2) {
        _u("TSTypeAnnotation", e2, t2);
      }, assertTSTypeParameterInstantiation: function(e2, t2) {
        _u("TSTypeParameterInstantiation", e2, t2);
      }, assertTSTypeParameterDeclaration: function(e2, t2) {
        _u("TSTypeParameterDeclaration", e2, t2);
      }, assertTSTypeParameter: function(e2, t2) {
        _u("TSTypeParameter", e2, t2);
      }, assertExpression: Gu, assertBinary: function(e2, t2) {
        _u("Binary", e2, t2);
      }, assertScopable: function(e2, t2) {
        _u("Scopable", e2, t2);
      }, assertBlockParent: function(e2, t2) {
        _u("BlockParent", e2, t2);
      }, assertBlock: function(e2, t2) {
        _u("Block", e2, t2);
      }, assertStatement: function(e2, t2) {
        _u("Statement", e2, t2);
      }, assertTerminatorless: function(e2, t2) {
        _u("Terminatorless", e2, t2);
      }, assertCompletionStatement: function(e2, t2) {
        _u("CompletionStatement", e2, t2);
      }, assertConditional: function(e2, t2) {
        _u("Conditional", e2, t2);
      }, assertLoop: function(e2, t2) {
        _u("Loop", e2, t2);
      }, assertWhile: function(e2, t2) {
        _u("While", e2, t2);
      }, assertExpressionWrapper: function(e2, t2) {
        _u("ExpressionWrapper", e2, t2);
      }, assertFor: function(e2, t2) {
        _u("For", e2, t2);
      }, assertForXStatement: function(e2, t2) {
        _u("ForXStatement", e2, t2);
      }, assertFunction: function(e2, t2) {
        _u("Function", e2, t2);
      }, assertFunctionParent: function(e2, t2) {
        _u("FunctionParent", e2, t2);
      }, assertPureish: function(e2, t2) {
        _u("Pureish", e2, t2);
      }, assertDeclaration: function(e2, t2) {
        _u("Declaration", e2, t2);
      }, assertPatternLike: function(e2, t2) {
        _u("PatternLike", e2, t2);
      }, assertLVal: function(e2, t2) {
        _u("LVal", e2, t2);
      }, assertTSEntityName: function(e2, t2) {
        _u("TSEntityName", e2, t2);
      }, assertLiteral: function(e2, t2) {
        _u("Literal", e2, t2);
      }, assertImmutable: function(e2, t2) {
        _u("Immutable", e2, t2);
      }, assertUserWhitespacable: function(e2, t2) {
        _u("UserWhitespacable", e2, t2);
      }, assertMethod: function(e2, t2) {
        _u("Method", e2, t2);
      }, assertObjectMember: function(e2, t2) {
        _u("ObjectMember", e2, t2);
      }, assertProperty: function(e2, t2) {
        _u("Property", e2, t2);
      }, assertUnaryLike: function(e2, t2) {
        _u("UnaryLike", e2, t2);
      }, assertPattern: function(e2, t2) {
        _u("Pattern", e2, t2);
      }, assertClass: function(e2, t2) {
        _u("Class", e2, t2);
      }, assertModuleDeclaration: function(e2, t2) {
        _u("ModuleDeclaration", e2, t2);
      }, assertExportDeclaration: function(e2, t2) {
        _u("ExportDeclaration", e2, t2);
      }, assertModuleSpecifier: function(e2, t2) {
        _u("ModuleSpecifier", e2, t2);
      }, assertFlow: function(e2, t2) {
        _u("Flow", e2, t2);
      }, assertFlowType: function(e2, t2) {
        _u("FlowType", e2, t2);
      }, assertFlowBaseAnnotation: function(e2, t2) {
        _u("FlowBaseAnnotation", e2, t2);
      }, assertFlowDeclaration: function(e2, t2) {
        _u("FlowDeclaration", e2, t2);
      }, assertFlowPredicate: function(e2, t2) {
        _u("FlowPredicate", e2, t2);
      }, assertEnumBody: function(e2, t2) {
        _u("EnumBody", e2, t2);
      }, assertEnumMember: function(e2, t2) {
        _u("EnumMember", e2, t2);
      }, assertJSX: function(e2, t2) {
        _u("JSX", e2, t2);
      }, assertPrivate: function(e2, t2) {
        _u("Private", e2, t2);
      }, assertTSTypeElement: function(e2, t2) {
        _u("TSTypeElement", e2, t2);
      }, assertTSType: function(e2, t2) {
        _u("TSType", e2, t2);
      }, assertTSBaseType: function(e2, t2) {
        _u("TSBaseType", e2, t2);
      }, assertNumberLiteral: function(e2, t2) {
        console.trace("The node type NumberLiteral has been renamed to NumericLiteral"), _u("NumberLiteral", e2, t2);
      }, assertRegexLiteral: function(e2, t2) {
        console.trace("The node type RegexLiteral has been renamed to RegExpLiteral"), _u("RegexLiteral", e2, t2);
      }, assertRestProperty: function(e2, t2) {
        console.trace("The node type RestProperty has been renamed to RestElement"), _u("RestProperty", e2, t2);
      }, assertSpreadProperty: function(e2, t2) {
        console.trace("The node type SpreadProperty has been renamed to SpreadElement"), _u("SpreadProperty", e2, t2);
      }, arrayExpression: ts, assignmentExpression: rs, binaryExpression: ns, interpreterDirective: ss, directive: as, directiveLiteral: is, blockStatement: os, breakStatement: us, callExpression: ls, catchClause: cs, conditionalExpression: ps, continueStatement: ds, debuggerStatement: fs2, doWhileStatement: hs, emptyStatement: ms, expressionStatement: ys, file: gs, forInStatement: vs, forStatement: bs, functionDeclaration: Es, functionExpression: xs, identifier: Ds, ifStatement: As, labeledStatement: ws, stringLiteral: Cs, numericLiteral: Ss, nullLiteral: Ts, booleanLiteral: js, regExpLiteral: Ps, logicalExpression: Is, memberExpression: Fs2, newExpression: ks, program: Os2, objectExpression: Rs, objectMethod: Ns, objectProperty: Bs, restElement: _s, returnStatement: Ls, sequenceExpression: Ms, parenthesizedExpression: Us, switchCase: Gs, switchStatement: Vs, thisExpression: Ws, throwStatement: Hs, tryStatement: Xs, unaryExpression: qs, updateExpression: $s, variableDeclaration: Ks, variableDeclarator: zs, whileStatement: Js, withStatement: Ys, assignmentPattern: Qs, arrayPattern: Zs, arrowFunctionExpression: ea, classBody: ta, classExpression: ra, classDeclaration: na, exportAllDeclaration: sa, exportDefaultDeclaration: aa, exportNamedDeclaration: ia, exportSpecifier: oa, forOfStatement: ua, importDeclaration: la, importDefaultSpecifier: ca, importNamespaceSpecifier: pa, importSpecifier: da, metaProperty: fa, classMethod: ha, objectPattern: ma, spreadElement: ya, super: ga, taggedTemplateExpression: va, templateElement: ba, templateLiteral: Ea, yieldExpression: xa, awaitExpression: Da, import: Aa, bigIntLiteral: wa, exportNamespaceSpecifier: Ca, optionalMemberExpression: Sa, optionalCallExpression: Ta, anyTypeAnnotation: ja, arrayTypeAnnotation: Pa, booleanTypeAnnotation: Ia, booleanLiteralTypeAnnotation: Fa, nullLiteralTypeAnnotation: ka, classImplements: Oa, declareClass: Ra, declareFunction: Na, declareInterface: Ba, declareModule: _a, declareModuleExports: La, declareTypeAlias: Ma, declareOpaqueType: Ua, declareVariable: Ga, declareExportDeclaration: Va, declareExportAllDeclaration: Wa, declaredPredicate: Ha, existsTypeAnnotation: Xa, functionTypeAnnotation: qa, functionTypeParam: $a, genericTypeAnnotation: Ka, inferredPredicate: za, interfaceExtends: Ja, interfaceDeclaration: Ya, interfaceTypeAnnotation: Qa, intersectionTypeAnnotation: Za, mixedTypeAnnotation: ei, emptyTypeAnnotation: ti, nullableTypeAnnotation: ri, numberLiteralTypeAnnotation: ni, numberTypeAnnotation: si, objectTypeAnnotation: ai, objectTypeInternalSlot: ii, objectTypeCallProperty: oi, objectTypeIndexer: ui, objectTypeProperty: li, objectTypeSpreadProperty: ci, opaqueType: pi, qualifiedTypeIdentifier: di, stringLiteralTypeAnnotation: fi, stringTypeAnnotation: hi, symbolTypeAnnotation: mi, thisTypeAnnotation: yi, tupleTypeAnnotation: gi, typeofTypeAnnotation: vi, typeAlias: bi, typeAnnotation: Ei, typeCastExpression: xi, typeParameter: Di, typeParameterDeclaration: Ai, typeParameterInstantiation: wi, unionTypeAnnotation: Ci, variance: Si, voidTypeAnnotation: Ti, enumDeclaration: ji, enumBooleanBody: Pi, enumNumberBody: Ii, enumStringBody: Fi, enumSymbolBody: ki, enumBooleanMember: Oi, enumNumberMember: Ri, enumStringMember: Ni, enumDefaultedMember: Bi, indexedAccessType: _i, optionalIndexedAccessType: Li, jsxAttribute: Mi, jSXAttribute: Mi, jsxClosingElement: Ui, jSXClosingElement: Ui, jsxElement: Gi, jSXElement: Gi, jsxEmptyExpression: Vi, jSXEmptyExpression: Vi, jsxExpressionContainer: Wi, jSXExpressionContainer: Wi, jsxSpreadChild: Hi, jSXSpreadChild: Hi, jsxIdentifier: Xi, jSXIdentifier: Xi, jsxMemberExpression: qi, jSXMemberExpression: qi, jsxNamespacedName: $i, jSXNamespacedName: $i, jsxOpeningElement: Ki, jSXOpeningElement: Ki, jsxSpreadAttribute: zi, jSXSpreadAttribute: zi, jsxText: Ji, jSXText: Ji, jsxFragment: Yi, jSXFragment: Yi, jsxOpeningFragment: Qi, jSXOpeningFragment: Qi, jsxClosingFragment: Zi, jSXClosingFragment: Zi, noop: eo, placeholder: to, v8IntrinsicIdentifier: ro, argumentPlaceholder: no, bindExpression: so, classProperty: ao, pipelineTopicExpression: io, pipelineBareFunction: oo, pipelinePrimaryTopicReference: uo, classPrivateProperty: lo, classPrivateMethod: co, importAttribute: po, decorator: fo, doExpression: ho, exportDefaultSpecifier: mo, privateName: yo, recordExpression: go, tupleExpression: vo, decimalLiteral: bo, staticBlock: Eo, moduleExpression: xo, tsParameterProperty: Do, tSParameterProperty: Do, tsDeclareFunction: Ao, tSDeclareFunction: Ao, tsDeclareMethod: wo, tSDeclareMethod: wo, tsQualifiedName: Co, tSQualifiedName: Co, tsCallSignatureDeclaration: So, tSCallSignatureDeclaration: So, tsConstructSignatureDeclaration: To, tSConstructSignatureDeclaration: To, tsPropertySignature: jo, tSPropertySignature: jo, tsMethodSignature: Po, tSMethodSignature: Po, tsIndexSignature: Io, tSIndexSignature: Io, tsAnyKeyword: Fo, tSAnyKeyword: Fo, tsBooleanKeyword: ko, tSBooleanKeyword: ko, tsBigIntKeyword: Oo, tSBigIntKeyword: Oo, tsIntrinsicKeyword: Ro, tSIntrinsicKeyword: Ro, tsNeverKeyword: No, tSNeverKeyword: No, tsNullKeyword: Bo, tSNullKeyword: Bo, tsNumberKeyword: _o, tSNumberKeyword: _o, tsObjectKeyword: Lo, tSObjectKeyword: Lo, tsStringKeyword: Mo, tSStringKeyword: Mo, tsSymbolKeyword: Uo, tSSymbolKeyword: Uo, tsUndefinedKeyword: Go, tSUndefinedKeyword: Go, tsUnknownKeyword: Vo, tSUnknownKeyword: Vo, tsVoidKeyword: Wo, tSVoidKeyword: Wo, tsThisType: Ho, tSThisType: Ho, tsFunctionType: Xo, tSFunctionType: Xo, tsConstructorType: qo, tSConstructorType: qo, tsTypeReference: $o, tSTypeReference: $o, tsTypePredicate: Ko, tSTypePredicate: Ko, tsTypeQuery: zo, tSTypeQuery: zo, tsTypeLiteral: Jo, tSTypeLiteral: Jo, tsArrayType: Yo, tSArrayType: Yo, tsTupleType: Qo, tSTupleType: Qo, tsOptionalType: Zo, tSOptionalType: Zo, tsRestType: eu, tSRestType: eu, tsNamedTupleMember: tu, tSNamedTupleMember: tu, tsUnionType: ru, tSUnionType: ru, tsIntersectionType: nu, tSIntersectionType: nu, tsConditionalType: su, tSConditionalType: su, tsInferType: au, tSInferType: au, tsParenthesizedType: iu, tSParenthesizedType: iu, tsTypeOperator: ou, tSTypeOperator: ou, tsIndexedAccessType: uu, tSIndexedAccessType: uu, tsMappedType: lu, tSMappedType: lu, tsLiteralType: cu, tSLiteralType: cu, tsExpressionWithTypeArguments: pu, tSExpressionWithTypeArguments: pu, tsInterfaceDeclaration: du, tSInterfaceDeclaration: du, tsInterfaceBody: fu, tSInterfaceBody: fu, tsTypeAliasDeclaration: hu, tSTypeAliasDeclaration: hu, tsAsExpression: mu, tSAsExpression: mu, tsTypeAssertion: yu, tSTypeAssertion: yu, tsEnumDeclaration: gu, tSEnumDeclaration: gu, tsEnumMember: vu, tSEnumMember: vu, tsModuleDeclaration: bu, tSModuleDeclaration: bu, tsModuleBlock: Eu, tSModuleBlock: Eu, tsImportType: xu, tSImportType: xu, tsImportEqualsDeclaration: Du, tSImportEqualsDeclaration: Du, tsExternalModuleReference: Au, tSExternalModuleReference: Au, tsNonNullExpression: wu, tSNonNullExpression: wu, tsExportAssignment: Cu, tSExportAssignment: Cu, tsNamespaceExportDeclaration: Su, tSNamespaceExportDeclaration: Su, tsTypeAnnotation: Tu, tSTypeAnnotation: Tu, tsTypeParameterInstantiation: ju, tSTypeParameterInstantiation: ju, tsTypeParameterDeclaration: Pu, tSTypeParameterDeclaration: Pu, tsTypeParameter: Iu, tSTypeParameter: Iu, numberLiteral: Fu, regexLiteral: ku, restProperty: Ou, spreadProperty: Ru, ArrayExpression: ts, AssignmentExpression: rs, BinaryExpression: ns, InterpreterDirective: ss, Directive: as, DirectiveLiteral: is, BlockStatement: os, BreakStatement: us, CallExpression: ls, CatchClause: cs, ConditionalExpression: ps, ContinueStatement: ds, DebuggerStatement: fs2, DoWhileStatement: hs, EmptyStatement: ms, ExpressionStatement: ys, File: gs, ForInStatement: vs, ForStatement: bs, FunctionDeclaration: Es, FunctionExpression: xs, Identifier: Ds, IfStatement: As, LabeledStatement: ws, StringLiteral: Cs, NumericLiteral: Ss, NullLiteral: Ts, BooleanLiteral: js, RegExpLiteral: Ps, LogicalExpression: Is, MemberExpression: Fs2, NewExpression: ks, Program: Os2, ObjectExpression: Rs, ObjectMethod: Ns, ObjectProperty: Bs, RestElement: _s, ReturnStatement: Ls, SequenceExpression: Ms, ParenthesizedExpression: Us, SwitchCase: Gs, SwitchStatement: Vs, ThisExpression: Ws, ThrowStatement: Hs, TryStatement: Xs, UnaryExpression: qs, UpdateExpression: $s, VariableDeclaration: Ks, VariableDeclarator: zs, WhileStatement: Js, WithStatement: Ys, AssignmentPattern: Qs, ArrayPattern: Zs, ArrowFunctionExpression: ea, ClassBody: ta, ClassExpression: ra, ClassDeclaration: na, ExportAllDeclaration: sa, ExportDefaultDeclaration: aa, ExportNamedDeclaration: ia, ExportSpecifier: oa, ForOfStatement: ua, ImportDeclaration: la, ImportDefaultSpecifier: ca, ImportNamespaceSpecifier: pa, ImportSpecifier: da, MetaProperty: fa, ClassMethod: ha, ObjectPattern: ma, SpreadElement: ya, Super: ga, TaggedTemplateExpression: va, TemplateElement: ba, TemplateLiteral: Ea, YieldExpression: xa, AwaitExpression: Da, Import: Aa, BigIntLiteral: wa, ExportNamespaceSpecifier: Ca, OptionalMemberExpression: Sa, OptionalCallExpression: Ta, AnyTypeAnnotation: ja, ArrayTypeAnnotation: Pa, BooleanTypeAnnotation: Ia, BooleanLiteralTypeAnnotation: Fa, NullLiteralTypeAnnotation: ka, ClassImplements: Oa, DeclareClass: Ra, DeclareFunction: Na, DeclareInterface: Ba, DeclareModule: _a, DeclareModuleExports: La, DeclareTypeAlias: Ma, DeclareOpaqueType: Ua, DeclareVariable: Ga, DeclareExportDeclaration: Va, DeclareExportAllDeclaration: Wa, DeclaredPredicate: Ha, ExistsTypeAnnotation: Xa, FunctionTypeAnnotation: qa, FunctionTypeParam: $a, GenericTypeAnnotation: Ka, InferredPredicate: za, InterfaceExtends: Ja, InterfaceDeclaration: Ya, InterfaceTypeAnnotation: Qa, IntersectionTypeAnnotation: Za, MixedTypeAnnotation: ei, EmptyTypeAnnotation: ti, NullableTypeAnnotation: ri, NumberLiteralTypeAnnotation: ni, NumberTypeAnnotation: si, ObjectTypeAnnotation: ai, ObjectTypeInternalSlot: ii, ObjectTypeCallProperty: oi, ObjectTypeIndexer: ui, ObjectTypeProperty: li, ObjectTypeSpreadProperty: ci, OpaqueType: pi, QualifiedTypeIdentifier: di, StringLiteralTypeAnnotation: fi, StringTypeAnnotation: hi, SymbolTypeAnnotation: mi, ThisTypeAnnotation: yi, TupleTypeAnnotation: gi, TypeofTypeAnnotation: vi, TypeAlias: bi, TypeAnnotation: Ei, TypeCastExpression: xi, TypeParameter: Di, TypeParameterDeclaration: Ai, TypeParameterInstantiation: wi, UnionTypeAnnotation: Ci, Variance: Si, VoidTypeAnnotation: Ti, EnumDeclaration: ji, EnumBooleanBody: Pi, EnumNumberBody: Ii, EnumStringBody: Fi, EnumSymbolBody: ki, EnumBooleanMember: Oi, EnumNumberMember: Ri, EnumStringMember: Ni, EnumDefaultedMember: Bi, IndexedAccessType: _i, OptionalIndexedAccessType: Li, JSXAttribute: Mi, JSXClosingElement: Ui, JSXElement: Gi, JSXEmptyExpression: Vi, JSXExpressionContainer: Wi, JSXSpreadChild: Hi, JSXIdentifier: Xi, JSXMemberExpression: qi, JSXNamespacedName: $i, JSXOpeningElement: Ki, JSXSpreadAttribute: zi, JSXText: Ji, JSXFragment: Yi, JSXOpeningFragment: Qi, JSXClosingFragment: Zi, Noop: eo, Placeholder: to, V8IntrinsicIdentifier: ro, ArgumentPlaceholder: no, BindExpression: so, ClassProperty: ao, PipelineTopicExpression: io, PipelineBareFunction: oo, PipelinePrimaryTopicReference: uo, ClassPrivateProperty: lo, ClassPrivateMethod: co, ImportAttribute: po, Decorator: fo, DoExpression: ho, ExportDefaultSpecifier: mo, PrivateName: yo, RecordExpression: go, TupleExpression: vo, DecimalLiteral: bo, StaticBlock: Eo, ModuleExpression: xo, TSParameterProperty: Do, TSDeclareFunction: Ao, TSDeclareMethod: wo, TSQualifiedName: Co, TSCallSignatureDeclaration: So, TSConstructSignatureDeclaration: To, TSPropertySignature: jo, TSMethodSignature: Po, TSIndexSignature: Io, TSAnyKeyword: Fo, TSBooleanKeyword: ko, TSBigIntKeyword: Oo, TSIntrinsicKeyword: Ro, TSNeverKeyword: No, TSNullKeyword: Bo, TSNumberKeyword: _o, TSObjectKeyword: Lo, TSStringKeyword: Mo, TSSymbolKeyword: Uo, TSUndefinedKeyword: Go, TSUnknownKeyword: Vo, TSVoidKeyword: Wo, TSThisType: Ho, TSFunctionType: Xo, TSConstructorType: qo, TSTypeReference: $o, TSTypePredicate: Ko, TSTypeQuery: zo, TSTypeLiteral: Jo, TSArrayType: Yo, TSTupleType: Qo, TSOptionalType: Zo, TSRestType: eu, TSNamedTupleMember: tu, TSUnionType: ru, TSIntersectionType: nu, TSConditionalType: su, TSInferType: au, TSParenthesizedType: iu, TSTypeOperator: ou, TSIndexedAccessType: uu, TSMappedType: lu, TSLiteralType: cu, TSExpressionWithTypeArguments: pu, TSInterfaceDeclaration: du, TSInterfaceBody: fu, TSTypeAliasDeclaration: hu, TSAsExpression: mu, TSTypeAssertion: yu, TSEnumDeclaration: gu, TSEnumMember: vu, TSModuleDeclaration: bu, TSModuleBlock: Eu, TSImportType: xu, TSImportEqualsDeclaration: Du, TSExternalModuleReference: Au, TSNonNullExpression: wu, TSExportAssignment: Cu, TSNamespaceExportDeclaration: Su, TSTypeAnnotation: Tu, TSTypeParameterInstantiation: ju, TSTypeParameterDeclaration: Pu, TSTypeParameter: Iu, NumberLiteral: Fu, RegexLiteral: ku, RestProperty: Ou, SpreadProperty: Ru, EXPRESSION_TYPES: ol, BINARY_TYPES: ul, SCOPABLE_TYPES: ll, BLOCKPARENT_TYPES: cl, BLOCK_TYPES: pl, STATEMENT_TYPES: dl, TERMINATORLESS_TYPES: fl, COMPLETIONSTATEMENT_TYPES: hl, CONDITIONAL_TYPES: ml, LOOP_TYPES: yl, WHILE_TYPES: gl, EXPRESSIONWRAPPER_TYPES: vl, FOR_TYPES: bl, FORXSTATEMENT_TYPES: El, FUNCTION_TYPES: xl, FUNCTIONPARENT_TYPES: Dl, PUREISH_TYPES: Al, DECLARATION_TYPES: wl, PATTERNLIKE_TYPES: Cl, LVAL_TYPES: Sl, TSENTITYNAME_TYPES: Tl, LITERAL_TYPES: jl, IMMUTABLE_TYPES: Pl, USERWHITESPACABLE_TYPES: Il, METHOD_TYPES: Fl, OBJECTMEMBER_TYPES: kl, PROPERTY_TYPES: Ol, UNARYLIKE_TYPES: Rl, PATTERN_TYPES: Nl, CLASS_TYPES: Bl, MODULEDECLARATION_TYPES: _l, EXPORTDECLARATION_TYPES: Ll, MODULESPECIFIER_TYPES: Ml, FLOW_TYPES: Ul, FLOWTYPE_TYPES: Gl, FLOWBASEANNOTATION_TYPES: Vl, FLOWDECLARATION_TYPES: Wl, FLOWPREDICATE_TYPES: Hl, ENUMBODY_TYPES: Xl, ENUMMEMBER_TYPES: ql, JSX_TYPES: $l, PRIVATE_TYPES: Kl, TSTYPEELEMENT_TYPES: zl, TSTYPE_TYPES: Jl, TSBASETYPE_TYPES: Yl, STATEMENT_OR_BLOCK_KEYS: Ir, FLATTENABLE_KEYS: ["body", "expressions"], FOR_INIT_KEYS: Fr, COMMENT_KEYS: kr, LOGICAL_OPERATORS: Or, UPDATE_OPERATORS: Rr, BOOLEAN_NUMBER_BINARY_OPERATORS: Nr, EQUALITY_BINARY_OPERATORS: Br, COMPARISON_BINARY_OPERATORS: _r, BOOLEAN_BINARY_OPERATORS: Lr, NUMBER_BINARY_OPERATORS: Mr, BINARY_OPERATORS: Ur, ASSIGNMENT_OPERATORS: Gr, BOOLEAN_UNARY_OPERATORS: Vr, NUMBER_UNARY_OPERATORS: Wr, STRING_UNARY_OPERATORS: Hr, UNARY_OPERATORS: Xr, INHERIT_KEYS: qr, BLOCK_SCOPED_SYMBOL: $r, NOT_LOCAL_BINDING: Kr, VISITOR_KEYS: Qr, ALIAS_KEYS: Zr, FLIPPED_ALIAS_KEYS: en, NODE_FIELDS: tn, BUILDER_KEYS: rn, DEPRECATED_KEYS: nn, NODE_PARENT_VALIDATIONS: sn, PLACEHOLDERS: _n, PLACEHOLDERS_ALIAS: Ln, PLACEHOLDERS_FLIPPED_ALIAS: Wn, TYPES: Zn, isArrayExpression: m, isAssignmentExpression: y, isBinaryExpression: g, isInterpreterDirective: function(e2, t2) {
        return !!e2 && (e2.type === "InterpreterDirective" && (t2 === void 0 || h(e2, t2)));
      }, isDirective: function(e2, t2) {
        return !!e2 && (e2.type === "Directive" && (t2 === void 0 || h(e2, t2)));
      }, isDirectiveLiteral: function(e2, t2) {
        return !!e2 && (e2.type === "DirectiveLiteral" && (t2 === void 0 || h(e2, t2)));
      }, isBlockStatement: v, isBreakStatement: b, isCallExpression: E, isCatchClause: x, isConditionalExpression: D, isContinueStatement: A, isDebuggerStatement: function(e2, t2) {
        return !!e2 && (e2.type === "DebuggerStatement" && (t2 === void 0 || h(e2, t2)));
      }, isDoWhileStatement: function(e2, t2) {
        return !!e2 && (e2.type === "DoWhileStatement" && (t2 === void 0 || h(e2, t2)));
      }, isEmptyStatement: w, isExpressionStatement: C, isFile: S, isForInStatement: T, isForStatement: j, isFunctionDeclaration: P, isFunctionExpression: I, isIdentifier: F, isIfStatement: k, isLabeledStatement: O, isStringLiteral: R, isNumericLiteral: N, isNullLiteral: B, isBooleanLiteral: function(e2, t2) {
        return !!e2 && (e2.type === "BooleanLiteral" && (t2 === void 0 || h(e2, t2)));
      }, isRegExpLiteral: _, isLogicalExpression: L, isMemberExpression: M, isNewExpression: U, isProgram: G, isObjectExpression: V, isObjectMethod: W, isObjectProperty: H, isRestElement: X, isReturnStatement: q, isSequenceExpression: $, isParenthesizedExpression: K, isSwitchCase: function(e2, t2) {
        return !!e2 && (e2.type === "SwitchCase" && (t2 === void 0 || h(e2, t2)));
      }, isSwitchStatement: z, isThisExpression: J, isThrowStatement: Y, isTryStatement: function(e2, t2) {
        return !!e2 && (e2.type === "TryStatement" && (t2 === void 0 || h(e2, t2)));
      }, isUnaryExpression: Q, isUpdateExpression: function(e2, t2) {
        return !!e2 && (e2.type === "UpdateExpression" && (t2 === void 0 || h(e2, t2)));
      }, isVariableDeclaration: Z, isVariableDeclarator: ee, isWhileStatement: te, isWithStatement: function(e2, t2) {
        return !!e2 && (e2.type === "WithStatement" && (t2 === void 0 || h(e2, t2)));
      }, isAssignmentPattern: re, isArrayPattern: ne, isArrowFunctionExpression: se, isClassBody: ae, isClassExpression: ie, isClassDeclaration: oe, isExportAllDeclaration: ue, isExportDefaultDeclaration: le, isExportNamedDeclaration: ce, isExportSpecifier: pe, isForOfStatement: de, isImportDeclaration: fe, isImportDefaultSpecifier: he, isImportNamespaceSpecifier: me, isImportSpecifier: ye, isMetaProperty: function(e2, t2) {
        return !!e2 && (e2.type === "MetaProperty" && (t2 === void 0 || h(e2, t2)));
      }, isClassMethod: ge, isObjectPattern: ve, isSpreadElement: be, isSuper: Ee, isTaggedTemplateExpression: xe, isTemplateElement: function(e2, t2) {
        return !!e2 && (e2.type === "TemplateElement" && (t2 === void 0 || h(e2, t2)));
      }, isTemplateLiteral: De, isYieldExpression: Ae, isAwaitExpression: we, isImport: Ce, isBigIntLiteral: Se, isExportNamespaceSpecifier: Te, isOptionalMemberExpression: je, isOptionalCallExpression: Pe, isAnyTypeAnnotation: Ie, isArrayTypeAnnotation: Fe, isBooleanTypeAnnotation: ke, isBooleanLiteralTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "BooleanLiteralTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isNullLiteralTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "NullLiteralTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isClassImplements: function(e2, t2) {
        return !!e2 && (e2.type === "ClassImplements" && (t2 === void 0 || h(e2, t2)));
      }, isDeclareClass: function(e2, t2) {
        return !!e2 && (e2.type === "DeclareClass" && (t2 === void 0 || h(e2, t2)));
      }, isDeclareFunction: function(e2, t2) {
        return !!e2 && (e2.type === "DeclareFunction" && (t2 === void 0 || h(e2, t2)));
      }, isDeclareInterface: function(e2, t2) {
        return !!e2 && (e2.type === "DeclareInterface" && (t2 === void 0 || h(e2, t2)));
      }, isDeclareModule: function(e2, t2) {
        return !!e2 && (e2.type === "DeclareModule" && (t2 === void 0 || h(e2, t2)));
      }, isDeclareModuleExports: function(e2, t2) {
        return !!e2 && (e2.type === "DeclareModuleExports" && (t2 === void 0 || h(e2, t2)));
      }, isDeclareTypeAlias: function(e2, t2) {
        return !!e2 && (e2.type === "DeclareTypeAlias" && (t2 === void 0 || h(e2, t2)));
      }, isDeclareOpaqueType: function(e2, t2) {
        return !!e2 && (e2.type === "DeclareOpaqueType" && (t2 === void 0 || h(e2, t2)));
      }, isDeclareVariable: function(e2, t2) {
        return !!e2 && (e2.type === "DeclareVariable" && (t2 === void 0 || h(e2, t2)));
      }, isDeclareExportDeclaration: Oe, isDeclareExportAllDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "DeclareExportAllDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isDeclaredPredicate: function(e2, t2) {
        return !!e2 && (e2.type === "DeclaredPredicate" && (t2 === void 0 || h(e2, t2)));
      }, isExistsTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "ExistsTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isFunctionTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "FunctionTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isFunctionTypeParam: function(e2, t2) {
        return !!e2 && (e2.type === "FunctionTypeParam" && (t2 === void 0 || h(e2, t2)));
      }, isGenericTypeAnnotation: Re, isInferredPredicate: function(e2, t2) {
        return !!e2 && (e2.type === "InferredPredicate" && (t2 === void 0 || h(e2, t2)));
      }, isInterfaceExtends: function(e2, t2) {
        return !!e2 && (e2.type === "InterfaceExtends" && (t2 === void 0 || h(e2, t2)));
      }, isInterfaceDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "InterfaceDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isInterfaceTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "InterfaceTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isIntersectionTypeAnnotation: Ne, isMixedTypeAnnotation: Be, isEmptyTypeAnnotation: _e, isNullableTypeAnnotation: Le, isNumberLiteralTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "NumberLiteralTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isNumberTypeAnnotation: Me, isObjectTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "ObjectTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isObjectTypeInternalSlot: function(e2, t2) {
        return !!e2 && (e2.type === "ObjectTypeInternalSlot" && (t2 === void 0 || h(e2, t2)));
      }, isObjectTypeCallProperty: function(e2, t2) {
        return !!e2 && (e2.type === "ObjectTypeCallProperty" && (t2 === void 0 || h(e2, t2)));
      }, isObjectTypeIndexer: function(e2, t2) {
        return !!e2 && (e2.type === "ObjectTypeIndexer" && (t2 === void 0 || h(e2, t2)));
      }, isObjectTypeProperty: function(e2, t2) {
        return !!e2 && (e2.type === "ObjectTypeProperty" && (t2 === void 0 || h(e2, t2)));
      }, isObjectTypeSpreadProperty: function(e2, t2) {
        return !!e2 && (e2.type === "ObjectTypeSpreadProperty" && (t2 === void 0 || h(e2, t2)));
      }, isOpaqueType: function(e2, t2) {
        return !!e2 && (e2.type === "OpaqueType" && (t2 === void 0 || h(e2, t2)));
      }, isQualifiedTypeIdentifier: function(e2, t2) {
        return !!e2 && (e2.type === "QualifiedTypeIdentifier" && (t2 === void 0 || h(e2, t2)));
      }, isStringLiteralTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "StringLiteralTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isStringTypeAnnotation: Ue, isSymbolTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "SymbolTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isThisTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "ThisTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isTupleTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "TupleTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isTypeofTypeAnnotation: function(e2, t2) {
        return !!e2 && (e2.type === "TypeofTypeAnnotation" && (t2 === void 0 || h(e2, t2)));
      }, isTypeAlias: function(e2, t2) {
        return !!e2 && (e2.type === "TypeAlias" && (t2 === void 0 || h(e2, t2)));
      }, isTypeAnnotation: Ge, isTypeCastExpression: Ve, isTypeParameter: function(e2, t2) {
        return !!e2 && (e2.type === "TypeParameter" && (t2 === void 0 || h(e2, t2)));
      }, isTypeParameterDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TypeParameterDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTypeParameterInstantiation: function(e2, t2) {
        return !!e2 && (e2.type === "TypeParameterInstantiation" && (t2 === void 0 || h(e2, t2)));
      }, isUnionTypeAnnotation: We, isVariance: function(e2, t2) {
        return !!e2 && (e2.type === "Variance" && (t2 === void 0 || h(e2, t2)));
      }, isVoidTypeAnnotation: He, isEnumDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "EnumDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isEnumBooleanBody: function(e2, t2) {
        return !!e2 && (e2.type === "EnumBooleanBody" && (t2 === void 0 || h(e2, t2)));
      }, isEnumNumberBody: function(e2, t2) {
        return !!e2 && (e2.type === "EnumNumberBody" && (t2 === void 0 || h(e2, t2)));
      }, isEnumStringBody: function(e2, t2) {
        return !!e2 && (e2.type === "EnumStringBody" && (t2 === void 0 || h(e2, t2)));
      }, isEnumSymbolBody: function(e2, t2) {
        return !!e2 && (e2.type === "EnumSymbolBody" && (t2 === void 0 || h(e2, t2)));
      }, isEnumBooleanMember: function(e2, t2) {
        return !!e2 && (e2.type === "EnumBooleanMember" && (t2 === void 0 || h(e2, t2)));
      }, isEnumNumberMember: function(e2, t2) {
        return !!e2 && (e2.type === "EnumNumberMember" && (t2 === void 0 || h(e2, t2)));
      }, isEnumStringMember: function(e2, t2) {
        return !!e2 && (e2.type === "EnumStringMember" && (t2 === void 0 || h(e2, t2)));
      }, isEnumDefaultedMember: function(e2, t2) {
        return !!e2 && (e2.type === "EnumDefaultedMember" && (t2 === void 0 || h(e2, t2)));
      }, isIndexedAccessType: Xe, isOptionalIndexedAccessType: function(e2, t2) {
        return !!e2 && (e2.type === "OptionalIndexedAccessType" && (t2 === void 0 || h(e2, t2)));
      }, isJSXAttribute: qe, isJSXClosingElement: function(e2, t2) {
        return !!e2 && (e2.type === "JSXClosingElement" && (t2 === void 0 || h(e2, t2)));
      }, isJSXElement: $e, isJSXEmptyExpression: Ke, isJSXExpressionContainer: ze, isJSXSpreadChild: function(e2, t2) {
        return !!e2 && (e2.type === "JSXSpreadChild" && (t2 === void 0 || h(e2, t2)));
      }, isJSXIdentifier: Je, isJSXMemberExpression: Ye, isJSXNamespacedName: Qe, isJSXOpeningElement: function(e2, t2) {
        return !!e2 && (e2.type === "JSXOpeningElement" && (t2 === void 0 || h(e2, t2)));
      }, isJSXSpreadAttribute: Ze, isJSXText: et, isJSXFragment: function(e2, t2) {
        return !!e2 && (e2.type === "JSXFragment" && (t2 === void 0 || h(e2, t2)));
      }, isJSXOpeningFragment: function(e2, t2) {
        return !!e2 && (e2.type === "JSXOpeningFragment" && (t2 === void 0 || h(e2, t2)));
      }, isJSXClosingFragment: function(e2, t2) {
        return !!e2 && (e2.type === "JSXClosingFragment" && (t2 === void 0 || h(e2, t2)));
      }, isNoop: function(e2, t2) {
        return !!e2 && (e2.type === "Noop" && (t2 === void 0 || h(e2, t2)));
      }, isPlaceholder: tt, isV8IntrinsicIdentifier: function(e2, t2) {
        return !!e2 && (e2.type === "V8IntrinsicIdentifier" && (t2 === void 0 || h(e2, t2)));
      }, isArgumentPlaceholder: function(e2, t2) {
        return !!e2 && (e2.type === "ArgumentPlaceholder" && (t2 === void 0 || h(e2, t2)));
      }, isBindExpression: rt, isClassProperty: nt, isPipelineTopicExpression: st, isPipelineBareFunction: function(e2, t2) {
        return !!e2 && (e2.type === "PipelineBareFunction" && (t2 === void 0 || h(e2, t2)));
      }, isPipelinePrimaryTopicReference: function(e2, t2) {
        return !!e2 && (e2.type === "PipelinePrimaryTopicReference" && (t2 === void 0 || h(e2, t2)));
      }, isClassPrivateProperty: at, isClassPrivateMethod: function(e2, t2) {
        return !!e2 && (e2.type === "ClassPrivateMethod" && (t2 === void 0 || h(e2, t2)));
      }, isImportAttribute: function(e2, t2) {
        return !!e2 && (e2.type === "ImportAttribute" && (t2 === void 0 || h(e2, t2)));
      }, isDecorator: function(e2, t2) {
        return !!e2 && (e2.type === "Decorator" && (t2 === void 0 || h(e2, t2)));
      }, isDoExpression: function(e2, t2) {
        return !!e2 && (e2.type === "DoExpression" && (t2 === void 0 || h(e2, t2)));
      }, isExportDefaultSpecifier: it, isPrivateName: ot, isRecordExpression: function(e2, t2) {
        return !!e2 && (e2.type === "RecordExpression" && (t2 === void 0 || h(e2, t2)));
      }, isTupleExpression: function(e2, t2) {
        return !!e2 && (e2.type === "TupleExpression" && (t2 === void 0 || h(e2, t2)));
      }, isDecimalLiteral: function(e2, t2) {
        return !!e2 && (e2.type === "DecimalLiteral" && (t2 === void 0 || h(e2, t2)));
      }, isStaticBlock: function(e2, t2) {
        return !!e2 && (e2.type === "StaticBlock" && (t2 === void 0 || h(e2, t2)));
      }, isModuleExpression: function(e2, t2) {
        return !!e2 && (e2.type === "ModuleExpression" && (t2 === void 0 || h(e2, t2)));
      }, isTSParameterProperty: function(e2, t2) {
        return !!e2 && (e2.type === "TSParameterProperty" && (t2 === void 0 || h(e2, t2)));
      }, isTSDeclareFunction: function(e2, t2) {
        return !!e2 && (e2.type === "TSDeclareFunction" && (t2 === void 0 || h(e2, t2)));
      }, isTSDeclareMethod: function(e2, t2) {
        return !!e2 && (e2.type === "TSDeclareMethod" && (t2 === void 0 || h(e2, t2)));
      }, isTSQualifiedName: function(e2, t2) {
        return !!e2 && (e2.type === "TSQualifiedName" && (t2 === void 0 || h(e2, t2)));
      }, isTSCallSignatureDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TSCallSignatureDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTSConstructSignatureDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TSConstructSignatureDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTSPropertySignature: function(e2, t2) {
        return !!e2 && (e2.type === "TSPropertySignature" && (t2 === void 0 || h(e2, t2)));
      }, isTSMethodSignature: function(e2, t2) {
        return !!e2 && (e2.type === "TSMethodSignature" && (t2 === void 0 || h(e2, t2)));
      }, isTSIndexSignature: function(e2, t2) {
        return !!e2 && (e2.type === "TSIndexSignature" && (t2 === void 0 || h(e2, t2)));
      }, isTSAnyKeyword: ut, isTSBooleanKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSBooleanKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSBigIntKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSBigIntKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSIntrinsicKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSIntrinsicKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSNeverKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSNeverKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSNullKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSNullKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSNumberKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSNumberKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSObjectKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSObjectKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSStringKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSStringKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSSymbolKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSSymbolKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSUndefinedKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSUndefinedKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSUnknownKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSUnknownKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSVoidKeyword: function(e2, t2) {
        return !!e2 && (e2.type === "TSVoidKeyword" && (t2 === void 0 || h(e2, t2)));
      }, isTSThisType: function(e2, t2) {
        return !!e2 && (e2.type === "TSThisType" && (t2 === void 0 || h(e2, t2)));
      }, isTSFunctionType: function(e2, t2) {
        return !!e2 && (e2.type === "TSFunctionType" && (t2 === void 0 || h(e2, t2)));
      }, isTSConstructorType: function(e2, t2) {
        return !!e2 && (e2.type === "TSConstructorType" && (t2 === void 0 || h(e2, t2)));
      }, isTSTypeReference: function(e2, t2) {
        return !!e2 && (e2.type === "TSTypeReference" && (t2 === void 0 || h(e2, t2)));
      }, isTSTypePredicate: function(e2, t2) {
        return !!e2 && (e2.type === "TSTypePredicate" && (t2 === void 0 || h(e2, t2)));
      }, isTSTypeQuery: function(e2, t2) {
        return !!e2 && (e2.type === "TSTypeQuery" && (t2 === void 0 || h(e2, t2)));
      }, isTSTypeLiteral: function(e2, t2) {
        return !!e2 && (e2.type === "TSTypeLiteral" && (t2 === void 0 || h(e2, t2)));
      }, isTSArrayType: lt, isTSTupleType: function(e2, t2) {
        return !!e2 && (e2.type === "TSTupleType" && (t2 === void 0 || h(e2, t2)));
      }, isTSOptionalType: ct, isTSRestType: pt, isTSNamedTupleMember: function(e2, t2) {
        return !!e2 && (e2.type === "TSNamedTupleMember" && (t2 === void 0 || h(e2, t2)));
      }, isTSUnionType: dt, isTSIntersectionType: ft, isTSConditionalType: function(e2, t2) {
        return !!e2 && (e2.type === "TSConditionalType" && (t2 === void 0 || h(e2, t2)));
      }, isTSInferType: function(e2, t2) {
        return !!e2 && (e2.type === "TSInferType" && (t2 === void 0 || h(e2, t2)));
      }, isTSParenthesizedType: function(e2, t2) {
        return !!e2 && (e2.type === "TSParenthesizedType" && (t2 === void 0 || h(e2, t2)));
      }, isTSTypeOperator: function(e2, t2) {
        return !!e2 && (e2.type === "TSTypeOperator" && (t2 === void 0 || h(e2, t2)));
      }, isTSIndexedAccessType: function(e2, t2) {
        return !!e2 && (e2.type === "TSIndexedAccessType" && (t2 === void 0 || h(e2, t2)));
      }, isTSMappedType: function(e2, t2) {
        return !!e2 && (e2.type === "TSMappedType" && (t2 === void 0 || h(e2, t2)));
      }, isTSLiteralType: function(e2, t2) {
        return !!e2 && (e2.type === "TSLiteralType" && (t2 === void 0 || h(e2, t2)));
      }, isTSExpressionWithTypeArguments: function(e2, t2) {
        return !!e2 && (e2.type === "TSExpressionWithTypeArguments" && (t2 === void 0 || h(e2, t2)));
      }, isTSInterfaceDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TSInterfaceDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTSInterfaceBody: function(e2, t2) {
        return !!e2 && (e2.type === "TSInterfaceBody" && (t2 === void 0 || h(e2, t2)));
      }, isTSTypeAliasDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TSTypeAliasDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTSAsExpression: ht, isTSTypeAssertion: mt, isTSEnumDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TSEnumDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTSEnumMember: function(e2, t2) {
        return !!e2 && (e2.type === "TSEnumMember" && (t2 === void 0 || h(e2, t2)));
      }, isTSModuleDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TSModuleDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTSModuleBlock: function(e2, t2) {
        return !!e2 && (e2.type === "TSModuleBlock" && (t2 === void 0 || h(e2, t2)));
      }, isTSImportType: function(e2, t2) {
        return !!e2 && (e2.type === "TSImportType" && (t2 === void 0 || h(e2, t2)));
      }, isTSImportEqualsDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TSImportEqualsDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTSExternalModuleReference: function(e2, t2) {
        return !!e2 && (e2.type === "TSExternalModuleReference" && (t2 === void 0 || h(e2, t2)));
      }, isTSNonNullExpression: yt, isTSExportAssignment: function(e2, t2) {
        return !!e2 && (e2.type === "TSExportAssignment" && (t2 === void 0 || h(e2, t2)));
      }, isTSNamespaceExportDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TSNamespaceExportDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTSTypeAnnotation: gt, isTSTypeParameterInstantiation: function(e2, t2) {
        return !!e2 && (e2.type === "TSTypeParameterInstantiation" && (t2 === void 0 || h(e2, t2)));
      }, isTSTypeParameterDeclaration: function(e2, t2) {
        return !!e2 && (e2.type === "TSTypeParameterDeclaration" && (t2 === void 0 || h(e2, t2)));
      }, isTSTypeParameter: function(e2, t2) {
        return !!e2 && (e2.type === "TSTypeParameter" && (t2 === void 0 || h(e2, t2)));
      }, isExpression: vt, isBinary: bt, isScopable: Et, isBlockParent: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "BlockStatement" || r2 === "CatchClause" || r2 === "DoWhileStatement" || r2 === "ForInStatement" || r2 === "ForStatement" || r2 === "FunctionDeclaration" || r2 === "FunctionExpression" || r2 === "Program" || r2 === "ObjectMethod" || r2 === "SwitchStatement" || r2 === "WhileStatement" || r2 === "ArrowFunctionExpression" || r2 === "ForOfStatement" || r2 === "ClassMethod" || r2 === "ClassPrivateMethod" || r2 === "StaticBlock" || r2 === "TSModuleBlock" || r2 === "Placeholder" && e2.expectedNode === "BlockStatement") && (t2 === void 0 || h(e2, t2));
      }, isBlock: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "BlockStatement" || r2 === "Program" || r2 === "TSModuleBlock" || r2 === "Placeholder" && e2.expectedNode === "BlockStatement") && (t2 === void 0 || h(e2, t2));
      }, isStatement: xt, isTerminatorless: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "BreakStatement" || r2 === "ContinueStatement" || r2 === "ReturnStatement" || r2 === "ThrowStatement" || r2 === "YieldExpression" || r2 === "AwaitExpression") && (t2 === void 0 || h(e2, t2));
      }, isCompletionStatement: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "BreakStatement" || r2 === "ContinueStatement" || r2 === "ReturnStatement" || r2 === "ThrowStatement") && (t2 === void 0 || h(e2, t2));
      }, isConditional: Dt, isLoop: At, isWhile: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "DoWhileStatement" || r2 === "WhileStatement") && (t2 === void 0 || h(e2, t2));
      }, isExpressionWrapper: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ExpressionStatement" || r2 === "ParenthesizedExpression" || r2 === "TypeCastExpression") && (t2 === void 0 || h(e2, t2));
      }, isFor: wt, isForXStatement: Ct, isFunction: St, isFunctionParent: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "FunctionDeclaration" || r2 === "FunctionExpression" || r2 === "ObjectMethod" || r2 === "ArrowFunctionExpression" || r2 === "ClassMethod" || r2 === "ClassPrivateMethod") && (t2 === void 0 || h(e2, t2));
      }, isPureish: Tt, isDeclaration: jt, isPatternLike: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "Identifier" || r2 === "RestElement" || r2 === "AssignmentPattern" || r2 === "ArrayPattern" || r2 === "ObjectPattern" || r2 === "Placeholder" && (e2.expectedNode === "Pattern" || e2.expectedNode === "Identifier")) && (t2 === void 0 || h(e2, t2));
      }, isLVal: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "Identifier" || r2 === "MemberExpression" || r2 === "RestElement" || r2 === "AssignmentPattern" || r2 === "ArrayPattern" || r2 === "ObjectPattern" || r2 === "TSParameterProperty" || r2 === "Placeholder" && (e2.expectedNode === "Pattern" || e2.expectedNode === "Identifier")) && (t2 === void 0 || h(e2, t2));
      }, isTSEntityName: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "Identifier" || r2 === "TSQualifiedName" || r2 === "Placeholder" && e2.expectedNode === "Identifier") && (t2 === void 0 || h(e2, t2));
      }, isLiteral: Pt, isUserWhitespacable: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ObjectMethod" || r2 === "ObjectProperty" || r2 === "ObjectTypeInternalSlot" || r2 === "ObjectTypeCallProperty" || r2 === "ObjectTypeIndexer" || r2 === "ObjectTypeProperty" || r2 === "ObjectTypeSpreadProperty") && (t2 === void 0 || h(e2, t2));
      }, isMethod: It, isObjectMember: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ObjectMethod" || r2 === "ObjectProperty") && (t2 === void 0 || h(e2, t2));
      }, isProperty: Ft, isUnaryLike: kt, isPattern: Ot, isClass: Rt, isModuleDeclaration: Nt, isExportDeclaration: Bt, isModuleSpecifier: _t, isFlow: Lt, isFlowType: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "AnyTypeAnnotation" || r2 === "ArrayTypeAnnotation" || r2 === "BooleanTypeAnnotation" || r2 === "BooleanLiteralTypeAnnotation" || r2 === "NullLiteralTypeAnnotation" || r2 === "ExistsTypeAnnotation" || r2 === "FunctionTypeAnnotation" || r2 === "GenericTypeAnnotation" || r2 === "InterfaceTypeAnnotation" || r2 === "IntersectionTypeAnnotation" || r2 === "MixedTypeAnnotation" || r2 === "EmptyTypeAnnotation" || r2 === "NullableTypeAnnotation" || r2 === "NumberLiteralTypeAnnotation" || r2 === "NumberTypeAnnotation" || r2 === "ObjectTypeAnnotation" || r2 === "StringLiteralTypeAnnotation" || r2 === "StringTypeAnnotation" || r2 === "SymbolTypeAnnotation" || r2 === "ThisTypeAnnotation" || r2 === "TupleTypeAnnotation" || r2 === "TypeofTypeAnnotation" || r2 === "UnionTypeAnnotation" || r2 === "VoidTypeAnnotation" || r2 === "IndexedAccessType" || r2 === "OptionalIndexedAccessType") && (t2 === void 0 || h(e2, t2));
      }, isFlowBaseAnnotation: Mt, isFlowDeclaration: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "DeclareClass" || r2 === "DeclareFunction" || r2 === "DeclareInterface" || r2 === "DeclareModule" || r2 === "DeclareModuleExports" || r2 === "DeclareTypeAlias" || r2 === "DeclareOpaqueType" || r2 === "DeclareVariable" || r2 === "DeclareExportDeclaration" || r2 === "DeclareExportAllDeclaration" || r2 === "InterfaceDeclaration" || r2 === "OpaqueType" || r2 === "TypeAlias") && (t2 === void 0 || h(e2, t2));
      }, isFlowPredicate: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "DeclaredPredicate" || r2 === "InferredPredicate") && (t2 === void 0 || h(e2, t2));
      }, isEnumBody: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "EnumBooleanBody" || r2 === "EnumNumberBody" || r2 === "EnumStringBody" || r2 === "EnumSymbolBody") && (t2 === void 0 || h(e2, t2));
      }, isEnumMember: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "EnumBooleanMember" || r2 === "EnumNumberMember" || r2 === "EnumStringMember" || r2 === "EnumDefaultedMember") && (t2 === void 0 || h(e2, t2));
      }, isJSX: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "JSXAttribute" || r2 === "JSXClosingElement" || r2 === "JSXElement" || r2 === "JSXEmptyExpression" || r2 === "JSXExpressionContainer" || r2 === "JSXSpreadChild" || r2 === "JSXIdentifier" || r2 === "JSXMemberExpression" || r2 === "JSXNamespacedName" || r2 === "JSXOpeningElement" || r2 === "JSXSpreadAttribute" || r2 === "JSXText" || r2 === "JSXFragment" || r2 === "JSXOpeningFragment" || r2 === "JSXClosingFragment") && (t2 === void 0 || h(e2, t2));
      }, isPrivate: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "ClassPrivateProperty" || r2 === "ClassPrivateMethod" || r2 === "PrivateName") && (t2 === void 0 || h(e2, t2));
      }, isTSTypeElement: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "TSCallSignatureDeclaration" || r2 === "TSConstructSignatureDeclaration" || r2 === "TSPropertySignature" || r2 === "TSMethodSignature" || r2 === "TSIndexSignature") && (t2 === void 0 || h(e2, t2));
      }, isTSType: function(e2, t2) {
        if (!e2)
          return false;
        var r2 = e2.type;
        return (r2 === "TSAnyKeyword" || r2 === "TSBooleanKeyword" || r2 === "TSBigIntKeyword" || r2 === "TSIntrinsicKeyword" || r2 === "TSNeverKeyword" || r2 === "TSNullKeyword" || r2 === "TSNumberKeyword" || r2 === "TSObjectKeyword" || r2 === "TSStringKeyword" || r2 === "TSSymbolKeyword" || r2 === "TSUndefinedKeyword" || r2 === "TSUnknownKeyword" || r2 === "TSVoidKeyword" || r2 === "TSThisType" || r2 === "TSFunctionType" || r2 === "TSConstructorType" || r2 === "TSTypeReference" || r2 === "TSTypePredicate" || r2 === "TSTypeQuery" || r2 === "TSTypeLiteral" || r2 === "TSArrayType" || r2 === "TSTupleType" || r2 === "TSOptionalType" || r2 === "TSRestType" || r2 === "TSUnionType" || r2 === "TSIntersectionType" || r2 === "TSConditionalType" || r2 === "TSInferType" || r2 === "TSParenthesizedType" || r2 === "TSTypeOperator" || r2 === "TSIndexedAccessType" || r2 === "TSMappedType" || r2 === "TSLiteralType" || r2 === "TSExpressionWithTypeArguments" || r2 === "TSImportType") && (t2 === void 0 || h(e2, t2));
      }, isTSBaseType: Ut, isNumberLiteral: function(e2, t2) {
        return console.trace("The node type NumberLiteral has been renamed to NumericLiteral"), !!e2 && (e2.type === "NumberLiteral" && (t2 === void 0 || h(e2, t2)));
      }, isRegexLiteral: function(e2, t2) {
        return console.trace("The node type RegexLiteral has been renamed to RegExpLiteral"), !!e2 && (e2.type === "RegexLiteral" && (t2 === void 0 || h(e2, t2)));
      }, isRestProperty: function(e2, t2) {
        return console.trace("The node type RestProperty has been renamed to RestElement"), !!e2 && (e2.type === "RestProperty" && (t2 === void 0 || h(e2, t2)));
      }, isSpreadProperty: function(e2, t2) {
        return console.trace("The node type SpreadProperty has been renamed to SpreadElement"), !!e2 && (e2.type === "SpreadProperty" && (t2 === void 0 || h(e2, t2)));
      } }), Ic = { types: ["Identifier", "JSXIdentifier"], checkPath: function(e2, t2) {
        var r2 = e2.node, n2 = e2.parent;
        if (!F(r2, t2) && !Ye(n2, t2)) {
          if (!Je(r2, t2))
            return false;
          if (jc.isCompatTag(r2.name))
            return false;
        }
        return Ac(r2, n2, e2.parentPath.parent);
      } }, Fc = { types: ["MemberExpression"], checkPath: function(e2) {
        var t2 = e2.node, r2 = e2.parent;
        return M(t2) && Ac(t2, r2);
      } }, kc = { types: ["Identifier"], checkPath: function(e2) {
        var t2 = e2.node, r2 = e2.parent, n2 = e2.parentPath.parent;
        return F(t2) && Ec(t2, r2, n2);
      } }, Oc = { types: ["Statement"], checkPath: function(e2) {
        var t2 = e2.node, r2 = e2.parent;
        if (xt(t2)) {
          if (Z(t2)) {
            if (Ct(r2, { left: t2 }))
              return false;
            if (j(r2, { init: t2 }))
              return false;
          }
          return true;
        }
        return false;
      } }, Rc = { types: ["Expression"], checkPath: function(e2) {
        return e2.isIdentifier() ? e2.isReferencedIdentifier() : vt(e2.node);
      } }, Nc = { types: ["Scopable", "Pattern"], checkPath: function(e2) {
        return wc(e2.node, e2.parent);
      } }, Bc = { checkPath: function(e2) {
        return Ac(e2.node, e2.parent);
      } }, _c = { checkPath: function(e2) {
        return Dc(e2.node);
      } }, Lc = { types: ["VariableDeclaration"], checkPath: function(e2) {
        return Tc(e2.node);
      } }, Mc = { types: ["Flow", "ImportDeclaration", "ExportDeclaration", "ImportSpecifier"], checkPath: function(e2) {
        var t2 = e2.node;
        return !!Lt(t2) || (fe(t2) ? t2.importKind === "type" || t2.importKind === "typeof" : Bt(t2) ? t2.exportKind === "type" : !!ye(t2) && (t2.importKind === "type" || t2.importKind === "typeof"));
      } }, Uc = Object.freeze({ __proto__: null, ReferencedIdentifier: Ic, ReferencedMemberExpression: Fc, BindingIdentifier: kc, Statement: Oc, Expression: Rc, Scope: Nc, Referenced: Bc, BlockScoped: _c, Var: Lc, User: { checkPath: function(e2) {
        return e2.node && !!e2.node.loc;
      } }, Generated: { checkPath: function(e2) {
        return !e2.isUser();
      } }, Pure: { checkPath: function(e2, t2) {
        return e2.scope.isPure(e2.node, t2);
      } }, Flow: Mc, RestProperty: { types: ["RestElement"], checkPath: function(e2) {
        return e2.parentPath && e2.parentPath.isObjectPattern();
      } }, SpreadProperty: { types: ["RestElement"], checkPath: function(e2) {
        return e2.parentPath && e2.parentPath.isObjectExpression();
      } }, ExistentialTypeParam: { types: ["ExistsTypeAnnotation"] }, NumericLiteralTypeAnnotation: { types: ["NumberLiteralTypeAnnotation"] }, ForAwaitStatement: { types: ["ForOfStatement"], checkPath: function(e2) {
        return e2.node.await === true;
      } } }), Gc = 1e3, Vc = 6e4, Wc = 60 * Vc, Hc = 24 * Wc, Xc = 7 * Hc, qc = 365.25 * Hc, $c = function(e2, t2) {
        t2 = t2 || {};
        var r2 = typeof e2;
        if (r2 === "string" && e2.length > 0)
          return function(e3) {
            if ((e3 = String(e3)).length > 100)
              return;
            var t3 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e3);
            if (!t3)
              return;
            var r3 = parseFloat(t3[1]);
            switch ((t3[2] || "ms").toLowerCase()) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case "y":
                return r3 * qc;
              case "weeks":
              case "week":
              case "w":
                return r3 * Xc;
              case "days":
              case "day":
              case "d":
                return r3 * Hc;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case "h":
                return r3 * Wc;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case "m":
                return r3 * Vc;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case "s":
                return r3 * Gc;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case "ms":
                return r3;
              default:
                return;
            }
          }(e2);
        if (r2 === "number" && isFinite(e2))
          return t2.long ? function(e3) {
            var t3 = Math.abs(e3);
            if (t3 >= Hc)
              return Kc(e3, t3, Hc, "day");
            if (t3 >= Wc)
              return Kc(e3, t3, Wc, "hour");
            if (t3 >= Vc)
              return Kc(e3, t3, Vc, "minute");
            if (t3 >= Gc)
              return Kc(e3, t3, Gc, "second");
            return e3 + " ms";
          }(e2) : function(e3) {
            var t3 = Math.abs(e3);
            if (t3 >= Hc)
              return Math.round(e3 / Hc) + "d";
            if (t3 >= Wc)
              return Math.round(e3 / Wc) + "h";
            if (t3 >= Vc)
              return Math.round(e3 / Vc) + "m";
            if (t3 >= Gc)
              return Math.round(e3 / Gc) + "s";
            return e3 + "ms";
          }(e2);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e2));
      };
      function Kc(e2, t2, r2, n2) {
        var s2 = t2 >= 1.5 * r2;
        return Math.round(e2 / r2) + " " + n2 + (s2 ? "s" : "");
      }
      var zc = function(e2) {
        function t2(e3) {
          var n3, s2, a2, i2 = null;
          function o2() {
            for (var e4 = arguments.length, r3 = new Array(e4), s3 = 0; s3 < e4; s3++)
              r3[s3] = arguments[s3];
            if (o2.enabled) {
              var a3 = o2, i3 = Number(new Date()), u2 = i3 - (n3 || i3);
              a3.diff = u2, a3.prev = n3, a3.curr = i3, n3 = i3, r3[0] = t2.coerce(r3[0]), typeof r3[0] != "string" && r3.unshift("%O");
              var l2 = 0;
              r3[0] = r3[0].replace(/%([a-zA-Z%])/g, function(e5, n4) {
                if (e5 === "%%")
                  return "%";
                l2++;
                var s4 = t2.formatters[n4];
                if (typeof s4 == "function") {
                  var i4 = r3[l2];
                  e5 = s4.call(a3, i4), r3.splice(l2, 1), l2--;
                }
                return e5;
              }), t2.formatArgs.call(a3, r3);
              var c2 = a3.log || t2.log;
              c2.apply(a3, r3);
            }
          }
          return o2.namespace = e3, o2.useColors = t2.useColors(), o2.color = t2.selectColor(e3), o2.extend = r2, o2.destroy = t2.destroy, Object.defineProperty(o2, "enabled", { enumerable: true, configurable: false, get: function() {
            return i2 !== null ? i2 : (s2 !== t2.namespaces && (s2 = t2.namespaces, a2 = t2.enabled(e3)), a2);
          }, set: function(e4) {
            i2 = e4;
          } }), typeof t2.init == "function" && t2.init(o2), o2;
        }
        function r2(e3, r3) {
          var n3 = t2(this.namespace + (r3 === void 0 ? ":" : r3) + e3);
          return n3.log = this.log, n3;
        }
        function n2(e3) {
          return e3.toString().substring(2, e3.toString().length - 2).replace(/\.\*\?$/, "*");
        }
        return t2.debug = t2, t2.default = t2, t2.coerce = function(e3) {
          if (e3 instanceof Error)
            return e3.stack || e3.message;
          return e3;
        }, t2.disable = function() {
          var e3 = [].concat(c(t2.names.map(n2)), c(t2.skips.map(n2).map(function(e4) {
            return "-" + e4;
          }))).join(",");
          return t2.enable(""), e3;
        }, t2.enable = function(e3) {
          var r3;
          t2.save(e3), t2.namespaces = e3, t2.names = [], t2.skips = [];
          var n3 = (typeof e3 == "string" ? e3 : "").split(/[\s,]+/), s2 = n3.length;
          for (r3 = 0; r3 < s2; r3++)
            n3[r3] && ((e3 = n3[r3].replace(/\*/g, ".*?"))[0] === "-" ? t2.skips.push(new RegExp("^" + e3.substr(1) + "$")) : t2.names.push(new RegExp("^" + e3 + "$")));
        }, t2.enabled = function(e3) {
          if (e3[e3.length - 1] === "*")
            return true;
          var r3, n3;
          for (r3 = 0, n3 = t2.skips.length; r3 < n3; r3++)
            if (t2.skips[r3].test(e3))
              return false;
          for (r3 = 0, n3 = t2.names.length; r3 < n3; r3++)
            if (t2.names[r3].test(e3))
              return true;
          return false;
        }, t2.humanize = $c, t2.destroy = function() {
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }, Object.keys(e2).forEach(function(r3) {
          t2[r3] = e2[r3];
        }), t2.names = [], t2.skips = [], t2.formatters = {}, t2.selectColor = function(e3) {
          for (var r3 = 0, n3 = 0; n3 < e3.length; n3++)
            r3 = (r3 << 5) - r3 + e3.charCodeAt(n3), r3 |= 0;
          return t2.colors[Math.abs(r3) % t2.colors.length];
        }, t2.enable(t2.load()), t2;
      }, Jc = zt(function(e2, t2) {
        var r2;
        t2.formatArgs = function(t3) {
          if (t3[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t3[0] + (this.useColors ? "%c " : " ") + "+" + e2.exports.humanize(this.diff), !this.useColors)
            return;
          var r3 = "color: " + this.color;
          t3.splice(1, 0, r3, "color: inherit");
          var n2 = 0, s2 = 0;
          t3[0].replace(/%[a-zA-Z%]/g, function(e3) {
            e3 !== "%%" && (n2++, e3 === "%c" && (s2 = n2));
          }), t3.splice(s2, 0, r3);
        }, t2.save = function(e3) {
          try {
            e3 ? t2.storage.setItem("debug", e3) : t2.storage.removeItem("debug");
          } catch (e4) {
          }
        }, t2.load = function() {
          var e3;
          try {
            e3 = t2.storage.getItem("debug");
          } catch (e4) {
          }
          !e3 && ar !== void 0 && "env" in ar && (e3 = ar.env.DEBUG);
          return e3;
        }, t2.useColors = function() {
          if (typeof window != "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs))
            return true;
          if (typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
            return false;
          return typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
        }, t2.storage = function() {
          try {
            return localStorage;
          } catch (e3) {
          }
        }(), t2.destroy = (r2 = false, function() {
          r2 || (r2 = true, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
        }), t2.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t2.log = console.debug || console.log || function() {
        }, e2.exports = zc(t2), e2.exports.formatters.j = function(e3) {
          try {
            return JSON.stringify(e3);
          } catch (e4) {
            return "[UnexpectedJSONParseError]: " + e4.message;
          }
        };
      }, "/$$rollup_base$$/packages/babel-traverse/node_modules/debug/src"), Yc = function() {
        function e2(e3) {
          var t3 = e3.identifier, r2 = e3.scope, n2 = e3.path, s2 = e3.kind;
          this.identifier = void 0, this.scope = void 0, this.path = void 0, this.kind = void 0, this.constantViolations = [], this.constant = true, this.referencePaths = [], this.referenced = false, this.references = 0, this.identifier = t3, this.scope = r2, this.path = n2, this.kind = s2, this.clearValue();
        }
        var t2 = e2.prototype;
        return t2.deoptValue = function() {
          this.clearValue(), this.hasDeoptedValue = true;
        }, t2.setValue = function(e3) {
          this.hasDeoptedValue || (this.hasValue = true, this.value = e3);
        }, t2.clearValue = function() {
          this.hasDeoptedValue = false, this.hasValue = false, this.value = null;
        }, t2.reassign = function(e3) {
          this.constant = false, this.constantViolations.indexOf(e3) === -1 && this.constantViolations.push(e3);
        }, t2.reference = function(e3) {
          this.referencePaths.indexOf(e3) === -1 && (this.referenced = true, this.references++, this.referencePaths.push(e3));
        }, t2.dereference = function() {
          this.references--, this.referenced = !!this.references;
        }, e2;
      }();
      function Qc(e2) {
        if (!e2.isExportDeclaration())
          throw new Error("Only export declarations can be split.");
        var t2 = e2.isExportDefaultDeclaration(), r2 = e2.get("declaration"), n2 = r2.isClassDeclaration();
        if (t2) {
          var s2 = r2.isFunctionDeclaration() || n2, a2 = r2.isScope() ? r2.scope.parent : r2.scope, i2 = r2.node.id, o2 = false;
          i2 || (o2 = true, i2 = a2.generateUidIdentifier("default"), (s2 || r2.isFunctionExpression() || r2.isClassExpression()) && (r2.node.id = Ju(i2)));
          var u2 = s2 ? r2 : Ks("var", [zs(Ju(i2), r2.node)]), l2 = ia(null, [oa(Ju(i2), Ds("default"))]);
          return e2.insertAfter(l2), e2.replaceWith(u2), o2 && a2.registerDeclaration(e2), e2;
        }
        if (e2.get("specifiers").length > 0)
          throw new Error("It doesn't make sense to split exported specifiers.");
        var c2 = r2.getOuterBindingIdentifiers(), p2 = ia(null, Object.keys(c2).map(function(e3) {
          return oa(Ds(e3), Ds(e3));
        }));
        return e2.insertAfter(p2), e2.replaceWith(r2.node), e2;
      }
      var Zc = { ReferencedIdentifier: function(e2, t2) {
        var r2 = e2.node;
        r2.name === t2.oldName && (r2.name = t2.newName);
      }, Scope: function(e2, t2) {
        e2.scope.bindingIdentifierEquals(t2.oldName, t2.binding.identifier) || function(e3) {
          if (!e3.isMethod() || !e3.node.computed)
            return void e3.skip();
          for (var t3, r2 = f(Qr[e3.type]); !(t3 = r2()).done; ) {
            var n2 = t3.value;
            n2 !== "key" && e3.skipKey(n2);
          }
        }(e2);
      }, "AssignmentExpression|Declaration|VariableDeclarator": function(e2, t2) {
        if (!e2.isVariableDeclaration()) {
          var r2 = e2.getOuterBindingIdentifiers();
          for (var n2 in r2)
            n2 === t2.oldName && (r2[n2].name = t2.newName);
        }
      } }, ep = function() {
        function e2(e3, t3, r2) {
          this.newName = r2, this.oldName = t3, this.binding = e3;
        }
        var t2 = e2.prototype;
        return t2.maybeConvertFromExportDeclaration = function(e3) {
          var t3 = e3.parentPath;
          t3.isExportDeclaration() && (t3.isExportDefaultDeclaration() && !t3.get("declaration").node.id || Qc(t3));
        }, t2.maybeConvertFromClassFunctionDeclaration = function(e3) {
        }, t2.maybeConvertFromClassFunctionExpression = function(e3) {
        }, t2.rename = function(e3) {
          var t3 = this, r2 = this.binding, n2 = this.oldName, s2 = this.newName, a2 = r2.scope, i2 = r2.path.find(function(e4) {
            return e4.isDeclaration() || e4.isFunctionExpression() || e4.isClassExpression();
          });
          i2 && (i2.getOuterBindingIdentifiers()[n2] === r2.identifier && this.maybeConvertFromExportDeclaration(i2));
          var o2 = e3 || a2.block;
          (o2 == null ? void 0 : o2.type) === "SwitchStatement" ? o2.cases.forEach(function(e4) {
            a2.traverse(e4, Zc, t3);
          }) : a2.traverse(o2, Zc, this), e3 || (a2.removeOwnBinding(n2), a2.bindings[s2] = r2, this.binding.identifier.name = s2), i2 && (this.maybeConvertFromClassFunctionDeclaration(i2), this.maybeConvertFromClassFunctionExpression(i2));
        }, e2;
      }();
      var tp = { builtin: { Array: false, ArrayBuffer: false, Atomics: false, BigInt: false, BigInt64Array: false, BigUint64Array: false, Boolean: false, constructor: false, DataView: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Float32Array: false, Float64Array: false, Function: false, globalThis: false, hasOwnProperty: false, Infinity: false, Int16Array: false, Int32Array: false, Int8Array: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Map: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, Promise: false, propertyIsEnumerable: false, Proxy: false, RangeError: false, ReferenceError: false, Reflect: false, RegExp: false, Set: false, SharedArrayBuffer: false, String: false, Symbol: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, Uint16Array: false, Uint32Array: false, Uint8Array: false, Uint8ClampedArray: false, undefined: false, unescape: false, URIError: false, valueOf: false, WeakMap: false, WeakSet: false }, es5: { Array: false, Boolean: false, constructor: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Function: false, hasOwnProperty: false, Infinity: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, propertyIsEnumerable: false, RangeError: false, ReferenceError: false, RegExp: false, String: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, undefined: false, unescape: false, URIError: false, valueOf: false }, es2015: { Array: false, ArrayBuffer: false, Boolean: false, constructor: false, DataView: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Float32Array: false, Float64Array: false, Function: false, hasOwnProperty: false, Infinity: false, Int16Array: false, Int32Array: false, Int8Array: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Map: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, Promise: false, propertyIsEnumerable: false, Proxy: false, RangeError: false, ReferenceError: false, Reflect: false, RegExp: false, Set: false, String: false, Symbol: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, Uint16Array: false, Uint32Array: false, Uint8Array: false, Uint8ClampedArray: false, undefined: false, unescape: false, URIError: false, valueOf: false, WeakMap: false, WeakSet: false }, es2017: { Array: false, ArrayBuffer: false, Atomics: false, Boolean: false, constructor: false, DataView: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Float32Array: false, Float64Array: false, Function: false, hasOwnProperty: false, Infinity: false, Int16Array: false, Int32Array: false, Int8Array: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Map: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, Promise: false, propertyIsEnumerable: false, Proxy: false, RangeError: false, ReferenceError: false, Reflect: false, RegExp: false, Set: false, SharedArrayBuffer: false, String: false, Symbol: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, Uint16Array: false, Uint32Array: false, Uint8Array: false, Uint8ClampedArray: false, undefined: false, unescape: false, URIError: false, valueOf: false, WeakMap: false, WeakSet: false }, browser: { AbortController: false, AbortSignal: false, addEventListener: false, alert: false, AnalyserNode: false, Animation: false, AnimationEffectReadOnly: false, AnimationEffectTiming: false, AnimationEffectTimingReadOnly: false, AnimationEvent: false, AnimationPlaybackEvent: false, AnimationTimeline: false, applicationCache: false, ApplicationCache: false, ApplicationCacheErrorEvent: false, atob: false, Attr: false, Audio: false, AudioBuffer: false, AudioBufferSourceNode: false, AudioContext: false, AudioDestinationNode: false, AudioListener: false, AudioNode: false, AudioParam: false, AudioProcessingEvent: false, AudioScheduledSourceNode: false, "AudioWorkletGlobalScope ": false, AudioWorkletNode: false, AudioWorkletProcessor: false, BarProp: false, BaseAudioContext: false, BatteryManager: false, BeforeUnloadEvent: false, BiquadFilterNode: false, Blob: false, BlobEvent: false, blur: false, BroadcastChannel: false, btoa: false, BudgetService: false, ByteLengthQueuingStrategy: false, Cache: false, caches: false, CacheStorage: false, cancelAnimationFrame: false, cancelIdleCallback: false, CanvasCaptureMediaStreamTrack: false, CanvasGradient: false, CanvasPattern: false, CanvasRenderingContext2D: false, ChannelMergerNode: false, ChannelSplitterNode: false, CharacterData: false, clearInterval: false, clearTimeout: false, clientInformation: false, ClipboardEvent: false, close: false, closed: false, CloseEvent: false, Comment: false, CompositionEvent: false, confirm: false, console: false, ConstantSourceNode: false, ConvolverNode: false, CountQueuingStrategy: false, createImageBitmap: false, Credential: false, CredentialsContainer: false, crypto: false, Crypto: false, CryptoKey: false, CSS: false, CSSConditionRule: false, CSSFontFaceRule: false, CSSGroupingRule: false, CSSImportRule: false, CSSKeyframeRule: false, CSSKeyframesRule: false, CSSMediaRule: false, CSSNamespaceRule: false, CSSPageRule: false, CSSRule: false, CSSRuleList: false, CSSStyleDeclaration: false, CSSStyleRule: false, CSSStyleSheet: false, CSSSupportsRule: false, CustomElementRegistry: false, customElements: false, CustomEvent: false, DataTransfer: false, DataTransferItem: false, DataTransferItemList: false, defaultstatus: false, defaultStatus: false, DelayNode: false, DeviceMotionEvent: false, DeviceOrientationEvent: false, devicePixelRatio: false, dispatchEvent: false, document: false, Document: false, DocumentFragment: false, DocumentType: false, DOMError: false, DOMException: false, DOMImplementation: false, DOMMatrix: false, DOMMatrixReadOnly: false, DOMParser: false, DOMPoint: false, DOMPointReadOnly: false, DOMQuad: false, DOMRect: false, DOMRectReadOnly: false, DOMStringList: false, DOMStringMap: false, DOMTokenList: false, DragEvent: false, DynamicsCompressorNode: false, Element: false, ErrorEvent: false, event: false, Event: false, EventSource: false, EventTarget: false, external: false, fetch: false, File: false, FileList: false, FileReader: false, find: false, focus: false, FocusEvent: false, FontFace: false, FontFaceSetLoadEvent: false, FormData: false, frameElement: false, frames: false, GainNode: false, Gamepad: false, GamepadButton: false, GamepadEvent: false, getComputedStyle: false, getSelection: false, HashChangeEvent: false, Headers: false, history: false, History: false, HTMLAllCollection: false, HTMLAnchorElement: false, HTMLAreaElement: false, HTMLAudioElement: false, HTMLBaseElement: false, HTMLBodyElement: false, HTMLBRElement: false, HTMLButtonElement: false, HTMLCanvasElement: false, HTMLCollection: false, HTMLContentElement: false, HTMLDataElement: false, HTMLDataListElement: false, HTMLDetailsElement: false, HTMLDialogElement: false, HTMLDirectoryElement: false, HTMLDivElement: false, HTMLDListElement: false, HTMLDocument: false, HTMLElement: false, HTMLEmbedElement: false, HTMLFieldSetElement: false, HTMLFontElement: false, HTMLFormControlsCollection: false, HTMLFormElement: false, HTMLFrameElement: false, HTMLFrameSetElement: false, HTMLHeadElement: false, HTMLHeadingElement: false, HTMLHRElement: false, HTMLHtmlElement: false, HTMLIFrameElement: false, HTMLImageElement: false, HTMLInputElement: false, HTMLLabelElement: false, HTMLLegendElement: false, HTMLLIElement: false, HTMLLinkElement: false, HTMLMapElement: false, HTMLMarqueeElement: false, HTMLMediaElement: false, HTMLMenuElement: false, HTMLMetaElement: false, HTMLMeterElement: false, HTMLModElement: false, HTMLObjectElement: false, HTMLOListElement: false, HTMLOptGroupElement: false, HTMLOptionElement: false, HTMLOptionsCollection: false, HTMLOutputElement: false, HTMLParagraphElement: false, HTMLParamElement: false, HTMLPictureElement: false, HTMLPreElement: false, HTMLProgressElement: false, HTMLQuoteElement: false, HTMLScriptElement: false, HTMLSelectElement: false, HTMLShadowElement: false, HTMLSlotElement: false, HTMLSourceElement: false, HTMLSpanElement: false, HTMLStyleElement: false, HTMLTableCaptionElement: false, HTMLTableCellElement: false, HTMLTableColElement: false, HTMLTableElement: false, HTMLTableRowElement: false, HTMLTableSectionElement: false, HTMLTemplateElement: false, HTMLTextAreaElement: false, HTMLTimeElement: false, HTMLTitleElement: false, HTMLTrackElement: false, HTMLUListElement: false, HTMLUnknownElement: false, HTMLVideoElement: false, IDBCursor: false, IDBCursorWithValue: false, IDBDatabase: false, IDBFactory: false, IDBIndex: false, IDBKeyRange: false, IDBObjectStore: false, IDBOpenDBRequest: false, IDBRequest: false, IDBTransaction: false, IDBVersionChangeEvent: false, IdleDeadline: false, IIRFilterNode: false, Image: false, ImageBitmap: false, ImageBitmapRenderingContext: false, ImageCapture: false, ImageData: false, indexedDB: false, innerHeight: false, innerWidth: false, InputEvent: false, IntersectionObserver: false, IntersectionObserverEntry: false, Intl: false, isSecureContext: false, KeyboardEvent: false, KeyframeEffect: false, KeyframeEffectReadOnly: false, length: false, localStorage: false, location: true, Location: false, locationbar: false, matchMedia: false, MediaDeviceInfo: false, MediaDevices: false, MediaElementAudioSourceNode: false, MediaEncryptedEvent: false, MediaError: false, MediaKeyMessageEvent: false, MediaKeySession: false, MediaKeyStatusMap: false, MediaKeySystemAccess: false, MediaList: false, MediaQueryList: false, MediaQueryListEvent: false, MediaRecorder: false, MediaSettingsRange: false, MediaSource: false, MediaStream: false, MediaStreamAudioDestinationNode: false, MediaStreamAudioSourceNode: false, MediaStreamEvent: false, MediaStreamTrack: false, MediaStreamTrackEvent: false, menubar: false, MessageChannel: false, MessageEvent: false, MessagePort: false, MIDIAccess: false, MIDIConnectionEvent: false, MIDIInput: false, MIDIInputMap: false, MIDIMessageEvent: false, MIDIOutput: false, MIDIOutputMap: false, MIDIPort: false, MimeType: false, MimeTypeArray: false, MouseEvent: false, moveBy: false, moveTo: false, MutationEvent: false, MutationObserver: false, MutationRecord: false, name: false, NamedNodeMap: false, NavigationPreloadManager: false, navigator: false, Navigator: false, NetworkInformation: false, Node: false, NodeFilter: false, NodeIterator: false, NodeList: false, Notification: false, OfflineAudioCompletionEvent: false, OfflineAudioContext: false, offscreenBuffering: false, OffscreenCanvas: true, onabort: true, onafterprint: true, onanimationend: true, onanimationiteration: true, onanimationstart: true, onappinstalled: true, onauxclick: true, onbeforeinstallprompt: true, onbeforeprint: true, onbeforeunload: true, onblur: true, oncancel: true, oncanplay: true, oncanplaythrough: true, onchange: true, onclick: true, onclose: true, oncontextmenu: true, oncuechange: true, ondblclick: true, ondevicemotion: true, ondeviceorientation: true, ondeviceorientationabsolute: true, ondrag: true, ondragend: true, ondragenter: true, ondragleave: true, ondragover: true, ondragstart: true, ondrop: true, ondurationchange: true, onemptied: true, onended: true, onerror: true, onfocus: true, ongotpointercapture: true, onhashchange: true, oninput: true, oninvalid: true, onkeydown: true, onkeypress: true, onkeyup: true, onlanguagechange: true, onload: true, onloadeddata: true, onloadedmetadata: true, onloadstart: true, onlostpointercapture: true, onmessage: true, onmessageerror: true, onmousedown: true, onmouseenter: true, onmouseleave: true, onmousemove: true, onmouseout: true, onmouseover: true, onmouseup: true, onmousewheel: true, onoffline: true, ononline: true, onpagehide: true, onpageshow: true, onpause: true, onplay: true, onplaying: true, onpointercancel: true, onpointerdown: true, onpointerenter: true, onpointerleave: true, onpointermove: true, onpointerout: true, onpointerover: true, onpointerup: true, onpopstate: true, onprogress: true, onratechange: true, onrejectionhandled: true, onreset: true, onresize: true, onscroll: true, onsearch: true, onseeked: true, onseeking: true, onselect: true, onstalled: true, onstorage: true, onsubmit: true, onsuspend: true, ontimeupdate: true, ontoggle: true, ontransitionend: true, onunhandledrejection: true, onunload: true, onvolumechange: true, onwaiting: true, onwheel: true, open: false, openDatabase: false, opener: false, Option: false, origin: false, OscillatorNode: false, outerHeight: false, outerWidth: false, PageTransitionEvent: false, pageXOffset: false, pageYOffset: false, PannerNode: false, parent: false, Path2D: false, PaymentAddress: false, PaymentRequest: false, PaymentRequestUpdateEvent: false, PaymentResponse: false, performance: false, Performance: false, PerformanceEntry: false, PerformanceLongTaskTiming: false, PerformanceMark: false, PerformanceMeasure: false, PerformanceNavigation: false, PerformanceNavigationTiming: false, PerformanceObserver: false, PerformanceObserverEntryList: false, PerformancePaintTiming: false, PerformanceResourceTiming: false, PerformanceTiming: false, PeriodicWave: false, Permissions: false, PermissionStatus: false, personalbar: false, PhotoCapabilities: false, Plugin: false, PluginArray: false, PointerEvent: false, PopStateEvent: false, postMessage: false, Presentation: false, PresentationAvailability: false, PresentationConnection: false, PresentationConnectionAvailableEvent: false, PresentationConnectionCloseEvent: false, PresentationConnectionList: false, PresentationReceiver: false, PresentationRequest: false, print: false, ProcessingInstruction: false, ProgressEvent: false, PromiseRejectionEvent: false, prompt: false, PushManager: false, PushSubscription: false, PushSubscriptionOptions: false, queueMicrotask: false, RadioNodeList: false, Range: false, ReadableStream: false, registerProcessor: false, RemotePlayback: false, removeEventListener: false, Request: false, requestAnimationFrame: false, requestIdleCallback: false, resizeBy: false, ResizeObserver: false, ResizeObserverEntry: false, resizeTo: false, Response: false, RTCCertificate: false, RTCDataChannel: false, RTCDataChannelEvent: false, RTCDtlsTransport: false, RTCIceCandidate: false, RTCIceGatherer: false, RTCIceTransport: false, RTCPeerConnection: false, RTCPeerConnectionIceEvent: false, RTCRtpContributingSource: false, RTCRtpReceiver: false, RTCRtpSender: false, RTCSctpTransport: false, RTCSessionDescription: false, RTCStatsReport: false, RTCTrackEvent: false, screen: false, Screen: false, screenLeft: false, ScreenOrientation: false, screenTop: false, screenX: false, screenY: false, ScriptProcessorNode: false, scroll: false, scrollbars: false, scrollBy: false, scrollTo: false, scrollX: false, scrollY: false, SecurityPolicyViolationEvent: false, Selection: false, self: false, ServiceWorker: false, ServiceWorkerContainer: false, ServiceWorkerRegistration: false, sessionStorage: false, setInterval: false, setTimeout: false, ShadowRoot: false, SharedWorker: false, SourceBuffer: false, SourceBufferList: false, speechSynthesis: false, SpeechSynthesisEvent: false, SpeechSynthesisUtterance: false, StaticRange: false, status: false, statusbar: false, StereoPannerNode: false, stop: false, Storage: false, StorageEvent: false, StorageManager: false, styleMedia: false, StyleSheet: false, StyleSheetList: false, SubtleCrypto: false, SVGAElement: false, SVGAngle: false, SVGAnimatedAngle: false, SVGAnimatedBoolean: false, SVGAnimatedEnumeration: false, SVGAnimatedInteger: false, SVGAnimatedLength: false, SVGAnimatedLengthList: false, SVGAnimatedNumber: false, SVGAnimatedNumberList: false, SVGAnimatedPreserveAspectRatio: false, SVGAnimatedRect: false, SVGAnimatedString: false, SVGAnimatedTransformList: false, SVGAnimateElement: false, SVGAnimateMotionElement: false, SVGAnimateTransformElement: false, SVGAnimationElement: false, SVGCircleElement: false, SVGClipPathElement: false, SVGComponentTransferFunctionElement: false, SVGDefsElement: false, SVGDescElement: false, SVGDiscardElement: false, SVGElement: false, SVGEllipseElement: false, SVGFEBlendElement: false, SVGFEColorMatrixElement: false, SVGFEComponentTransferElement: false, SVGFECompositeElement: false, SVGFEConvolveMatrixElement: false, SVGFEDiffuseLightingElement: false, SVGFEDisplacementMapElement: false, SVGFEDistantLightElement: false, SVGFEDropShadowElement: false, SVGFEFloodElement: false, SVGFEFuncAElement: false, SVGFEFuncBElement: false, SVGFEFuncGElement: false, SVGFEFuncRElement: false, SVGFEGaussianBlurElement: false, SVGFEImageElement: false, SVGFEMergeElement: false, SVGFEMergeNodeElement: false, SVGFEMorphologyElement: false, SVGFEOffsetElement: false, SVGFEPointLightElement: false, SVGFESpecularLightingElement: false, SVGFESpotLightElement: false, SVGFETileElement: false, SVGFETurbulenceElement: false, SVGFilterElement: false, SVGForeignObjectElement: false, SVGGElement: false, SVGGeometryElement: false, SVGGradientElement: false, SVGGraphicsElement: false, SVGImageElement: false, SVGLength: false, SVGLengthList: false, SVGLinearGradientElement: false, SVGLineElement: false, SVGMarkerElement: false, SVGMaskElement: false, SVGMatrix: false, SVGMetadataElement: false, SVGMPathElement: false, SVGNumber: false, SVGNumberList: false, SVGPathElement: false, SVGPatternElement: false, SVGPoint: false, SVGPointList: false, SVGPolygonElement: false, SVGPolylineElement: false, SVGPreserveAspectRatio: false, SVGRadialGradientElement: false, SVGRect: false, SVGRectElement: false, SVGScriptElement: false, SVGSetElement: false, SVGStopElement: false, SVGStringList: false, SVGStyleElement: false, SVGSVGElement: false, SVGSwitchElement: false, SVGSymbolElement: false, SVGTextContentElement: false, SVGTextElement: false, SVGTextPathElement: false, SVGTextPositioningElement: false, SVGTitleElement: false, SVGTransform: false, SVGTransformList: false, SVGTSpanElement: false, SVGUnitTypes: false, SVGUseElement: false, SVGViewElement: false, TaskAttributionTiming: false, Text: false, TextDecoder: false, TextEncoder: false, TextEvent: false, TextMetrics: false, TextTrack: false, TextTrackCue: false, TextTrackCueList: false, TextTrackList: false, TimeRanges: false, toolbar: false, top: false, Touch: false, TouchEvent: false, TouchList: false, TrackEvent: false, TransitionEvent: false, TreeWalker: false, UIEvent: false, URL: false, URLSearchParams: false, ValidityState: false, visualViewport: false, VisualViewport: false, VTTCue: false, WaveShaperNode: false, WebAssembly: false, WebGL2RenderingContext: false, WebGLActiveInfo: false, WebGLBuffer: false, WebGLContextEvent: false, WebGLFramebuffer: false, WebGLProgram: false, WebGLQuery: false, WebGLRenderbuffer: false, WebGLRenderingContext: false, WebGLSampler: false, WebGLShader: false, WebGLShaderPrecisionFormat: false, WebGLSync: false, WebGLTexture: false, WebGLTransformFeedback: false, WebGLUniformLocation: false, WebGLVertexArrayObject: false, WebSocket: false, WheelEvent: false, window: false, Window: false, Worker: false, WritableStream: false, XMLDocument: false, XMLHttpRequest: false, XMLHttpRequestEventTarget: false, XMLHttpRequestUpload: false, XMLSerializer: false, XPathEvaluator: false, XPathExpression: false, XPathResult: false, XSLTProcessor: false }, worker: { addEventListener: false, applicationCache: false, atob: false, Blob: false, BroadcastChannel: false, btoa: false, Cache: false, caches: false, clearInterval: false, clearTimeout: false, close: true, console: false, fetch: false, FileReaderSync: false, FormData: false, Headers: false, IDBCursor: false, IDBCursorWithValue: false, IDBDatabase: false, IDBFactory: false, IDBIndex: false, IDBKeyRange: false, IDBObjectStore: false, IDBOpenDBRequest: false, IDBRequest: false, IDBTransaction: false, IDBVersionChangeEvent: false, ImageData: false, importScripts: true, indexedDB: false, location: false, MessageChannel: false, MessagePort: false, name: false, navigator: false, Notification: false, onclose: true, onconnect: true, onerror: true, onlanguagechange: true, onmessage: true, onoffline: true, ononline: true, onrejectionhandled: true, onunhandledrejection: true, performance: false, Performance: false, PerformanceEntry: false, PerformanceMark: false, PerformanceMeasure: false, PerformanceNavigation: false, PerformanceResourceTiming: false, PerformanceTiming: false, postMessage: true, Promise: false, queueMicrotask: false, removeEventListener: false, Request: false, Response: false, self: true, ServiceWorkerRegistration: false, setInterval: false, setTimeout: false, TextDecoder: false, TextEncoder: false, URL: false, URLSearchParams: false, WebSocket: false, Worker: false, WorkerGlobalScope: false, XMLHttpRequest: false }, node: { __dirname: false, __filename: false, Buffer: false, clearImmediate: false, clearInterval: false, clearTimeout: false, console: false, exports: true, global: false, Intl: false, module: false, process: false, queueMicrotask: false, require: false, setImmediate: false, setInterval: false, setTimeout: false, TextDecoder: false, TextEncoder: false, URL: false, URLSearchParams: false }, commonjs: { exports: true, global: false, module: false, require: false }, amd: { define: false, require: false }, mocha: { after: false, afterEach: false, before: false, beforeEach: false, context: false, describe: false, it: false, mocha: false, run: false, setup: false, specify: false, suite: false, suiteSetup: false, suiteTeardown: false, teardown: false, test: false, xcontext: false, xdescribe: false, xit: false, xspecify: false }, jasmine: { afterAll: false, afterEach: false, beforeAll: false, beforeEach: false, describe: false, expect: false, fail: false, fdescribe: false, fit: false, it: false, jasmine: false, pending: false, runs: false, spyOn: false, spyOnProperty: false, waits: false, waitsFor: false, xdescribe: false, xit: false }, jest: { afterAll: false, afterEach: false, beforeAll: false, beforeEach: false, describe: false, expect: false, fdescribe: false, fit: false, it: false, jest: false, pit: false, require: false, test: false, xdescribe: false, xit: false, xtest: false }, qunit: { asyncTest: false, deepEqual: false, equal: false, expect: false, module: false, notDeepEqual: false, notEqual: false, notOk: false, notPropEqual: false, notStrictEqual: false, ok: false, propEqual: false, QUnit: false, raises: false, start: false, stop: false, strictEqual: false, test: false, throws: false }, phantomjs: { console: true, exports: true, phantom: true, require: true, WebPage: true }, couch: { emit: false, exports: false, getRow: false, log: false, module: false, provides: false, require: false, respond: false, send: false, start: false, sum: false }, rhino: { defineClass: false, deserialize: false, gc: false, help: false, importClass: false, importPackage: false, java: false, load: false, loadClass: false, Packages: false, print: false, quit: false, readFile: false, readUrl: false, runCommand: false, seal: false, serialize: false, spawn: false, sync: false, toint32: false, version: false }, nashorn: { __DIR__: false, __FILE__: false, __LINE__: false, com: false, edu: false, exit: false, java: false, Java: false, javafx: false, JavaImporter: false, javax: false, JSAdapter: false, load: false, loadWithNewGlobal: false, org: false, Packages: false, print: false, quit: false }, wsh: { ActiveXObject: true, Enumerator: true, GetObject: true, ScriptEngine: true, ScriptEngineBuildVersion: true, ScriptEngineMajorVersion: true, ScriptEngineMinorVersion: true, VBArray: true, WScript: true, WSH: true, XDomainRequest: true }, jquery: { $: false, jQuery: false }, yui: { YAHOO: false, YAHOO_config: false, YUI: false, YUI_config: false }, shelljs: { cat: false, cd: false, chmod: false, config: false, cp: false, dirs: false, echo: false, env: false, error: false, exec: false, exit: false, find: false, grep: false, ln: false, ls: false, mkdir: false, mv: false, popd: false, pushd: false, pwd: false, rm: false, sed: false, set: false, target: false, tempdir: false, test: false, touch: false, which: false }, prototypejs: { $: false, $$: false, $A: false, $break: false, $continue: false, $F: false, $H: false, $R: false, $w: false, Abstract: false, Ajax: false, Autocompleter: false, Builder: false, Class: false, Control: false, Draggable: false, Draggables: false, Droppables: false, Effect: false, Element: false, Enumerable: false, Event: false, Field: false, Form: false, Hash: false, Insertion: false, ObjectRange: false, PeriodicalExecuter: false, Position: false, Prototype: false, Scriptaculous: false, Selector: false, Sortable: false, SortableObserver: false, Sound: false, Template: false, Toggle: false, Try: false }, meteor: { _: false, $: false, Accounts: false, AccountsClient: false, AccountsCommon: false, AccountsServer: false, App: false, Assets: false, Blaze: false, check: false, Cordova: false, DDP: false, DDPRateLimiter: false, DDPServer: false, Deps: false, EJSON: false, Email: false, HTTP: false, Log: false, Match: false, Meteor: false, Mongo: false, MongoInternals: false, Npm: false, Package: false, Plugin: false, process: false, Random: false, ReactiveDict: false, ReactiveVar: false, Router: false, ServiceConfiguration: false, Session: false, share: false, Spacebars: false, Template: false, Tinytest: false, Tracker: false, UI: false, Utils: false, WebApp: false, WebAppInternals: false }, mongo: { _isWindows: false, _rand: false, BulkWriteResult: false, cat: false, cd: false, connect: false, db: false, getHostName: false, getMemInfo: false, hostname: false, ISODate: false, listFiles: false, load: false, ls: false, md5sumFile: false, mkdir: false, Mongo: false, NumberInt: false, NumberLong: false, ObjectId: false, PlanCache: false, print: false, printjson: false, pwd: false, quit: false, removeFile: false, rs: false, sh: false, UUID: false, version: false, WriteResult: false }, applescript: { $: false, Application: false, Automation: false, console: false, delay: false, Library: false, ObjC: false, ObjectSpecifier: false, Path: false, Progress: false, Ref: false }, serviceworker: { addEventListener: false, applicationCache: false, atob: false, Blob: false, BroadcastChannel: false, btoa: false, Cache: false, caches: false, CacheStorage: false, clearInterval: false, clearTimeout: false, Client: false, clients: false, Clients: false, close: true, console: false, ExtendableEvent: false, ExtendableMessageEvent: false, fetch: false, FetchEvent: false, FileReaderSync: false, FormData: false, Headers: false, IDBCursor: false, IDBCursorWithValue: false, IDBDatabase: false, IDBFactory: false, IDBIndex: false, IDBKeyRange: false, IDBObjectStore: false, IDBOpenDBRequest: false, IDBRequest: false, IDBTransaction: false, IDBVersionChangeEvent: false, ImageData: false, importScripts: false, indexedDB: false, location: false, MessageChannel: false, MessagePort: false, name: false, navigator: false, Notification: false, onclose: true, onconnect: true, onerror: true, onfetch: true, oninstall: true, onlanguagechange: true, onmessage: true, onmessageerror: true, onnotificationclick: true, onnotificationclose: true, onoffline: true, ononline: true, onpush: true, onpushsubscriptionchange: true, onrejectionhandled: true, onsync: true, onunhandledrejection: true, performance: false, Performance: false, PerformanceEntry: false, PerformanceMark: false, PerformanceMeasure: false, PerformanceNavigation: false, PerformanceResourceTiming: false, PerformanceTiming: false, postMessage: true, Promise: false, queueMicrotask: false, registration: false, removeEventListener: false, Request: false, Response: false, self: false, ServiceWorker: false, ServiceWorkerContainer: false, ServiceWorkerGlobalScope: false, ServiceWorkerMessageEvent: false, ServiceWorkerRegistration: false, setInterval: false, setTimeout: false, skipWaiting: false, TextDecoder: false, TextEncoder: false, URL: false, URLSearchParams: false, WebSocket: false, WindowClient: false, Worker: false, WorkerGlobalScope: false, XMLHttpRequest: false }, atomtest: { advanceClock: false, fakeClearInterval: false, fakeClearTimeout: false, fakeSetInterval: false, fakeSetTimeout: false, resetTimeouts: false, waitsForPromise: false }, embertest: { andThen: false, click: false, currentPath: false, currentRouteName: false, currentURL: false, fillIn: false, find: false, findAll: false, findWithAssert: false, keyEvent: false, pauseTest: false, resumeTest: false, triggerEvent: false, visit: false, wait: false }, protractor: { $: false, $$: false, browser: false, by: false, By: false, DartObject: false, element: false, protractor: false }, "shared-node-browser": { clearInterval: false, clearTimeout: false, console: false, setInterval: false, setTimeout: false, URL: false, URLSearchParams: false }, webextensions: { browser: false, chrome: false, opr: false }, greasemonkey: { cloneInto: false, createObjectIn: false, exportFunction: false, GM: false, GM_addStyle: false, GM_deleteValue: false, GM_getResourceText: false, GM_getResourceURL: false, GM_getValue: false, GM_info: false, GM_listValues: false, GM_log: false, GM_openInTab: false, GM_registerMenuCommand: false, GM_setClipboard: false, GM_setValue: false, GM_xmlhttpRequest: false, unsafeWindow: false }, devtools: { $: false, $_: false, $$: false, $0: false, $1: false, $2: false, $3: false, $4: false, $x: false, chrome: false, clear: false, copy: false, debug: false, dir: false, dirxml: false, getEventListeners: false, inspect: false, keys: false, monitor: false, monitorEvents: false, profile: false, profileEnd: false, queryObjects: false, table: false, undebug: false, unmonitor: false, unmonitorEvents: false, values: false } }, rp = new WeakMap(), np = new WeakMap();
      function sp() {
        rp = new WeakMap();
      }
      function ap() {
        np = new WeakMap();
      }
      var ip = Object.freeze({ __proto__: null, get path() {
        return rp;
      }, get scope() {
        return np;
      }, clear: function() {
        sp(), ap();
      }, clearPath: sp, clearScope: ap });
      function op(e2, t2) {
        switch (e2 == null ? void 0 : e2.type) {
          default:
            if (Nt(e2))
              if ((ue(e2) || ce(e2) || fe(e2)) && e2.source)
                op(e2.source, t2);
              else if ((ce(e2) || fe(e2)) && e2.specifiers && e2.specifiers.length)
                for (var r2, n2 = f(e2.specifiers); !(r2 = n2()).done; ) {
                  op(r2.value, t2);
                }
              else
                (le(e2) || ce(e2)) && e2.declaration && op(e2.declaration, t2);
            else
              _t(e2) ? op(e2.local, t2) : Pt(e2) && t2.push(e2.value);
            break;
          case "MemberExpression":
          case "OptionalMemberExpression":
          case "JSXMemberExpression":
            op(e2.object, t2), op(e2.property, t2);
            break;
          case "Identifier":
          case "JSXIdentifier":
            t2.push(e2.name);
            break;
          case "CallExpression":
          case "OptionalCallExpression":
          case "NewExpression":
            op(e2.callee, t2);
            break;
          case "ObjectExpression":
          case "ObjectPattern":
            for (var s2, a2 = f(e2.properties); !(s2 = a2()).done; ) {
              op(s2.value, t2);
            }
            break;
          case "SpreadElement":
          case "RestElement":
            op(e2.argument, t2);
            break;
          case "ObjectProperty":
          case "ObjectMethod":
          case "ClassProperty":
          case "ClassMethod":
          case "ClassPrivateProperty":
          case "ClassPrivateMethod":
            op(e2.key, t2);
            break;
          case "ThisExpression":
            t2.push("this");
            break;
          case "Super":
            t2.push("super");
            break;
          case "Import":
            t2.push("import");
            break;
          case "DoExpression":
            t2.push("do");
            break;
          case "YieldExpression":
            t2.push("yield"), op(e2.argument, t2);
            break;
          case "AwaitExpression":
            t2.push("await"), op(e2.argument, t2);
            break;
          case "AssignmentExpression":
            op(e2.left, t2);
            break;
          case "VariableDeclarator":
            op(e2.id, t2);
            break;
          case "FunctionExpression":
          case "FunctionDeclaration":
          case "ClassExpression":
          case "ClassDeclaration":
          case "PrivateName":
            op(e2.id, t2);
            break;
          case "ParenthesizedExpression":
            op(e2.expression, t2);
            break;
          case "UnaryExpression":
          case "UpdateExpression":
            op(e2.argument, t2);
            break;
          case "MetaProperty":
            op(e2.meta, t2), op(e2.property, t2);
            break;
          case "JSXElement":
            op(e2.openingElement, t2);
            break;
          case "JSXOpeningElement":
            t2.push(e2.name);
            break;
          case "JSXFragment":
            op(e2.openingFragment, t2);
            break;
          case "JSXOpeningFragment":
            t2.push("Fragment");
            break;
          case "JSXNamespacedName":
            op(e2.namespace, t2), op(e2.name, t2);
        }
      }
      var up = { For: function(e2) {
        for (var t2, r2 = f(Fr); !(t2 = r2()).done; ) {
          var n2 = t2.value, s2 = e2.get(n2);
          if (s2.isVar())
            (e2.scope.getFunctionParent() || e2.scope.getProgramParent()).registerBinding("var", s2);
        }
      }, Declaration: function(e2) {
        e2.isBlockScoped() || (e2.isExportDeclaration() || (e2.scope.getFunctionParent() || e2.scope.getProgramParent()).registerDeclaration(e2));
      }, ReferencedIdentifier: function(e2, t2) {
        t2.references.push(e2);
      }, ForXStatement: function(e2, t2) {
        var r2 = e2.get("left");
        (r2.isPattern() || r2.isIdentifier()) && t2.constantViolations.push(e2);
      }, ExportDeclaration: { exit: function(e2) {
        var t2 = e2.node, r2 = e2.scope;
        if (!ue(t2)) {
          var n2 = t2.declaration;
          if (oe(n2) || P(n2)) {
            var s2 = n2.id;
            if (!s2)
              return;
            var a2 = r2.getBinding(s2.name);
            a2 && a2.reference(e2);
          } else if (Z(n2))
            for (var i2, o2 = f(n2.declarations); !(i2 = o2()).done; )
              for (var u2 = i2.value, l2 = 0, c2 = Object.keys(cc(u2)); l2 < c2.length; l2++) {
                var p2 = c2[l2], d2 = r2.getBinding(p2);
                d2 && d2.reference(e2);
              }
        }
      } }, LabeledStatement: function(e2) {
        e2.scope.getBlockParent().registerDeclaration(e2);
      }, AssignmentExpression: function(e2, t2) {
        t2.assignments.push(e2);
      }, UpdateExpression: function(e2, t2) {
        t2.constantViolations.push(e2);
      }, UnaryExpression: function(e2, t2) {
        e2.node.operator === "delete" && t2.constantViolations.push(e2);
      }, BlockScoped: function(e2) {
        var t2 = e2.scope;
        if (t2.path === e2 && (t2 = t2.parent), t2.getBlockParent().registerDeclaration(e2), e2.isClassDeclaration() && e2.node.id) {
          var r2 = e2.node.id.name;
          e2.scope.bindings[r2] = e2.scope.parent.getBinding(r2);
        }
      }, CatchClause: function(e2) {
        e2.scope.registerBinding("let", e2);
      }, Function: function(e2) {
        e2.isFunctionExpression() && e2.has("id") && !e2.get("id").node[Kr] && e2.scope.registerBinding("local", e2.get("id"), e2);
        for (var t2, r2 = f(e2.get("params")); !(t2 = r2()).done; ) {
          var n2 = t2.value;
          e2.scope.registerBinding("param", n2);
        }
      }, ClassExpression: function(e2) {
        e2.has("id") && !e2.get("id").node[Kr] && e2.scope.registerBinding("local", e2);
      } }, lp = 0, cp = function() {
        function e2(e3) {
          this.uid = void 0, this.path = void 0, this.block = void 0, this.labels = void 0, this.inited = void 0, this.bindings = void 0, this.references = void 0, this.globals = void 0, this.uids = void 0, this.data = void 0, this.crawling = void 0;
          var t3 = e3.node, r2 = np.get(t3);
          if ((r2 == null ? void 0 : r2.path) === e3)
            return r2;
          np.set(t3, this), this.uid = lp++, this.block = t3, this.path = e3, this.labels = new Map(), this.inited = false;
        }
        var t2 = e2.prototype;
        return t2.traverse = function(e3, t3, r2) {
          vv(e3, t3, this, r2, this.path);
        }, t2.generateDeclaredUidIdentifier = function(e3) {
          var t3 = this.generateUidIdentifier(e3);
          return this.push({ id: t3 }), Ju(t3);
        }, t2.generateUidIdentifier = function(e3) {
          return Ds(this.generateUid(e3));
        }, t2.generateUid = function(e3) {
          var t3;
          e3 === void 0 && (e3 = "temp"), e3 = ec(e3).replace(/^_+/, "").replace(/[0-9]+$/g, "");
          var r2 = 1;
          do {
            t3 = this._generateUid(e3, r2), r2++;
          } while (this.hasLabel(t3) || this.hasBinding(t3) || this.hasGlobal(t3) || this.hasReference(t3));
          var n2 = this.getProgramParent();
          return n2.references[t3] = true, n2.uids[t3] = true, t3;
        }, t2._generateUid = function(e3, t3) {
          var r2 = e3;
          return t3 > 1 && (r2 += t3), "_" + r2;
        }, t2.generateUidBasedOnNode = function(e3, t3) {
          var r2 = [];
          op(e3, r2);
          var n2 = r2.join("$");
          return n2 = n2.replace(/^_/, "") || t3 || "ref", this.generateUid(n2.slice(0, 20));
        }, t2.generateUidIdentifierBasedOnNode = function(e3, t3) {
          return Ds(this.generateUidBasedOnNode(e3, t3));
        }, t2.isStatic = function(e3) {
          if (J(e3) || Ee(e3))
            return true;
          if (F(e3)) {
            var t3 = this.getBinding(e3.name);
            return t3 ? t3.constant : this.hasBinding(e3.name);
          }
          return false;
        }, t2.maybeGenerateMemoised = function(e3, t3) {
          if (this.isStatic(e3))
            return null;
          var r2 = this.generateUidIdentifierBasedOnNode(e3);
          return t3 ? r2 : (this.push({ id: r2 }), Ju(r2));
        }, t2.checkBlockScopedCollisions = function(e3, t3, r2, n2) {
          if (t3 !== "param" && (e3.kind !== "local" && (t3 === "let" || e3.kind === "let" || e3.kind === "const" || e3.kind === "module" || e3.kind === "param" && (t3 === "let" || t3 === "const"))))
            throw this.hub.buildError(n2, 'Duplicate declaration "' + r2 + '"', TypeError);
        }, t2.rename = function(e3, t3, r2) {
          var n2 = this.getBinding(e3);
          if (n2)
            return t3 = t3 || this.generateUidIdentifier(e3).name, new ep(n2, e3, t3).rename(r2);
        }, t2._renameFromMap = function(e3, t3, r2, n2) {
          e3[t3] && (e3[r2] = n2, e3[t3] = null);
        }, t2.dump = function() {
          var e3 = "-".repeat(60);
          console.log(e3);
          var t3 = this;
          do {
            console.log("#", t3.block.type);
            for (var r2 = 0, n2 = Object.keys(t3.bindings); r2 < n2.length; r2++) {
              var s2 = n2[r2], a2 = t3.bindings[s2];
              console.log(" -", s2, { constant: a2.constant, references: a2.references, violations: a2.constantViolations.length, kind: a2.kind });
            }
          } while (t3 = t3.parent);
          console.log(e3);
        }, t2.toArray = function(e3, t3, r2) {
          if (F(e3)) {
            var n2 = this.getBinding(e3.name);
            if (n2 != null && n2.constant && n2.path.isGenericType("Array"))
              return e3;
          }
          if (m(e3))
            return e3;
          if (F(e3, { name: "arguments" }))
            return ls(Fs2(Fs2(Fs2(Ds("Array"), Ds("prototype")), Ds("slice")), Ds("call")), [e3]);
          var s2, a2 = [e3];
          return t3 === true ? s2 = "toConsumableArray" : t3 ? (a2.push(Ss(t3)), s2 = "slicedToArray") : s2 = "toArray", r2 && (a2.unshift(this.hub.addHelper(s2)), s2 = "maybeArrayLike"), ls(this.hub.addHelper(s2), a2);
        }, t2.hasLabel = function(e3) {
          return !!this.getLabel(e3);
        }, t2.getLabel = function(e3) {
          return this.labels.get(e3);
        }, t2.registerLabel = function(e3) {
          this.labels.set(e3.node.label.name, e3);
        }, t2.registerDeclaration = function(e3) {
          if (e3.isLabeledStatement())
            this.registerLabel(e3);
          else if (e3.isFunctionDeclaration())
            this.registerBinding("hoisted", e3.get("id"), e3);
          else if (e3.isVariableDeclaration())
            for (var t3, r2 = f(e3.get("declarations")); !(t3 = r2()).done; ) {
              var n2 = t3.value;
              this.registerBinding(e3.node.kind, n2);
            }
          else if (e3.isClassDeclaration())
            this.registerBinding("let", e3);
          else if (e3.isImportDeclaration())
            for (var s2, a2 = f(e3.get("specifiers")); !(s2 = a2()).done; ) {
              var i2 = s2.value;
              this.registerBinding("module", i2);
            }
          else if (e3.isExportDeclaration()) {
            var o2 = e3.get("declaration");
            (o2.isClassDeclaration() || o2.isFunctionDeclaration() || o2.isVariableDeclaration()) && this.registerDeclaration(o2);
          } else
            this.registerBinding("unknown", e3);
        }, t2.buildUndefinedNode = function() {
          return qs("void", Ss(0), true);
        }, t2.registerConstantViolation = function(e3) {
          for (var t3 = e3.getBindingIdentifiers(), r2 = 0, n2 = Object.keys(t3); r2 < n2.length; r2++) {
            var s2 = n2[r2], a2 = this.getBinding(s2);
            a2 && a2.reassign(e3);
          }
        }, t2.registerBinding = function(e3, t3, r2) {
          if (r2 === void 0 && (r2 = t3), !e3)
            throw new ReferenceError("no `kind`");
          if (t3.isVariableDeclaration())
            for (var n2, s2 = f(t3.get("declarations")); !(n2 = s2()).done; ) {
              var a2 = n2.value;
              this.registerBinding(e3, a2);
            }
          else
            for (var i2 = this.getProgramParent(), o2 = t3.getOuterBindingIdentifiers(true), u2 = 0, l2 = Object.keys(o2); u2 < l2.length; u2++) {
              var c2 = l2[u2];
              i2.references[c2] = true;
              for (var p2, d2 = f(o2[c2]); !(p2 = d2()).done; ) {
                var h2 = p2.value, m2 = this.getOwnBinding(c2);
                if (m2) {
                  if (m2.identifier === h2)
                    continue;
                  this.checkBlockScopedCollisions(m2, e3, c2, h2);
                }
                m2 ? this.registerConstantViolation(r2) : this.bindings[c2] = new Yc({ identifier: h2, scope: this, path: r2, kind: e3 });
              }
            }
        }, t2.addGlobal = function(e3) {
          this.globals[e3.name] = e3;
        }, t2.hasUid = function(e3) {
          var t3 = this;
          do {
            if (t3.uids[e3])
              return true;
          } while (t3 = t3.parent);
          return false;
        }, t2.hasGlobal = function(e3) {
          var t3 = this;
          do {
            if (t3.globals[e3])
              return true;
          } while (t3 = t3.parent);
          return false;
        }, t2.hasReference = function(e3) {
          return !!this.getProgramParent().references[e3];
        }, t2.isPure = function(e3, t3) {
          if (F(e3)) {
            var r2 = this.getBinding(e3.name);
            return !!r2 && (!t3 || r2.constant);
          }
          if (Rt(e3))
            return !(e3.superClass && !this.isPure(e3.superClass, t3)) && this.isPure(e3.body, t3);
          if (ae(e3)) {
            for (var n2, s2 = f(e3.body); !(n2 = s2()).done; ) {
              var a2 = n2.value;
              if (!this.isPure(a2, t3))
                return false;
            }
            return true;
          }
          if (bt(e3))
            return this.isPure(e3.left, t3) && this.isPure(e3.right, t3);
          if (m(e3)) {
            for (var i2, o2 = f(e3.elements); !(i2 = o2()).done; ) {
              var u2 = i2.value;
              if (!this.isPure(u2, t3))
                return false;
            }
            return true;
          }
          if (V(e3)) {
            for (var l2, c2 = f(e3.properties); !(l2 = c2()).done; ) {
              var p2 = l2.value;
              if (!this.isPure(p2, t3))
                return false;
            }
            return true;
          }
          if (It(e3))
            return !(e3.computed && !this.isPure(e3.key, t3)) && (e3.kind !== "get" && e3.kind !== "set");
          if (Ft(e3))
            return !(e3.computed && !this.isPure(e3.key, t3)) && this.isPure(e3.value, t3);
          if (Q(e3))
            return this.isPure(e3.argument, t3);
          if (xe(e3))
            return Gt(e3.tag, "String.raw") && !this.hasBinding("String", true) && this.isPure(e3.quasi, t3);
          if (De(e3)) {
            for (var d2, h2 = f(e3.expressions); !(d2 = h2()).done; ) {
              var y2 = d2.value;
              if (!this.isPure(y2, t3))
                return false;
            }
            return true;
          }
          return Tt(e3);
        }, t2.setData = function(e3, t3) {
          return this.data[e3] = t3;
        }, t2.getData = function(e3) {
          var t3 = this;
          do {
            var r2 = t3.data[e3];
            if (r2 != null)
              return r2;
          } while (t3 = t3.parent);
        }, t2.removeData = function(e3) {
          var t3 = this;
          do {
            t3.data[e3] != null && (t3.data[e3] = null);
          } while (t3 = t3.parent);
        }, t2.init = function() {
          this.inited || (this.inited = true, this.crawl());
        }, t2.crawl = function() {
          var e3 = this.path;
          this.references = Object.create(null), this.bindings = Object.create(null), this.globals = Object.create(null), this.uids = Object.create(null), this.data = Object.create(null);
          var t3 = this.getProgramParent();
          if (!t3.crawling) {
            var r2 = { references: [], constantViolations: [], assignments: [] };
            if (this.crawling = true, e3.type !== "Program" && up._exploded) {
              for (var n2, s2 = f(up.enter); !(n2 = s2()).done; ) {
                (0, n2.value)(e3, r2);
              }
              var a2 = up[e3.type];
              if (a2)
                for (var i2, o2 = f(a2.enter); !(i2 = o2()).done; ) {
                  (0, i2.value)(e3, r2);
                }
            }
            e3.traverse(up, r2), this.crawling = false;
            for (var u2, l2 = f(r2.assignments); !(u2 = l2()).done; ) {
              for (var c2 = u2.value, p2 = c2.getBindingIdentifiers(), d2 = 0, h2 = Object.keys(p2); d2 < h2.length; d2++) {
                var m2 = h2[d2];
                c2.scope.getBinding(m2) || t3.addGlobal(p2[m2]);
              }
              c2.scope.registerConstantViolation(c2);
            }
            for (var y2, g2 = f(r2.references); !(y2 = g2()).done; ) {
              var v2 = y2.value, b2 = v2.scope.getBinding(v2.node.name);
              b2 ? b2.reference(v2) : t3.addGlobal(v2.node);
            }
            for (var E2, x2 = f(r2.constantViolations); !(E2 = x2()).done; ) {
              var D2 = E2.value;
              D2.scope.registerConstantViolation(D2);
            }
          }
        }, t2.push = function(e3) {
          var t3 = this.path;
          t3.isBlockStatement() || t3.isProgram() || (t3 = this.getBlockParent().path), t3.isSwitchStatement() && (t3 = (this.getFunctionParent() || this.getProgramParent()).path), (t3.isLoop() || t3.isCatchClause() || t3.isFunction()) && (t3.ensureBlock(), t3 = t3.get("body"));
          var r2 = e3.unique, n2 = e3.kind || "var", s2 = e3._blockHoist == null ? 2 : e3._blockHoist, a2 = "declaration:" + n2 + ":" + s2, i2 = !r2 && t3.getData(a2);
          if (!i2) {
            var o2 = Ks(n2, []);
            o2._blockHoist = s2, i2 = l(t3.unshiftContainer("body", [o2]), 1)[0], r2 || t3.setData(a2, i2);
          }
          var u2 = zs(e3.id, e3.init);
          i2.node.declarations.push(u2), this.registerBinding(n2, i2.get("declarations").pop());
        }, t2.getProgramParent = function() {
          var e3 = this;
          do {
            if (e3.path.isProgram())
              return e3;
          } while (e3 = e3.parent);
          throw new Error("Couldn't find a Program");
        }, t2.getFunctionParent = function() {
          var e3 = this;
          do {
            if (e3.path.isFunctionParent())
              return e3;
          } while (e3 = e3.parent);
          return null;
        }, t2.getBlockParent = function() {
          var e3 = this;
          do {
            if (e3.path.isBlockParent())
              return e3;
          } while (e3 = e3.parent);
          throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
        }, t2.getAllBindings = function() {
          var e3 = Object.create(null), t3 = this;
          do {
            for (var r2 = 0, n2 = Object.keys(t3.bindings); r2 < n2.length; r2++) {
              var s2 = n2[r2];
              s2 in e3 == false && (e3[s2] = t3.bindings[s2]);
            }
            t3 = t3.parent;
          } while (t3);
          return e3;
        }, t2.getAllBindingsOfKind = function() {
          for (var e3 = Object.create(null), t3 = arguments.length, r2 = new Array(t3), n2 = 0; n2 < t3; n2++)
            r2[n2] = arguments[n2];
          for (var s2 = 0, a2 = r2; s2 < a2.length; s2++) {
            var i2 = a2[s2], o2 = this;
            do {
              for (var u2 = 0, l2 = Object.keys(o2.bindings); u2 < l2.length; u2++) {
                var c2 = l2[u2], p2 = o2.bindings[c2];
                p2.kind === i2 && (e3[c2] = p2);
              }
              o2 = o2.parent;
            } while (o2);
          }
          return e3;
        }, t2.bindingIdentifierEquals = function(e3, t3) {
          return this.getBindingIdentifier(e3) === t3;
        }, t2.getBinding = function(e3) {
          var t3, r2 = this;
          do {
            var n2, s2 = r2.getOwnBinding(e3);
            if (s2) {
              if ((n2 = t3) == null || !n2.isPattern() || s2.kind === "param")
                return s2;
            }
            t3 = r2.path;
          } while (r2 = r2.parent);
        }, t2.getOwnBinding = function(e3) {
          return this.bindings[e3];
        }, t2.getBindingIdentifier = function(e3) {
          var t3;
          return (t3 = this.getBinding(e3)) == null ? void 0 : t3.identifier;
        }, t2.getOwnBindingIdentifier = function(e3) {
          var t3 = this.bindings[e3];
          return t3 == null ? void 0 : t3.identifier;
        }, t2.hasOwnBinding = function(e3) {
          return !!this.getOwnBinding(e3);
        }, t2.hasBinding = function(t3, r2) {
          return !!t3 && (!!this.hasOwnBinding(t3) || (!!this.parentHasBinding(t3, r2) || (!!this.hasUid(t3) || (!(r2 || !e2.globals.includes(t3)) || !(r2 || !e2.contextVariables.includes(t3))))));
        }, t2.parentHasBinding = function(e3, t3) {
          var r2;
          return (r2 = this.parent) == null ? void 0 : r2.hasBinding(e3, t3);
        }, t2.moveBindingTo = function(e3, t3) {
          var r2 = this.getBinding(e3);
          r2 && (r2.scope.removeOwnBinding(e3), r2.scope = t3, t3.bindings[e3] = r2);
        }, t2.removeOwnBinding = function(e3) {
          delete this.bindings[e3];
        }, t2.removeBinding = function(e3) {
          var t3;
          (t3 = this.getBinding(e3)) == null || t3.scope.removeOwnBinding(e3);
          var r2 = this;
          do {
            r2.uids[e3] && (r2.uids[e3] = false);
          } while (r2 = r2.parent);
        }, n(e2, [{ key: "parent", get: function() {
          var e3, t3, r2 = this.path;
          do {
            var n2 = r2.key === "key";
            r2 = r2.parentPath, n2 && r2.isMethod() && (r2 = r2.parentPath), r2 && r2.isScope() && (t3 = r2);
          } while (r2 && !t3);
          return (e3 = t3) == null ? void 0 : e3.scope;
        } }, { key: "parentBlock", get: function() {
          return this.path.parent;
        } }, { key: "hub", get: function() {
          return this.path.hub;
        } }]), e2;
      }();
      cp.globals = Object.keys(tp.builtin), cp.contextVariables = ["arguments", "undefined", "Infinity", "NaN"];
      var pp = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""), dp = function(e2) {
        if (0 <= e2 && e2 < pp.length)
          return pp[e2];
        throw new TypeError("Must be between 0 and 63: " + e2);
      }, fp = function(e2) {
        return 65 <= e2 && e2 <= 90 ? e2 - 65 : 97 <= e2 && e2 <= 122 ? e2 - 97 + 26 : 48 <= e2 && e2 <= 57 ? e2 - 48 + 52 : e2 == 43 ? 62 : e2 == 47 ? 63 : -1;
      };
      var hp = function(e2) {
        var t2, r2 = "", n2 = function(e3) {
          return e3 < 0 ? 1 + (-e3 << 1) : 0 + (e3 << 1);
        }(e2);
        do {
          t2 = 31 & n2, (n2 >>>= 5) > 0 && (t2 |= 32), r2 += dp(t2);
        } while (n2 > 0);
        return r2;
      }, mp = function(e2, t2, r2) {
        var n2, s2, a2, i2, o2 = e2.length, u2 = 0, l2 = 0;
        do {
          if (t2 >= o2)
            throw new Error("Expected more digits in base 64 VLQ value.");
          if ((s2 = fp(e2.charCodeAt(t2++))) === -1)
            throw new Error("Invalid base64 digit: " + e2.charAt(t2 - 1));
          n2 = !!(32 & s2), u2 += (s2 &= 31) << l2, l2 += 5;
        } while (n2);
        r2.value = (i2 = (a2 = u2) >> 1, (1 & a2) == 1 ? -i2 : i2), r2.rest = t2;
      }, yp = zt(function(e2, t2) {
        t2.getArg = function(e3, t3, r3) {
          if (t3 in e3)
            return e3[t3];
          if (arguments.length === 3)
            return r3;
          throw new Error('"' + t3 + '" is a required argument.');
        };
        var r2 = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/, n2 = /^data:.+\,.+$/;
        function s2(e3) {
          var t3 = e3.match(r2);
          return t3 ? { scheme: t3[1], auth: t3[2], host: t3[3], port: t3[4], path: t3[5] } : null;
        }
        function a2(e3) {
          var t3 = "";
          return e3.scheme && (t3 += e3.scheme + ":"), t3 += "//", e3.auth && (t3 += e3.auth + "@"), e3.host && (t3 += e3.host), e3.port && (t3 += ":" + e3.port), e3.path && (t3 += e3.path), t3;
        }
        function i2(e3) {
          var r3 = e3, n3 = s2(e3);
          if (n3) {
            if (!n3.path)
              return e3;
            r3 = n3.path;
          }
          for (var i3, o3 = t2.isAbsolute(r3), u3 = r3.split(/\/+/), l3 = 0, c3 = u3.length - 1; c3 >= 0; c3--)
            (i3 = u3[c3]) === "." ? u3.splice(c3, 1) : i3 === ".." ? l3++ : l3 > 0 && (i3 === "" ? (u3.splice(c3 + 1, l3), l3 = 0) : (u3.splice(c3, 2), l3--));
          return (r3 = u3.join("/")) === "" && (r3 = o3 ? "/" : "."), n3 ? (n3.path = r3, a2(n3)) : r3;
        }
        t2.urlParse = s2, t2.urlGenerate = a2, t2.normalize = i2, t2.join = function(e3, t3) {
          e3 === "" && (e3 = "."), t3 === "" && (t3 = ".");
          var r3 = s2(t3), o3 = s2(e3);
          if (o3 && (e3 = o3.path || "/"), r3 && !r3.scheme)
            return o3 && (r3.scheme = o3.scheme), a2(r3);
          if (r3 || t3.match(n2))
            return t3;
          if (o3 && !o3.host && !o3.path)
            return o3.host = t3, a2(o3);
          var u3 = t3.charAt(0) === "/" ? t3 : i2(e3.replace(/\/+$/, "") + "/" + t3);
          return o3 ? (o3.path = u3, a2(o3)) : u3;
        }, t2.isAbsolute = function(e3) {
          return e3.charAt(0) === "/" || !!e3.match(r2);
        }, t2.relative = function(e3, t3) {
          e3 === "" && (e3 = "."), e3 = e3.replace(/\/$/, "");
          for (var r3 = 0; t3.indexOf(e3 + "/") !== 0; ) {
            var n3 = e3.lastIndexOf("/");
            if (n3 < 0)
              return t3;
            if ((e3 = e3.slice(0, n3)).match(/^([^\/]+:\/)?\/*$/))
              return t3;
            ++r3;
          }
          return Array(r3 + 1).join("../") + t3.substr(e3.length + 1);
        };
        var o2 = !("__proto__" in Object.create(null));
        function u2(e3) {
          return e3;
        }
        function l2(e3) {
          if (!e3)
            return false;
          var t3 = e3.length;
          if (t3 < 9)
            return false;
          if (e3.charCodeAt(t3 - 1) !== 95 || e3.charCodeAt(t3 - 2) !== 95 || e3.charCodeAt(t3 - 3) !== 111 || e3.charCodeAt(t3 - 4) !== 116 || e3.charCodeAt(t3 - 5) !== 111 || e3.charCodeAt(t3 - 6) !== 114 || e3.charCodeAt(t3 - 7) !== 112 || e3.charCodeAt(t3 - 8) !== 95 || e3.charCodeAt(t3 - 9) !== 95)
            return false;
          for (var r3 = t3 - 10; r3 >= 0; r3--)
            if (e3.charCodeAt(r3) !== 36)
              return false;
          return true;
        }
        function c2(e3, t3) {
          return e3 === t3 ? 0 : e3 > t3 ? 1 : -1;
        }
        t2.toSetString = o2 ? u2 : function(e3) {
          return l2(e3) ? "$" + e3 : e3;
        }, t2.fromSetString = o2 ? u2 : function(e3) {
          return l2(e3) ? e3.slice(1) : e3;
        }, t2.compareByOriginalPositions = function(e3, t3, r3) {
          var n3 = e3.source - t3.source;
          return n3 !== 0 || (n3 = e3.originalLine - t3.originalLine) !== 0 || (n3 = e3.originalColumn - t3.originalColumn) !== 0 || r3 || (n3 = e3.generatedColumn - t3.generatedColumn) !== 0 || (n3 = e3.generatedLine - t3.generatedLine) !== 0 ? n3 : e3.name - t3.name;
        }, t2.compareByGeneratedPositionsDeflated = function(e3, t3, r3) {
          var n3 = e3.generatedLine - t3.generatedLine;
          return n3 !== 0 || (n3 = e3.generatedColumn - t3.generatedColumn) !== 0 || r3 || (n3 = e3.source - t3.source) !== 0 || (n3 = e3.originalLine - t3.originalLine) !== 0 || (n3 = e3.originalColumn - t3.originalColumn) !== 0 ? n3 : e3.name - t3.name;
        }, t2.compareByGeneratedPositionsInflated = function(e3, t3) {
          var r3 = e3.generatedLine - t3.generatedLine;
          return r3 !== 0 || (r3 = e3.generatedColumn - t3.generatedColumn) !== 0 || (r3 = c2(e3.source, t3.source)) !== 0 || (r3 = e3.originalLine - t3.originalLine) !== 0 || (r3 = e3.originalColumn - t3.originalColumn) !== 0 ? r3 : c2(e3.name, t3.name);
        };
      }, "/$$rollup_base$$/packages/babel-generator/node_modules/source-map/lib"), gp = Object.prototype.hasOwnProperty, vp = typeof Map != "undefined";
      function bp() {
        this._array = [], this._set = vp ? new Map() : Object.create(null);
      }
      bp.fromArray = function(e2, t2) {
        for (var r2 = new bp(), n2 = 0, s2 = e2.length; n2 < s2; n2++)
          r2.add(e2[n2], t2);
        return r2;
      }, bp.prototype.size = function() {
        return vp ? this._set.size : Object.getOwnPropertyNames(this._set).length;
      }, bp.prototype.add = function(e2, t2) {
        var r2 = vp ? e2 : yp.toSetString(e2), n2 = vp ? this.has(e2) : gp.call(this._set, r2), s2 = this._array.length;
        n2 && !t2 || this._array.push(e2), n2 || (vp ? this._set.set(e2, s2) : this._set[r2] = s2);
      }, bp.prototype.has = function(e2) {
        if (vp)
          return this._set.has(e2);
        var t2 = yp.toSetString(e2);
        return gp.call(this._set, t2);
      }, bp.prototype.indexOf = function(e2) {
        if (vp) {
          var t2 = this._set.get(e2);
          if (t2 >= 0)
            return t2;
        } else {
          var r2 = yp.toSetString(e2);
          if (gp.call(this._set, r2))
            return this._set[r2];
        }
        throw new Error('"' + e2 + '" is not in the set.');
      }, bp.prototype.at = function(e2) {
        if (e2 >= 0 && e2 < this._array.length)
          return this._array[e2];
        throw new Error("No element indexed by " + e2);
      }, bp.prototype.toArray = function() {
        return this._array.slice();
      };
      var Ep = { ArraySet: bp };
      function xp() {
        this._array = [], this._sorted = true, this._last = { generatedLine: -1, generatedColumn: 0 };
      }
      xp.prototype.unsortedForEach = function(e2, t2) {
        this._array.forEach(e2, t2);
      }, xp.prototype.add = function(e2) {
        var t2, r2, n2, s2, a2, i2;
        t2 = this._last, r2 = e2, n2 = t2.generatedLine, s2 = r2.generatedLine, a2 = t2.generatedColumn, i2 = r2.generatedColumn, s2 > n2 || s2 == n2 && i2 >= a2 || yp.compareByGeneratedPositionsInflated(t2, r2) <= 0 ? (this._last = e2, this._array.push(e2)) : (this._sorted = false, this._array.push(e2));
      }, xp.prototype.toArray = function() {
        return this._sorted || (this._array.sort(yp.compareByGeneratedPositionsInflated), this._sorted = true), this._array;
      };
      var Dp = Ep.ArraySet, Ap = { MappingList: xp }.MappingList;
      function wp(e2) {
        e2 || (e2 = {}), this._file = yp.getArg(e2, "file", null), this._sourceRoot = yp.getArg(e2, "sourceRoot", null), this._skipValidation = yp.getArg(e2, "skipValidation", false), this._sources = new Dp(), this._names = new Dp(), this._mappings = new Ap(), this._sourcesContents = null;
      }
      wp.prototype._version = 3, wp.fromSourceMap = function(e2) {
        var t2 = e2.sourceRoot, r2 = new wp({ file: e2.file, sourceRoot: t2 });
        return e2.eachMapping(function(e3) {
          var n2 = { generated: { line: e3.generatedLine, column: e3.generatedColumn } };
          e3.source != null && (n2.source = e3.source, t2 != null && (n2.source = yp.relative(t2, n2.source)), n2.original = { line: e3.originalLine, column: e3.originalColumn }, e3.name != null && (n2.name = e3.name)), r2.addMapping(n2);
        }), e2.sources.forEach(function(t3) {
          var n2 = e2.sourceContentFor(t3);
          n2 != null && r2.setSourceContent(t3, n2);
        }), r2;
      }, wp.prototype.addMapping = function(e2) {
        var t2 = yp.getArg(e2, "generated"), r2 = yp.getArg(e2, "original", null), n2 = yp.getArg(e2, "source", null), s2 = yp.getArg(e2, "name", null);
        this._skipValidation || this._validateMapping(t2, r2, n2, s2), n2 != null && (n2 = String(n2), this._sources.has(n2) || this._sources.add(n2)), s2 != null && (s2 = String(s2), this._names.has(s2) || this._names.add(s2)), this._mappings.add({ generatedLine: t2.line, generatedColumn: t2.column, originalLine: r2 != null && r2.line, originalColumn: r2 != null && r2.column, source: n2, name: s2 });
      }, wp.prototype.setSourceContent = function(e2, t2) {
        var r2 = e2;
        this._sourceRoot != null && (r2 = yp.relative(this._sourceRoot, r2)), t2 != null ? (this._sourcesContents || (this._sourcesContents = Object.create(null)), this._sourcesContents[yp.toSetString(r2)] = t2) : this._sourcesContents && (delete this._sourcesContents[yp.toSetString(r2)], Object.keys(this._sourcesContents).length === 0 && (this._sourcesContents = null));
      }, wp.prototype.applySourceMap = function(e2, t2, r2) {
        var n2 = t2;
        if (t2 == null) {
          if (e2.file == null)
            throw new Error(`SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's "file" property. Both were omitted.`);
          n2 = e2.file;
        }
        var s2 = this._sourceRoot;
        s2 != null && (n2 = yp.relative(s2, n2));
        var a2 = new Dp(), i2 = new Dp();
        this._mappings.unsortedForEach(function(t3) {
          if (t3.source === n2 && t3.originalLine != null) {
            var o2 = e2.originalPositionFor({ line: t3.originalLine, column: t3.originalColumn });
            o2.source != null && (t3.source = o2.source, r2 != null && (t3.source = yp.join(r2, t3.source)), s2 != null && (t3.source = yp.relative(s2, t3.source)), t3.originalLine = o2.line, t3.originalColumn = o2.column, o2.name != null && (t3.name = o2.name));
          }
          var u2 = t3.source;
          u2 == null || a2.has(u2) || a2.add(u2);
          var l2 = t3.name;
          l2 == null || i2.has(l2) || i2.add(l2);
        }, this), this._sources = a2, this._names = i2, e2.sources.forEach(function(t3) {
          var n3 = e2.sourceContentFor(t3);
          n3 != null && (r2 != null && (t3 = yp.join(r2, t3)), s2 != null && (t3 = yp.relative(s2, t3)), this.setSourceContent(t3, n3));
        }, this);
      }, wp.prototype._validateMapping = function(e2, t2, r2, n2) {
        if (t2 && typeof t2.line != "number" && typeof t2.column != "number")
          throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");
        if ((!(e2 && "line" in e2 && "column" in e2 && e2.line > 0 && e2.column >= 0) || t2 || r2 || n2) && !(e2 && "line" in e2 && "column" in e2 && t2 && "line" in t2 && "column" in t2 && e2.line > 0 && e2.column >= 0 && t2.line > 0 && t2.column >= 0 && r2))
          throw new Error("Invalid mapping: " + JSON.stringify({ generated: e2, source: r2, original: t2, name: n2 }));
      }, wp.prototype._serializeMappings = function() {
        for (var e2, t2, r2, n2, s2 = 0, a2 = 1, i2 = 0, o2 = 0, u2 = 0, l2 = 0, c2 = "", p2 = this._mappings.toArray(), d2 = 0, f2 = p2.length; d2 < f2; d2++) {
          if (e2 = "", (t2 = p2[d2]).generatedLine !== a2)
            for (s2 = 0; t2.generatedLine !== a2; )
              e2 += ";", a2++;
          else if (d2 > 0) {
            if (!yp.compareByGeneratedPositionsInflated(t2, p2[d2 - 1]))
              continue;
            e2 += ",";
          }
          e2 += hp(t2.generatedColumn - s2), s2 = t2.generatedColumn, t2.source != null && (n2 = this._sources.indexOf(t2.source), e2 += hp(n2 - l2), l2 = n2, e2 += hp(t2.originalLine - 1 - o2), o2 = t2.originalLine - 1, e2 += hp(t2.originalColumn - i2), i2 = t2.originalColumn, t2.name != null && (r2 = this._names.indexOf(t2.name), e2 += hp(r2 - u2), u2 = r2)), c2 += e2;
        }
        return c2;
      }, wp.prototype._generateSourcesContent = function(e2, t2) {
        return e2.map(function(e3) {
          if (!this._sourcesContents)
            return null;
          t2 != null && (e3 = yp.relative(t2, e3));
          var r2 = yp.toSetString(e3);
          return Object.prototype.hasOwnProperty.call(this._sourcesContents, r2) ? this._sourcesContents[r2] : null;
        }, this);
      }, wp.prototype.toJSON = function() {
        var e2 = { version: this._version, sources: this._sources.toArray(), names: this._names.toArray(), mappings: this._serializeMappings() };
        return this._file != null && (e2.file = this._file), this._sourceRoot != null && (e2.sourceRoot = this._sourceRoot), this._sourcesContents && (e2.sourcesContent = this._generateSourcesContent(e2.sources, e2.sourceRoot)), e2;
      }, wp.prototype.toString = function() {
        return JSON.stringify(this.toJSON());
      };
      var Cp = { SourceMapGenerator: wp }, Sp = zt(function(e2, t2) {
        function r2(e3, n2, s2, a2, i2, o2) {
          var u2 = Math.floor((n2 - e3) / 2) + e3, l2 = i2(s2, a2[u2], true);
          return l2 === 0 ? u2 : l2 > 0 ? n2 - u2 > 1 ? r2(u2, n2, s2, a2, i2, o2) : o2 == t2.LEAST_UPPER_BOUND ? n2 < a2.length ? n2 : -1 : u2 : u2 - e3 > 1 ? r2(e3, u2, s2, a2, i2, o2) : o2 == t2.LEAST_UPPER_BOUND ? u2 : e3 < 0 ? -1 : e3;
        }
        t2.GREATEST_LOWER_BOUND = 1, t2.LEAST_UPPER_BOUND = 2, t2.search = function(e3, n2, s2, a2) {
          if (n2.length === 0)
            return -1;
          var i2 = r2(-1, n2.length, e3, n2, s2, a2 || t2.GREATEST_LOWER_BOUND);
          if (i2 < 0)
            return -1;
          for (; i2 - 1 >= 0 && s2(n2[i2], n2[i2 - 1], true) === 0; )
            --i2;
          return i2;
        };
      }, "/$$rollup_base$$/packages/babel-generator/node_modules/source-map/lib");
      function Tp(e2, t2, r2) {
        var n2 = e2[t2];
        e2[t2] = e2[r2], e2[r2] = n2;
      }
      function jp(e2, t2, r2, n2) {
        if (r2 < n2) {
          var s2 = r2 - 1;
          Tp(e2, (u2 = r2, l2 = n2, Math.round(u2 + Math.random() * (l2 - u2))), n2);
          for (var a2 = e2[n2], i2 = r2; i2 < n2; i2++)
            t2(e2[i2], a2) <= 0 && Tp(e2, s2 += 1, i2);
          Tp(e2, s2 + 1, i2);
          var o2 = s2 + 1;
          jp(e2, t2, r2, o2 - 1), jp(e2, t2, o2 + 1, n2);
        }
        var u2, l2;
      }
      var Pp = Ep.ArraySet, Ip = function(e2, t2) {
        jp(e2, t2, 0, e2.length - 1);
      };
      function Fp(e2) {
        var t2 = e2;
        return typeof e2 == "string" && (t2 = JSON.parse(e2.replace(/^\)\]\}'/, ""))), t2.sections != null ? new Bp(t2) : new Op(t2);
      }
      Fp.fromSourceMap = function(e2) {
        return Op.fromSourceMap(e2);
      }, Fp.prototype._version = 3, Fp.prototype.__generatedMappings = null, Object.defineProperty(Fp.prototype, "_generatedMappings", { get: function() {
        return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
      } }), Fp.prototype.__originalMappings = null, Object.defineProperty(Fp.prototype, "_originalMappings", { get: function() {
        return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
      } }), Fp.prototype._charIsMappingSeparator = function(e2, t2) {
        var r2 = e2.charAt(t2);
        return r2 === ";" || r2 === ",";
      }, Fp.prototype._parseMappings = function(e2, t2) {
        throw new Error("Subclasses must implement _parseMappings");
      }, Fp.GENERATED_ORDER = 1, Fp.ORIGINAL_ORDER = 2, Fp.GREATEST_LOWER_BOUND = 1, Fp.LEAST_UPPER_BOUND = 2, Fp.prototype.eachMapping = function(e2, t2, r2) {
        var n2, s2 = t2 || null;
        switch (r2 || Fp.GENERATED_ORDER) {
          case Fp.GENERATED_ORDER:
            n2 = this._generatedMappings;
            break;
          case Fp.ORIGINAL_ORDER:
            n2 = this._originalMappings;
            break;
          default:
            throw new Error("Unknown order of iteration.");
        }
        var a2 = this.sourceRoot;
        n2.map(function(e3) {
          var t3 = e3.source === null ? null : this._sources.at(e3.source);
          return t3 != null && a2 != null && (t3 = yp.join(a2, t3)), { source: t3, generatedLine: e3.generatedLine, generatedColumn: e3.generatedColumn, originalLine: e3.originalLine, originalColumn: e3.originalColumn, name: e3.name === null ? null : this._names.at(e3.name) };
        }, this).forEach(e2, s2);
      }, Fp.prototype.allGeneratedPositionsFor = function(e2) {
        var t2 = yp.getArg(e2, "line"), r2 = { source: yp.getArg(e2, "source"), originalLine: t2, originalColumn: yp.getArg(e2, "column", 0) };
        if (this.sourceRoot != null && (r2.source = yp.relative(this.sourceRoot, r2.source)), !this._sources.has(r2.source))
          return [];
        r2.source = this._sources.indexOf(r2.source);
        var n2 = [], s2 = this._findMapping(r2, this._originalMappings, "originalLine", "originalColumn", yp.compareByOriginalPositions, Sp.LEAST_UPPER_BOUND);
        if (s2 >= 0) {
          var a2 = this._originalMappings[s2];
          if (e2.column === void 0)
            for (var i2 = a2.originalLine; a2 && a2.originalLine === i2; )
              n2.push({ line: yp.getArg(a2, "generatedLine", null), column: yp.getArg(a2, "generatedColumn", null), lastColumn: yp.getArg(a2, "lastGeneratedColumn", null) }), a2 = this._originalMappings[++s2];
          else
            for (var o2 = a2.originalColumn; a2 && a2.originalLine === t2 && a2.originalColumn == o2; )
              n2.push({ line: yp.getArg(a2, "generatedLine", null), column: yp.getArg(a2, "generatedColumn", null), lastColumn: yp.getArg(a2, "lastGeneratedColumn", null) }), a2 = this._originalMappings[++s2];
        }
        return n2;
      };
      var kp = Fp;
      function Op(e2) {
        var t2 = e2;
        typeof e2 == "string" && (t2 = JSON.parse(e2.replace(/^\)\]\}'/, "")));
        var r2 = yp.getArg(t2, "version"), n2 = yp.getArg(t2, "sources"), s2 = yp.getArg(t2, "names", []), a2 = yp.getArg(t2, "sourceRoot", null), i2 = yp.getArg(t2, "sourcesContent", null), o2 = yp.getArg(t2, "mappings"), u2 = yp.getArg(t2, "file", null);
        if (r2 != this._version)
          throw new Error("Unsupported version: " + r2);
        n2 = n2.map(String).map(yp.normalize).map(function(e3) {
          return a2 && yp.isAbsolute(a2) && yp.isAbsolute(e3) ? yp.relative(a2, e3) : e3;
        }), this._names = Pp.fromArray(s2.map(String), true), this._sources = Pp.fromArray(n2, true), this.sourceRoot = a2, this.sourcesContent = i2, this._mappings = o2, this.file = u2;
      }
      function Rp() {
        this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
      }
      Op.prototype = Object.create(Fp.prototype), Op.prototype.consumer = Fp, Op.fromSourceMap = function(e2) {
        var t2 = Object.create(Op.prototype), r2 = t2._names = Pp.fromArray(e2._names.toArray(), true), n2 = t2._sources = Pp.fromArray(e2._sources.toArray(), true);
        t2.sourceRoot = e2._sourceRoot, t2.sourcesContent = e2._generateSourcesContent(t2._sources.toArray(), t2.sourceRoot), t2.file = e2._file;
        for (var s2 = e2._mappings.toArray().slice(), a2 = t2.__generatedMappings = [], i2 = t2.__originalMappings = [], o2 = 0, u2 = s2.length; o2 < u2; o2++) {
          var l2 = s2[o2], c2 = new Rp();
          c2.generatedLine = l2.generatedLine, c2.generatedColumn = l2.generatedColumn, l2.source && (c2.source = n2.indexOf(l2.source), c2.originalLine = l2.originalLine, c2.originalColumn = l2.originalColumn, l2.name && (c2.name = r2.indexOf(l2.name)), i2.push(c2)), a2.push(c2);
        }
        return Ip(t2.__originalMappings, yp.compareByOriginalPositions), t2;
      }, Op.prototype._version = 3, Object.defineProperty(Op.prototype, "sources", { get: function() {
        return this._sources.toArray().map(function(e2) {
          return this.sourceRoot != null ? yp.join(this.sourceRoot, e2) : e2;
        }, this);
      } }), Op.prototype._parseMappings = function(e2, t2) {
        for (var r2, n2, s2, a2, i2, o2 = 1, u2 = 0, l2 = 0, c2 = 0, p2 = 0, d2 = 0, f2 = e2.length, h2 = 0, m2 = {}, y2 = {}, g2 = [], v2 = []; h2 < f2; )
          if (e2.charAt(h2) === ";")
            o2++, h2++, u2 = 0;
          else if (e2.charAt(h2) === ",")
            h2++;
          else {
            for ((r2 = new Rp()).generatedLine = o2, a2 = h2; a2 < f2 && !this._charIsMappingSeparator(e2, a2); a2++)
              ;
            if (s2 = m2[n2 = e2.slice(h2, a2)])
              h2 += n2.length;
            else {
              for (s2 = []; h2 < a2; )
                mp(e2, h2, y2), i2 = y2.value, h2 = y2.rest, s2.push(i2);
              if (s2.length === 2)
                throw new Error("Found a source, but no line and column");
              if (s2.length === 3)
                throw new Error("Found a source and line, but no column");
              m2[n2] = s2;
            }
            r2.generatedColumn = u2 + s2[0], u2 = r2.generatedColumn, s2.length > 1 && (r2.source = p2 + s2[1], p2 += s2[1], r2.originalLine = l2 + s2[2], l2 = r2.originalLine, r2.originalLine += 1, r2.originalColumn = c2 + s2[3], c2 = r2.originalColumn, s2.length > 4 && (r2.name = d2 + s2[4], d2 += s2[4])), v2.push(r2), typeof r2.originalLine == "number" && g2.push(r2);
          }
        Ip(v2, yp.compareByGeneratedPositionsDeflated), this.__generatedMappings = v2, Ip(g2, yp.compareByOriginalPositions), this.__originalMappings = g2;
      }, Op.prototype._findMapping = function(e2, t2, r2, n2, s2, a2) {
        if (e2[r2] <= 0)
          throw new TypeError("Line must be greater than or equal to 1, got " + e2[r2]);
        if (e2[n2] < 0)
          throw new TypeError("Column must be greater than or equal to 0, got " + e2[n2]);
        return Sp.search(e2, t2, s2, a2);
      }, Op.prototype.computeColumnSpans = function() {
        for (var e2 = 0; e2 < this._generatedMappings.length; ++e2) {
          var t2 = this._generatedMappings[e2];
          if (e2 + 1 < this._generatedMappings.length) {
            var r2 = this._generatedMappings[e2 + 1];
            if (t2.generatedLine === r2.generatedLine) {
              t2.lastGeneratedColumn = r2.generatedColumn - 1;
              continue;
            }
          }
          t2.lastGeneratedColumn = 1 / 0;
        }
      }, Op.prototype.originalPositionFor = function(e2) {
        var t2 = { generatedLine: yp.getArg(e2, "line"), generatedColumn: yp.getArg(e2, "column") }, r2 = this._findMapping(t2, this._generatedMappings, "generatedLine", "generatedColumn", yp.compareByGeneratedPositionsDeflated, yp.getArg(e2, "bias", Fp.GREATEST_LOWER_BOUND));
        if (r2 >= 0) {
          var n2 = this._generatedMappings[r2];
          if (n2.generatedLine === t2.generatedLine) {
            var s2 = yp.getArg(n2, "source", null);
            s2 !== null && (s2 = this._sources.at(s2), this.sourceRoot != null && (s2 = yp.join(this.sourceRoot, s2)));
            var a2 = yp.getArg(n2, "name", null);
            return a2 !== null && (a2 = this._names.at(a2)), { source: s2, line: yp.getArg(n2, "originalLine", null), column: yp.getArg(n2, "originalColumn", null), name: a2 };
          }
        }
        return { source: null, line: null, column: null, name: null };
      }, Op.prototype.hasContentsOfAllSources = function() {
        return !!this.sourcesContent && (this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(e2) {
          return e2 == null;
        }));
      }, Op.prototype.sourceContentFor = function(e2, t2) {
        if (!this.sourcesContent)
          return null;
        if (this.sourceRoot != null && (e2 = yp.relative(this.sourceRoot, e2)), this._sources.has(e2))
          return this.sourcesContent[this._sources.indexOf(e2)];
        var r2;
        if (this.sourceRoot != null && (r2 = yp.urlParse(this.sourceRoot))) {
          var n2 = e2.replace(/^file:\/\//, "");
          if (r2.scheme == "file" && this._sources.has(n2))
            return this.sourcesContent[this._sources.indexOf(n2)];
          if ((!r2.path || r2.path == "/") && this._sources.has("/" + e2))
            return this.sourcesContent[this._sources.indexOf("/" + e2)];
        }
        if (t2)
          return null;
        throw new Error('"' + e2 + '" is not in the SourceMap.');
      }, Op.prototype.generatedPositionFor = function(e2) {
        var t2 = yp.getArg(e2, "source");
        if (this.sourceRoot != null && (t2 = yp.relative(this.sourceRoot, t2)), !this._sources.has(t2))
          return { line: null, column: null, lastColumn: null };
        var r2 = { source: t2 = this._sources.indexOf(t2), originalLine: yp.getArg(e2, "line"), originalColumn: yp.getArg(e2, "column") }, n2 = this._findMapping(r2, this._originalMappings, "originalLine", "originalColumn", yp.compareByOriginalPositions, yp.getArg(e2, "bias", Fp.GREATEST_LOWER_BOUND));
        if (n2 >= 0) {
          var s2 = this._originalMappings[n2];
          if (s2.source === r2.source)
            return { line: yp.getArg(s2, "generatedLine", null), column: yp.getArg(s2, "generatedColumn", null), lastColumn: yp.getArg(s2, "lastGeneratedColumn", null) };
        }
        return { line: null, column: null, lastColumn: null };
      };
      var Np = Op;
      function Bp(e2) {
        var t2 = e2;
        typeof e2 == "string" && (t2 = JSON.parse(e2.replace(/^\)\]\}'/, "")));
        var r2 = yp.getArg(t2, "version"), n2 = yp.getArg(t2, "sections");
        if (r2 != this._version)
          throw new Error("Unsupported version: " + r2);
        this._sources = new Pp(), this._names = new Pp();
        var s2 = { line: -1, column: 0 };
        this._sections = n2.map(function(e3) {
          if (e3.url)
            throw new Error("Support for url field in sections not implemented.");
          var t3 = yp.getArg(e3, "offset"), r3 = yp.getArg(t3, "line"), n3 = yp.getArg(t3, "column");
          if (r3 < s2.line || r3 === s2.line && n3 < s2.column)
            throw new Error("Section offsets must be ordered and non-overlapping.");
          return s2 = t3, { generatedOffset: { generatedLine: r3 + 1, generatedColumn: n3 + 1 }, consumer: new Fp(yp.getArg(e3, "map")) };
        });
      }
      Bp.prototype = Object.create(Fp.prototype), Bp.prototype.constructor = Fp, Bp.prototype._version = 3, Object.defineProperty(Bp.prototype, "sources", { get: function() {
        for (var e2 = [], t2 = 0; t2 < this._sections.length; t2++)
          for (var r2 = 0; r2 < this._sections[t2].consumer.sources.length; r2++)
            e2.push(this._sections[t2].consumer.sources[r2]);
        return e2;
      } }), Bp.prototype.originalPositionFor = function(e2) {
        var t2 = { generatedLine: yp.getArg(e2, "line"), generatedColumn: yp.getArg(e2, "column") }, r2 = Sp.search(t2, this._sections, function(e3, t3) {
          var r3 = e3.generatedLine - t3.generatedOffset.generatedLine;
          return r3 || e3.generatedColumn - t3.generatedOffset.generatedColumn;
        }), n2 = this._sections[r2];
        return n2 ? n2.consumer.originalPositionFor({ line: t2.generatedLine - (n2.generatedOffset.generatedLine - 1), column: t2.generatedColumn - (n2.generatedOffset.generatedLine === t2.generatedLine ? n2.generatedOffset.generatedColumn - 1 : 0), bias: e2.bias }) : { source: null, line: null, column: null, name: null };
      }, Bp.prototype.hasContentsOfAllSources = function() {
        return this._sections.every(function(e2) {
          return e2.consumer.hasContentsOfAllSources();
        });
      }, Bp.prototype.sourceContentFor = function(e2, t2) {
        for (var r2 = 0; r2 < this._sections.length; r2++) {
          var n2 = this._sections[r2].consumer.sourceContentFor(e2, true);
          if (n2)
            return n2;
        }
        if (t2)
          return null;
        throw new Error('"' + e2 + '" is not in the SourceMap.');
      }, Bp.prototype.generatedPositionFor = function(e2) {
        for (var t2 = 0; t2 < this._sections.length; t2++) {
          var r2 = this._sections[t2];
          if (r2.consumer.sources.indexOf(yp.getArg(e2, "source")) !== -1) {
            var n2 = r2.consumer.generatedPositionFor(e2);
            if (n2)
              return { line: n2.line + (r2.generatedOffset.generatedLine - 1), column: n2.column + (r2.generatedOffset.generatedLine === n2.line ? r2.generatedOffset.generatedColumn - 1 : 0) };
          }
        }
        return { line: null, column: null };
      }, Bp.prototype._parseMappings = function(e2, t2) {
        this.__generatedMappings = [], this.__originalMappings = [];
        for (var r2 = 0; r2 < this._sections.length; r2++)
          for (var n2 = this._sections[r2], s2 = n2.consumer._generatedMappings, a2 = 0; a2 < s2.length; a2++) {
            var i2 = s2[a2], o2 = n2.consumer._sources.at(i2.source);
            n2.consumer.sourceRoot !== null && (o2 = yp.join(n2.consumer.sourceRoot, o2)), this._sources.add(o2), o2 = this._sources.indexOf(o2);
            var u2 = n2.consumer._names.at(i2.name);
            this._names.add(u2), u2 = this._names.indexOf(u2);
            var l2 = { source: o2, generatedLine: i2.generatedLine + (n2.generatedOffset.generatedLine - 1), generatedColumn: i2.generatedColumn + (n2.generatedOffset.generatedLine === i2.generatedLine ? n2.generatedOffset.generatedColumn - 1 : 0), originalLine: i2.originalLine, originalColumn: i2.originalColumn, name: u2 };
            this.__generatedMappings.push(l2), typeof l2.originalLine == "number" && this.__originalMappings.push(l2);
          }
        Ip(this.__generatedMappings, yp.compareByGeneratedPositionsDeflated), Ip(this.__originalMappings, yp.compareByOriginalPositions);
      };
      var _p = { SourceMapConsumer: kp, BasicSourceMapConsumer: Np, IndexedSourceMapConsumer: Bp }, Lp = Cp.SourceMapGenerator, Mp = /(\r?\n)/, Up = "$$$isSourceNode$$$";
      function Gp(e2, t2, r2, n2, s2) {
        this.children = [], this.sourceContents = {}, this.line = e2 == null ? null : e2, this.column = t2 == null ? null : t2, this.source = r2 == null ? null : r2, this.name = s2 == null ? null : s2, this[Up] = true, n2 != null && this.add(n2);
      }
      Gp.fromStringWithSourceMap = function(e2, t2, r2) {
        var n2 = new Gp(), s2 = e2.split(Mp), a2 = 0, i2 = function() {
          return e3() + (e3() || "");
          function e3() {
            return a2 < s2.length ? s2[a2++] : void 0;
          }
        }, o2 = 1, u2 = 0, l2 = null;
        return t2.eachMapping(function(e3) {
          if (l2 !== null) {
            if (!(o2 < e3.generatedLine)) {
              var t3 = (r3 = s2[a2]).substr(0, e3.generatedColumn - u2);
              return s2[a2] = r3.substr(e3.generatedColumn - u2), u2 = e3.generatedColumn, c2(l2, t3), void (l2 = e3);
            }
            c2(l2, i2()), o2++, u2 = 0;
          }
          for (; o2 < e3.generatedLine; )
            n2.add(i2()), o2++;
          if (u2 < e3.generatedColumn) {
            var r3 = s2[a2];
            n2.add(r3.substr(0, e3.generatedColumn)), s2[a2] = r3.substr(e3.generatedColumn), u2 = e3.generatedColumn;
          }
          l2 = e3;
        }, this), a2 < s2.length && (l2 && c2(l2, i2()), n2.add(s2.splice(a2).join(""))), t2.sources.forEach(function(e3) {
          var s3 = t2.sourceContentFor(e3);
          s3 != null && (r2 != null && (e3 = yp.join(r2, e3)), n2.setSourceContent(e3, s3));
        }), n2;
        function c2(e3, t3) {
          if (e3 === null || e3.source === void 0)
            n2.add(t3);
          else {
            var s3 = r2 ? yp.join(r2, e3.source) : e3.source;
            n2.add(new Gp(e3.originalLine, e3.originalColumn, s3, t3, e3.name));
          }
        }
      }, Gp.prototype.add = function(e2) {
        if (Array.isArray(e2))
          e2.forEach(function(e3) {
            this.add(e3);
          }, this);
        else {
          if (!e2[Up] && typeof e2 != "string")
            throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e2);
          e2 && this.children.push(e2);
        }
        return this;
      }, Gp.prototype.prepend = function(e2) {
        if (Array.isArray(e2))
          for (var t2 = e2.length - 1; t2 >= 0; t2--)
            this.prepend(e2[t2]);
        else {
          if (!e2[Up] && typeof e2 != "string")
            throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e2);
          this.children.unshift(e2);
        }
        return this;
      }, Gp.prototype.walk = function(e2) {
        for (var t2, r2 = 0, n2 = this.children.length; r2 < n2; r2++)
          (t2 = this.children[r2])[Up] ? t2.walk(e2) : t2 !== "" && e2(t2, { source: this.source, line: this.line, column: this.column, name: this.name });
      }, Gp.prototype.join = function(e2) {
        var t2, r2, n2 = this.children.length;
        if (n2 > 0) {
          for (t2 = [], r2 = 0; r2 < n2 - 1; r2++)
            t2.push(this.children[r2]), t2.push(e2);
          t2.push(this.children[r2]), this.children = t2;
        }
        return this;
      }, Gp.prototype.replaceRight = function(e2, t2) {
        var r2 = this.children[this.children.length - 1];
        return r2[Up] ? r2.replaceRight(e2, t2) : typeof r2 == "string" ? this.children[this.children.length - 1] = r2.replace(e2, t2) : this.children.push("".replace(e2, t2)), this;
      }, Gp.prototype.setSourceContent = function(e2, t2) {
        this.sourceContents[yp.toSetString(e2)] = t2;
      }, Gp.prototype.walkSourceContents = function(e2) {
        for (var t2 = 0, r2 = this.children.length; t2 < r2; t2++)
          this.children[t2][Up] && this.children[t2].walkSourceContents(e2);
        var n2 = Object.keys(this.sourceContents);
        for (t2 = 0, r2 = n2.length; t2 < r2; t2++)
          e2(yp.fromSetString(n2[t2]), this.sourceContents[n2[t2]]);
      }, Gp.prototype.toString = function() {
        var e2 = "";
        return this.walk(function(t2) {
          e2 += t2;
        }), e2;
      }, Gp.prototype.toStringWithSourceMap = function(e2) {
        var t2 = { code: "", line: 1, column: 0 }, r2 = new Lp(e2), n2 = false, s2 = null, a2 = null, i2 = null, o2 = null;
        return this.walk(function(e3, u2) {
          t2.code += e3, u2.source !== null && u2.line !== null && u2.column !== null ? (s2 === u2.source && a2 === u2.line && i2 === u2.column && o2 === u2.name || r2.addMapping({ source: u2.source, original: { line: u2.line, column: u2.column }, generated: { line: t2.line, column: t2.column }, name: u2.name }), s2 = u2.source, a2 = u2.line, i2 = u2.column, o2 = u2.name, n2 = true) : n2 && (r2.addMapping({ generated: { line: t2.line, column: t2.column } }), s2 = null, n2 = false);
          for (var l2 = 0, c2 = e3.length; l2 < c2; l2++)
            e3.charCodeAt(l2) === 10 ? (t2.line++, t2.column = 0, l2 + 1 === c2 ? (s2 = null, n2 = false) : n2 && r2.addMapping({ source: u2.source, original: { line: u2.line, column: u2.column }, generated: { line: t2.line, column: t2.column }, name: u2.name })) : t2.column++;
        }), this.walkSourceContents(function(e3, t3) {
          r2.setSourceContent(e3, t3);
        }), { code: t2.code, map: r2 };
      };
      var Vp = { SourceMapGenerator: Cp.SourceMapGenerator, SourceMapConsumer: _p.SourceMapConsumer, SourceNode: { SourceNode: Gp }.SourceNode }, Wp = function() {
        function e2(e3, t3) {
          this._cachedMap = void 0, this._code = void 0, this._opts = void 0, this._rawMappings = void 0, this._lastGenLine = void 0, this._lastSourceLine = void 0, this._lastSourceColumn = void 0, this._cachedMap = null, this._code = t3, this._opts = e3, this._rawMappings = [];
        }
        var t2 = e2.prototype;
        return t2.get = function() {
          if (!this._cachedMap) {
            var e3 = this._cachedMap = new Vp.SourceMapGenerator({ sourceRoot: this._opts.sourceRoot }), t3 = this._code;
            typeof t3 == "string" ? e3.setSourceContent(this._opts.sourceFileName.replace(/\\/g, "/"), t3) : typeof t3 == "object" && Object.keys(t3).forEach(function(r2) {
              e3.setSourceContent(r2.replace(/\\/g, "/"), t3[r2]);
            }), this._rawMappings.forEach(function(t4) {
              return e3.addMapping(t4);
            }, e3);
          }
          return this._cachedMap.toJSON();
        }, t2.getRawMappings = function() {
          return this._rawMappings.slice();
        }, t2.mark = function(e3, t3, r2, n2, s2, a2, i2) {
          this._lastGenLine !== e3 && r2 === null || (i2 || this._lastGenLine !== e3 || this._lastSourceLine !== r2 || this._lastSourceColumn !== n2) && (this._cachedMap = null, this._lastGenLine = e3, this._lastSourceLine = r2, this._lastSourceColumn = n2, this._rawMappings.push({ name: s2 || void 0, generated: { line: e3, column: t3 }, source: r2 == null ? void 0 : (a2 || this._opts.sourceFileName).replace(/\\/g, "/"), original: r2 == null ? void 0 : { line: r2, column: n2 } }));
        }, e2;
      }(), Hp = /^[ \t]+$/, Xp = function() {
        function e2(e3) {
          this._map = null, this._buf = [], this._last = "", this._queue = [], this._position = { line: 1, column: 0 }, this._sourcePosition = { identifierName: null, line: null, column: null, filename: null }, this._disallowedPop = null, this._map = e3;
        }
        var t2 = e2.prototype;
        return t2.get = function() {
          this._flush();
          var e3 = this._map, t3 = { code: this._buf.join("").trimRight(), map: null, rawMappings: e3 == null ? void 0 : e3.getRawMappings() };
          return e3 && Object.defineProperty(t3, "map", { configurable: true, enumerable: true, get: function() {
            return this.map = e3.get();
          }, set: function(e4) {
            Object.defineProperty(this, "map", { value: e4, writable: true });
          } }), t3;
        }, t2.append = function(e3) {
          this._flush();
          var t3 = this._sourcePosition, r2 = t3.line, n2 = t3.column, s2 = t3.filename, a2 = t3.identifierName, i2 = t3.force;
          this._append(e3, r2, n2, a2, s2, i2);
        }, t2.queue = function(e3) {
          if (e3 === "\n")
            for (; this._queue.length > 0 && Hp.test(this._queue[0][0]); )
              this._queue.shift();
          var t3 = this._sourcePosition, r2 = t3.line, n2 = t3.column, s2 = t3.filename, a2 = t3.identifierName, i2 = t3.force;
          this._queue.unshift([e3, r2, n2, a2, s2, i2]);
        }, t2._flush = function() {
          for (var e3; e3 = this._queue.pop(); )
            this._append.apply(this, c(e3));
        }, t2._append = function(e3, t3, r2, n2, s2, a2) {
          this._buf.push(e3), this._last = e3[e3.length - 1];
          var i2 = e3.indexOf("\n"), o2 = 0;
          for (i2 !== 0 && this._mark(t3, r2, n2, s2, a2); i2 !== -1; )
            this._position.line++, this._position.column = 0, (o2 = i2 + 1) < e3.length && this._mark(++t3, 0, n2, s2, a2), i2 = e3.indexOf("\n", o2);
          this._position.column += e3.length - o2;
        }, t2._mark = function(e3, t3, r2, n2, s2) {
          var a2;
          (a2 = this._map) == null || a2.mark(this._position.line, this._position.column, e3, t3, r2, n2, s2);
        }, t2.removeTrailingNewline = function() {
          this._queue.length > 0 && this._queue[0][0] === "\n" && this._queue.shift();
        }, t2.removeLastSemicolon = function() {
          this._queue.length > 0 && this._queue[0][0] === ";" && this._queue.shift();
        }, t2.endsWith = function(e3) {
          if (e3.length === 1) {
            var t3;
            if (this._queue.length > 0) {
              var r2 = this._queue[0][0];
              t3 = r2[r2.length - 1];
            } else
              t3 = this._last;
            return t3 === e3;
          }
          var n2 = this._last + this._queue.reduce(function(e4, t4) {
            return t4[0] + e4;
          }, "");
          return e3.length <= n2.length && n2.slice(-e3.length) === e3;
        }, t2.hasContent = function() {
          return this._queue.length > 0 || !!this._last;
        }, t2.exactSource = function(e3, t3) {
          this.source("start", e3, true), t3(), this.source("end", e3), this._disallowPop("start", e3);
        }, t2.source = function(e3, t3, r2) {
          e3 && !t3 || this._normalizePosition(e3, t3, this._sourcePosition, r2);
        }, t2.withSource = function(e3, t3, r2) {
          if (!this._map)
            return r2();
          var n2 = this._sourcePosition.line, s2 = this._sourcePosition.column, a2 = this._sourcePosition.filename, i2 = this._sourcePosition.identifierName;
          this.source(e3, t3), r2(), this._sourcePosition.force && this._sourcePosition.line === n2 && this._sourcePosition.column === s2 && this._sourcePosition.filename === a2 || this._disallowedPop && this._disallowedPop.line === n2 && this._disallowedPop.column === s2 && this._disallowedPop.filename === a2 || (this._sourcePosition.line = n2, this._sourcePosition.column = s2, this._sourcePosition.filename = a2, this._sourcePosition.identifierName = i2, this._sourcePosition.force = false, this._disallowedPop = null);
        }, t2._disallowPop = function(e3, t3) {
          e3 && !t3 || (this._disallowedPop = this._normalizePosition(e3, t3));
        }, t2._normalizePosition = function(e3, t3, r2, n2) {
          var s2 = t3 ? t3[e3] : null;
          r2 === void 0 && (r2 = { identifierName: null, line: null, column: null, filename: null, force: false });
          var a2 = r2.line, i2 = r2.column, o2 = r2.filename;
          return r2.identifierName = e3 === "start" && (t3 == null ? void 0 : t3.identifierName) || null, r2.line = s2 == null ? void 0 : s2.line, r2.column = s2 == null ? void 0 : s2.column, r2.filename = t3 == null ? void 0 : t3.filename, (n2 || r2.line !== a2 || r2.column !== i2 || r2.filename !== o2) && (r2.force = n2), r2;
        }, t2.getCurrentColumn = function() {
          var e3 = this._queue.reduce(function(e4, t4) {
            return t4[0] + e4;
          }, ""), t3 = e3.lastIndexOf("\n");
          return t3 === -1 ? this._position.column + e3.length : e3.length - 1 - t3;
        }, t2.getCurrentLine = function() {
          for (var e3 = this._queue.reduce(function(e4, t4) {
            return t4[0] + e4;
          }, ""), t3 = 0, r2 = 0; r2 < e3.length; r2++)
            e3[r2] === "\n" && t3++;
          return this._position.line + t3;
        }, e2;
      }();
      function qp(e2, t2) {
        return t2 === void 0 && (t2 = {}), M(e2) || je(e2) ? (qp(e2.object, t2), e2.computed && qp(e2.property, t2)) : bt(e2) || y(e2) ? (qp(e2.left, t2), qp(e2.right, t2)) : E(e2) || Pe(e2) ? (t2.hasCall = true, qp(e2.callee, t2)) : St(e2) ? t2.hasFunction = true : F(e2) && (t2.hasHelper = t2.hasHelper || $p(e2.callee)), t2;
      }
      function $p(e2) {
        return M(e2) ? $p(e2.object) || $p(e2.property) : F(e2) ? e2.name === "require" || e2.name[0] === "_" : E(e2) ? $p(e2.callee) : !(!bt(e2) && !y(e2)) && (F(e2.left) && $p(e2.left) || $p(e2.right));
      }
      function Kp(e2) {
        return Pt(e2) || V(e2) || m(e2) || F(e2) || M(e2);
      }
      var zp = { AssignmentExpression: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        var t2 = qp(e2.right);
        if (t2.hasCall && t2.hasHelper || t2.hasFunction)
          return { before: t2.hasFunction, after: true };
      }), SwitchCase: function(e2) {
        function t2(t3, r2) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2, t2) {
        return { before: !!e2.consequent.length || t2.cases[0] === e2, after: !e2.consequent.length && t2.cases[t2.cases.length - 1] === e2 };
      }), LogicalExpression: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        if (St(e2.left) || St(e2.right))
          return { after: true };
      }), Literal: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        if (R(e2) && e2.value === "use strict")
          return { after: true };
      }), CallExpression: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        if (St(e2.callee) || $p(e2))
          return { before: true, after: true };
      }), OptionalCallExpression: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        if (St(e2.callee))
          return { before: true, after: true };
      }), VariableDeclaration: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        for (var t2 = 0; t2 < e2.declarations.length; t2++) {
          var r2 = e2.declarations[t2], n2 = $p(r2.id) && !Kp(r2.init);
          if (!n2) {
            var s2 = qp(r2.init);
            n2 = $p(r2.init) && s2.hasCall || s2.hasFunction;
          }
          if (n2)
            return { before: true, after: true };
        }
      }), IfStatement: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        if (v(e2.consequent))
          return { before: true, after: true };
      }) };
      zp.ObjectProperty = zp.ObjectTypeProperty = zp.ObjectMethod = function(e2, t2) {
        if (t2.properties[0] === e2)
          return { before: true };
      }, zp.ObjectTypeCallProperty = function(e2, t2) {
        var r2;
        if (t2.callProperties[0] === e2 && ((r2 = t2.properties) == null || !r2.length))
          return { before: true };
      }, zp.ObjectTypeIndexer = function(e2, t2) {
        var r2, n2;
        if (!(t2.indexers[0] !== e2 || (r2 = t2.properties) != null && r2.length || (n2 = t2.callProperties) != null && n2.length))
          return { before: true };
      }, zp.ObjectTypeInternalSlot = function(e2, t2) {
        var r2, n2, s2;
        if (!(t2.internalSlots[0] !== e2 || (r2 = t2.properties) != null && r2.length || (n2 = t2.callProperties) != null && n2.length || (s2 = t2.indexers) != null && s2.length))
          return { before: true };
      };
      var Jp = { VariableDeclaration: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        return e2.declarations.map(function(e3) {
          return e3.init;
        });
      }), ArrayExpression: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        return e2.elements;
      }), ObjectExpression: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        return e2.properties;
      }) };
      [["Function", true], ["Class", true], ["Loop", true], ["LabeledStatement", true], ["SwitchStatement", true], ["TryStatement", true]].forEach(function(e2) {
        var t2 = l(e2, 2), r2 = t2[0], n2 = t2[1];
        typeof n2 == "boolean" && (n2 = { after: n2, before: n2 }), [r2].concat(en[r2] || []).forEach(function(e3) {
          zp[e3] = function() {
            return n2;
          };
        });
      });
      var Yp = { "||": 0, "??": 0, "&&": 1, "|": 2, "^": 3, "&": 4, "==": 5, "===": 5, "!=": 5, "!==": 5, "<": 6, ">": 6, "<=": 6, ">=": 6, in: 6, instanceof: 6, ">>": 7, "<<": 7, ">>>": 7, "+": 8, "-": 8, "*": 9, "/": 9, "%": 9, "**": 10 }, Qp = function(e2, t2) {
        return (oe(t2) || ie(t2)) && t2.superClass === e2;
      }, Zp = function(e2, t2) {
        return (M(t2) || je(t2)) && t2.object === e2 || (E(t2) || Pe(t2) || U(t2)) && t2.callee === e2 || xe(t2) && t2.tag === e2 || yt(t2);
      };
      function ed(e2, t2) {
        return Fe(t2) || Le(t2) || Ne(t2) || We(t2);
      }
      function td(e2, t2) {
        return lt(t2) || ct(t2) || ft(t2) || dt(t2) || pt(t2);
      }
      function rd(e2, t2) {
        return bt(t2) || kt(t2) || Zp(e2, t2) || we(t2) && Ae(e2) || D(t2) && e2 === t2.test || Qp(e2, t2);
      }
      function nd(e2, t2) {
        return Zp(e2, t2) || g(t2, { operator: "**", left: e2 }) || Qp(e2, t2);
      }
      function sd(e2, t2) {
        return !!(kt(t2) || bt(t2) || D(t2, { test: e2 }) || we(t2) || mt(t2) || ht(t2)) || nd(e2, t2);
      }
      function ad(e2, t2) {
        return E(t2, { callee: e2 }) || M(t2, { object: e2 });
      }
      function id(e2, t2) {
        for (var r2 = t2.expressionStatement, n2 = r2 !== void 0 && r2, s2 = t2.arrowBody, a2 = s2 !== void 0 && s2, i2 = t2.exportDefault, o2 = i2 !== void 0 && i2, u2 = t2.forHead, l2 = u2 !== void 0 && u2, c2 = t2.forInHead, p2 = c2 !== void 0 && c2, d2 = t2.forOfHead, f2 = d2 !== void 0 && d2, h2 = e2.length - 1, m2 = e2[h2], g2 = e2[--h2]; h2 >= 0; ) {
          if (n2 && C(g2, { expression: m2 }) || o2 && le(g2, { declaration: m2 }) || a2 && se(g2, { body: m2 }) || l2 && j(g2, { init: m2 }) || p2 && T(g2, { left: m2 }) || f2 && de(g2, { left: m2 }))
            return true;
          if (!(Zp(m2, g2) && !U(g2) || $(g2) && g2.expressions[0] === m2 || Dt(g2, { test: m2 }) || bt(g2, { left: m2 }) || y(g2, { left: m2 })))
            return false;
          m2 = g2, g2 = e2[--h2];
        }
        return false;
      }
      function od(e2) {
        var t2 = {};
        function r2(e3, r3) {
          var n3 = t2[e3];
          t2[e3] = n3 ? function(e4, t3, s3) {
            var a3 = n3(e4, t3, s3);
            return a3 == null ? r3(e4, t3, s3) : a3;
          } : r3;
        }
        for (var n2 = 0, s2 = Object.keys(e2); n2 < s2.length; n2++) {
          var a2 = s2[n2], i2 = en[a2];
          if (i2)
            for (var o2, u2 = f(i2); !(o2 = u2()).done; ) {
              r2(o2.value, e2[a2]);
            }
          else
            r2(a2, e2[a2]);
        }
        return t2;
      }
      var ud = od(Object.freeze({ __proto__: null, NullableTypeAnnotation: function(e2, t2) {
        return Fe(t2);
      }, FunctionTypeAnnotation: function(e2, t2, r2) {
        return We(t2) || Ne(t2) || Fe(t2) || Ge(t2) && se(r2[r2.length - 3]);
      }, UpdateExpression: function(e2, t2) {
        return Zp(e2, t2) || Qp(e2, t2);
      }, ObjectExpression: function(e2, t2, r2) {
        return id(r2, { expressionStatement: true, arrowBody: true });
      }, DoExpression: function(e2, t2, r2) {
        return !e2.async && id(r2, { expressionStatement: true });
      }, Binary: function(e2, t2) {
        if (e2.operator === "**" && g(t2, { operator: "**" }))
          return t2.left === e2;
        if (Qp(e2, t2))
          return true;
        if (Zp(e2, t2) || kt(t2) || we(t2))
          return true;
        if (bt(t2)) {
          var r2 = t2.operator, n2 = Yp[r2], s2 = e2.operator, a2 = Yp[s2];
          if (n2 === a2 && t2.right === e2 && !L(t2) || n2 > a2)
            return true;
        }
      }, UnionTypeAnnotation: ed, IntersectionTypeAnnotation: ed, OptionalIndexedAccessType: function(e2, t2) {
        return Xe(t2, { objectType: e2 });
      }, TSAsExpression: function() {
        return true;
      }, TSTypeAssertion: function() {
        return true;
      }, TSUnionType: td, TSIntersectionType: td, TSInferType: function(e2, t2) {
        return lt(t2) || ct(t2);
      }, BinaryExpression: function(e2, t2) {
        return e2.operator === "in" && (ee(t2) || wt(t2));
      }, SequenceExpression: function(e2, t2) {
        return !(j(t2) || Y(t2) || q(t2) || k(t2) && t2.test === e2 || te(t2) && t2.test === e2 || T(t2) && t2.right === e2 || z(t2) && t2.discriminant === e2 || C(t2) && t2.expression === e2);
      }, YieldExpression: rd, AwaitExpression: rd, ClassExpression: function(e2, t2, r2) {
        return id(r2, { expressionStatement: true, exportDefault: true });
      }, UnaryLike: nd, FunctionExpression: function(e2, t2, r2) {
        return id(r2, { expressionStatement: true, exportDefault: true });
      }, ArrowFunctionExpression: function(e2, t2) {
        return Bt(t2) || sd(e2, t2);
      }, ConditionalExpression: sd, OptionalMemberExpression: ad, OptionalCallExpression: ad, AssignmentExpression: function(e2, t2) {
        return !!ve(e2.left) || sd(e2, t2);
      }, LogicalExpression: function(e2, t2) {
        switch (e2.operator) {
          case "||":
            return !!L(t2) && (t2.operator === "??" || t2.operator === "&&");
          case "&&":
            return L(t2, { operator: "??" });
          case "??":
            return L(t2) && t2.operator !== "??";
        }
      }, Identifier: function(e2, t2, r2) {
        if (e2.name === "let") {
          var n2 = M(t2, { object: e2, computed: true }) || je(t2, { object: e2, computed: true, optional: false });
          return id(r2, { expressionStatement: n2, forHead: n2, forInHead: n2, forOfHead: true });
        }
        return e2.name === "async" && de(t2) && e2 === t2.left;
      } })), ld = od(zp), cd = od(Jp);
      function pd(e2, t2, r2, n2) {
        var s2 = e2[t2.type];
        return s2 ? s2(t2, r2, n2) : null;
      }
      function dd(e2) {
        return !!E(e2) || M(e2) && dd(e2.object);
      }
      function fd(e2, t2, r2) {
        if (!e2)
          return 0;
        C(e2) && (e2 = e2.expression);
        var n2 = pd(ld, e2, t2);
        if (!n2) {
          var s2 = pd(cd, e2, t2);
          if (s2)
            for (var a2 = 0; a2 < s2.length && !(n2 = fd(s2[a2], e2, r2)); a2++)
              ;
        }
        return typeof n2 == "object" && n2 !== null && n2[r2] || 0;
      }
      function hd(e2, t2) {
        return fd(e2, t2, "before");
      }
      function md(e2, t2) {
        return fd(e2, t2, "after");
      }
      function yd(e2, t2, r2) {
        return !!t2 && (!(!U(t2) || t2.callee !== e2 || !dd(e2)) || pd(ud, e2, t2, r2));
      }
      function gd(e2) {
        return function(t2) {
          if (this.word(e2), t2.delegate && this.token("*"), t2.argument) {
            this.space();
            var r2 = this.startTerminatorless();
            this.print(t2.argument, t2), this.endTerminatorless(r2);
          }
        };
      }
      var vd = gd("yield"), bd = gd("await");
      function Ed(e2, t2) {
        var r2 = this.inForStatementInitCounter && e2.operator === "in" && !yd(e2, t2);
        r2 && this.token("("), this.print(e2.left, e2), this.space(), e2.operator === "in" || e2.operator === "instanceof" ? this.word(e2.operator) : this.token(e2.operator), this.space(), this.print(e2.right, e2), r2 && this.token(")");
      }
      function xd(e2) {
        return xt(e2.body) ? xd(e2.body) : e2;
      }
      var Dd = function(e2) {
        return function(t2) {
          this.word("for"), this.space(), e2 === "of" && t2.await && (this.word("await"), this.space()), this.token("("), this.print(t2.left, t2), this.space(), this.word(e2), this.space(), this.print(t2.right, t2), this.token(")"), this.printBlock(t2);
        };
      }, Ad = Dd("in"), wd = Dd("of");
      function Cd(e2, t2) {
        return t2 === void 0 && (t2 = "label"), function(r2) {
          this.word(e2);
          var n2 = r2[t2];
          if (n2) {
            this.space();
            var s2 = t2 == "label", a2 = this.startTerminatorless(s2);
            this.print(n2, r2), this.endTerminatorless(a2);
          }
          this.semicolon();
        };
      }
      var Sd = Cd("continue"), Td = Cd("return", "argument"), jd = Cd("break"), Pd = Cd("throw", "argument");
      function Id() {
        if (this.token(","), this.newline(), this.endsWith("\n"))
          for (var e2 = 0; e2 < 4; e2++)
            this.space(true);
      }
      function Fd() {
        if (this.token(","), this.newline(), this.endsWith("\n"))
          for (var e2 = 0; e2 < 6; e2++)
            this.space(true);
      }
      function kd(e2, t2) {
        this.format.decoratorsBeforeExport && (le(t2) || ce(t2)) || this.printJoin(e2.decorators, e2), e2.declare && (this.word("declare"), this.space()), e2.abstract && (this.word("abstract"), this.space()), this.word("class"), e2.id && (this.space(), this.print(e2.id, e2)), this.print(e2.typeParameters, e2), e2.superClass && (this.space(), this.word("extends"), this.space(), this.print(e2.superClass, e2), this.print(e2.superTypeParameters, e2)), e2.implements && (this.space(), this.word("implements"), this.space(), this.printList(e2.implements, e2)), this.space(), this.print(e2.body, e2);
      }
      function Od(e2) {
        this._functionHead(e2), this.space(), this.print(e2.body, e2);
      }
      function Rd(e2) {
        this.word("export"), this.space(), e2.exportKind === "type" && (this.word("type"), this.space()), this.token("*"), this.space(), this.word("from"), this.space(), this.print(e2.source, e2), this.printAssertions(e2), this.semicolon();
      }
      function Nd(e2) {
        if (e2.declaration) {
          var t2 = e2.declaration;
          this.print(t2, e2), xt(t2) || this.semicolon();
        } else {
          e2.exportKind === "type" && (this.word("type"), this.space());
          for (var r2 = e2.specifiers.slice(0), n2 = false; ; ) {
            var s2 = r2[0];
            if (!it(s2) && !Te(s2))
              break;
            n2 = true, this.print(r2.shift(), e2), r2.length && (this.token(","), this.space());
          }
          (r2.length || !r2.length && !n2) && (this.token("{"), r2.length && (this.space(), this.printList(r2, e2), this.space()), this.token("}")), e2.source && (this.space(), this.word("from"), this.space(), this.print(e2.source, e2), this.printAssertions(e2)), this.semicolon();
        }
      }
      for (var Bd = function(e2) {
        var t2 = Xd(e2), r2 = t2[0], n2 = t2[1];
        return 3 * (r2 + n2) / 4 - n2;
      }, _d = function(e2) {
        var t2, r2, n2 = Xd(e2), s2 = n2[0], a2 = n2[1], i2 = new Gd(function(e3, t3, r3) {
          return 3 * (t3 + r3) / 4 - r3;
        }(0, s2, a2)), o2 = 0, u2 = a2 > 0 ? s2 - 4 : s2;
        for (r2 = 0; r2 < u2; r2 += 4)
          t2 = Ud[e2.charCodeAt(r2)] << 18 | Ud[e2.charCodeAt(r2 + 1)] << 12 | Ud[e2.charCodeAt(r2 + 2)] << 6 | Ud[e2.charCodeAt(r2 + 3)], i2[o2++] = t2 >> 16 & 255, i2[o2++] = t2 >> 8 & 255, i2[o2++] = 255 & t2;
        a2 === 2 && (t2 = Ud[e2.charCodeAt(r2)] << 2 | Ud[e2.charCodeAt(r2 + 1)] >> 4, i2[o2++] = 255 & t2);
        a2 === 1 && (t2 = Ud[e2.charCodeAt(r2)] << 10 | Ud[e2.charCodeAt(r2 + 1)] << 4 | Ud[e2.charCodeAt(r2 + 2)] >> 2, i2[o2++] = t2 >> 8 & 255, i2[o2++] = 255 & t2);
        return i2;
      }, Ld = function(e2) {
        for (var t2, r2 = e2.length, n2 = r2 % 3, s2 = [], a2 = 16383, i2 = 0, o2 = r2 - n2; i2 < o2; i2 += a2)
          s2.push(qd(e2, i2, i2 + a2 > o2 ? o2 : i2 + a2));
        n2 === 1 ? (t2 = e2[r2 - 1], s2.push(Md[t2 >> 2] + Md[t2 << 4 & 63] + "==")) : n2 === 2 && (t2 = (e2[r2 - 2] << 8) + e2[r2 - 1], s2.push(Md[t2 >> 10] + Md[t2 >> 4 & 63] + Md[t2 << 2 & 63] + "="));
        return s2.join("");
      }, Md = [], Ud = [], Gd = typeof Uint8Array != "undefined" ? Uint8Array : Array, Vd = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", Wd = 0, Hd = Vd.length; Wd < Hd; ++Wd)
        Md[Wd] = Vd[Wd], Ud[Vd.charCodeAt(Wd)] = Wd;
      function Xd(e2) {
        var t2 = e2.length;
        if (t2 % 4 > 0)
          throw new Error("Invalid string. Length must be a multiple of 4");
        var r2 = e2.indexOf("=");
        return r2 === -1 && (r2 = t2), [r2, r2 === t2 ? 0 : 4 - r2 % 4];
      }
      function qd(e2, t2, r2) {
        for (var n2, s2, a2 = [], i2 = t2; i2 < r2; i2 += 3)
          n2 = (e2[i2] << 16 & 16711680) + (e2[i2 + 1] << 8 & 65280) + (255 & e2[i2 + 2]), a2.push(Md[(s2 = n2) >> 18 & 63] + Md[s2 >> 12 & 63] + Md[s2 >> 6 & 63] + Md[63 & s2]);
        return a2.join("");
      }
      Ud["-".charCodeAt(0)] = 62, Ud["_".charCodeAt(0)] = 63;
      var $d = { byteLength: Bd, toByteArray: _d, fromByteArray: Ld }, Kd = function(e2, t2, r2, n2, s2) {
        var a2, i2, o2 = 8 * s2 - n2 - 1, u2 = (1 << o2) - 1, l2 = u2 >> 1, c2 = -7, p2 = r2 ? s2 - 1 : 0, d2 = r2 ? -1 : 1, f2 = e2[t2 + p2];
        for (p2 += d2, a2 = f2 & (1 << -c2) - 1, f2 >>= -c2, c2 += o2; c2 > 0; a2 = 256 * a2 + e2[t2 + p2], p2 += d2, c2 -= 8)
          ;
        for (i2 = a2 & (1 << -c2) - 1, a2 >>= -c2, c2 += n2; c2 > 0; i2 = 256 * i2 + e2[t2 + p2], p2 += d2, c2 -= 8)
          ;
        if (a2 === 0)
          a2 = 1 - l2;
        else {
          if (a2 === u2)
            return i2 ? NaN : 1 / 0 * (f2 ? -1 : 1);
          i2 += Math.pow(2, n2), a2 -= l2;
        }
        return (f2 ? -1 : 1) * i2 * Math.pow(2, a2 - n2);
      }, zd = function(e2, t2, r2, n2, s2, a2) {
        var i2, o2, u2, l2 = 8 * a2 - s2 - 1, c2 = (1 << l2) - 1, p2 = c2 >> 1, d2 = s2 === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, f2 = n2 ? 0 : a2 - 1, h2 = n2 ? 1 : -1, m2 = t2 < 0 || t2 === 0 && 1 / t2 < 0 ? 1 : 0;
        for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (o2 = isNaN(t2) ? 1 : 0, i2 = c2) : (i2 = Math.floor(Math.log(t2) / Math.LN2), t2 * (u2 = Math.pow(2, -i2)) < 1 && (i2--, u2 *= 2), (t2 += i2 + p2 >= 1 ? d2 / u2 : d2 * Math.pow(2, 1 - p2)) * u2 >= 2 && (i2++, u2 /= 2), i2 + p2 >= c2 ? (o2 = 0, i2 = c2) : i2 + p2 >= 1 ? (o2 = (t2 * u2 - 1) * Math.pow(2, s2), i2 += p2) : (o2 = t2 * Math.pow(2, p2 - 1) * Math.pow(2, s2), i2 = 0)); s2 >= 8; e2[r2 + f2] = 255 & o2, f2 += h2, o2 /= 256, s2 -= 8)
          ;
        for (i2 = i2 << s2 | o2, l2 += s2; l2 > 0; e2[r2 + f2] = 255 & i2, f2 += h2, i2 /= 256, l2 -= 8)
          ;
        e2[r2 + f2 - h2] |= 128 * m2;
      }, Jd = zt(function(e2, t2) {
        t2.Buffer = s2, t2.SlowBuffer = function(e3) {
          +e3 != e3 && (e3 = 0);
          return s2.alloc(+e3);
        }, t2.INSPECT_MAX_BYTES = 50;
        var r2 = 2147483647;
        function n2(e3) {
          if (e3 > r2)
            throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
          var t3 = new Uint8Array(e3);
          return t3.__proto__ = s2.prototype, t3;
        }
        function s2(e3, t3, r3) {
          if (typeof e3 == "number") {
            if (typeof t3 == "string")
              throw new TypeError('The "string" argument must be of type string. Received type number');
            return o2(e3);
          }
          return a2(e3, t3, r3);
        }
        function a2(e3, t3, r3) {
          if (typeof e3 == "string")
            return function(e4, t4) {
              typeof t4 == "string" && t4 !== "" || (t4 = "utf8");
              if (!s2.isEncoding(t4))
                throw new TypeError("Unknown encoding: " + t4);
              var r4 = 0 | c2(e4, t4), a4 = n2(r4), i4 = a4.write(e4, t4);
              i4 !== r4 && (a4 = a4.slice(0, i4));
              return a4;
            }(e3, t3);
          if (ArrayBuffer.isView(e3))
            return u2(e3);
          if (e3 == null)
            throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
          if (L2(e3, ArrayBuffer) || e3 && L2(e3.buffer, ArrayBuffer))
            return function(e4, t4, r4) {
              if (t4 < 0 || e4.byteLength < t4)
                throw new RangeError('"offset" is outside of buffer bounds');
              if (e4.byteLength < t4 + (r4 || 0))
                throw new RangeError('"length" is outside of buffer bounds');
              var n3;
              n3 = t4 === void 0 && r4 === void 0 ? new Uint8Array(e4) : r4 === void 0 ? new Uint8Array(e4, t4) : new Uint8Array(e4, t4, r4);
              return n3.__proto__ = s2.prototype, n3;
            }(e3, t3, r3);
          if (typeof e3 == "number")
            throw new TypeError('The "value" argument must not be of type number. Received type number');
          var a3 = e3.valueOf && e3.valueOf();
          if (a3 != null && a3 !== e3)
            return s2.from(a3, t3, r3);
          var i3 = function(e4) {
            if (s2.isBuffer(e4)) {
              var t4 = 0 | l2(e4.length), r4 = n2(t4);
              return r4.length === 0 || e4.copy(r4, 0, 0, t4), r4;
            }
            if (e4.length !== void 0)
              return typeof e4.length != "number" || M2(e4.length) ? n2(0) : u2(e4);
            if (e4.type === "Buffer" && Array.isArray(e4.data))
              return u2(e4.data);
          }(e3);
          if (i3)
            return i3;
          if (typeof Symbol != "undefined" && Symbol.toPrimitive != null && typeof e3[Symbol.toPrimitive] == "function")
            return s2.from(e3[Symbol.toPrimitive]("string"), t3, r3);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
        }
        function i2(e3) {
          if (typeof e3 != "number")
            throw new TypeError('"size" argument must be of type number');
          if (e3 < 0)
            throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
        }
        function o2(e3) {
          return i2(e3), n2(e3 < 0 ? 0 : 0 | l2(e3));
        }
        function u2(e3) {
          for (var t3 = e3.length < 0 ? 0 : 0 | l2(e3.length), r3 = n2(t3), s3 = 0; s3 < t3; s3 += 1)
            r3[s3] = 255 & e3[s3];
          return r3;
        }
        function l2(e3) {
          if (e3 >= r2)
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + r2.toString(16) + " bytes");
          return 0 | e3;
        }
        function c2(e3, t3) {
          if (s2.isBuffer(e3))
            return e3.length;
          if (ArrayBuffer.isView(e3) || L2(e3, ArrayBuffer))
            return e3.byteLength;
          if (typeof e3 != "string")
            throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e3);
          var r3 = e3.length, n3 = arguments.length > 2 && arguments[2] === true;
          if (!n3 && r3 === 0)
            return 0;
          for (var a3 = false; ; )
            switch (t3) {
              case "ascii":
              case "latin1":
              case "binary":
                return r3;
              case "utf8":
              case "utf-8":
                return N2(e3).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * r3;
              case "hex":
                return r3 >>> 1;
              case "base64":
                return B2(e3).length;
              default:
                if (a3)
                  return n3 ? -1 : N2(e3).length;
                t3 = ("" + t3).toLowerCase(), a3 = true;
            }
        }
        function p2(e3, t3, r3) {
          var n3 = false;
          if ((t3 === void 0 || t3 < 0) && (t3 = 0), t3 > this.length)
            return "";
          if ((r3 === void 0 || r3 > this.length) && (r3 = this.length), r3 <= 0)
            return "";
          if ((r3 >>>= 0) <= (t3 >>>= 0))
            return "";
          for (e3 || (e3 = "utf8"); ; )
            switch (e3) {
              case "hex":
                return S2(this, t3, r3);
              case "utf8":
              case "utf-8":
                return D2(this, t3, r3);
              case "ascii":
                return w2(this, t3, r3);
              case "latin1":
              case "binary":
                return C2(this, t3, r3);
              case "base64":
                return x2(this, t3, r3);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return T2(this, t3, r3);
              default:
                if (n3)
                  throw new TypeError("Unknown encoding: " + e3);
                e3 = (e3 + "").toLowerCase(), n3 = true;
            }
        }
        function d2(e3, t3, r3) {
          var n3 = e3[t3];
          e3[t3] = e3[r3], e3[r3] = n3;
        }
        function f2(e3, t3, r3, n3, a3) {
          if (e3.length === 0)
            return -1;
          if (typeof r3 == "string" ? (n3 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), M2(r3 = +r3) && (r3 = a3 ? 0 : e3.length - 1), r3 < 0 && (r3 = e3.length + r3), r3 >= e3.length) {
            if (a3)
              return -1;
            r3 = e3.length - 1;
          } else if (r3 < 0) {
            if (!a3)
              return -1;
            r3 = 0;
          }
          if (typeof t3 == "string" && (t3 = s2.from(t3, n3)), s2.isBuffer(t3))
            return t3.length === 0 ? -1 : h2(e3, t3, r3, n3, a3);
          if (typeof t3 == "number")
            return t3 &= 255, typeof Uint8Array.prototype.indexOf == "function" ? a3 ? Uint8Array.prototype.indexOf.call(e3, t3, r3) : Uint8Array.prototype.lastIndexOf.call(e3, t3, r3) : h2(e3, [t3], r3, n3, a3);
          throw new TypeError("val must be string, number or Buffer");
        }
        function h2(e3, t3, r3, n3, s3) {
          var a3, i3 = 1, o3 = e3.length, u3 = t3.length;
          if (n3 !== void 0 && ((n3 = String(n3).toLowerCase()) === "ucs2" || n3 === "ucs-2" || n3 === "utf16le" || n3 === "utf-16le")) {
            if (e3.length < 2 || t3.length < 2)
              return -1;
            i3 = 2, o3 /= 2, u3 /= 2, r3 /= 2;
          }
          function l3(e4, t4) {
            return i3 === 1 ? e4[t4] : e4.readUInt16BE(t4 * i3);
          }
          if (s3) {
            var c3 = -1;
            for (a3 = r3; a3 < o3; a3++)
              if (l3(e3, a3) === l3(t3, c3 === -1 ? 0 : a3 - c3)) {
                if (c3 === -1 && (c3 = a3), a3 - c3 + 1 === u3)
                  return c3 * i3;
              } else
                c3 !== -1 && (a3 -= a3 - c3), c3 = -1;
          } else
            for (r3 + u3 > o3 && (r3 = o3 - u3), a3 = r3; a3 >= 0; a3--) {
              for (var p3 = true, d3 = 0; d3 < u3; d3++)
                if (l3(e3, a3 + d3) !== l3(t3, d3)) {
                  p3 = false;
                  break;
                }
              if (p3)
                return a3;
            }
          return -1;
        }
        function m2(e3, t3, r3, n3) {
          r3 = Number(r3) || 0;
          var s3 = e3.length - r3;
          n3 ? (n3 = Number(n3)) > s3 && (n3 = s3) : n3 = s3;
          var a3 = t3.length;
          n3 > a3 / 2 && (n3 = a3 / 2);
          for (var i3 = 0; i3 < n3; ++i3) {
            var o3 = parseInt(t3.substr(2 * i3, 2), 16);
            if (M2(o3))
              return i3;
            e3[r3 + i3] = o3;
          }
          return i3;
        }
        function y2(e3, t3, r3, n3) {
          return _2(N2(t3, e3.length - r3), e3, r3, n3);
        }
        function g2(e3, t3, r3, n3) {
          return _2(function(e4) {
            for (var t4 = [], r4 = 0; r4 < e4.length; ++r4)
              t4.push(255 & e4.charCodeAt(r4));
            return t4;
          }(t3), e3, r3, n3);
        }
        function v2(e3, t3, r3, n3) {
          return g2(e3, t3, r3, n3);
        }
        function b2(e3, t3, r3, n3) {
          return _2(B2(t3), e3, r3, n3);
        }
        function E2(e3, t3, r3, n3) {
          return _2(function(e4, t4) {
            for (var r4, n4, s3, a3 = [], i3 = 0; i3 < e4.length && !((t4 -= 2) < 0); ++i3)
              n4 = (r4 = e4.charCodeAt(i3)) >> 8, s3 = r4 % 256, a3.push(s3), a3.push(n4);
            return a3;
          }(t3, e3.length - r3), e3, r3, n3);
        }
        function x2(e3, t3, r3) {
          return t3 === 0 && r3 === e3.length ? $d.fromByteArray(e3) : $d.fromByteArray(e3.slice(t3, r3));
        }
        function D2(e3, t3, r3) {
          r3 = Math.min(e3.length, r3);
          for (var n3 = [], s3 = t3; s3 < r3; ) {
            var a3, i3, o3, u3, l3 = e3[s3], c3 = null, p3 = l3 > 239 ? 4 : l3 > 223 ? 3 : l3 > 191 ? 2 : 1;
            if (s3 + p3 <= r3)
              switch (p3) {
                case 1:
                  l3 < 128 && (c3 = l3);
                  break;
                case 2:
                  (192 & (a3 = e3[s3 + 1])) == 128 && (u3 = (31 & l3) << 6 | 63 & a3) > 127 && (c3 = u3);
                  break;
                case 3:
                  a3 = e3[s3 + 1], i3 = e3[s3 + 2], (192 & a3) == 128 && (192 & i3) == 128 && (u3 = (15 & l3) << 12 | (63 & a3) << 6 | 63 & i3) > 2047 && (u3 < 55296 || u3 > 57343) && (c3 = u3);
                  break;
                case 4:
                  a3 = e3[s3 + 1], i3 = e3[s3 + 2], o3 = e3[s3 + 3], (192 & a3) == 128 && (192 & i3) == 128 && (192 & o3) == 128 && (u3 = (15 & l3) << 18 | (63 & a3) << 12 | (63 & i3) << 6 | 63 & o3) > 65535 && u3 < 1114112 && (c3 = u3);
              }
            c3 === null ? (c3 = 65533, p3 = 1) : c3 > 65535 && (c3 -= 65536, n3.push(c3 >>> 10 & 1023 | 55296), c3 = 56320 | 1023 & c3), n3.push(c3), s3 += p3;
          }
          return function(e4) {
            var t4 = e4.length;
            if (t4 <= A2)
              return String.fromCharCode.apply(String, e4);
            var r4 = "", n4 = 0;
            for (; n4 < t4; )
              r4 += String.fromCharCode.apply(String, e4.slice(n4, n4 += A2));
            return r4;
          }(n3);
        }
        t2.kMaxLength = r2, s2.TYPED_ARRAY_SUPPORT = function() {
          try {
            var e3 = new Uint8Array(1);
            return e3.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
              return 42;
            } }, e3.foo() === 42;
          } catch (e4) {
            return false;
          }
        }(), s2.TYPED_ARRAY_SUPPORT || typeof console == "undefined" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(s2.prototype, "parent", { enumerable: true, get: function() {
          if (s2.isBuffer(this))
            return this.buffer;
        } }), Object.defineProperty(s2.prototype, "offset", { enumerable: true, get: function() {
          if (s2.isBuffer(this))
            return this.byteOffset;
        } }), typeof Symbol != "undefined" && Symbol.species != null && s2[Symbol.species] === s2 && Object.defineProperty(s2, Symbol.species, { value: null, configurable: true, enumerable: false, writable: false }), s2.poolSize = 8192, s2.from = function(e3, t3, r3) {
          return a2(e3, t3, r3);
        }, s2.prototype.__proto__ = Uint8Array.prototype, s2.__proto__ = Uint8Array, s2.alloc = function(e3, t3, r3) {
          return function(e4, t4, r4) {
            return i2(e4), e4 <= 0 ? n2(e4) : t4 !== void 0 ? typeof r4 == "string" ? n2(e4).fill(t4, r4) : n2(e4).fill(t4) : n2(e4);
          }(e3, t3, r3);
        }, s2.allocUnsafe = function(e3) {
          return o2(e3);
        }, s2.allocUnsafeSlow = function(e3) {
          return o2(e3);
        }, s2.isBuffer = function(e3) {
          return e3 != null && e3._isBuffer === true && e3 !== s2.prototype;
        }, s2.compare = function(e3, t3) {
          if (L2(e3, Uint8Array) && (e3 = s2.from(e3, e3.offset, e3.byteLength)), L2(t3, Uint8Array) && (t3 = s2.from(t3, t3.offset, t3.byteLength)), !s2.isBuffer(e3) || !s2.isBuffer(t3))
            throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (e3 === t3)
            return 0;
          for (var r3 = e3.length, n3 = t3.length, a3 = 0, i3 = Math.min(r3, n3); a3 < i3; ++a3)
            if (e3[a3] !== t3[a3]) {
              r3 = e3[a3], n3 = t3[a3];
              break;
            }
          return r3 < n3 ? -1 : n3 < r3 ? 1 : 0;
        }, s2.isEncoding = function(e3) {
          switch (String(e3).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, s2.concat = function(e3, t3) {
          if (!Array.isArray(e3))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (e3.length === 0)
            return s2.alloc(0);
          var r3;
          if (t3 === void 0)
            for (t3 = 0, r3 = 0; r3 < e3.length; ++r3)
              t3 += e3[r3].length;
          var n3 = s2.allocUnsafe(t3), a3 = 0;
          for (r3 = 0; r3 < e3.length; ++r3) {
            var i3 = e3[r3];
            if (L2(i3, Uint8Array) && (i3 = s2.from(i3)), !s2.isBuffer(i3))
              throw new TypeError('"list" argument must be an Array of Buffers');
            i3.copy(n3, a3), a3 += i3.length;
          }
          return n3;
        }, s2.byteLength = c2, s2.prototype._isBuffer = true, s2.prototype.swap16 = function() {
          var e3 = this.length;
          if (e3 % 2 != 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var t3 = 0; t3 < e3; t3 += 2)
            d2(this, t3, t3 + 1);
          return this;
        }, s2.prototype.swap32 = function() {
          var e3 = this.length;
          if (e3 % 4 != 0)
            throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var t3 = 0; t3 < e3; t3 += 4)
            d2(this, t3, t3 + 3), d2(this, t3 + 1, t3 + 2);
          return this;
        }, s2.prototype.swap64 = function() {
          var e3 = this.length;
          if (e3 % 8 != 0)
            throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var t3 = 0; t3 < e3; t3 += 8)
            d2(this, t3, t3 + 7), d2(this, t3 + 1, t3 + 6), d2(this, t3 + 2, t3 + 5), d2(this, t3 + 3, t3 + 4);
          return this;
        }, s2.prototype.toString = function() {
          var e3 = this.length;
          return e3 === 0 ? "" : arguments.length === 0 ? D2(this, 0, e3) : p2.apply(this, arguments);
        }, s2.prototype.toLocaleString = s2.prototype.toString, s2.prototype.equals = function(e3) {
          if (!s2.isBuffer(e3))
            throw new TypeError("Argument must be a Buffer");
          return this === e3 || s2.compare(this, e3) === 0;
        }, s2.prototype.inspect = function() {
          var e3 = "", r3 = t2.INSPECT_MAX_BYTES;
          return e3 = this.toString("hex", 0, r3).replace(/(.{2})/g, "$1 ").trim(), this.length > r3 && (e3 += " ... "), "<Buffer " + e3 + ">";
        }, s2.prototype.compare = function(e3, t3, r3, n3, a3) {
          if (L2(e3, Uint8Array) && (e3 = s2.from(e3, e3.offset, e3.byteLength)), !s2.isBuffer(e3))
            throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e3);
          if (t3 === void 0 && (t3 = 0), r3 === void 0 && (r3 = e3 ? e3.length : 0), n3 === void 0 && (n3 = 0), a3 === void 0 && (a3 = this.length), t3 < 0 || r3 > e3.length || n3 < 0 || a3 > this.length)
            throw new RangeError("out of range index");
          if (n3 >= a3 && t3 >= r3)
            return 0;
          if (n3 >= a3)
            return -1;
          if (t3 >= r3)
            return 1;
          if (this === e3)
            return 0;
          for (var i3 = (a3 >>>= 0) - (n3 >>>= 0), o3 = (r3 >>>= 0) - (t3 >>>= 0), u3 = Math.min(i3, o3), l3 = this.slice(n3, a3), c3 = e3.slice(t3, r3), p3 = 0; p3 < u3; ++p3)
            if (l3[p3] !== c3[p3]) {
              i3 = l3[p3], o3 = c3[p3];
              break;
            }
          return i3 < o3 ? -1 : o3 < i3 ? 1 : 0;
        }, s2.prototype.includes = function(e3, t3, r3) {
          return this.indexOf(e3, t3, r3) !== -1;
        }, s2.prototype.indexOf = function(e3, t3, r3) {
          return f2(this, e3, t3, r3, true);
        }, s2.prototype.lastIndexOf = function(e3, t3, r3) {
          return f2(this, e3, t3, r3, false);
        }, s2.prototype.write = function(e3, t3, r3, n3) {
          if (t3 === void 0)
            n3 = "utf8", r3 = this.length, t3 = 0;
          else if (r3 === void 0 && typeof t3 == "string")
            n3 = t3, r3 = this.length, t3 = 0;
          else {
            if (!isFinite(t3))
              throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t3 >>>= 0, isFinite(r3) ? (r3 >>>= 0, n3 === void 0 && (n3 = "utf8")) : (n3 = r3, r3 = void 0);
          }
          var s3 = this.length - t3;
          if ((r3 === void 0 || r3 > s3) && (r3 = s3), e3.length > 0 && (r3 < 0 || t3 < 0) || t3 > this.length)
            throw new RangeError("Attempt to write outside buffer bounds");
          n3 || (n3 = "utf8");
          for (var a3 = false; ; )
            switch (n3) {
              case "hex":
                return m2(this, e3, t3, r3);
              case "utf8":
              case "utf-8":
                return y2(this, e3, t3, r3);
              case "ascii":
                return g2(this, e3, t3, r3);
              case "latin1":
              case "binary":
                return v2(this, e3, t3, r3);
              case "base64":
                return b2(this, e3, t3, r3);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return E2(this, e3, t3, r3);
              default:
                if (a3)
                  throw new TypeError("Unknown encoding: " + n3);
                n3 = ("" + n3).toLowerCase(), a3 = true;
            }
        }, s2.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        var A2 = 4096;
        function w2(e3, t3, r3) {
          var n3 = "";
          r3 = Math.min(e3.length, r3);
          for (var s3 = t3; s3 < r3; ++s3)
            n3 += String.fromCharCode(127 & e3[s3]);
          return n3;
        }
        function C2(e3, t3, r3) {
          var n3 = "";
          r3 = Math.min(e3.length, r3);
          for (var s3 = t3; s3 < r3; ++s3)
            n3 += String.fromCharCode(e3[s3]);
          return n3;
        }
        function S2(e3, t3, r3) {
          var n3 = e3.length;
          (!t3 || t3 < 0) && (t3 = 0), (!r3 || r3 < 0 || r3 > n3) && (r3 = n3);
          for (var s3 = "", a3 = t3; a3 < r3; ++a3)
            s3 += R2(e3[a3]);
          return s3;
        }
        function T2(e3, t3, r3) {
          for (var n3 = e3.slice(t3, r3), s3 = "", a3 = 0; a3 < n3.length; a3 += 2)
            s3 += String.fromCharCode(n3[a3] + 256 * n3[a3 + 1]);
          return s3;
        }
        function j2(e3, t3, r3) {
          if (e3 % 1 != 0 || e3 < 0)
            throw new RangeError("offset is not uint");
          if (e3 + t3 > r3)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function P2(e3, t3, r3, n3, a3, i3) {
          if (!s2.isBuffer(e3))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t3 > a3 || t3 < i3)
            throw new RangeError('"value" argument is out of bounds');
          if (r3 + n3 > e3.length)
            throw new RangeError("Index out of range");
        }
        function I2(e3, t3, r3, n3, s3, a3) {
          if (r3 + n3 > e3.length)
            throw new RangeError("Index out of range");
          if (r3 < 0)
            throw new RangeError("Index out of range");
        }
        function F2(e3, t3, r3, n3, s3) {
          return t3 = +t3, r3 >>>= 0, s3 || I2(e3, 0, r3, 4), zd(e3, t3, r3, n3, 23, 4), r3 + 4;
        }
        function k2(e3, t3, r3, n3, s3) {
          return t3 = +t3, r3 >>>= 0, s3 || I2(e3, 0, r3, 8), zd(e3, t3, r3, n3, 52, 8), r3 + 8;
        }
        s2.prototype.slice = function(e3, t3) {
          var r3 = this.length;
          (e3 = ~~e3) < 0 ? (e3 += r3) < 0 && (e3 = 0) : e3 > r3 && (e3 = r3), (t3 = t3 === void 0 ? r3 : ~~t3) < 0 ? (t3 += r3) < 0 && (t3 = 0) : t3 > r3 && (t3 = r3), t3 < e3 && (t3 = e3);
          var n3 = this.subarray(e3, t3);
          return n3.__proto__ = s2.prototype, n3;
        }, s2.prototype.readUIntLE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || j2(e3, t3, this.length);
          for (var n3 = this[e3], s3 = 1, a3 = 0; ++a3 < t3 && (s3 *= 256); )
            n3 += this[e3 + a3] * s3;
          return n3;
        }, s2.prototype.readUIntBE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || j2(e3, t3, this.length);
          for (var n3 = this[e3 + --t3], s3 = 1; t3 > 0 && (s3 *= 256); )
            n3 += this[e3 + --t3] * s3;
          return n3;
        }, s2.prototype.readUInt8 = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 1, this.length), this[e3];
        }, s2.prototype.readUInt16LE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
        }, s2.prototype.readUInt16BE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
        }, s2.prototype.readUInt32LE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
        }, s2.prototype.readUInt32BE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
        }, s2.prototype.readIntLE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || j2(e3, t3, this.length);
          for (var n3 = this[e3], s3 = 1, a3 = 0; ++a3 < t3 && (s3 *= 256); )
            n3 += this[e3 + a3] * s3;
          return n3 >= (s3 *= 128) && (n3 -= Math.pow(2, 8 * t3)), n3;
        }, s2.prototype.readIntBE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || j2(e3, t3, this.length);
          for (var n3 = t3, s3 = 1, a3 = this[e3 + --n3]; n3 > 0 && (s3 *= 256); )
            a3 += this[e3 + --n3] * s3;
          return a3 >= (s3 *= 128) && (a3 -= Math.pow(2, 8 * t3)), a3;
        }, s2.prototype.readInt8 = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
        }, s2.prototype.readInt16LE = function(e3, t3) {
          e3 >>>= 0, t3 || j2(e3, 2, this.length);
          var r3 = this[e3] | this[e3 + 1] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, s2.prototype.readInt16BE = function(e3, t3) {
          e3 >>>= 0, t3 || j2(e3, 2, this.length);
          var r3 = this[e3 + 1] | this[e3] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, s2.prototype.readInt32LE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
        }, s2.prototype.readInt32BE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
        }, s2.prototype.readFloatLE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 4, this.length), Kd(this, e3, true, 23, 4);
        }, s2.prototype.readFloatBE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 4, this.length), Kd(this, e3, false, 23, 4);
        }, s2.prototype.readDoubleLE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 8, this.length), Kd(this, e3, true, 52, 8);
        }, s2.prototype.readDoubleBE = function(e3, t3) {
          return e3 >>>= 0, t3 || j2(e3, 8, this.length), Kd(this, e3, false, 52, 8);
        }, s2.prototype.writeUIntLE = function(e3, t3, r3, n3) {
          (e3 = +e3, t3 >>>= 0, r3 >>>= 0, n3) || P2(this, e3, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          var s3 = 1, a3 = 0;
          for (this[t3] = 255 & e3; ++a3 < r3 && (s3 *= 256); )
            this[t3 + a3] = e3 / s3 & 255;
          return t3 + r3;
        }, s2.prototype.writeUIntBE = function(e3, t3, r3, n3) {
          (e3 = +e3, t3 >>>= 0, r3 >>>= 0, n3) || P2(this, e3, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          var s3 = r3 - 1, a3 = 1;
          for (this[t3 + s3] = 255 & e3; --s3 >= 0 && (a3 *= 256); )
            this[t3 + s3] = e3 / a3 & 255;
          return t3 + r3;
        }, s2.prototype.writeUInt8 = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 1, 255, 0), this[t3] = 255 & e3, t3 + 1;
        }, s2.prototype.writeUInt16LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 2, 65535, 0), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, t3 + 2;
        }, s2.prototype.writeUInt16BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 2, 65535, 0), this[t3] = e3 >>> 8, this[t3 + 1] = 255 & e3, t3 + 2;
        }, s2.prototype.writeUInt32LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 4, 4294967295, 0), this[t3 + 3] = e3 >>> 24, this[t3 + 2] = e3 >>> 16, this[t3 + 1] = e3 >>> 8, this[t3] = 255 & e3, t3 + 4;
        }, s2.prototype.writeUInt32BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 4, 4294967295, 0), this[t3] = e3 >>> 24, this[t3 + 1] = e3 >>> 16, this[t3 + 2] = e3 >>> 8, this[t3 + 3] = 255 & e3, t3 + 4;
        }, s2.prototype.writeIntLE = function(e3, t3, r3, n3) {
          if (e3 = +e3, t3 >>>= 0, !n3) {
            var s3 = Math.pow(2, 8 * r3 - 1);
            P2(this, e3, t3, r3, s3 - 1, -s3);
          }
          var a3 = 0, i3 = 1, o3 = 0;
          for (this[t3] = 255 & e3; ++a3 < r3 && (i3 *= 256); )
            e3 < 0 && o3 === 0 && this[t3 + a3 - 1] !== 0 && (o3 = 1), this[t3 + a3] = (e3 / i3 >> 0) - o3 & 255;
          return t3 + r3;
        }, s2.prototype.writeIntBE = function(e3, t3, r3, n3) {
          if (e3 = +e3, t3 >>>= 0, !n3) {
            var s3 = Math.pow(2, 8 * r3 - 1);
            P2(this, e3, t3, r3, s3 - 1, -s3);
          }
          var a3 = r3 - 1, i3 = 1, o3 = 0;
          for (this[t3 + a3] = 255 & e3; --a3 >= 0 && (i3 *= 256); )
            e3 < 0 && o3 === 0 && this[t3 + a3 + 1] !== 0 && (o3 = 1), this[t3 + a3] = (e3 / i3 >> 0) - o3 & 255;
          return t3 + r3;
        }, s2.prototype.writeInt8 = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 1, 127, -128), e3 < 0 && (e3 = 255 + e3 + 1), this[t3] = 255 & e3, t3 + 1;
        }, s2.prototype.writeInt16LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 2, 32767, -32768), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, t3 + 2;
        }, s2.prototype.writeInt16BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 2, 32767, -32768), this[t3] = e3 >>> 8, this[t3 + 1] = 255 & e3, t3 + 2;
        }, s2.prototype.writeInt32LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 4, 2147483647, -2147483648), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, this[t3 + 2] = e3 >>> 16, this[t3 + 3] = e3 >>> 24, t3 + 4;
        }, s2.prototype.writeInt32BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P2(this, e3, t3, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), this[t3] = e3 >>> 24, this[t3 + 1] = e3 >>> 16, this[t3 + 2] = e3 >>> 8, this[t3 + 3] = 255 & e3, t3 + 4;
        }, s2.prototype.writeFloatLE = function(e3, t3, r3) {
          return F2(this, e3, t3, true, r3);
        }, s2.prototype.writeFloatBE = function(e3, t3, r3) {
          return F2(this, e3, t3, false, r3);
        }, s2.prototype.writeDoubleLE = function(e3, t3, r3) {
          return k2(this, e3, t3, true, r3);
        }, s2.prototype.writeDoubleBE = function(e3, t3, r3) {
          return k2(this, e3, t3, false, r3);
        }, s2.prototype.copy = function(e3, t3, r3, n3) {
          if (!s2.isBuffer(e3))
            throw new TypeError("argument should be a Buffer");
          if (r3 || (r3 = 0), n3 || n3 === 0 || (n3 = this.length), t3 >= e3.length && (t3 = e3.length), t3 || (t3 = 0), n3 > 0 && n3 < r3 && (n3 = r3), n3 === r3)
            return 0;
          if (e3.length === 0 || this.length === 0)
            return 0;
          if (t3 < 0)
            throw new RangeError("targetStart out of bounds");
          if (r3 < 0 || r3 >= this.length)
            throw new RangeError("Index out of range");
          if (n3 < 0)
            throw new RangeError("sourceEnd out of bounds");
          n3 > this.length && (n3 = this.length), e3.length - t3 < n3 - r3 && (n3 = e3.length - t3 + r3);
          var a3 = n3 - r3;
          if (this === e3 && typeof Uint8Array.prototype.copyWithin == "function")
            this.copyWithin(t3, r3, n3);
          else if (this === e3 && r3 < t3 && t3 < n3)
            for (var i3 = a3 - 1; i3 >= 0; --i3)
              e3[i3 + t3] = this[i3 + r3];
          else
            Uint8Array.prototype.set.call(e3, this.subarray(r3, n3), t3);
          return a3;
        }, s2.prototype.fill = function(e3, t3, r3, n3) {
          if (typeof e3 == "string") {
            if (typeof t3 == "string" ? (n3 = t3, t3 = 0, r3 = this.length) : typeof r3 == "string" && (n3 = r3, r3 = this.length), n3 !== void 0 && typeof n3 != "string")
              throw new TypeError("encoding must be a string");
            if (typeof n3 == "string" && !s2.isEncoding(n3))
              throw new TypeError("Unknown encoding: " + n3);
            if (e3.length === 1) {
              var a3 = e3.charCodeAt(0);
              (n3 === "utf8" && a3 < 128 || n3 === "latin1") && (e3 = a3);
            }
          } else
            typeof e3 == "number" && (e3 &= 255);
          if (t3 < 0 || this.length < t3 || this.length < r3)
            throw new RangeError("Out of range index");
          if (r3 <= t3)
            return this;
          var i3;
          if (t3 >>>= 0, r3 = r3 === void 0 ? this.length : r3 >>> 0, e3 || (e3 = 0), typeof e3 == "number")
            for (i3 = t3; i3 < r3; ++i3)
              this[i3] = e3;
          else {
            var o3 = s2.isBuffer(e3) ? e3 : s2.from(e3, n3), u3 = o3.length;
            if (u3 === 0)
              throw new TypeError('The value "' + e3 + '" is invalid for argument "value"');
            for (i3 = 0; i3 < r3 - t3; ++i3)
              this[i3 + t3] = o3[i3 % u3];
          }
          return this;
        };
        var O2 = /[^+/0-9A-Za-z-_]/g;
        function R2(e3) {
          return e3 < 16 ? "0" + e3.toString(16) : e3.toString(16);
        }
        function N2(e3, t3) {
          var r3;
          t3 = t3 || 1 / 0;
          for (var n3 = e3.length, s3 = null, a3 = [], i3 = 0; i3 < n3; ++i3) {
            if ((r3 = e3.charCodeAt(i3)) > 55295 && r3 < 57344) {
              if (!s3) {
                if (r3 > 56319) {
                  (t3 -= 3) > -1 && a3.push(239, 191, 189);
                  continue;
                }
                if (i3 + 1 === n3) {
                  (t3 -= 3) > -1 && a3.push(239, 191, 189);
                  continue;
                }
                s3 = r3;
                continue;
              }
              if (r3 < 56320) {
                (t3 -= 3) > -1 && a3.push(239, 191, 189), s3 = r3;
                continue;
              }
              r3 = 65536 + (s3 - 55296 << 10 | r3 - 56320);
            } else
              s3 && (t3 -= 3) > -1 && a3.push(239, 191, 189);
            if (s3 = null, r3 < 128) {
              if ((t3 -= 1) < 0)
                break;
              a3.push(r3);
            } else if (r3 < 2048) {
              if ((t3 -= 2) < 0)
                break;
              a3.push(r3 >> 6 | 192, 63 & r3 | 128);
            } else if (r3 < 65536) {
              if ((t3 -= 3) < 0)
                break;
              a3.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            } else {
              if (!(r3 < 1114112))
                throw new Error("Invalid code point");
              if ((t3 -= 4) < 0)
                break;
              a3.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            }
          }
          return a3;
        }
        function B2(e3) {
          return $d.toByteArray(function(e4) {
            if ((e4 = (e4 = e4.split("=")[0]).trim().replace(O2, "")).length < 2)
              return "";
            for (; e4.length % 4 != 0; )
              e4 += "=";
            return e4;
          }(e3));
        }
        function _2(e3, t3, r3, n3) {
          for (var s3 = 0; s3 < n3 && !(s3 + r3 >= t3.length || s3 >= e3.length); ++s3)
            t3[s3 + r3] = e3[s3];
          return s3;
        }
        function L2(e3, t3) {
          return e3 instanceof t3 || e3 != null && e3.constructor != null && e3.constructor.name != null && e3.constructor.name === t3.name;
        }
        function M2(e3) {
          return e3 != e3;
        }
      }, "/$$rollup_base$$/node_modules/buffer"), Yd = {}, Qd = Yd.hasOwnProperty, Zd = function(e2, t2) {
        for (var r2 in e2)
          Qd.call(e2, r2) && t2(r2, e2[r2]);
      }, ef = Yd.toString, tf = Array.isArray, rf = Jd.Buffer.isBuffer, nf = { '"': '\\"', "'": "\\'", "\\": "\\\\", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "	": "\\t" }, sf = /["'\\\b\f\n\r\t]/, af = /[0-9]/, of = /[ !#-&\(-\[\]-_a-~]/, uf = function e2(t2, r2) {
        var n2, s2, a2 = function() {
          f2 = d2, ++r2.indentLevel, d2 = r2.indent.repeat(r2.indentLevel);
        }, i2 = { escapeEverything: false, minimal: false, isScriptContext: false, quotes: "single", wrap: false, es6: false, json: false, compact: true, lowercaseHex: false, numbers: "decimal", indent: "	", indentLevel: 0, __inline1__: false, __inline2__: false }, o2 = r2 && r2.json;
        o2 && (i2.quotes = "double", i2.wrap = true), n2 = i2, (r2 = (s2 = r2) ? (Zd(s2, function(e3, t3) {
          n2[e3] = t3;
        }), n2) : n2).quotes != "single" && r2.quotes != "double" && r2.quotes != "backtick" && (r2.quotes = "single");
        var u2, l2 = r2.quotes == "double" ? '"' : r2.quotes == "backtick" ? "`" : "'", c2 = r2.compact, p2 = r2.lowercaseHex, d2 = r2.indent.repeat(r2.indentLevel), f2 = "", h2 = r2.__inline1__, m2 = r2.__inline2__, y2 = c2 ? "" : "\n", g2 = true, v2 = r2.numbers == "binary", b2 = r2.numbers == "octal", E2 = r2.numbers == "decimal", x2 = r2.numbers == "hexadecimal";
        if (o2 && t2 && typeof t2.toJSON == "function" && (t2 = t2.toJSON()), !function(e3) {
          return typeof e3 == "string" || ef.call(e3) == "[object String]";
        }(t2)) {
          if (function(e3) {
            return ef.call(e3) == "[object Map]";
          }(t2))
            return t2.size == 0 ? "new Map()" : (c2 || (r2.__inline1__ = true, r2.__inline2__ = false), "new Map(" + e2(Array.from(t2), r2) + ")");
          if (function(e3) {
            return ef.call(e3) == "[object Set]";
          }(t2))
            return t2.size == 0 ? "new Set()" : "new Set(" + e2(Array.from(t2), r2) + ")";
          if (rf(t2))
            return t2.length == 0 ? "Buffer.from([])" : "Buffer.from(" + e2(Array.from(t2), r2) + ")";
          if (tf(t2))
            return u2 = [], r2.wrap = true, h2 && (r2.__inline1__ = false, r2.__inline2__ = true), m2 || a2(), function(e3, t3) {
              for (var r3 = e3.length, n3 = -1; ++n3 < r3; )
                t3(e3[n3]);
            }(t2, function(t3) {
              g2 = false, m2 && (r2.__inline2__ = false), u2.push((c2 || m2 ? "" : d2) + e2(t3, r2));
            }), g2 ? "[]" : m2 ? "[" + u2.join(", ") + "]" : "[" + y2 + u2.join("," + y2) + y2 + (c2 ? "" : f2) + "]";
          if (!function(e3) {
            return typeof e3 == "number" || ef.call(e3) == "[object Number]";
          }(t2))
            return function(e3) {
              return ef.call(e3) == "[object Object]";
            }(t2) ? (u2 = [], r2.wrap = true, a2(), Zd(t2, function(t3, n3) {
              g2 = false, u2.push((c2 ? "" : d2) + e2(t3, r2) + ":" + (c2 ? "" : " ") + e2(n3, r2));
            }), g2 ? "{}" : "{" + y2 + u2.join("," + y2) + y2 + (c2 ? "" : f2) + "}") : o2 ? JSON.stringify(t2) || "null" : String(t2);
          if (o2)
            return JSON.stringify(t2);
          if (E2)
            return String(t2);
          if (x2) {
            var D2 = t2.toString(16);
            return p2 || (D2 = D2.toUpperCase()), "0x" + D2;
          }
          if (v2)
            return "0b" + t2.toString(2);
          if (b2)
            return "0o" + t2.toString(8);
        }
        var A2 = t2, w2 = -1, C2 = A2.length;
        for (u2 = ""; ++w2 < C2; ) {
          var S2 = A2.charAt(w2);
          if (r2.es6) {
            var T2 = A2.charCodeAt(w2);
            if (T2 >= 55296 && T2 <= 56319 && C2 > w2 + 1) {
              var j2 = A2.charCodeAt(w2 + 1);
              if (j2 >= 56320 && j2 <= 57343) {
                var P2 = (1024 * (T2 - 55296) + j2 - 56320 + 65536).toString(16);
                p2 || (P2 = P2.toUpperCase()), u2 += "\\u{" + P2 + "}", ++w2;
                continue;
              }
            }
          }
          if (!r2.escapeEverything) {
            if (of.test(S2)) {
              u2 += S2;
              continue;
            }
            if (S2 == '"') {
              u2 += l2 == S2 ? '\\"' : S2;
              continue;
            }
            if (S2 == "`") {
              u2 += l2 == S2 ? "\\`" : S2;
              continue;
            }
            if (S2 == "'") {
              u2 += l2 == S2 ? "\\'" : S2;
              continue;
            }
          }
          if (S2 != "\0" || o2 || af.test(A2.charAt(w2 + 1)))
            if (sf.test(S2))
              u2 += nf[S2];
            else {
              var I2 = S2.charCodeAt(0);
              if (r2.minimal && I2 != 8232 && I2 != 8233)
                u2 += S2;
              else {
                var F2 = I2.toString(16);
                p2 || (F2 = F2.toUpperCase());
                var k2 = F2.length > 2 || o2, O2 = "\\" + (k2 ? "u" : "x") + ("0000" + F2).slice(k2 ? -4 : -2);
                u2 += O2;
              }
            }
          else
            u2 += "\\0";
        }
        return r2.wrap && (u2 = l2 + u2 + l2), l2 == "`" && (u2 = u2.replace(/\$\{/g, "\\${")), r2.isScriptContext ? u2.replace(/<\/(script|style)/gi, "<\\/$1").replace(/<!--/g, o2 ? "\\u003C!--" : "\\x3C!--") : u2;
      };
      uf.version = "2.5.2";
      var lf = uf;
      function cf(e2) {
        this.token("..."), this.print(e2.argument, e2);
      }
      function pf(e2) {
        var t2 = e2.properties;
        this.token("{"), this.printInnerComments(e2), t2.length && (this.space(), this.printList(t2, e2, { indent: true, statement: true }), this.space()), this.token("}");
      }
      function df(e2) {
        var t2 = e2.elements, r2 = t2.length;
        this.token("["), this.printInnerComments(e2);
        for (var n2 = 0; n2 < t2.length; n2++) {
          var s2 = t2[n2];
          s2 ? (n2 > 0 && this.space(), this.print(s2, e2), n2 < r2 - 1 && this.token(",")) : this.token(",");
        }
        this.token("]");
      }
      function ff(e2) {
        var t2 = this.getPossibleRaw(e2), r2 = this.format.jsescOption, n2 = e2.value + "";
        r2.numbers ? this.number(lf(e2.value, r2)) : t2 == null ? this.number(n2) : this.format.minified ? this.number(t2.length < n2.length ? t2 : n2) : this.number(t2);
      }
      function hf(e2) {
        var t2 = this.getPossibleRaw(e2);
        if (this.format.minified || t2 == null) {
          var r2 = lf(e2.value, Object.assign(this.format.jsescOption, this.format.jsonCompatibleStrings && { json: true }));
          return this.token(r2);
        }
        this.token(t2);
      }
      function mf(e2, t2, r2) {
        r2 && (e2.space(), e2.word("of"), e2.space(), e2.word(t2)), e2.space();
      }
      function yf(e2, t2) {
        var r2 = t2.members;
        e2.token("{"), e2.indent(), e2.newline();
        for (var n2, s2 = f(r2); !(n2 = s2()).done; ) {
          var a2 = n2.value;
          e2.print(a2, t2), e2.newline();
        }
        t2.hasUnknownMembers && (e2.token("..."), e2.newline()), e2.dedent(), e2.token("}");
      }
      function gf(e2, t2) {
        var r2 = t2.id, n2 = t2.init;
        e2.print(r2, t2), e2.space(), e2.token("="), e2.space(), e2.print(n2, t2), e2.token(",");
      }
      function vf(e2) {
        if (e2.declaration) {
          var t2 = e2.declaration;
          this.print(t2, e2), xt(t2) || this.semicolon();
        } else
          this.token("{"), e2.specifiers.length && (this.space(), this.printList(e2.specifiers, e2), this.space()), this.token("}"), e2.source && (this.space(), this.word("from"), this.space(), this.print(e2.source, e2)), this.semicolon();
      }
      function bf(e2) {
        this.print(e2.id, e2), this.print(e2.typeParameters, e2);
      }
      function Ef() {
        this.space(), this.token("&"), this.space();
      }
      function xf(e2) {
        this.token("<"), this.printList(e2.params, e2, {}), this.token(">");
      }
      function Df() {
        this.space(), this.token("|"), this.space();
      }
      var Af = /(?:^|[^\\])(?:\\\\)*'/, wf = /(?:^|[^\\])(?:\\\\)*"/;
      function Cf() {
        this.space();
      }
      function Sf(e2) {
        this.token("<"), this.printList(e2.params, e2, {}), this.token(">");
      }
      function Tf(e2, t2) {
        t2 !== true && e2.token(t2);
      }
      var jf = Object.freeze({ __proto__: null, TaggedTemplateExpression: function(e2) {
        this.print(e2.tag, e2), this.print(e2.typeParameters, e2), this.print(e2.quasi, e2);
      }, TemplateElement: function(e2, t2) {
        var r2 = t2.quasis[0] === e2, n2 = t2.quasis[t2.quasis.length - 1] === e2, s2 = (r2 ? "`" : "}") + e2.value.raw + (n2 ? "`" : "${");
        this.token(s2);
      }, TemplateLiteral: function(e2) {
        for (var t2 = e2.quasis, r2 = 0; r2 < t2.length; r2++)
          this.print(t2[r2], e2), r2 + 1 < t2.length && this.print(e2.expressions[r2], e2);
      }, UnaryExpression: function(e2) {
        e2.operator === "void" || e2.operator === "delete" || e2.operator === "typeof" || e2.operator === "throw" ? (this.word(e2.operator), this.space()) : this.token(e2.operator), this.print(e2.argument, e2);
      }, DoExpression: function(e2) {
        e2.async && (this.word("async"), this.space()), this.word("do"), this.space(), this.print(e2.body, e2);
      }, ParenthesizedExpression: function(e2) {
        this.token("("), this.print(e2.expression, e2), this.token(")");
      }, UpdateExpression: function(e2) {
        e2.prefix ? (this.token(e2.operator), this.print(e2.argument, e2)) : (this.startTerminatorless(true), this.print(e2.argument, e2), this.endTerminatorless(), this.token(e2.operator));
      }, ConditionalExpression: function(e2) {
        this.print(e2.test, e2), this.space(), this.token("?"), this.space(), this.print(e2.consequent, e2), this.space(), this.token(":"), this.space(), this.print(e2.alternate, e2);
      }, NewExpression: function(e2, t2) {
        this.word("new"), this.space(), this.print(e2.callee, e2), (!this.format.minified || e2.arguments.length !== 0 || e2.optional || E(t2, { callee: e2 }) || M(t2) || U(t2)) && (this.print(e2.typeArguments, e2), this.print(e2.typeParameters, e2), e2.optional && this.token("?."), this.token("("), this.printList(e2.arguments, e2), this.token(")"));
      }, SequenceExpression: function(e2) {
        this.printList(e2.expressions, e2);
      }, ThisExpression: function() {
        this.word("this");
      }, Super: function() {
        this.word("super");
      }, Decorator: function(e2) {
        this.token("@"), this.print(e2.expression, e2), this.newline();
      }, OptionalMemberExpression: function(e2) {
        if (this.print(e2.object, e2), !e2.computed && M(e2.property))
          throw new TypeError("Got a MemberExpression for MemberExpression property");
        var t2 = e2.computed;
        Pt(e2.property) && typeof e2.property.value == "number" && (t2 = true), e2.optional && this.token("?."), t2 ? (this.token("["), this.print(e2.property, e2), this.token("]")) : (e2.optional || this.token("."), this.print(e2.property, e2));
      }, OptionalCallExpression: function(e2) {
        this.print(e2.callee, e2), this.print(e2.typeArguments, e2), this.print(e2.typeParameters, e2), e2.optional && this.token("?."), this.token("("), this.printList(e2.arguments, e2), this.token(")");
      }, CallExpression: function(e2) {
        this.print(e2.callee, e2), this.print(e2.typeArguments, e2), this.print(e2.typeParameters, e2), this.token("("), this.printList(e2.arguments, e2), this.token(")");
      }, Import: function() {
        this.word("import");
      }, YieldExpression: vd, AwaitExpression: bd, EmptyStatement: function() {
        this.semicolon(true);
      }, ExpressionStatement: function(e2) {
        this.print(e2.expression, e2), this.semicolon();
      }, AssignmentPattern: function(e2) {
        this.print(e2.left, e2), e2.left.optional && this.token("?"), this.print(e2.left.typeAnnotation, e2), this.space(), this.token("="), this.space(), this.print(e2.right, e2);
      }, AssignmentExpression: Ed, BindExpression: function(e2) {
        this.print(e2.object, e2), this.token("::"), this.print(e2.callee, e2);
      }, BinaryExpression: Ed, LogicalExpression: Ed, MemberExpression: function(e2) {
        if (this.print(e2.object, e2), !e2.computed && M(e2.property))
          throw new TypeError("Got a MemberExpression for MemberExpression property");
        var t2 = e2.computed;
        Pt(e2.property) && typeof e2.property.value == "number" && (t2 = true), t2 ? (this.token("["), this.print(e2.property, e2), this.token("]")) : (this.token("."), this.print(e2.property, e2));
      }, MetaProperty: function(e2) {
        this.print(e2.meta, e2), this.token("."), this.print(e2.property, e2);
      }, PrivateName: function(e2) {
        this.token("#"), this.print(e2.id, e2);
      }, V8IntrinsicIdentifier: function(e2) {
        this.token("%"), this.word(e2.name);
      }, ModuleExpression: function(e2) {
        this.word("module"), this.space(), this.token("{"), e2.body.body.length === 0 ? this.token("}") : (this.newline(), this.printSequence(e2.body.body, e2, { indent: true }), this.rightBrace());
      }, WithStatement: function(e2) {
        this.word("with"), this.space(), this.token("("), this.print(e2.object, e2), this.token(")"), this.printBlock(e2);
      }, IfStatement: function(e2) {
        this.word("if"), this.space(), this.token("("), this.print(e2.test, e2), this.token(")"), this.space();
        var t2 = e2.alternate && k(xd(e2.consequent));
        t2 && (this.token("{"), this.newline(), this.indent()), this.printAndIndentOnComments(e2.consequent, e2), t2 && (this.dedent(), this.newline(), this.token("}")), e2.alternate && (this.endsWith("}") && this.space(), this.word("else"), this.space(), this.printAndIndentOnComments(e2.alternate, e2));
      }, ForStatement: function(e2) {
        this.word("for"), this.space(), this.token("("), this.inForStatementInitCounter++, this.print(e2.init, e2), this.inForStatementInitCounter--, this.token(";"), e2.test && (this.space(), this.print(e2.test, e2)), this.token(";"), e2.update && (this.space(), this.print(e2.update, e2)), this.token(")"), this.printBlock(e2);
      }, WhileStatement: function(e2) {
        this.word("while"), this.space(), this.token("("), this.print(e2.test, e2), this.token(")"), this.printBlock(e2);
      }, ForInStatement: Ad, ForOfStatement: wd, DoWhileStatement: function(e2) {
        this.word("do"), this.space(), this.print(e2.body, e2), this.space(), this.word("while"), this.space(), this.token("("), this.print(e2.test, e2), this.token(")"), this.semicolon();
      }, ContinueStatement: Sd, ReturnStatement: Td, BreakStatement: jd, ThrowStatement: Pd, LabeledStatement: function(e2) {
        this.print(e2.label, e2), this.token(":"), this.space(), this.print(e2.body, e2);
      }, TryStatement: function(e2) {
        this.word("try"), this.space(), this.print(e2.block, e2), this.space(), e2.handlers ? this.print(e2.handlers[0], e2) : this.print(e2.handler, e2), e2.finalizer && (this.space(), this.word("finally"), this.space(), this.print(e2.finalizer, e2));
      }, CatchClause: function(e2) {
        this.word("catch"), this.space(), e2.param && (this.token("("), this.print(e2.param, e2), this.print(e2.param.typeAnnotation, e2), this.token(")"), this.space()), this.print(e2.body, e2);
      }, SwitchStatement: function(e2) {
        this.word("switch"), this.space(), this.token("("), this.print(e2.discriminant, e2), this.token(")"), this.space(), this.token("{"), this.printSequence(e2.cases, e2, { indent: true, addNewlines: function(t2, r2) {
          if (!t2 && e2.cases[e2.cases.length - 1] === r2)
            return -1;
        } }), this.token("}");
      }, SwitchCase: function(e2) {
        e2.test ? (this.word("case"), this.space(), this.print(e2.test, e2), this.token(":")) : (this.word("default"), this.token(":")), e2.consequent.length && (this.newline(), this.printSequence(e2.consequent, e2, { indent: true }));
      }, DebuggerStatement: function() {
        this.word("debugger"), this.semicolon();
      }, VariableDeclaration: function(e2, t2) {
        e2.declare && (this.word("declare"), this.space()), this.word(e2.kind), this.space();
        var r2, n2 = false;
        if (!wt(t2))
          for (var s2, a2 = f(e2.declarations); !(s2 = a2()).done; ) {
            s2.value.init && (n2 = true);
          }
        if (n2 && (r2 = e2.kind === "const" ? Fd : Id), this.printList(e2.declarations, e2, { separator: r2 }), wt(t2)) {
          if (j(t2)) {
            if (t2.init === e2)
              return;
          } else if (t2.left === e2)
            return;
        }
        this.semicolon();
      }, VariableDeclarator: function(e2) {
        this.print(e2.id, e2), e2.definite && this.token("!"), this.print(e2.id.typeAnnotation, e2), e2.init && (this.space(), this.token("="), this.space(), this.print(e2.init, e2));
      }, ClassDeclaration: kd, ClassExpression: kd, ClassBody: function(e2) {
        this.token("{"), this.printInnerComments(e2), e2.body.length === 0 ? this.token("}") : (this.newline(), this.indent(), this.printSequence(e2.body, e2), this.dedent(), this.endsWith("\n") || this.newline(), this.rightBrace());
      }, ClassProperty: function(e2) {
        this.printJoin(e2.decorators, e2), this.source("end", e2.key.loc), this.tsPrintClassMemberModifiers(e2, true), e2.computed ? (this.token("["), this.print(e2.key, e2), this.token("]")) : (this._variance(e2), this.print(e2.key, e2)), e2.optional && this.token("?"), e2.definite && this.token("!"), this.print(e2.typeAnnotation, e2), e2.value && (this.space(), this.token("="), this.space(), this.print(e2.value, e2)), this.semicolon();
      }, ClassPrivateProperty: function(e2) {
        this.printJoin(e2.decorators, e2), e2.static && (this.word("static"), this.space()), this.print(e2.key, e2), this.print(e2.typeAnnotation, e2), e2.value && (this.space(), this.token("="), this.space(), this.print(e2.value, e2)), this.semicolon();
      }, ClassMethod: function(e2) {
        this._classMethodHead(e2), this.space(), this.print(e2.body, e2);
      }, ClassPrivateMethod: function(e2) {
        this._classMethodHead(e2), this.space(), this.print(e2.body, e2);
      }, _classMethodHead: function(e2) {
        this.printJoin(e2.decorators, e2), this.source("end", e2.key.loc), this.tsPrintClassMemberModifiers(e2, false), this._methodHead(e2);
      }, StaticBlock: function(e2) {
        this.word("static"), this.space(), this.token("{"), e2.body.length === 0 ? this.token("}") : (this.newline(), this.printSequence(e2.body, e2, { indent: true }), this.rightBrace());
      }, _params: function(e2) {
        this.print(e2.typeParameters, e2), this.token("("), this._parameters(e2.params, e2), this.token(")"), this.print(e2.returnType, e2);
      }, _parameters: function(e2, t2) {
        for (var r2 = 0; r2 < e2.length; r2++)
          this._param(e2[r2], t2), r2 < e2.length - 1 && (this.token(","), this.space());
      }, _param: function(e2, t2) {
        this.printJoin(e2.decorators, e2), this.print(e2, t2), e2.optional && this.token("?"), this.print(e2.typeAnnotation, e2);
      }, _methodHead: function(e2) {
        var t2 = e2.kind, r2 = e2.key;
        t2 !== "get" && t2 !== "set" || (this.word(t2), this.space()), e2.async && (this._catchUp("start", r2.loc), this.word("async"), this.space()), t2 !== "method" && t2 !== "init" || e2.generator && this.token("*"), e2.computed ? (this.token("["), this.print(r2, e2), this.token("]")) : this.print(r2, e2), e2.optional && this.token("?"), this._params(e2);
      }, _predicate: function(e2) {
        e2.predicate && (e2.returnType || this.token(":"), this.space(), this.print(e2.predicate, e2));
      }, _functionHead: function(e2) {
        e2.async && (this.word("async"), this.space()), this.word("function"), e2.generator && this.token("*"), this.space(), e2.id && this.print(e2.id, e2), this._params(e2), this._predicate(e2);
      }, FunctionExpression: Od, FunctionDeclaration: Od, ArrowFunctionExpression: function(e2) {
        e2.async && (this.word("async"), this.space());
        var t2 = e2.params[0];
        this.format.retainLines || this.format.auxiliaryCommentBefore || this.format.auxiliaryCommentAfter || e2.params.length !== 1 || !F(t2) || function(e3, t3) {
          var r2, n2;
          return !!(e3.typeParameters || e3.returnType || e3.predicate || t3.typeAnnotation || t3.optional || (r2 = t3.leadingComments) != null && r2.length || (n2 = t3.trailingComments) != null && n2.length);
        }(e2, t2) ? this._params(e2) : this.print(t2, e2), this._predicate(e2), this.space(), this.token("=>"), this.space(), this.print(e2.body, e2);
      }, ImportSpecifier: function(e2) {
        e2.importKind !== "type" && e2.importKind !== "typeof" || (this.word(e2.importKind), this.space()), this.print(e2.imported, e2), e2.local && e2.local.name !== e2.imported.name && (this.space(), this.word("as"), this.space(), this.print(e2.local, e2));
      }, ImportDefaultSpecifier: function(e2) {
        this.print(e2.local, e2);
      }, ExportDefaultSpecifier: function(e2) {
        this.print(e2.exported, e2);
      }, ExportSpecifier: function(e2) {
        this.print(e2.local, e2), e2.exported && e2.local.name !== e2.exported.name && (this.space(), this.word("as"), this.space(), this.print(e2.exported, e2));
      }, ExportNamespaceSpecifier: function(e2) {
        this.token("*"), this.space(), this.word("as"), this.space(), this.print(e2.exported, e2);
      }, ExportAllDeclaration: Rd, ExportNamedDeclaration: function(e2) {
        this.format.decoratorsBeforeExport && oe(e2.declaration) && this.printJoin(e2.declaration.decorators, e2), this.word("export"), this.space(), Nd.apply(this, arguments);
      }, ExportDefaultDeclaration: function(e2) {
        this.format.decoratorsBeforeExport && oe(e2.declaration) && this.printJoin(e2.declaration.decorators, e2), this.word("export"), this.space(), this.word("default"), this.space(), Nd.apply(this, arguments);
      }, ImportDeclaration: function(e2) {
        this.word("import"), this.space(), e2.importKind !== "type" && e2.importKind !== "typeof" || (this.word(e2.importKind), this.space());
        var t2, r2 = e2.specifiers.slice(0);
        if (r2 != null && r2.length) {
          for (; ; ) {
            var n2 = r2[0];
            if (!he(n2) && !me(n2))
              break;
            this.print(r2.shift(), e2), r2.length && (this.token(","), this.space());
          }
          r2.length && (this.token("{"), this.space(), this.printList(r2, e2), this.space(), this.token("}")), this.space(), this.word("from"), this.space();
        }
        this.print(e2.source, e2), this.printAssertions(e2), (t2 = e2.attributes) != null && t2.length && (this.space(), this.word("with"), this.space(), this.printList(e2.attributes, e2)), this.semicolon();
      }, ImportAttribute: function(e2) {
        this.print(e2.key), this.token(":"), this.space(), this.print(e2.value);
      }, ImportNamespaceSpecifier: function(e2) {
        this.token("*"), this.space(), this.word("as"), this.space(), this.print(e2.local, e2);
      }, Identifier: function(e2) {
        var t2 = this;
        this.exactSource(e2.loc, function() {
          t2.word(e2.name);
        });
      }, ArgumentPlaceholder: function() {
        this.token("?");
      }, RestElement: cf, SpreadElement: cf, ObjectExpression: pf, ObjectPattern: pf, ObjectMethod: function(e2) {
        this.printJoin(e2.decorators, e2), this._methodHead(e2), this.space(), this.print(e2.body, e2);
      }, ObjectProperty: function(e2) {
        if (this.printJoin(e2.decorators, e2), e2.computed)
          this.token("["), this.print(e2.key, e2), this.token("]");
        else {
          if (re(e2.value) && F(e2.key) && e2.key.name === e2.value.left.name)
            return void this.print(e2.value, e2);
          if (this.print(e2.key, e2), e2.shorthand && F(e2.key) && F(e2.value) && e2.key.name === e2.value.name)
            return;
        }
        this.token(":"), this.space(), this.print(e2.value, e2);
      }, ArrayExpression: df, ArrayPattern: df, RecordExpression: function(e2) {
        var t2, r2, n2 = e2.properties;
        if (this.format.recordAndTupleSyntaxType === "bar")
          t2 = "{|", r2 = "|}";
        else {
          if (this.format.recordAndTupleSyntaxType !== "hash")
            throw new Error('The "recordAndTupleSyntaxType" generator option must be "bar" or "hash" (' + JSON.stringify(this.format.recordAndTupleSyntaxType) + " received).");
          t2 = "#{", r2 = "}";
        }
        this.token(t2), this.printInnerComments(e2), n2.length && (this.space(), this.printList(n2, e2, { indent: true, statement: true }), this.space()), this.token(r2);
      }, TupleExpression: function(e2) {
        var t2, r2, n2 = e2.elements, s2 = n2.length;
        if (this.format.recordAndTupleSyntaxType === "bar")
          t2 = "[|", r2 = "|]";
        else {
          if (this.format.recordAndTupleSyntaxType !== "hash")
            throw new Error(this.format.recordAndTupleSyntaxType + " is not a valid recordAndTuple syntax type");
          t2 = "#[", r2 = "]";
        }
        this.token(t2), this.printInnerComments(e2);
        for (var a2 = 0; a2 < n2.length; a2++) {
          var i2 = n2[a2];
          i2 && (a2 > 0 && this.space(), this.print(i2, e2), a2 < s2 - 1 && this.token(","));
        }
        this.token(r2);
      }, RegExpLiteral: function(e2) {
        this.word("/" + e2.pattern + "/" + e2.flags);
      }, BooleanLiteral: function(e2) {
        this.word(e2.value ? "true" : "false");
      }, NullLiteral: function() {
        this.word("null");
      }, NumericLiteral: ff, StringLiteral: hf, BigIntLiteral: function(e2) {
        var t2 = this.getPossibleRaw(e2);
        this.format.minified || t2 == null ? this.word(e2.value + "n") : this.word(t2);
      }, DecimalLiteral: function(e2) {
        var t2 = this.getPossibleRaw(e2);
        this.format.minified || t2 == null ? this.word(e2.value + "m") : this.word(t2);
      }, PipelineTopicExpression: function(e2) {
        this.print(e2.expression, e2);
      }, PipelineBareFunction: function(e2) {
        this.print(e2.callee, e2);
      }, PipelinePrimaryTopicReference: function() {
        this.token("#");
      }, NumberLiteralTypeAnnotation: ff, StringLiteralTypeAnnotation: hf, AnyTypeAnnotation: function() {
        this.word("any");
      }, ArrayTypeAnnotation: function(e2) {
        this.print(e2.elementType, e2), this.token("["), this.token("]");
      }, BooleanTypeAnnotation: function() {
        this.word("boolean");
      }, BooleanLiteralTypeAnnotation: function(e2) {
        this.word(e2.value ? "true" : "false");
      }, NullLiteralTypeAnnotation: function() {
        this.word("null");
      }, DeclareClass: function(e2, t2) {
        Oe(t2) || (this.word("declare"), this.space()), this.word("class"), this.space(), this._interfaceish(e2);
      }, DeclareFunction: function(e2, t2) {
        Oe(t2) || (this.word("declare"), this.space()), this.word("function"), this.space(), this.print(e2.id, e2), this.print(e2.id.typeAnnotation.typeAnnotation, e2), e2.predicate && (this.space(), this.print(e2.predicate, e2)), this.semicolon();
      }, InferredPredicate: function() {
        this.token("%"), this.word("checks");
      }, DeclaredPredicate: function(e2) {
        this.token("%"), this.word("checks"), this.token("("), this.print(e2.value, e2), this.token(")");
      }, DeclareInterface: function(e2) {
        this.word("declare"), this.space(), this.InterfaceDeclaration(e2);
      }, DeclareModule: function(e2) {
        this.word("declare"), this.space(), this.word("module"), this.space(), this.print(e2.id, e2), this.space(), this.print(e2.body, e2);
      }, DeclareModuleExports: function(e2) {
        this.word("declare"), this.space(), this.word("module"), this.token("."), this.word("exports"), this.print(e2.typeAnnotation, e2);
      }, DeclareTypeAlias: function(e2) {
        this.word("declare"), this.space(), this.TypeAlias(e2);
      }, DeclareOpaqueType: function(e2, t2) {
        Oe(t2) || (this.word("declare"), this.space()), this.OpaqueType(e2);
      }, DeclareVariable: function(e2, t2) {
        Oe(t2) || (this.word("declare"), this.space()), this.word("var"), this.space(), this.print(e2.id, e2), this.print(e2.id.typeAnnotation, e2), this.semicolon();
      }, DeclareExportDeclaration: function(e2) {
        this.word("declare"), this.space(), this.word("export"), this.space(), e2.default && (this.word("default"), this.space()), vf.apply(this, arguments);
      }, DeclareExportAllDeclaration: function() {
        this.word("declare"), this.space(), Rd.apply(this, arguments);
      }, EnumDeclaration: function(e2) {
        var t2 = e2.id, r2 = e2.body;
        this.word("enum"), this.space(), this.print(t2, e2), this.print(r2, e2);
      }, EnumBooleanBody: function(e2) {
        mf(this, "boolean", e2.explicitType), yf(this, e2);
      }, EnumNumberBody: function(e2) {
        mf(this, "number", e2.explicitType), yf(this, e2);
      }, EnumStringBody: function(e2) {
        mf(this, "string", e2.explicitType), yf(this, e2);
      }, EnumSymbolBody: function(e2) {
        mf(this, "symbol", true), yf(this, e2);
      }, EnumDefaultedMember: function(e2) {
        var t2 = e2.id;
        this.print(t2, e2), this.token(",");
      }, EnumBooleanMember: function(e2) {
        gf(this, e2);
      }, EnumNumberMember: function(e2) {
        gf(this, e2);
      }, EnumStringMember: function(e2) {
        gf(this, e2);
      }, ExistsTypeAnnotation: function() {
        this.token("*");
      }, FunctionTypeAnnotation: function(e2, t2) {
        this.print(e2.typeParameters, e2), this.token("("), e2.this && (this.word("this"), this.token(":"), this.space(), this.print(e2.this.typeAnnotation, e2), (e2.params.length || e2.rest) && (this.token(","), this.space())), this.printList(e2.params, e2), e2.rest && (e2.params.length && (this.token(","), this.space()), this.token("..."), this.print(e2.rest, e2)), this.token(")"), t2.type === "ObjectTypeCallProperty" || t2.type === "DeclareFunction" || t2.type === "ObjectTypeProperty" && t2.method ? this.token(":") : (this.space(), this.token("=>")), this.space(), this.print(e2.returnType, e2);
      }, FunctionTypeParam: function(e2) {
        this.print(e2.name, e2), e2.optional && this.token("?"), e2.name && (this.token(":"), this.space()), this.print(e2.typeAnnotation, e2);
      }, InterfaceExtends: bf, ClassImplements: bf, GenericTypeAnnotation: bf, _interfaceish: function(e2) {
        var t2;
        this.print(e2.id, e2), this.print(e2.typeParameters, e2), (t2 = e2.extends) != null && t2.length && (this.space(), this.word("extends"), this.space(), this.printList(e2.extends, e2)), e2.mixins && e2.mixins.length && (this.space(), this.word("mixins"), this.space(), this.printList(e2.mixins, e2)), e2.implements && e2.implements.length && (this.space(), this.word("implements"), this.space(), this.printList(e2.implements, e2)), this.space(), this.print(e2.body, e2);
      }, _variance: function(e2) {
        e2.variance && (e2.variance.kind === "plus" ? this.token("+") : e2.variance.kind === "minus" && this.token("-"));
      }, InterfaceDeclaration: function(e2) {
        this.word("interface"), this.space(), this._interfaceish(e2);
      }, InterfaceTypeAnnotation: function(e2) {
        this.word("interface"), e2.extends && e2.extends.length && (this.space(), this.word("extends"), this.space(), this.printList(e2.extends, e2)), this.space(), this.print(e2.body, e2);
      }, IntersectionTypeAnnotation: function(e2) {
        this.printJoin(e2.types, e2, { separator: Ef });
      }, MixedTypeAnnotation: function() {
        this.word("mixed");
      }, EmptyTypeAnnotation: function() {
        this.word("empty");
      }, NullableTypeAnnotation: function(e2) {
        this.token("?"), this.print(e2.typeAnnotation, e2);
      }, NumberTypeAnnotation: function() {
        this.word("number");
      }, StringTypeAnnotation: function() {
        this.word("string");
      }, ThisTypeAnnotation: function() {
        this.word("this");
      }, TupleTypeAnnotation: function(e2) {
        this.token("["), this.printList(e2.types, e2), this.token("]");
      }, TypeofTypeAnnotation: function(e2) {
        this.word("typeof"), this.space(), this.print(e2.argument, e2);
      }, TypeAlias: function(e2) {
        this.word("type"), this.space(), this.print(e2.id, e2), this.print(e2.typeParameters, e2), this.space(), this.token("="), this.space(), this.print(e2.right, e2), this.semicolon();
      }, TypeAnnotation: function(e2) {
        this.token(":"), this.space(), e2.optional && this.token("?"), this.print(e2.typeAnnotation, e2);
      }, TypeParameterInstantiation: xf, TypeParameterDeclaration: xf, TypeParameter: function(e2) {
        this._variance(e2), this.word(e2.name), e2.bound && this.print(e2.bound, e2), e2.default && (this.space(), this.token("="), this.space(), this.print(e2.default, e2));
      }, OpaqueType: function(e2) {
        this.word("opaque"), this.space(), this.word("type"), this.space(), this.print(e2.id, e2), this.print(e2.typeParameters, e2), e2.supertype && (this.token(":"), this.space(), this.print(e2.supertype, e2)), e2.impltype && (this.space(), this.token("="), this.space(), this.print(e2.impltype, e2)), this.semicolon();
      }, ObjectTypeAnnotation: function(e2) {
        var t2 = this;
        e2.exact ? this.token("{|") : this.token("{");
        var r2 = [].concat(c(e2.properties), c(e2.callProperties || []), c(e2.indexers || []), c(e2.internalSlots || []));
        r2.length && (this.space(), this.printJoin(r2, e2, { addNewlines: function(e3) {
          if (e3 && !r2[0])
            return 1;
        }, indent: true, statement: true, iterator: function() {
          (r2.length !== 1 || e2.inexact) && (t2.token(","), t2.space());
        } }), this.space()), e2.inexact && (this.indent(), this.token("..."), r2.length && this.newline(), this.dedent()), e2.exact ? this.token("|}") : this.token("}");
      }, ObjectTypeInternalSlot: function(e2) {
        e2.static && (this.word("static"), this.space()), this.token("["), this.token("["), this.print(e2.id, e2), this.token("]"), this.token("]"), e2.optional && this.token("?"), e2.method || (this.token(":"), this.space()), this.print(e2.value, e2);
      }, ObjectTypeCallProperty: function(e2) {
        e2.static && (this.word("static"), this.space()), this.print(e2.value, e2);
      }, ObjectTypeIndexer: function(e2) {
        e2.static && (this.word("static"), this.space()), this._variance(e2), this.token("["), e2.id && (this.print(e2.id, e2), this.token(":"), this.space()), this.print(e2.key, e2), this.token("]"), this.token(":"), this.space(), this.print(e2.value, e2);
      }, ObjectTypeProperty: function(e2) {
        e2.proto && (this.word("proto"), this.space()), e2.static && (this.word("static"), this.space()), e2.kind !== "get" && e2.kind !== "set" || (this.word(e2.kind), this.space()), this._variance(e2), this.print(e2.key, e2), e2.optional && this.token("?"), e2.method || (this.token(":"), this.space()), this.print(e2.value, e2);
      }, ObjectTypeSpreadProperty: function(e2) {
        this.token("..."), this.print(e2.argument, e2);
      }, QualifiedTypeIdentifier: function(e2) {
        this.print(e2.qualification, e2), this.token("."), this.print(e2.id, e2);
      }, SymbolTypeAnnotation: function() {
        this.word("symbol");
      }, UnionTypeAnnotation: function(e2) {
        this.printJoin(e2.types, e2, { separator: Df });
      }, TypeCastExpression: function(e2) {
        this.token("("), this.print(e2.expression, e2), this.print(e2.typeAnnotation, e2), this.token(")");
      }, Variance: function(e2) {
        e2.kind === "plus" ? this.token("+") : this.token("-");
      }, VoidTypeAnnotation: function() {
        this.word("void");
      }, IndexedAccessType: function(e2) {
        this.print(e2.objectType, e2), this.token("["), this.print(e2.indexType, e2), this.token("]");
      }, OptionalIndexedAccessType: function(e2) {
        this.print(e2.objectType, e2), e2.optional && this.token("?."), this.token("["), this.print(e2.indexType, e2), this.token("]");
      }, File: function(e2) {
        e2.program && this.print(e2.program.interpreter, e2), this.print(e2.program, e2);
      }, Program: function(e2) {
        this.printInnerComments(e2, false), this.printSequence(e2.directives, e2), e2.directives && e2.directives.length && this.newline(), this.printSequence(e2.body, e2);
      }, BlockStatement: function(e2) {
        var t2;
        this.token("{"), this.printInnerComments(e2);
        var r2 = (t2 = e2.directives) == null ? void 0 : t2.length;
        e2.body.length || r2 ? (this.newline(), this.printSequence(e2.directives, e2, { indent: true }), r2 && this.newline(), this.printSequence(e2.body, e2, { indent: true }), this.removeTrailingNewline(), this.source("end", e2.loc), this.endsWith("\n") || this.newline(), this.rightBrace()) : (this.source("end", e2.loc), this.token("}"));
      }, Directive: function(e2) {
        this.print(e2.value, e2), this.semicolon();
      }, DirectiveLiteral: function(e2) {
        var t2 = this.getPossibleRaw(e2);
        if (t2 == null) {
          var r2 = e2.value;
          if (wf.test(r2)) {
            if (Af.test(r2))
              throw new Error("Malformed AST: it is not possible to print a directive containing both unescaped single and double quotes.");
            this.token("'" + r2 + "'");
          } else
            this.token('"' + r2 + '"');
        } else
          this.token(t2);
      }, InterpreterDirective: function(e2) {
        this.token("#!" + e2.value + "\n");
      }, Placeholder: function(e2) {
        this.token("%%"), this.print(e2.name), this.token("%%"), e2.expectedNode === "Statement" && this.semicolon();
      }, JSXAttribute: function(e2) {
        this.print(e2.name, e2), e2.value && (this.token("="), this.print(e2.value, e2));
      }, JSXIdentifier: function(e2) {
        this.word(e2.name);
      }, JSXNamespacedName: function(e2) {
        this.print(e2.namespace, e2), this.token(":"), this.print(e2.name, e2);
      }, JSXMemberExpression: function(e2) {
        this.print(e2.object, e2), this.token("."), this.print(e2.property, e2);
      }, JSXSpreadAttribute: function(e2) {
        this.token("{"), this.token("..."), this.print(e2.argument, e2), this.token("}");
      }, JSXExpressionContainer: function(e2) {
        this.token("{"), this.print(e2.expression, e2), this.token("}");
      }, JSXSpreadChild: function(e2) {
        this.token("{"), this.token("..."), this.print(e2.expression, e2), this.token("}");
      }, JSXText: function(e2) {
        var t2 = this.getPossibleRaw(e2);
        t2 != null ? this.token(t2) : this.token(e2.value);
      }, JSXElement: function(e2) {
        var t2 = e2.openingElement;
        if (this.print(t2, e2), !t2.selfClosing) {
          this.indent();
          for (var r2, n2 = f(e2.children); !(r2 = n2()).done; ) {
            var s2 = r2.value;
            this.print(s2, e2);
          }
          this.dedent(), this.print(e2.closingElement, e2);
        }
      }, JSXOpeningElement: function(e2) {
        this.token("<"), this.print(e2.name, e2), this.print(e2.typeParameters, e2), e2.attributes.length > 0 && (this.space(), this.printJoin(e2.attributes, e2, { separator: Cf })), e2.selfClosing ? (this.space(), this.token("/>")) : this.token(">");
      }, JSXClosingElement: function(e2) {
        this.token("</"), this.print(e2.name, e2), this.token(">");
      }, JSXEmptyExpression: function(e2) {
        this.printInnerComments(e2);
      }, JSXFragment: function(e2) {
        this.print(e2.openingFragment, e2), this.indent();
        for (var t2, r2 = f(e2.children); !(t2 = r2()).done; ) {
          var n2 = t2.value;
          this.print(n2, e2);
        }
        this.dedent(), this.print(e2.closingFragment, e2);
      }, JSXOpeningFragment: function() {
        this.token("<"), this.token(">");
      }, JSXClosingFragment: function() {
        this.token("</"), this.token(">");
      }, TSTypeAnnotation: function(e2) {
        this.token(":"), this.space(), e2.optional && this.token("?"), this.print(e2.typeAnnotation, e2);
      }, TSTypeParameterInstantiation: Sf, TSTypeParameterDeclaration: Sf, TSTypeParameter: function(e2) {
        this.word(e2.name), e2.constraint && (this.space(), this.word("extends"), this.space(), this.print(e2.constraint, e2)), e2.default && (this.space(), this.token("="), this.space(), this.print(e2.default, e2));
      }, TSParameterProperty: function(e2) {
        e2.accessibility && (this.word(e2.accessibility), this.space()), e2.readonly && (this.word("readonly"), this.space()), this._param(e2.parameter);
      }, TSDeclareFunction: function(e2) {
        e2.declare && (this.word("declare"), this.space()), this._functionHead(e2), this.token(";");
      }, TSDeclareMethod: function(e2) {
        this._classMethodHead(e2), this.token(";");
      }, TSQualifiedName: function(e2) {
        this.print(e2.left, e2), this.token("."), this.print(e2.right, e2);
      }, TSCallSignatureDeclaration: function(e2) {
        this.tsPrintSignatureDeclarationBase(e2), this.token(";");
      }, TSConstructSignatureDeclaration: function(e2) {
        this.word("new"), this.space(), this.tsPrintSignatureDeclarationBase(e2), this.token(";");
      }, TSPropertySignature: function(e2) {
        var t2 = e2.readonly, r2 = e2.initializer;
        t2 && (this.word("readonly"), this.space()), this.tsPrintPropertyOrMethodName(e2), this.print(e2.typeAnnotation, e2), r2 && (this.space(), this.token("="), this.space(), this.print(r2, e2)), this.token(";");
      }, tsPrintPropertyOrMethodName: function(e2) {
        e2.computed && this.token("["), this.print(e2.key, e2), e2.computed && this.token("]"), e2.optional && this.token("?");
      }, TSMethodSignature: function(e2) {
        var t2 = e2.kind;
        t2 !== "set" && t2 !== "get" || (this.word(t2), this.space()), this.tsPrintPropertyOrMethodName(e2), this.tsPrintSignatureDeclarationBase(e2), this.token(";");
      }, TSIndexSignature: function(e2) {
        var t2 = e2.readonly;
        e2.static && (this.word("static"), this.space()), t2 && (this.word("readonly"), this.space()), this.token("["), this._parameters(e2.parameters, e2), this.token("]"), this.print(e2.typeAnnotation, e2), this.token(";");
      }, TSAnyKeyword: function() {
        this.word("any");
      }, TSBigIntKeyword: function() {
        this.word("bigint");
      }, TSUnknownKeyword: function() {
        this.word("unknown");
      }, TSNumberKeyword: function() {
        this.word("number");
      }, TSObjectKeyword: function() {
        this.word("object");
      }, TSBooleanKeyword: function() {
        this.word("boolean");
      }, TSStringKeyword: function() {
        this.word("string");
      }, TSSymbolKeyword: function() {
        this.word("symbol");
      }, TSVoidKeyword: function() {
        this.word("void");
      }, TSUndefinedKeyword: function() {
        this.word("undefined");
      }, TSNullKeyword: function() {
        this.word("null");
      }, TSNeverKeyword: function() {
        this.word("never");
      }, TSIntrinsicKeyword: function() {
        this.word("intrinsic");
      }, TSThisType: function() {
        this.word("this");
      }, TSFunctionType: function(e2) {
        this.tsPrintFunctionOrConstructorType(e2);
      }, TSConstructorType: function(e2) {
        e2.abstract && (this.word("abstract"), this.space()), this.word("new"), this.space(), this.tsPrintFunctionOrConstructorType(e2);
      }, tsPrintFunctionOrConstructorType: function(e2) {
        var t2 = e2.typeParameters, r2 = e2.parameters;
        this.print(t2, e2), this.token("("), this._parameters(r2, e2), this.token(")"), this.space(), this.token("=>"), this.space(), this.print(e2.typeAnnotation.typeAnnotation, e2);
      }, TSTypeReference: function(e2) {
        this.print(e2.typeName, e2), this.print(e2.typeParameters, e2);
      }, TSTypePredicate: function(e2) {
        e2.asserts && (this.word("asserts"), this.space()), this.print(e2.parameterName), e2.typeAnnotation && (this.space(), this.word("is"), this.space(), this.print(e2.typeAnnotation.typeAnnotation));
      }, TSTypeQuery: function(e2) {
        this.word("typeof"), this.space(), this.print(e2.exprName);
      }, TSTypeLiteral: function(e2) {
        this.tsPrintTypeLiteralOrInterfaceBody(e2.members, e2);
      }, tsPrintTypeLiteralOrInterfaceBody: function(e2, t2) {
        this.tsPrintBraced(e2, t2);
      }, tsPrintBraced: function(e2, t2) {
        if (this.token("{"), e2.length) {
          this.indent(), this.newline();
          for (var r2, n2 = f(e2); !(r2 = n2()).done; ) {
            var s2 = r2.value;
            this.print(s2, t2), this.newline();
          }
          this.dedent(), this.rightBrace();
        } else
          this.token("}");
      }, TSArrayType: function(e2) {
        this.print(e2.elementType, e2), this.token("[]");
      }, TSTupleType: function(e2) {
        this.token("["), this.printList(e2.elementTypes, e2), this.token("]");
      }, TSOptionalType: function(e2) {
        this.print(e2.typeAnnotation, e2), this.token("?");
      }, TSRestType: function(e2) {
        this.token("..."), this.print(e2.typeAnnotation, e2);
      }, TSNamedTupleMember: function(e2) {
        this.print(e2.label, e2), e2.optional && this.token("?"), this.token(":"), this.space(), this.print(e2.elementType, e2);
      }, TSUnionType: function(e2) {
        this.tsPrintUnionOrIntersectionType(e2, "|");
      }, TSIntersectionType: function(e2) {
        this.tsPrintUnionOrIntersectionType(e2, "&");
      }, tsPrintUnionOrIntersectionType: function(e2, t2) {
        this.printJoin(e2.types, e2, { separator: function() {
          this.space(), this.token(t2), this.space();
        } });
      }, TSConditionalType: function(e2) {
        this.print(e2.checkType), this.space(), this.word("extends"), this.space(), this.print(e2.extendsType), this.space(), this.token("?"), this.space(), this.print(e2.trueType), this.space(), this.token(":"), this.space(), this.print(e2.falseType);
      }, TSInferType: function(e2) {
        this.token("infer"), this.space(), this.print(e2.typeParameter);
      }, TSParenthesizedType: function(e2) {
        this.token("("), this.print(e2.typeAnnotation, e2), this.token(")");
      }, TSTypeOperator: function(e2) {
        this.word(e2.operator), this.space(), this.print(e2.typeAnnotation, e2);
      }, TSIndexedAccessType: function(e2) {
        this.print(e2.objectType, e2), this.token("["), this.print(e2.indexType, e2), this.token("]");
      }, TSMappedType: function(e2) {
        var t2 = e2.nameType, r2 = e2.optional, n2 = e2.readonly, s2 = e2.typeParameter;
        this.token("{"), this.space(), n2 && (Tf(this, n2), this.word("readonly"), this.space()), this.token("["), this.word(s2.name), this.space(), this.word("in"), this.space(), this.print(s2.constraint, s2), t2 && (this.space(), this.word("as"), this.space(), this.print(t2, e2)), this.token("]"), r2 && (Tf(this, r2), this.token("?")), this.token(":"), this.space(), this.print(e2.typeAnnotation, e2), this.space(), this.token("}");
      }, TSLiteralType: function(e2) {
        this.print(e2.literal, e2);
      }, TSExpressionWithTypeArguments: function(e2) {
        this.print(e2.expression, e2), this.print(e2.typeParameters, e2);
      }, TSInterfaceDeclaration: function(e2) {
        var t2 = e2.declare, r2 = e2.id, n2 = e2.typeParameters, s2 = e2.extends, a2 = e2.body;
        t2 && (this.word("declare"), this.space()), this.word("interface"), this.space(), this.print(r2, e2), this.print(n2, e2), s2 != null && s2.length && (this.space(), this.word("extends"), this.space(), this.printList(s2, e2)), this.space(), this.print(a2, e2);
      }, TSInterfaceBody: function(e2) {
        this.tsPrintTypeLiteralOrInterfaceBody(e2.body, e2);
      }, TSTypeAliasDeclaration: function(e2) {
        var t2 = e2.declare, r2 = e2.id, n2 = e2.typeParameters, s2 = e2.typeAnnotation;
        t2 && (this.word("declare"), this.space()), this.word("type"), this.space(), this.print(r2, e2), this.print(n2, e2), this.space(), this.token("="), this.space(), this.print(s2, e2), this.token(";");
      }, TSAsExpression: function(e2) {
        var t2 = e2.expression, r2 = e2.typeAnnotation;
        this.print(t2, e2), this.space(), this.word("as"), this.space(), this.print(r2, e2);
      }, TSTypeAssertion: function(e2) {
        var t2 = e2.typeAnnotation, r2 = e2.expression;
        this.token("<"), this.print(t2, e2), this.token(">"), this.space(), this.print(r2, e2);
      }, TSEnumDeclaration: function(e2) {
        var t2 = e2.declare, r2 = e2.const, n2 = e2.id, s2 = e2.members;
        t2 && (this.word("declare"), this.space()), r2 && (this.word("const"), this.space()), this.word("enum"), this.space(), this.print(n2, e2), this.space(), this.tsPrintBraced(s2, e2);
      }, TSEnumMember: function(e2) {
        var t2 = e2.id, r2 = e2.initializer;
        this.print(t2, e2), r2 && (this.space(), this.token("="), this.space(), this.print(r2, e2)), this.token(",");
      }, TSModuleDeclaration: function(e2) {
        var t2 = e2.declare, r2 = e2.id;
        if (t2 && (this.word("declare"), this.space()), e2.global || (this.word(r2.type === "Identifier" ? "namespace" : "module"), this.space()), this.print(r2, e2), e2.body) {
          for (var n2 = e2.body; n2.type === "TSModuleDeclaration"; )
            this.token("."), this.print(n2.id, n2), n2 = n2.body;
          this.space(), this.print(n2, e2);
        } else
          this.token(";");
      }, TSModuleBlock: function(e2) {
        this.tsPrintBraced(e2.body, e2);
      }, TSImportType: function(e2) {
        var t2 = e2.argument, r2 = e2.qualifier, n2 = e2.typeParameters;
        this.word("import"), this.token("("), this.print(t2, e2), this.token(")"), r2 && (this.token("."), this.print(r2, e2)), n2 && this.print(n2, e2);
      }, TSImportEqualsDeclaration: function(e2) {
        var t2 = e2.isExport, r2 = e2.id, n2 = e2.moduleReference;
        t2 && (this.word("export"), this.space()), this.word("import"), this.space(), this.print(r2, e2), this.space(), this.token("="), this.space(), this.print(n2, e2), this.token(";");
      }, TSExternalModuleReference: function(e2) {
        this.token("require("), this.print(e2.expression, e2), this.token(")");
      }, TSNonNullExpression: function(e2) {
        this.print(e2.expression, e2), this.token("!");
      }, TSExportAssignment: function(e2) {
        this.word("export"), this.space(), this.token("="), this.space(), this.print(e2.expression, e2), this.token(";");
      }, TSNamespaceExportDeclaration: function(e2) {
        this.word("export"), this.space(), this.word("as"), this.space(), this.word("namespace"), this.space(), this.print(e2.id, e2);
      }, tsPrintSignatureDeclarationBase: function(e2) {
        var t2 = e2.typeParameters, r2 = e2.parameters;
        this.print(t2, e2), this.token("("), this._parameters(r2, e2), this.token(")"), this.print(e2.typeAnnotation, e2);
      }, tsPrintClassMemberModifiers: function(e2, t2) {
        t2 && e2.declare && (this.word("declare"), this.space()), e2.accessibility && (this.word(e2.accessibility), this.space()), e2.static && (this.word("static"), this.space()), e2.override && (this.word("override"), this.space()), e2.abstract && (this.word("abstract"), this.space()), t2 && e2.readonly && (this.word("readonly"), this.space());
      } }), Pf = /e/i, If = /\.0+$/, Ff = /^0[box]/, kf = /^\s*[@#]__PURE__\s*$/, Of = function() {
        function e2(e3, t3) {
          this.inForStatementInitCounter = 0, this._printStack = [], this._indent = 0, this._insideAux = false, this._parenPushNewlineState = null, this._noLineTerminator = false, this._printAuxAfterOnNextUserNode = false, this._printedComments = new WeakSet(), this._endsWithInteger = false, this._endsWithWord = false, this.format = e3, this._buf = new Xp(t3);
        }
        var t2 = e2.prototype;
        return t2.generate = function(e3) {
          return this.print(e3), this._maybeAddAuxComment(), this._buf.get();
        }, t2.indent = function() {
          this.format.compact || this.format.concise || this._indent++;
        }, t2.dedent = function() {
          this.format.compact || this.format.concise || this._indent--;
        }, t2.semicolon = function(e3) {
          e3 === void 0 && (e3 = false), this._maybeAddAuxComment(), this._append(";", !e3);
        }, t2.rightBrace = function() {
          this.format.minified && this._buf.removeLastSemicolon(), this.token("}");
        }, t2.space = function(e3) {
          e3 === void 0 && (e3 = false), this.format.compact || (this._buf.hasContent() && !this.endsWith(" ") && !this.endsWith("\n") || e3) && this._space();
        }, t2.word = function(e3) {
          (this._endsWithWord || this.endsWith("/") && e3.indexOf("/") === 0) && this._space(), this._maybeAddAuxComment(), this._append(e3), this._endsWithWord = true;
        }, t2.number = function(e3) {
          this.word(e3), this._endsWithInteger = Number.isInteger(+e3) && !Ff.test(e3) && !Pf.test(e3) && !If.test(e3) && e3[e3.length - 1] !== ".";
        }, t2.token = function(e3) {
          (e3 === "--" && this.endsWith("!") || e3[0] === "+" && this.endsWith("+") || e3[0] === "-" && this.endsWith("-") || e3[0] === "." && this._endsWithInteger) && this._space(), this._maybeAddAuxComment(), this._append(e3);
        }, t2.newline = function(e3) {
          if (!this.format.retainLines && !this.format.compact) {
            if (this.format.concise)
              this.space();
            else if (!(this.endsWith("\n\n") || (typeof e3 != "number" && (e3 = 1), e3 = Math.min(2, e3), (this.endsWith("{\n") || this.endsWith(":\n")) && e3--, e3 <= 0)))
              for (var t3 = 0; t3 < e3; t3++)
                this._newline();
          }
        }, t2.endsWith = function(e3) {
          return this._buf.endsWith(e3);
        }, t2.removeTrailingNewline = function() {
          this._buf.removeTrailingNewline();
        }, t2.exactSource = function(e3, t3) {
          this._catchUp("start", e3), this._buf.exactSource(e3, t3);
        }, t2.source = function(e3, t3) {
          this._catchUp(e3, t3), this._buf.source(e3, t3);
        }, t2.withSource = function(e3, t3, r2) {
          this._catchUp(e3, t3), this._buf.withSource(e3, t3, r2);
        }, t2._space = function() {
          this._append(" ", true);
        }, t2._newline = function() {
          this._append("\n", true);
        }, t2._append = function(e3, t3) {
          t3 === void 0 && (t3 = false), this._maybeAddParen(e3), this._maybeIndent(e3), t3 ? this._buf.queue(e3) : this._buf.append(e3), this._endsWithWord = false, this._endsWithInteger = false;
        }, t2._maybeIndent = function(e3) {
          this._indent && this.endsWith("\n") && e3[0] !== "\n" && this._buf.queue(this._getIndent());
        }, t2._maybeAddParen = function(e3) {
          var t3 = this._parenPushNewlineState;
          if (t3) {
            var r2;
            for (r2 = 0; r2 < e3.length && e3[r2] === " "; r2++)
              ;
            if (r2 !== e3.length) {
              var n2 = e3[r2];
              if (n2 !== "\n") {
                if (n2 !== "/" || r2 + 1 === e3.length)
                  return void (this._parenPushNewlineState = null);
                var s2 = e3[r2 + 1];
                if (s2 === "*") {
                  if (kf.test(e3.slice(r2 + 2, e3.length - 2)))
                    return;
                } else if (s2 !== "/")
                  return void (this._parenPushNewlineState = null);
              }
              this.token("("), this.indent(), t3.printed = true;
            }
          }
        }, t2._catchUp = function(e3, t3) {
          if (this.format.retainLines) {
            var r2 = t3 ? t3[e3] : null;
            if ((r2 == null ? void 0 : r2.line) != null)
              for (var n2 = r2.line - this._buf.getCurrentLine(), s2 = 0; s2 < n2; s2++)
                this._newline();
          }
        }, t2._getIndent = function() {
          return this.format.indent.style.repeat(this._indent);
        }, t2.startTerminatorless = function(e3) {
          return e3 === void 0 && (e3 = false), e3 ? (this._noLineTerminator = true, null) : this._parenPushNewlineState = { printed: false };
        }, t2.endTerminatorless = function(e3) {
          this._noLineTerminator = false, e3 != null && e3.printed && (this.dedent(), this.newline(), this.token(")"));
        }, t2.print = function(e3, t3) {
          var r2 = this;
          if (e3) {
            var n2 = this.format.concise;
            e3._compact && (this.format.concise = true);
            var s2 = this[e3.type];
            if (!s2)
              throw new ReferenceError("unknown node of type " + JSON.stringify(e3.type) + " with constructor " + JSON.stringify(e3 == null ? void 0 : e3.constructor.name));
            this._printStack.push(e3);
            var a2 = this._insideAux;
            this._insideAux = !e3.loc, this._maybeAddAuxComment(this._insideAux && !a2);
            var i2 = yd(e3, t3, this._printStack);
            this.format.retainFunctionParens && e3.type === "FunctionExpression" && e3.extra && e3.extra.parenthesized && (i2 = true), i2 && this.token("("), this._printLeadingComments(e3);
            var o2 = G(e3) || S(e3) ? null : e3.loc;
            this.withSource("start", o2, function() {
              s2.call(r2, e3, t3);
            }), this._printTrailingComments(e3), i2 && this.token(")"), this._printStack.pop(), this.format.concise = n2, this._insideAux = a2;
          }
        }, t2._maybeAddAuxComment = function(e3) {
          e3 && this._printAuxBeforeComment(), this._insideAux || this._printAuxAfterComment();
        }, t2._printAuxBeforeComment = function() {
          if (!this._printAuxAfterOnNextUserNode) {
            this._printAuxAfterOnNextUserNode = true;
            var e3 = this.format.auxiliaryCommentBefore;
            e3 && this._printComment({ type: "CommentBlock", value: e3 });
          }
        }, t2._printAuxAfterComment = function() {
          if (this._printAuxAfterOnNextUserNode) {
            this._printAuxAfterOnNextUserNode = false;
            var e3 = this.format.auxiliaryCommentAfter;
            e3 && this._printComment({ type: "CommentBlock", value: e3 });
          }
        }, t2.getPossibleRaw = function(e3) {
          var t3 = e3.extra;
          if (t3 && t3.raw != null && t3.rawValue != null && e3.value === t3.rawValue)
            return t3.raw;
        }, t2.printJoin = function(e3, t3, r2) {
          if (r2 === void 0 && (r2 = {}), e3 != null && e3.length) {
            r2.indent && this.indent();
            for (var n2 = { addNewlines: r2.addNewlines }, s2 = 0; s2 < e3.length; s2++) {
              var a2 = e3[s2];
              a2 && (r2.statement && this._printNewline(true, a2, t3, n2), this.print(a2, t3), r2.iterator && r2.iterator(a2, s2), r2.separator && s2 < e3.length - 1 && r2.separator.call(this), r2.statement && this._printNewline(false, a2, t3, n2));
            }
            r2.indent && this.dedent();
          }
        }, t2.printAndIndentOnComments = function(e3, t3) {
          var r2 = e3.leadingComments && e3.leadingComments.length > 0;
          r2 && this.indent(), this.print(e3, t3), r2 && this.dedent();
        }, t2.printBlock = function(e3) {
          var t3 = e3.body;
          w(t3) || this.space(), this.print(t3, e3);
        }, t2._printTrailingComments = function(e3) {
          this._printComments(this._getComments(false, e3));
        }, t2._printLeadingComments = function(e3) {
          this._printComments(this._getComments(true, e3), true);
        }, t2.printInnerComments = function(e3, t3) {
          var r2;
          t3 === void 0 && (t3 = true), (r2 = e3.innerComments) != null && r2.length && (t3 && this.indent(), this._printComments(e3.innerComments), t3 && this.dedent());
        }, t2.printSequence = function(e3, t3, r2) {
          return r2 === void 0 && (r2 = {}), r2.statement = true, this.printJoin(e3, t3, r2);
        }, t2.printList = function(e3, t3, r2) {
          return r2 === void 0 && (r2 = {}), r2.separator == null && (r2.separator = Rf), this.printJoin(e3, t3, r2);
        }, t2._printNewline = function(e3, t3, r2, n2) {
          if (!this.format.retainLines && !this.format.compact)
            if (this.format.concise)
              this.space();
            else {
              var s2 = 0;
              if (this._buf.hasContent())
                e3 || s2++, n2.addNewlines && (s2 += n2.addNewlines(e3, t3) || 0), (e3 ? hd : md)(t3, r2) && s2++;
              this.newline(s2);
            }
        }, t2._getComments = function(e3, t3) {
          return t3 && (e3 ? t3.leadingComments : t3.trailingComments) || [];
        }, t2._printComment = function(e3, t3) {
          var r2 = this;
          if (this.format.shouldPrintComment(e3.value) && !e3.ignore && !this._printedComments.has(e3)) {
            this._printedComments.add(e3);
            var n2 = e3.type === "CommentBlock", s2 = n2 && !t3 && !this._noLineTerminator;
            s2 && this._buf.hasContent() && this.newline(1), this.endsWith("[") || this.endsWith("{") || this.space();
            var a2 = n2 || this._noLineTerminator ? "/*" + e3.value + "*/" : "//" + e3.value + "\n";
            if (n2 && this.format.indent.adjustMultilineComment) {
              var i2, o2 = (i2 = e3.loc) == null ? void 0 : i2.start.column;
              if (o2) {
                var u2 = new RegExp("\\n\\s{1," + o2 + "}", "g");
                a2 = a2.replace(u2, "\n");
              }
              var l2 = Math.max(this._getIndent().length, this.format.retainLines ? 0 : this._buf.getCurrentColumn());
              a2 = a2.replace(/\n(?!$)/g, "\n" + " ".repeat(l2));
            }
            this.endsWith("/") && this._space(), this.withSource("start", e3.loc, function() {
              r2._append(a2);
            }), s2 && this.newline(1);
          }
        }, t2._printComments = function(e3, t3) {
          if (e3 != null && e3.length)
            if (t3 && e3.length === 1 && kf.test(e3[0].value))
              this._printComment(e3[0], this._buf.hasContent() && !this.endsWith("\n"));
            else
              for (var r2, n2 = f(e3); !(r2 = n2()).done; ) {
                var s2 = r2.value;
                this._printComment(s2);
              }
        }, t2.printAssertions = function(e3) {
          var t3;
          (t3 = e3.assertions) != null && t3.length && (this.space(), this.word("assert"), this.space(), this.token("{"), this.space(), this.printList(e3.assertions, e3), this.space(), this.token("}"));
        }, e2;
      }();
      function Rf() {
        this.token(","), this.space();
      }
      Object.assign(Of.prototype, jf), Of.prototype.Noop = function() {
      };
      var Nf = function(e2) {
        function t2(t3, r2, n2) {
          var s2;
          r2 === void 0 && (r2 = {});
          var a2 = function(e3, t4) {
            var r3 = { auxiliaryCommentBefore: t4.auxiliaryCommentBefore, auxiliaryCommentAfter: t4.auxiliaryCommentAfter, shouldPrintComment: t4.shouldPrintComment, retainLines: t4.retainLines, retainFunctionParens: t4.retainFunctionParens, comments: t4.comments == null || t4.comments, compact: t4.compact, minified: t4.minified, concise: t4.concise, indent: { adjustMultilineComment: true, style: "  ", base: 0 }, decoratorsBeforeExport: !!t4.decoratorsBeforeExport, jsescOption: Object.assign({ quotes: "double", wrap: true, minimal: false }, t4.jsescOption), recordAndTupleSyntaxType: t4.recordAndTupleSyntaxType };
            r3.jsonCompatibleStrings = t4.jsonCompatibleStrings, r3.minified ? (r3.compact = true, r3.shouldPrintComment = r3.shouldPrintComment || function() {
              return r3.comments;
            }) : r3.shouldPrintComment = r3.shouldPrintComment || function(e4) {
              return r3.comments || e4.indexOf("@license") >= 0 || e4.indexOf("@preserve") >= 0;
            };
            r3.compact === "auto" && (r3.compact = e3.length > 5e5, r3.compact && console.error("[BABEL] Note: The code generator has deoptimised the styling of " + t4.filename + " as it exceeds the max of 500KB."));
            r3.compact && (r3.indent.adjustMultilineComment = false);
            return r3;
          }(n2, r2), i2 = r2.sourceMaps ? new Wp(r2, n2) : null;
          return (s2 = e2.call(this, a2, i2) || this).ast = void 0, s2.ast = t3, s2;
        }
        return s(t2, e2), t2.prototype.generate = function() {
          return e2.prototype.generate.call(this, this.ast);
        }, t2;
      }(Of);
      function Bf(e2, t2, r2) {
        return new Nf(e2, t2, r2).generate();
      }
      var _f = Object.freeze({ __proto__: null, findParent: function(e2) {
        for (var t2 = this; t2 = t2.parentPath; )
          if (e2(t2))
            return t2;
        return null;
      }, find: function(e2) {
        var t2 = this;
        do {
          if (e2(t2))
            return t2;
        } while (t2 = t2.parentPath);
        return null;
      }, getFunctionParent: function() {
        return this.findParent(function(e2) {
          return e2.isFunction();
        });
      }, getStatementParent: function() {
        var e2 = this;
        do {
          if (!e2.parentPath || Array.isArray(e2.container) && e2.isStatement())
            break;
          e2 = e2.parentPath;
        } while (e2);
        if (e2 && (e2.isProgram() || e2.isFile()))
          throw new Error("File/Program node, we can't possibly find a statement parent to this");
        return e2;
      }, getEarliestCommonAncestorFrom: function(e2) {
        return this.getDeepestCommonAncestorFrom(e2, function(e3, t2, r2) {
          for (var n2, s2, a2 = Qr[e3.type], i2 = f(r2); !(s2 = i2()).done; ) {
            var o2 = s2.value[t2 + 1];
            if (n2)
              if (o2.listKey && n2.listKey === o2.listKey && o2.key < n2.key)
                n2 = o2;
              else
                a2.indexOf(n2.parentKey) > a2.indexOf(o2.parentKey) && (n2 = o2);
            else
              n2 = o2;
          }
          return n2;
        });
      }, getDeepestCommonAncestorFrom: function(e2, t2) {
        var r2 = this;
        if (!e2.length)
          return this;
        if (e2.length === 1)
          return e2[0];
        var n2, s2, a2 = 1 / 0, i2 = e2.map(function(e3) {
          var t3 = [];
          do {
            t3.unshift(e3);
          } while ((e3 = e3.parentPath) && e3 !== r2);
          return t3.length < a2 && (a2 = t3.length), t3;
        }), o2 = i2[0];
        e:
          for (var u2 = 0; u2 < a2; u2++) {
            for (var l2, c2 = o2[u2], p2 = f(i2); !(l2 = p2()).done; ) {
              if (l2.value[u2] !== c2)
                break e;
            }
            n2 = u2, s2 = c2;
          }
        if (s2)
          return t2 ? t2(s2, n2, i2) : s2;
        throw new Error("Couldn't find intersection");
      }, getAncestry: function() {
        var e2 = this, t2 = [];
        do {
          t2.push(e2);
        } while (e2 = e2.parentPath);
        return t2;
      }, isAncestor: function(e2) {
        return e2.isDescendant(this);
      }, isDescendant: function(e2) {
        return !!this.findParent(function(t2) {
          return t2 === e2;
        });
      }, inType: function() {
        for (var e2 = this, t2 = arguments.length, r2 = new Array(t2), n2 = 0; n2 < t2; n2++)
          r2[n2] = arguments[n2];
        for (; e2; ) {
          for (var s2, a2 = f(r2); !(s2 = a2()).done; ) {
            var i2 = s2.value;
            if (e2.node.type === i2)
              return true;
          }
          e2 = e2.parentPath;
        }
        return false;
      } });
      function Lf(e2, t2, r2) {
        var n2 = e2.constantViolations.slice();
        return n2.unshift(e2.path), n2.filter(function(e3) {
          var n3 = (e3 = e3.resolve())._guessExecutionStatusRelativeTo(t2);
          return r2 && n3 === "unknown" && r2.push(e3), n3 === "before";
        });
      }
      function Mf(e2, t2) {
        var r2, n2, s2, a2 = t2.node.operator, i2 = t2.get("right").resolve(), o2 = t2.get("left").resolve();
        if (o2.isIdentifier({ name: e2 }) ? r2 = i2 : i2.isIdentifier({ name: e2 }) && (r2 = o2), r2)
          return a2 === "===" ? r2.getTypeAnnotation() : Nr.indexOf(a2) >= 0 ? si() : void 0;
        if ((a2 === "===" || a2 === "==") && (o2.isUnaryExpression({ operator: "typeof" }) ? (n2 = o2, s2 = i2) : i2.isUnaryExpression({ operator: "typeof" }) && (n2 = i2, s2 = o2), n2 && n2.get("argument").isIdentifier({ name: e2 }) && (s2 = s2.resolve()).isLiteral())) {
          var u2 = s2.node.value;
          if (typeof u2 == "string")
            return Vu(u2);
        }
      }
      function Uf(e2, t2, r2) {
        var n2 = function(e3, t3, r3) {
          for (var n3; n3 = t3.parentPath; ) {
            if (n3.isIfStatement() || n3.isConditionalExpression()) {
              if (t3.key === "test")
                return;
              return n3;
            }
            if (n3.isFunction() && n3.parentPath.scope.getBinding(r3) !== e3)
              return;
            t3 = n3;
          }
        }(e2, t2, r2);
        if (n2) {
          for (var s2 = [n2.get("test")], a2 = [], i2 = 0; i2 < s2.length; i2++) {
            var o2 = s2[i2];
            if (o2.isLogicalExpression())
              o2.node.operator === "&&" && (s2.push(o2.get("left")), s2.push(o2.get("right")));
            else if (o2.isBinaryExpression()) {
              var u2 = Mf(r2, o2);
              u2 && a2.push(u2);
            }
          }
          return a2.length ? gt(a2[0]) && qu ? { typeAnnotation: qu(a2), ifStatement: n2 } : { typeAnnotation: Xu(a2), ifStatement: n2 } : Uf(n2, r2);
        }
      }
      function Gf(e2) {
        return e2.typeAnnotation;
      }
      function Vf() {
        return Ka(Ds("Array"));
      }
      function Wf() {
        return Vf();
      }
      function Hf() {
        return Ka(Ds("Function"));
      }
      Gf.validParent = true, Wf.validParent = true;
      var Xf = Vt("Array.from"), qf = Vt("Object.keys"), $f = Vt("Object.values"), Kf = Vt("Object.entries");
      function zf(e2) {
        if ((e2 = e2.resolve()).isFunction()) {
          if (e2.is("async"))
            return e2.is("generator") ? Ka(Ds("AsyncIterator")) : Ka(Ds("Promise"));
          if (e2.node.returnType)
            return e2.node.returnType;
        }
      }
      var Jf = Object.freeze({ __proto__: null, VariableDeclarator: function() {
        var e2;
        if (this.get("id").isIdentifier()) {
          var t2 = this.get("init"), r2 = t2.getTypeAnnotation();
          return ((e2 = r2) == null ? void 0 : e2.type) === "AnyTypeAnnotation" && t2.isCallExpression() && t2.get("callee").isIdentifier({ name: "Array" }) && !t2.scope.hasBinding("Array", true) && (r2 = Vf()), r2;
        }
      }, TypeCastExpression: Gf, NewExpression: function(e2) {
        if (this.get("callee").isIdentifier())
          return Ka(e2.callee);
      }, TemplateLiteral: function() {
        return hi();
      }, UnaryExpression: function(e2) {
        var t2 = e2.operator;
        return t2 === "void" ? Ti() : Wr.indexOf(t2) >= 0 ? si() : Hr.indexOf(t2) >= 0 ? hi() : Vr.indexOf(t2) >= 0 ? Ia() : void 0;
      }, BinaryExpression: function(e2) {
        var t2 = e2.operator;
        if (Mr.indexOf(t2) >= 0)
          return si();
        if (Lr.indexOf(t2) >= 0)
          return Ia();
        if (t2 === "+") {
          var r2 = this.get("right"), n2 = this.get("left");
          return n2.isBaseType("number") && r2.isBaseType("number") ? si() : n2.isBaseType("string") || r2.isBaseType("string") ? hi() : Ci([hi(), si()]);
        }
      }, LogicalExpression: function() {
        var e2 = [this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()];
        return gt(e2[0]) && qu ? qu(e2) : Xu(e2);
      }, ConditionalExpression: function() {
        var e2 = [this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()];
        return gt(e2[0]) && qu ? qu(e2) : Xu(e2);
      }, SequenceExpression: function() {
        return this.get("expressions").pop().getTypeAnnotation();
      }, ParenthesizedExpression: function() {
        return this.get("expression").getTypeAnnotation();
      }, AssignmentExpression: function() {
        return this.get("right").getTypeAnnotation();
      }, UpdateExpression: function(e2) {
        var t2 = e2.operator;
        if (t2 === "++" || t2 === "--")
          return si();
      }, StringLiteral: function() {
        return hi();
      }, NumericLiteral: function() {
        return si();
      }, BooleanLiteral: function() {
        return Ia();
      }, NullLiteral: function() {
        return ka();
      }, RegExpLiteral: function() {
        return Ka(Ds("RegExp"));
      }, ObjectExpression: function() {
        return Ka(Ds("Object"));
      }, ArrayExpression: Vf, RestElement: Wf, FunctionExpression: Hf, ArrowFunctionExpression: Hf, FunctionDeclaration: Hf, ClassExpression: Hf, ClassDeclaration: Hf, CallExpression: function() {
        var e2 = this.node.callee;
        return qf(e2) ? Pa(hi()) : Xf(e2) || $f(e2) ? Pa(ja()) : Kf(e2) ? Pa(gi([hi(), ja()])) : zf(this.get("callee"));
      }, TaggedTemplateExpression: function() {
        return zf(this.get("tag"));
      }, Identifier: function(e2) {
        if (this.isReferenced()) {
          var t2 = this.scope.getBinding(e2.name);
          return t2 ? t2.identifier.typeAnnotation ? t2.identifier.typeAnnotation : function(e3, t3, r2) {
            var n2 = [], s2 = [], a2 = Lf(e3, t3, s2), i2 = Uf(e3, t3, r2);
            if (i2) {
              var o2 = Lf(e3, i2.ifStatement);
              a2 = a2.filter(function(e4) {
                return o2.indexOf(e4) < 0;
              }), n2.push(i2.typeAnnotation);
            }
            if (a2.length)
              for (var u2, l2 = f(a2 = a2.concat(s2)); !(u2 = l2()).done; ) {
                var c2 = u2.value;
                n2.push(c2.getTypeAnnotation());
              }
            if (!n2.length)
              return;
            if (gt(n2[0]) && qu)
              return qu(n2);
            if (Xu)
              return Xu(n2);
            return Xu(n2);
          }(t2, this, e2.name) : e2.name === "undefined" ? Ti() : e2.name === "NaN" || e2.name === "Infinity" ? si() : void e2.name;
        }
      } });
      var Yf = new WeakSet();
      function Qf(e2, t2, r2) {
        if (e2 === "string")
          return Ue(t2);
        if (e2 === "number")
          return Me(t2);
        if (e2 === "boolean")
          return ke(t2);
        if (e2 === "any")
          return Ie(t2);
        if (e2 === "mixed")
          return Be(t2);
        if (e2 === "empty")
          return _e(t2);
        if (e2 === "void")
          return He(t2);
        if (r2)
          return false;
        throw new Error("Unknown base type " + e2);
      }
      var Zf, eh, th, rh, nh, sh, ah, ih, oh, uh, lh, ch, ph, dh, fh, hh, mh, yh, gh, vh = Object.freeze({ __proto__: null, getTypeAnnotation: function() {
        if (this.typeAnnotation)
          return this.typeAnnotation;
        var e2 = this._getTypeAnnotation() || ja();
        return Ge(e2) && (e2 = e2.typeAnnotation), this.typeAnnotation = e2;
      }, _getTypeAnnotation: function() {
        var e2 = this.node;
        if (e2) {
          if (e2.typeAnnotation)
            return e2.typeAnnotation;
          if (!Yf.has(e2)) {
            Yf.add(e2);
            try {
              var t2, r2 = Jf[e2.type];
              if (r2)
                return r2.call(this, e2);
              if ((t2 = r2 = Jf[this.parentPath.type]) != null && t2.validParent)
                return this.parentPath.getTypeAnnotation();
            } finally {
              Yf.delete(e2);
            }
          }
        } else if (this.key === "init" && this.parentPath.isVariableDeclarator()) {
          var n2 = this.parentPath.parentPath, s2 = n2.parentPath;
          return n2.key === "left" && s2.isForInStatement() ? hi() : n2.key === "left" && s2.isForOfStatement() ? ja() : Ti();
        }
      }, isBaseType: function(e2, t2) {
        return Qf(e2, this.getTypeAnnotation(), t2);
      }, couldBeBaseType: function(e2) {
        var t2 = this.getTypeAnnotation();
        if (Ie(t2))
          return true;
        if (We(t2)) {
          for (var r2, n2 = f(t2.types); !(r2 = n2()).done; ) {
            var s2 = r2.value;
            if (Ie(s2) || Qf(e2, s2, true))
              return true;
          }
          return false;
        }
        return Qf(e2, t2, true);
      }, baseTypeStrictlyMatches: function(e2) {
        var t2 = this.getTypeAnnotation(), r2 = e2.getTypeAnnotation();
        return !(Ie(t2) || !Mt(t2)) && r2.type === t2.type;
      }, isGenericType: function(e2) {
        var t2 = this.getTypeAnnotation();
        return Re(t2) && F(t2.id, { name: e2 });
      } }), bh = zt(function(e2) {
        var t2 = function(e3) {
          var t3, r2 = Object.prototype, n2 = r2.hasOwnProperty, s2 = typeof Symbol == "function" ? Symbol : {}, a2 = s2.iterator || "@@iterator", i2 = s2.asyncIterator || "@@asyncIterator", o2 = s2.toStringTag || "@@toStringTag";
          function u2(e4, t4, r3) {
            return Object.defineProperty(e4, t4, { value: r3, enumerable: true, configurable: true, writable: true }), e4[t4];
          }
          try {
            u2({}, "");
          } catch (e4) {
            u2 = function(e5, t4, r3) {
              return e5[t4] = r3;
            };
          }
          function l2(e4, t4, r3, n3) {
            var s3 = t4 && t4.prototype instanceof y2 ? t4 : y2, a3 = Object.create(s3.prototype), i3 = new j2(n3 || []);
            return a3._invoke = function(e5, t5, r4) {
              var n4 = p2;
              return function(s4, a4) {
                if (n4 === f2)
                  throw new Error("Generator is already running");
                if (n4 === h2) {
                  if (s4 === "throw")
                    throw a4;
                  return I2();
                }
                for (r4.method = s4, r4.arg = a4; ; ) {
                  var i4 = r4.delegate;
                  if (i4) {
                    var o3 = C2(i4, r4);
                    if (o3) {
                      if (o3 === m2)
                        continue;
                      return o3;
                    }
                  }
                  if (r4.method === "next")
                    r4.sent = r4._sent = r4.arg;
                  else if (r4.method === "throw") {
                    if (n4 === p2)
                      throw n4 = h2, r4.arg;
                    r4.dispatchException(r4.arg);
                  } else
                    r4.method === "return" && r4.abrupt("return", r4.arg);
                  n4 = f2;
                  var u3 = c2(e5, t5, r4);
                  if (u3.type === "normal") {
                    if (n4 = r4.done ? h2 : d2, u3.arg === m2)
                      continue;
                    return { value: u3.arg, done: r4.done };
                  }
                  u3.type === "throw" && (n4 = h2, r4.method = "throw", r4.arg = u3.arg);
                }
              };
            }(e4, r3, i3), a3;
          }
          function c2(e4, t4, r3) {
            try {
              return { type: "normal", arg: e4.call(t4, r3) };
            } catch (e5) {
              return { type: "throw", arg: e5 };
            }
          }
          e3.wrap = l2;
          var p2 = "suspendedStart", d2 = "suspendedYield", f2 = "executing", h2 = "completed", m2 = {};
          function y2() {
          }
          function g2() {
          }
          function v2() {
          }
          var b2 = {};
          b2[a2] = function() {
            return this;
          };
          var E2 = Object.getPrototypeOf, x2 = E2 && E2(E2(P2([])));
          x2 && x2 !== r2 && n2.call(x2, a2) && (b2 = x2);
          var D2 = v2.prototype = y2.prototype = Object.create(b2);
          function A2(e4) {
            ["next", "throw", "return"].forEach(function(t4) {
              u2(e4, t4, function(e5) {
                return this._invoke(t4, e5);
              });
            });
          }
          function w2(e4, t4) {
            function r3(s4, a3, i3, o3) {
              var u3 = c2(e4[s4], e4, a3);
              if (u3.type !== "throw") {
                var l3 = u3.arg, p3 = l3.value;
                return p3 && typeof p3 == "object" && n2.call(p3, "__await") ? t4.resolve(p3.__await).then(function(e5) {
                  r3("next", e5, i3, o3);
                }, function(e5) {
                  r3("throw", e5, i3, o3);
                }) : t4.resolve(p3).then(function(e5) {
                  l3.value = e5, i3(l3);
                }, function(e5) {
                  return r3("throw", e5, i3, o3);
                });
              }
              o3(u3.arg);
            }
            var s3;
            this._invoke = function(e5, n3) {
              function a3() {
                return new t4(function(t5, s4) {
                  r3(e5, n3, t5, s4);
                });
              }
              return s3 = s3 ? s3.then(a3, a3) : a3();
            };
          }
          function C2(e4, r3) {
            var n3 = e4.iterator[r3.method];
            if (n3 === t3) {
              if (r3.delegate = null, r3.method === "throw") {
                if (e4.iterator.return && (r3.method = "return", r3.arg = t3, C2(e4, r3), r3.method === "throw"))
                  return m2;
                r3.method = "throw", r3.arg = new TypeError("The iterator does not provide a 'throw' method");
              }
              return m2;
            }
            var s3 = c2(n3, e4.iterator, r3.arg);
            if (s3.type === "throw")
              return r3.method = "throw", r3.arg = s3.arg, r3.delegate = null, m2;
            var a3 = s3.arg;
            return a3 ? a3.done ? (r3[e4.resultName] = a3.value, r3.next = e4.nextLoc, r3.method !== "return" && (r3.method = "next", r3.arg = t3), r3.delegate = null, m2) : a3 : (r3.method = "throw", r3.arg = new TypeError("iterator result is not an object"), r3.delegate = null, m2);
          }
          function S2(e4) {
            var t4 = { tryLoc: e4[0] };
            1 in e4 && (t4.catchLoc = e4[1]), 2 in e4 && (t4.finallyLoc = e4[2], t4.afterLoc = e4[3]), this.tryEntries.push(t4);
          }
          function T2(e4) {
            var t4 = e4.completion || {};
            t4.type = "normal", delete t4.arg, e4.completion = t4;
          }
          function j2(e4) {
            this.tryEntries = [{ tryLoc: "root" }], e4.forEach(S2, this), this.reset(true);
          }
          function P2(e4) {
            if (e4) {
              var r3 = e4[a2];
              if (r3)
                return r3.call(e4);
              if (typeof e4.next == "function")
                return e4;
              if (!isNaN(e4.length)) {
                var s3 = -1, i3 = function r4() {
                  for (; ++s3 < e4.length; )
                    if (n2.call(e4, s3))
                      return r4.value = e4[s3], r4.done = false, r4;
                  return r4.value = t3, r4.done = true, r4;
                };
                return i3.next = i3;
              }
            }
            return { next: I2 };
          }
          function I2() {
            return { value: t3, done: true };
          }
          return g2.prototype = D2.constructor = v2, v2.constructor = g2, g2.displayName = u2(v2, o2, "GeneratorFunction"), e3.isGeneratorFunction = function(e4) {
            var t4 = typeof e4 == "function" && e4.constructor;
            return !!t4 && (t4 === g2 || (t4.displayName || t4.name) === "GeneratorFunction");
          }, e3.mark = function(e4) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e4, v2) : (e4.__proto__ = v2, u2(e4, o2, "GeneratorFunction")), e4.prototype = Object.create(D2), e4;
          }, e3.awrap = function(e4) {
            return { __await: e4 };
          }, A2(w2.prototype), w2.prototype[i2] = function() {
            return this;
          }, e3.AsyncIterator = w2, e3.async = function(t4, r3, n3, s3, a3) {
            a3 === void 0 && (a3 = Promise);
            var i3 = new w2(l2(t4, r3, n3, s3), a3);
            return e3.isGeneratorFunction(r3) ? i3 : i3.next().then(function(e4) {
              return e4.done ? e4.value : i3.next();
            });
          }, A2(D2), u2(D2, o2, "Generator"), D2[a2] = function() {
            return this;
          }, D2.toString = function() {
            return "[object Generator]";
          }, e3.keys = function(e4) {
            var t4 = [];
            for (var r3 in e4)
              t4.push(r3);
            return t4.reverse(), function r4() {
              for (; t4.length; ) {
                var n3 = t4.pop();
                if (n3 in e4)
                  return r4.value = n3, r4.done = false, r4;
              }
              return r4.done = true, r4;
            };
          }, e3.values = P2, j2.prototype = { constructor: j2, reset: function(e4) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t3, this.done = false, this.delegate = null, this.method = "next", this.arg = t3, this.tryEntries.forEach(T2), !e4)
              for (var r3 in this)
                r3.charAt(0) === "t" && n2.call(this, r3) && !isNaN(+r3.slice(1)) && (this[r3] = t3);
          }, stop: function() {
            this.done = true;
            var e4 = this.tryEntries[0].completion;
            if (e4.type === "throw")
              throw e4.arg;
            return this.rval;
          }, dispatchException: function(e4) {
            if (this.done)
              throw e4;
            var r3 = this;
            function s3(n3, s4) {
              return o3.type = "throw", o3.arg = e4, r3.next = n3, s4 && (r3.method = "next", r3.arg = t3), !!s4;
            }
            for (var a3 = this.tryEntries.length - 1; a3 >= 0; --a3) {
              var i3 = this.tryEntries[a3], o3 = i3.completion;
              if (i3.tryLoc === "root")
                return s3("end");
              if (i3.tryLoc <= this.prev) {
                var u3 = n2.call(i3, "catchLoc"), l3 = n2.call(i3, "finallyLoc");
                if (u3 && l3) {
                  if (this.prev < i3.catchLoc)
                    return s3(i3.catchLoc, true);
                  if (this.prev < i3.finallyLoc)
                    return s3(i3.finallyLoc);
                } else if (u3) {
                  if (this.prev < i3.catchLoc)
                    return s3(i3.catchLoc, true);
                } else {
                  if (!l3)
                    throw new Error("try statement without catch or finally");
                  if (this.prev < i3.finallyLoc)
                    return s3(i3.finallyLoc);
                }
              }
            }
          }, abrupt: function(e4, t4) {
            for (var r3 = this.tryEntries.length - 1; r3 >= 0; --r3) {
              var s3 = this.tryEntries[r3];
              if (s3.tryLoc <= this.prev && n2.call(s3, "finallyLoc") && this.prev < s3.finallyLoc) {
                var a3 = s3;
                break;
              }
            }
            a3 && (e4 === "break" || e4 === "continue") && a3.tryLoc <= t4 && t4 <= a3.finallyLoc && (a3 = null);
            var i3 = a3 ? a3.completion : {};
            return i3.type = e4, i3.arg = t4, a3 ? (this.method = "next", this.next = a3.finallyLoc, m2) : this.complete(i3);
          }, complete: function(e4, t4) {
            if (e4.type === "throw")
              throw e4.arg;
            return e4.type === "break" || e4.type === "continue" ? this.next = e4.arg : e4.type === "return" ? (this.rval = this.arg = e4.arg, this.method = "return", this.next = "end") : e4.type === "normal" && t4 && (this.next = t4), m2;
          }, finish: function(e4) {
            for (var t4 = this.tryEntries.length - 1; t4 >= 0; --t4) {
              var r3 = this.tryEntries[t4];
              if (r3.finallyLoc === e4)
                return this.complete(r3.completion, r3.afterLoc), T2(r3), m2;
            }
          }, catch: function(e4) {
            for (var t4 = this.tryEntries.length - 1; t4 >= 0; --t4) {
              var r3 = this.tryEntries[t4];
              if (r3.tryLoc === e4) {
                var n3 = r3.completion;
                if (n3.type === "throw") {
                  var s3 = n3.arg;
                  T2(r3);
                }
                return s3;
              }
            }
            throw new Error("illegal catch attempt");
          }, delegateYield: function(e4, r3, n3) {
            return this.delegate = { iterator: P2(e4), resultName: r3, nextLoc: n3 }, this.method === "next" && (this.arg = t3), m2;
          } }, e3;
        }(e2.exports);
        try {
          regeneratorRuntime = t2;
        } catch (e3) {
          Function("r", "regeneratorRuntime = r")(t2);
        }
      }, "/$$rollup_base$$/node_modules/regenerator-runtime");
      ph = new RegExp("\\/(?![\\*\\/])(?:\\[(?:(?![\\\\\\]])(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])|\\\\(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))*\\]|(?![\\/\\\\\\]])(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])|\\\\(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))*(\\/(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1ABF\\u1AC0\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA827\\uA82C\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD47\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDCE-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E-\\uDC61\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD43\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFE4\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]|\\uDB40[\\uDD00-\\uDDEF])*|\\\\)?", "y"), ch = new RegExp("--|\\+\\+|=>|\\.{3}|\\??\\.(?!\\d)|(?:&&|\\|\\||\\?\\?|[+\\-%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2}|\\/(?![\\/*]))=?|[?~,:;[\\](){}]", "y"), Zf = new RegExp("(?=(?:[\\$A-Z\\\\_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]))(?:(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1ABF\\u1AC0\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA827\\uA82C\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD47\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDCE-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E-\\uDC61\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD43\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFE4\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]|\\uDB40[\\uDD00-\\uDDEF])|\\\\u[0-9A-Fa-f]{4}|\\\\u\\{[0-9A-Fa-f]+\\})+", "y"), fh = new RegExp(`(['"])(?:(?!\\1)[^\\\\\\n\\r]|\\\\(?:\\r\\n|[^]))*(\\1)?`, "y"), lh = new RegExp("(?:0[xX][\\da-fA-F](?:_?[\\da-fA-F])*|0[oO][0-7](?:_?[0-7])*|0[bB][01](?:_?[01])*)n?|0n|[1-9](?:_?\\d)*n|(?:(?:0(?!\\d)|0\\d*[89]\\d*|[1-9](?:_?\\d)*)(?:\\.(?:\\d(?:_?\\d)*)?)?|\\.\\d(?:_?\\d)*)(?:[eE][+-]?\\d(?:_?\\d)*)?|0[0-7]+", "y"), hh = new RegExp("[`}](?:[^`\\\\$]|\\\\[^]|\\$(?!\\{))*(`|\\$\\{)?", "y"), gh = new RegExp("[\\t\\x0B\\f \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000\\uFEFF]+", "y"), ih = new RegExp("\\r?\\n|[\\r\\u2028\\u2029]", "y"), oh = new RegExp("\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?", "y"), dh = new RegExp("\\/\\/.*", "y"), th = new RegExp("[<>.:={}]|\\/(?![\\/*])", "y"), eh = new RegExp("(?:[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])(?:[\\$\\x2D0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1ABF\\u1AC0\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA827\\uA82C\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD47\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDCE-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E-\\uDC61\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD43\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFE4\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]|\\uDB40[\\uDD00-\\uDDEF])*", "y"), rh = new RegExp(`(['"])(?:(?!\\1)[^])*(\\1)?`, "y"), nh = new RegExp("[^<>{}]+", "y"), yh = /^(?:[\/+-]|\.{3}|\?(?:InterpolationIn(?:JSX|Template)|NoLineTerminatorHere|NonExpressionParenEnd|UnaryIncDec))?$|[{}([,;<>=*%&|^!~?:]$/, mh = /^(?:=>|[;\]){}]|else|\?(?:NoLineTerminatorHere|NonExpressionParenEnd))?$/, sh = /^(?:await|case|default|delete|do|else|instanceof|new|return|throw|typeof|void|yield)$/, ah = /^(?:return|throw|yield)$/, uh = RegExp(ih.source), bh.mark(function e2(t2, r2) {
        var n2, s2, a2, i2, o2, u2, l2, c2, p2, d2, f2, h2, m2, y2, g2, v2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                n2 = (r2 === void 0 ? {} : r2).jsx, s2 = n2 !== void 0 && n2, c2 = t2.length, u2 = 0, l2 = "", v2 = [{ tag: "JS" }], a2 = [], m2 = 0, y2 = false;
              case 8:
                if (!(u2 < c2)) {
                  e3.next = 231;
                  break;
                }
                d2 = v2[v2.length - 1], e3.t0 = d2.tag, e3.next = e3.t0 === "JS" || e3.t0 === "JSNonExpressionParen" || e3.t0 === "InterpolationInTemplate" || e3.t0 === "InterpolationInJSX" ? 13 : e3.t0 === "JSXTag" || e3.t0 === "JSXTagEnd" ? 136 : e3.t0 === "JSXChildren" ? 172 : 195;
                break;
              case 13:
                if (t2[u2] !== "/" || !yh.test(l2) && !sh.test(l2)) {
                  e3.next = 22;
                  break;
                }
                if (ph.lastIndex = u2, !(p2 = ph.exec(t2))) {
                  e3.next = 22;
                  break;
                }
                return u2 = ph.lastIndex, l2 = p2[0], y2 = true, e3.next = 21, { type: "RegularExpressionLiteral", value: p2[0], closed: p2[1] !== void 0 && p2[1] !== "\\" };
              case 21:
                return e3.abrupt("continue", 8);
              case 22:
                if (ch.lastIndex = u2, !(p2 = ch.exec(t2))) {
                  e3.next = 93;
                  break;
                }
                g2 = p2[0], f2 = ch.lastIndex, h2 = g2, e3.t1 = g2, e3.next = e3.t1 === "(" ? 30 : e3.t1 === ")" ? 34 : e3.t1 === "{" ? 38 : e3.t1 === "}" ? 43 : e3.t1 === "]" ? 74 : e3.t1 === "++" || e3.t1 === "--" ? 76 : e3.t1 === "<" ? 78 : 87;
                break;
              case 30:
                return l2 === "?NonExpressionParenKeyword" && v2.push({ tag: "JSNonExpressionParen", nesting: m2 }), m2++, y2 = false, e3.abrupt("break", 88);
              case 34:
                return m2--, y2 = true, d2.tag === "JSNonExpressionParen" && m2 === d2.nesting && (v2.pop(), h2 = "?NonExpressionParenEnd", y2 = false), e3.abrupt("break", 88);
              case 38:
                return ch.lastIndex = 0, o2 = !mh.test(l2) && (yh.test(l2) || sh.test(l2)), a2.push(o2), y2 = false, e3.abrupt("break", 88);
              case 43:
                e3.t2 = d2.tag, e3.next = e3.t2 === "InterpolationInTemplate" ? 46 : e3.t2 === "InterpolationInJSX" ? 64 : 71;
                break;
              case 46:
                if (a2.length !== d2.nesting) {
                  e3.next = 63;
                  break;
                }
                if (hh.lastIndex = u2, p2 = hh.exec(t2), u2 = hh.lastIndex, l2 = p2[0], p2[1] !== "${") {
                  e3.next = 58;
                  break;
                }
                return l2 = "?InterpolationInTemplate", y2 = false, e3.next = 56, { type: "TemplateMiddle", value: p2[0] };
              case 56:
                e3.next = 62;
                break;
              case 58:
                return v2.pop(), y2 = true, e3.next = 62, { type: "TemplateTail", value: p2[0], closed: p2[1] === "`" };
              case 62:
                return e3.abrupt("continue", 8);
              case 63:
                return e3.abrupt("break", 71);
              case 64:
                if (a2.length !== d2.nesting) {
                  e3.next = 71;
                  break;
                }
                return v2.pop(), u2 += 1, l2 = "}", e3.next = 70, { type: "JSXPunctuator", value: "}" };
              case 70:
                return e3.abrupt("continue", 8);
              case 71:
                return y2 = a2.pop(), h2 = y2 ? "?ExpressionBraceEnd" : "}", e3.abrupt("break", 88);
              case 74:
                return y2 = true, e3.abrupt("break", 88);
              case 76:
                return h2 = y2 ? "?PostfixIncDec" : "?UnaryIncDec", e3.abrupt("break", 88);
              case 78:
                if (!s2 || !yh.test(l2) && !sh.test(l2)) {
                  e3.next = 85;
                  break;
                }
                return v2.push({ tag: "JSXTag" }), u2 += 1, l2 = "<", e3.next = 84, { type: "JSXPunctuator", value: g2 };
              case 84:
                return e3.abrupt("continue", 8);
              case 85:
                return y2 = false, e3.abrupt("break", 88);
              case 87:
                y2 = false;
              case 88:
                return u2 = f2, l2 = h2, e3.next = 92, { type: "Punctuator", value: g2 };
              case 92:
                return e3.abrupt("continue", 8);
              case 93:
                if (Zf.lastIndex = u2, !(p2 = Zf.exec(t2))) {
                  e3.next = 103;
                  break;
                }
                switch (u2 = Zf.lastIndex, h2 = p2[0], p2[0]) {
                  case "for":
                  case "if":
                  case "while":
                  case "with":
                    l2 !== "." && l2 !== "?." && (h2 = "?NonExpressionParenKeyword");
                }
                return l2 = h2, y2 = !sh.test(p2[0]), e3.next = 102, { type: "IdentifierName", value: p2[0] };
              case 102:
                return e3.abrupt("continue", 8);
              case 103:
                if (fh.lastIndex = u2, !(p2 = fh.exec(t2))) {
                  e3.next = 111;
                  break;
                }
                return u2 = fh.lastIndex, l2 = p2[0], y2 = true, e3.next = 110, { type: "StringLiteral", value: p2[0], closed: p2[2] !== void 0 };
              case 110:
                return e3.abrupt("continue", 8);
              case 111:
                if (lh.lastIndex = u2, !(p2 = lh.exec(t2))) {
                  e3.next = 119;
                  break;
                }
                return u2 = lh.lastIndex, l2 = p2[0], y2 = true, e3.next = 118, { type: "NumericLiteral", value: p2[0] };
              case 118:
                return e3.abrupt("continue", 8);
              case 119:
                if (hh.lastIndex = u2, !(p2 = hh.exec(t2))) {
                  e3.next = 135;
                  break;
                }
                if (u2 = hh.lastIndex, l2 = p2[0], p2[1] !== "${") {
                  e3.next = 131;
                  break;
                }
                return l2 = "?InterpolationInTemplate", v2.push({ tag: "InterpolationInTemplate", nesting: a2.length }), y2 = false, e3.next = 129, { type: "TemplateHead", value: p2[0] };
              case 129:
                e3.next = 134;
                break;
              case 131:
                return y2 = true, e3.next = 134, { type: "NoSubstitutionTemplate", value: p2[0], closed: p2[1] === "`" };
              case 134:
                return e3.abrupt("continue", 8);
              case 135:
                return e3.abrupt("break", 195);
              case 136:
                if (th.lastIndex = u2, !(p2 = th.exec(t2))) {
                  e3.next = 157;
                  break;
                }
                u2 = th.lastIndex, h2 = p2[0], e3.t3 = p2[0], e3.next = e3.t3 === "<" ? 143 : e3.t3 === ">" ? 145 : e3.t3 === "{" ? 148 : e3.t3 === "/" ? 152 : 153;
                break;
              case 143:
                return v2.push({ tag: "JSXTag" }), e3.abrupt("break", 153);
              case 145:
                return v2.pop(), l2 === "/" || d2.tag === "JSXTagEnd" ? (h2 = "?JSX", y2 = true) : v2.push({ tag: "JSXChildren" }), e3.abrupt("break", 153);
              case 148:
                return v2.push({ tag: "InterpolationInJSX", nesting: a2.length }), h2 = "?InterpolationInJSX", y2 = false, e3.abrupt("break", 153);
              case 152:
                l2 === "<" && (v2.pop(), v2[v2.length - 1].tag === "JSXChildren" && v2.pop(), v2.push({ tag: "JSXTagEnd" }));
              case 153:
                return l2 = h2, e3.next = 156, { type: "JSXPunctuator", value: p2[0] };
              case 156:
                return e3.abrupt("continue", 8);
              case 157:
                if (eh.lastIndex = u2, !(p2 = eh.exec(t2))) {
                  e3.next = 164;
                  break;
                }
                return u2 = eh.lastIndex, l2 = p2[0], e3.next = 163, { type: "JSXIdentifier", value: p2[0] };
              case 163:
                return e3.abrupt("continue", 8);
              case 164:
                if (rh.lastIndex = u2, !(p2 = rh.exec(t2))) {
                  e3.next = 171;
                  break;
                }
                return u2 = rh.lastIndex, l2 = p2[0], e3.next = 170, { type: "JSXString", value: p2[0], closed: p2[2] !== void 0 };
              case 170:
                return e3.abrupt("continue", 8);
              case 171:
                return e3.abrupt("break", 195);
              case 172:
                if (nh.lastIndex = u2, !(p2 = nh.exec(t2))) {
                  e3.next = 179;
                  break;
                }
                return u2 = nh.lastIndex, l2 = p2[0], e3.next = 178, { type: "JSXText", value: p2[0] };
              case 178:
                return e3.abrupt("continue", 8);
              case 179:
                e3.t4 = t2[u2], e3.next = e3.t4 === "<" ? 182 : e3.t4 === "{" ? 188 : 195;
                break;
              case 182:
                return v2.push({ tag: "JSXTag" }), u2++, l2 = "<", e3.next = 187, { type: "JSXPunctuator", value: "<" };
              case 187:
                return e3.abrupt("continue", 8);
              case 188:
                return v2.push({ tag: "InterpolationInJSX", nesting: a2.length }), u2++, l2 = "?InterpolationInJSX", y2 = false, e3.next = 194, { type: "JSXPunctuator", value: "{" };
              case 194:
                return e3.abrupt("continue", 8);
              case 195:
                if (gh.lastIndex = u2, !(p2 = gh.exec(t2))) {
                  e3.next = 201;
                  break;
                }
                return u2 = gh.lastIndex, e3.next = 200, { type: "WhiteSpace", value: p2[0] };
              case 200:
                return e3.abrupt("continue", 8);
              case 201:
                if (ih.lastIndex = u2, !(p2 = ih.exec(t2))) {
                  e3.next = 209;
                  break;
                }
                return u2 = ih.lastIndex, y2 = false, ah.test(l2) && (l2 = "?NoLineTerminatorHere"), e3.next = 208, { type: "LineTerminatorSequence", value: p2[0] };
              case 208:
                return e3.abrupt("continue", 8);
              case 209:
                if (oh.lastIndex = u2, !(p2 = oh.exec(t2))) {
                  e3.next = 216;
                  break;
                }
                return u2 = oh.lastIndex, uh.test(p2[0]) && (y2 = false, ah.test(l2) && (l2 = "?NoLineTerminatorHere")), e3.next = 215, { type: "MultiLineComment", value: p2[0], closed: p2[1] !== void 0 };
              case 215:
                return e3.abrupt("continue", 8);
              case 216:
                if (dh.lastIndex = u2, !(p2 = dh.exec(t2))) {
                  e3.next = 223;
                  break;
                }
                return u2 = dh.lastIndex, y2 = false, e3.next = 222, { type: "SingleLineComment", value: p2[0] };
              case 222:
                return e3.abrupt("continue", 8);
              case 223:
                return i2 = String.fromCodePoint(t2.codePointAt(u2)), u2 += i2.length, l2 = i2, y2 = false, e3.next = 229, { type: d2.tag.startsWith("JSX") ? "JSXInvalid" : "Invalid", value: i2 };
              case 229:
                e3.next = 8;
                break;
              case 231:
                return e3.abrupt("return", void 0);
              case 232:
              case "end":
                return e3.stop();
            }
        }, e2);
      });
      var Eh = Object.defineProperty({ default: /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g, matchToToken: function(e2) {
        var t2 = { type: "invalid", value: e2[0], closed: void 0 };
        return e2[1] ? (t2.type = "string", t2.closed = !(!e2[3] && !e2[4])) : e2[5] ? t2.type = "comment" : e2[6] ? (t2.type = "comment", t2.closed = !!e2[7]) : e2[8] ? t2.type = "regex" : e2[9] ? t2.type = "number" : e2[10] ? t2.type = "name" : e2[11] ? t2.type = "punctuator" : e2[12] && (t2.type = "whitespace"), t2;
      } }, "__esModule", { value: true }), xh = /[|\\{}()[\]^$+*?.]/g, Dh = function(e2) {
        if (typeof e2 != "string")
          throw new TypeError("Expected a string");
        return e2.replace(xh, "\\$&");
      }, Ah = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] }, wh = zt(function(e2) {
        var t2 = {};
        for (var r2 in Ah)
          Ah.hasOwnProperty(r2) && (t2[Ah[r2]] = r2);
        var n2 = e2.exports = { rgb: { channels: 3, labels: "rgb" }, hsl: { channels: 3, labels: "hsl" }, hsv: { channels: 3, labels: "hsv" }, hwb: { channels: 3, labels: "hwb" }, cmyk: { channels: 4, labels: "cmyk" }, xyz: { channels: 3, labels: "xyz" }, lab: { channels: 3, labels: "lab" }, lch: { channels: 3, labels: "lch" }, hex: { channels: 1, labels: ["hex"] }, keyword: { channels: 1, labels: ["keyword"] }, ansi16: { channels: 1, labels: ["ansi16"] }, ansi256: { channels: 1, labels: ["ansi256"] }, hcg: { channels: 3, labels: ["h", "c", "g"] }, apple: { channels: 3, labels: ["r16", "g16", "b16"] }, gray: { channels: 1, labels: ["gray"] } };
        for (var s2 in n2)
          if (n2.hasOwnProperty(s2)) {
            if (!("channels" in n2[s2]))
              throw new Error("missing channels property: " + s2);
            if (!("labels" in n2[s2]))
              throw new Error("missing channel labels property: " + s2);
            if (n2[s2].labels.length !== n2[s2].channels)
              throw new Error("channel and label counts mismatch: " + s2);
            var a2 = n2[s2].channels, i2 = n2[s2].labels;
            delete n2[s2].channels, delete n2[s2].labels, Object.defineProperty(n2[s2], "channels", { value: a2 }), Object.defineProperty(n2[s2], "labels", { value: i2 });
          }
        function o2(e3, t3) {
          return Math.pow(e3[0] - t3[0], 2) + Math.pow(e3[1] - t3[1], 2) + Math.pow(e3[2] - t3[2], 2);
        }
        n2.rgb.hsl = function(e3) {
          var t3, r3, n3 = e3[0] / 255, s3 = e3[1] / 255, a3 = e3[2] / 255, i3 = Math.min(n3, s3, a3), o3 = Math.max(n3, s3, a3), u2 = o3 - i3;
          return o3 === i3 ? t3 = 0 : n3 === o3 ? t3 = (s3 - a3) / u2 : s3 === o3 ? t3 = 2 + (a3 - n3) / u2 : a3 === o3 && (t3 = 4 + (n3 - s3) / u2), (t3 = Math.min(60 * t3, 360)) < 0 && (t3 += 360), r3 = (i3 + o3) / 2, [t3, 100 * (o3 === i3 ? 0 : r3 <= 0.5 ? u2 / (o3 + i3) : u2 / (2 - o3 - i3)), 100 * r3];
        }, n2.rgb.hsv = function(e3) {
          var t3, r3, n3, s3, a3, i3 = e3[0] / 255, o3 = e3[1] / 255, u2 = e3[2] / 255, l2 = Math.max(i3, o3, u2), c2 = l2 - Math.min(i3, o3, u2), p2 = function(e4) {
            return (l2 - e4) / 6 / c2 + 0.5;
          };
          return c2 === 0 ? s3 = a3 = 0 : (a3 = c2 / l2, t3 = p2(i3), r3 = p2(o3), n3 = p2(u2), i3 === l2 ? s3 = n3 - r3 : o3 === l2 ? s3 = 1 / 3 + t3 - n3 : u2 === l2 && (s3 = 2 / 3 + r3 - t3), s3 < 0 ? s3 += 1 : s3 > 1 && (s3 -= 1)), [360 * s3, 100 * a3, 100 * l2];
        }, n2.rgb.hwb = function(e3) {
          var t3 = e3[0], r3 = e3[1], s3 = e3[2];
          return [n2.rgb.hsl(e3)[0], 100 * (1 / 255 * Math.min(t3, Math.min(r3, s3))), 100 * (s3 = 1 - 1 / 255 * Math.max(t3, Math.max(r3, s3)))];
        }, n2.rgb.cmyk = function(e3) {
          var t3, r3 = e3[0] / 255, n3 = e3[1] / 255, s3 = e3[2] / 255;
          return [100 * ((1 - r3 - (t3 = Math.min(1 - r3, 1 - n3, 1 - s3))) / (1 - t3) || 0), 100 * ((1 - n3 - t3) / (1 - t3) || 0), 100 * ((1 - s3 - t3) / (1 - t3) || 0), 100 * t3];
        }, n2.rgb.keyword = function(e3) {
          var r3 = t2[e3];
          if (r3)
            return r3;
          var n3, s3 = 1 / 0;
          for (var a3 in Ah)
            if (Ah.hasOwnProperty(a3)) {
              var i3 = o2(e3, Ah[a3]);
              i3 < s3 && (s3 = i3, n3 = a3);
            }
          return n3;
        }, n2.keyword.rgb = function(e3) {
          return Ah[e3];
        }, n2.rgb.xyz = function(e3) {
          var t3 = e3[0] / 255, r3 = e3[1] / 255, n3 = e3[2] / 255;
          return [100 * (0.4124 * (t3 = t3 > 0.04045 ? Math.pow((t3 + 0.055) / 1.055, 2.4) : t3 / 12.92) + 0.3576 * (r3 = r3 > 0.04045 ? Math.pow((r3 + 0.055) / 1.055, 2.4) : r3 / 12.92) + 0.1805 * (n3 = n3 > 0.04045 ? Math.pow((n3 + 0.055) / 1.055, 2.4) : n3 / 12.92)), 100 * (0.2126 * t3 + 0.7152 * r3 + 0.0722 * n3), 100 * (0.0193 * t3 + 0.1192 * r3 + 0.9505 * n3)];
        }, n2.rgb.lab = function(e3) {
          var t3 = n2.rgb.xyz(e3), r3 = t3[0], s3 = t3[1], a3 = t3[2];
          return s3 /= 100, a3 /= 108.883, r3 = (r3 /= 95.047) > 8856e-6 ? Math.pow(r3, 1 / 3) : 7.787 * r3 + 16 / 116, [116 * (s3 = s3 > 8856e-6 ? Math.pow(s3, 1 / 3) : 7.787 * s3 + 16 / 116) - 16, 500 * (r3 - s3), 200 * (s3 - (a3 = a3 > 8856e-6 ? Math.pow(a3, 1 / 3) : 7.787 * a3 + 16 / 116))];
        }, n2.hsl.rgb = function(e3) {
          var t3, r3, n3, s3, a3, i3 = e3[0] / 360, o3 = e3[1] / 100, u2 = e3[2] / 100;
          if (o3 === 0)
            return [a3 = 255 * u2, a3, a3];
          t3 = 2 * u2 - (r3 = u2 < 0.5 ? u2 * (1 + o3) : u2 + o3 - u2 * o3), s3 = [0, 0, 0];
          for (var l2 = 0; l2 < 3; l2++)
            (n3 = i3 + 1 / 3 * -(l2 - 1)) < 0 && n3++, n3 > 1 && n3--, a3 = 6 * n3 < 1 ? t3 + 6 * (r3 - t3) * n3 : 2 * n3 < 1 ? r3 : 3 * n3 < 2 ? t3 + (r3 - t3) * (2 / 3 - n3) * 6 : t3, s3[l2] = 255 * a3;
          return s3;
        }, n2.hsl.hsv = function(e3) {
          var t3 = e3[0], r3 = e3[1] / 100, n3 = e3[2] / 100, s3 = r3, a3 = Math.max(n3, 0.01);
          return r3 *= (n3 *= 2) <= 1 ? n3 : 2 - n3, s3 *= a3 <= 1 ? a3 : 2 - a3, [t3, 100 * (n3 === 0 ? 2 * s3 / (a3 + s3) : 2 * r3 / (n3 + r3)), 100 * ((n3 + r3) / 2)];
        }, n2.hsv.rgb = function(e3) {
          var t3 = e3[0] / 60, r3 = e3[1] / 100, n3 = e3[2] / 100, s3 = Math.floor(t3) % 6, a3 = t3 - Math.floor(t3), i3 = 255 * n3 * (1 - r3), o3 = 255 * n3 * (1 - r3 * a3), u2 = 255 * n3 * (1 - r3 * (1 - a3));
          switch (n3 *= 255, s3) {
            case 0:
              return [n3, u2, i3];
            case 1:
              return [o3, n3, i3];
            case 2:
              return [i3, n3, u2];
            case 3:
              return [i3, o3, n3];
            case 4:
              return [u2, i3, n3];
            case 5:
              return [n3, i3, o3];
          }
        }, n2.hsv.hsl = function(e3) {
          var t3, r3, n3, s3 = e3[0], a3 = e3[1] / 100, i3 = e3[2] / 100, o3 = Math.max(i3, 0.01);
          return n3 = (2 - a3) * i3, r3 = a3 * o3, [s3, 100 * (r3 = (r3 /= (t3 = (2 - a3) * o3) <= 1 ? t3 : 2 - t3) || 0), 100 * (n3 /= 2)];
        }, n2.hwb.rgb = function(e3) {
          var t3, r3, n3, s3, a3, i3, o3, u2 = e3[0] / 360, l2 = e3[1] / 100, c2 = e3[2] / 100, p2 = l2 + c2;
          switch (p2 > 1 && (l2 /= p2, c2 /= p2), n3 = 6 * u2 - (t3 = Math.floor(6 * u2)), (1 & t3) != 0 && (n3 = 1 - n3), s3 = l2 + n3 * ((r3 = 1 - c2) - l2), t3) {
            default:
            case 6:
            case 0:
              a3 = r3, i3 = s3, o3 = l2;
              break;
            case 1:
              a3 = s3, i3 = r3, o3 = l2;
              break;
            case 2:
              a3 = l2, i3 = r3, o3 = s3;
              break;
            case 3:
              a3 = l2, i3 = s3, o3 = r3;
              break;
            case 4:
              a3 = s3, i3 = l2, o3 = r3;
              break;
            case 5:
              a3 = r3, i3 = l2, o3 = s3;
          }
          return [255 * a3, 255 * i3, 255 * o3];
        }, n2.cmyk.rgb = function(e3) {
          var t3 = e3[0] / 100, r3 = e3[1] / 100, n3 = e3[2] / 100, s3 = e3[3] / 100;
          return [255 * (1 - Math.min(1, t3 * (1 - s3) + s3)), 255 * (1 - Math.min(1, r3 * (1 - s3) + s3)), 255 * (1 - Math.min(1, n3 * (1 - s3) + s3))];
        }, n2.xyz.rgb = function(e3) {
          var t3, r3, n3, s3 = e3[0] / 100, a3 = e3[1] / 100, i3 = e3[2] / 100;
          return r3 = -0.9689 * s3 + 1.8758 * a3 + 0.0415 * i3, n3 = 0.0557 * s3 + -0.204 * a3 + 1.057 * i3, t3 = (t3 = 3.2406 * s3 + -1.5372 * a3 + -0.4986 * i3) > 31308e-7 ? 1.055 * Math.pow(t3, 1 / 2.4) - 0.055 : 12.92 * t3, r3 = r3 > 31308e-7 ? 1.055 * Math.pow(r3, 1 / 2.4) - 0.055 : 12.92 * r3, n3 = n3 > 31308e-7 ? 1.055 * Math.pow(n3, 1 / 2.4) - 0.055 : 12.92 * n3, [255 * (t3 = Math.min(Math.max(0, t3), 1)), 255 * (r3 = Math.min(Math.max(0, r3), 1)), 255 * (n3 = Math.min(Math.max(0, n3), 1))];
        }, n2.xyz.lab = function(e3) {
          var t3 = e3[0], r3 = e3[1], n3 = e3[2];
          return r3 /= 100, n3 /= 108.883, t3 = (t3 /= 95.047) > 8856e-6 ? Math.pow(t3, 1 / 3) : 7.787 * t3 + 16 / 116, [116 * (r3 = r3 > 8856e-6 ? Math.pow(r3, 1 / 3) : 7.787 * r3 + 16 / 116) - 16, 500 * (t3 - r3), 200 * (r3 - (n3 = n3 > 8856e-6 ? Math.pow(n3, 1 / 3) : 7.787 * n3 + 16 / 116))];
        }, n2.lab.xyz = function(e3) {
          var t3, r3, n3, s3 = e3[0];
          t3 = e3[1] / 500 + (r3 = (s3 + 16) / 116), n3 = r3 - e3[2] / 200;
          var a3 = Math.pow(r3, 3), i3 = Math.pow(t3, 3), o3 = Math.pow(n3, 3);
          return r3 = a3 > 8856e-6 ? a3 : (r3 - 16 / 116) / 7.787, t3 = i3 > 8856e-6 ? i3 : (t3 - 16 / 116) / 7.787, n3 = o3 > 8856e-6 ? o3 : (n3 - 16 / 116) / 7.787, [t3 *= 95.047, r3 *= 100, n3 *= 108.883];
        }, n2.lab.lch = function(e3) {
          var t3, r3 = e3[0], n3 = e3[1], s3 = e3[2];
          return (t3 = 360 * Math.atan2(s3, n3) / 2 / Math.PI) < 0 && (t3 += 360), [r3, Math.sqrt(n3 * n3 + s3 * s3), t3];
        }, n2.lch.lab = function(e3) {
          var t3, r3 = e3[0], n3 = e3[1];
          return t3 = e3[2] / 360 * 2 * Math.PI, [r3, n3 * Math.cos(t3), n3 * Math.sin(t3)];
        }, n2.rgb.ansi16 = function(e3) {
          var t3 = e3[0], r3 = e3[1], s3 = e3[2], a3 = 1 in arguments ? arguments[1] : n2.rgb.hsv(e3)[2];
          if ((a3 = Math.round(a3 / 50)) === 0)
            return 30;
          var i3 = 30 + (Math.round(s3 / 255) << 2 | Math.round(r3 / 255) << 1 | Math.round(t3 / 255));
          return a3 === 2 && (i3 += 60), i3;
        }, n2.hsv.ansi16 = function(e3) {
          return n2.rgb.ansi16(n2.hsv.rgb(e3), e3[2]);
        }, n2.rgb.ansi256 = function(e3) {
          var t3 = e3[0], r3 = e3[1], n3 = e3[2];
          return t3 === r3 && r3 === n3 ? t3 < 8 ? 16 : t3 > 248 ? 231 : Math.round((t3 - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(t3 / 255 * 5) + 6 * Math.round(r3 / 255 * 5) + Math.round(n3 / 255 * 5);
        }, n2.ansi16.rgb = function(e3) {
          var t3 = e3 % 10;
          if (t3 === 0 || t3 === 7)
            return e3 > 50 && (t3 += 3.5), [t3 = t3 / 10.5 * 255, t3, t3];
          var r3 = 0.5 * (1 + ~~(e3 > 50));
          return [(1 & t3) * r3 * 255, (t3 >> 1 & 1) * r3 * 255, (t3 >> 2 & 1) * r3 * 255];
        }, n2.ansi256.rgb = function(e3) {
          if (e3 >= 232) {
            var t3 = 10 * (e3 - 232) + 8;
            return [t3, t3, t3];
          }
          var r3;
          return e3 -= 16, [Math.floor(e3 / 36) / 5 * 255, Math.floor((r3 = e3 % 36) / 6) / 5 * 255, r3 % 6 / 5 * 255];
        }, n2.rgb.hex = function(e3) {
          var t3 = (((255 & Math.round(e3[0])) << 16) + ((255 & Math.round(e3[1])) << 8) + (255 & Math.round(e3[2]))).toString(16).toUpperCase();
          return "000000".substring(t3.length) + t3;
        }, n2.hex.rgb = function(e3) {
          var t3 = e3.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
          if (!t3)
            return [0, 0, 0];
          var r3 = t3[0];
          t3[0].length === 3 && (r3 = r3.split("").map(function(e4) {
            return e4 + e4;
          }).join(""));
          var n3 = parseInt(r3, 16);
          return [n3 >> 16 & 255, n3 >> 8 & 255, 255 & n3];
        }, n2.rgb.hcg = function(e3) {
          var t3, r3 = e3[0] / 255, n3 = e3[1] / 255, s3 = e3[2] / 255, a3 = Math.max(Math.max(r3, n3), s3), i3 = Math.min(Math.min(r3, n3), s3), o3 = a3 - i3;
          return t3 = o3 <= 0 ? 0 : a3 === r3 ? (n3 - s3) / o3 % 6 : a3 === n3 ? 2 + (s3 - r3) / o3 : 4 + (r3 - n3) / o3 + 4, t3 /= 6, [360 * (t3 %= 1), 100 * o3, 100 * (o3 < 1 ? i3 / (1 - o3) : 0)];
        }, n2.hsl.hcg = function(e3) {
          var t3 = e3[1] / 100, r3 = e3[2] / 100, n3 = 1, s3 = 0;
          return (n3 = r3 < 0.5 ? 2 * t3 * r3 : 2 * t3 * (1 - r3)) < 1 && (s3 = (r3 - 0.5 * n3) / (1 - n3)), [e3[0], 100 * n3, 100 * s3];
        }, n2.hsv.hcg = function(e3) {
          var t3 = e3[1] / 100, r3 = e3[2] / 100, n3 = t3 * r3, s3 = 0;
          return n3 < 1 && (s3 = (r3 - n3) / (1 - n3)), [e3[0], 100 * n3, 100 * s3];
        }, n2.hcg.rgb = function(e3) {
          var t3 = e3[0] / 360, r3 = e3[1] / 100, n3 = e3[2] / 100;
          if (r3 === 0)
            return [255 * n3, 255 * n3, 255 * n3];
          var s3, a3 = [0, 0, 0], i3 = t3 % 1 * 6, o3 = i3 % 1, u2 = 1 - o3;
          switch (Math.floor(i3)) {
            case 0:
              a3[0] = 1, a3[1] = o3, a3[2] = 0;
              break;
            case 1:
              a3[0] = u2, a3[1] = 1, a3[2] = 0;
              break;
            case 2:
              a3[0] = 0, a3[1] = 1, a3[2] = o3;
              break;
            case 3:
              a3[0] = 0, a3[1] = u2, a3[2] = 1;
              break;
            case 4:
              a3[0] = o3, a3[1] = 0, a3[2] = 1;
              break;
            default:
              a3[0] = 1, a3[1] = 0, a3[2] = u2;
          }
          return s3 = (1 - r3) * n3, [255 * (r3 * a3[0] + s3), 255 * (r3 * a3[1] + s3), 255 * (r3 * a3[2] + s3)];
        }, n2.hcg.hsv = function(e3) {
          var t3 = e3[1] / 100, r3 = t3 + e3[2] / 100 * (1 - t3), n3 = 0;
          return r3 > 0 && (n3 = t3 / r3), [e3[0], 100 * n3, 100 * r3];
        }, n2.hcg.hsl = function(e3) {
          var t3 = e3[1] / 100, r3 = e3[2] / 100 * (1 - t3) + 0.5 * t3, n3 = 0;
          return r3 > 0 && r3 < 0.5 ? n3 = t3 / (2 * r3) : r3 >= 0.5 && r3 < 1 && (n3 = t3 / (2 * (1 - r3))), [e3[0], 100 * n3, 100 * r3];
        }, n2.hcg.hwb = function(e3) {
          var t3 = e3[1] / 100, r3 = t3 + e3[2] / 100 * (1 - t3);
          return [e3[0], 100 * (r3 - t3), 100 * (1 - r3)];
        }, n2.hwb.hcg = function(e3) {
          var t3 = e3[1] / 100, r3 = 1 - e3[2] / 100, n3 = r3 - t3, s3 = 0;
          return n3 < 1 && (s3 = (r3 - n3) / (1 - n3)), [e3[0], 100 * n3, 100 * s3];
        }, n2.apple.rgb = function(e3) {
          return [e3[0] / 65535 * 255, e3[1] / 65535 * 255, e3[2] / 65535 * 255];
        }, n2.rgb.apple = function(e3) {
          return [e3[0] / 255 * 65535, e3[1] / 255 * 65535, e3[2] / 255 * 65535];
        }, n2.gray.rgb = function(e3) {
          return [e3[0] / 100 * 255, e3[0] / 100 * 255, e3[0] / 100 * 255];
        }, n2.gray.hsl = n2.gray.hsv = function(e3) {
          return [0, 0, e3[0]];
        }, n2.gray.hwb = function(e3) {
          return [0, 100, e3[0]];
        }, n2.gray.cmyk = function(e3) {
          return [0, 0, 0, e3[0]];
        }, n2.gray.lab = function(e3) {
          return [e3[0], 0, 0];
        }, n2.gray.hex = function(e3) {
          var t3 = 255 & Math.round(e3[0] / 100 * 255), r3 = ((t3 << 16) + (t3 << 8) + t3).toString(16).toUpperCase();
          return "000000".substring(r3.length) + r3;
        }, n2.rgb.gray = function(e3) {
          return [(e3[0] + e3[1] + e3[2]) / 3 / 255 * 100];
        };
      }, "/$$rollup_base$$/packages/babel-highlight/node_modules/chalk/node_modules/ansi-styles/node_modules/color-convert");
      function Ch(e2) {
        var t2 = function() {
          for (var e3 = {}, t3 = Object.keys(wh), r3 = t3.length, n3 = 0; n3 < r3; n3++)
            e3[t3[n3]] = { distance: -1, parent: null };
          return e3;
        }(), r2 = [e2];
        for (t2[e2].distance = 0; r2.length; )
          for (var n2 = r2.pop(), s2 = Object.keys(wh[n2]), a2 = s2.length, i2 = 0; i2 < a2; i2++) {
            var o2 = s2[i2], u2 = t2[o2];
            u2.distance === -1 && (u2.distance = t2[n2].distance + 1, u2.parent = n2, r2.unshift(o2));
          }
        return t2;
      }
      function Sh(e2, t2) {
        return function(r2) {
          return t2(e2(r2));
        };
      }
      function Th(e2, t2) {
        for (var r2 = [t2[e2].parent, e2], n2 = wh[t2[e2].parent][e2], s2 = t2[e2].parent; t2[s2].parent; )
          r2.unshift(t2[s2].parent), n2 = Sh(wh[t2[s2].parent][s2], n2), s2 = t2[s2].parent;
        return n2.conversion = r2, n2;
      }
      var jh = {};
      Object.keys(wh).forEach(function(e2) {
        jh[e2] = {}, Object.defineProperty(jh[e2], "channels", { value: wh[e2].channels }), Object.defineProperty(jh[e2], "labels", { value: wh[e2].labels });
        var t2 = function(e3) {
          for (var t3 = Ch(e3), r2 = {}, n2 = Object.keys(t3), s2 = n2.length, a2 = 0; a2 < s2; a2++) {
            var i2 = n2[a2];
            t3[i2].parent !== null && (r2[i2] = Th(i2, t3));
          }
          return r2;
        }(e2);
        Object.keys(t2).forEach(function(r2) {
          var n2 = t2[r2];
          jh[e2][r2] = function(e3) {
            var t3 = function(t4) {
              if (t4 == null)
                return t4;
              arguments.length > 1 && (t4 = Array.prototype.slice.call(arguments));
              var r3 = e3(t4);
              if (typeof r3 == "object")
                for (var n3 = r3.length, s2 = 0; s2 < n3; s2++)
                  r3[s2] = Math.round(r3[s2]);
              return r3;
            };
            return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
          }(n2), jh[e2][r2].raw = function(e3) {
            var t3 = function(t4) {
              return t4 == null ? t4 : (arguments.length > 1 && (t4 = Array.prototype.slice.call(arguments)), e3(t4));
            };
            return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
          }(n2);
        });
      });
      var Ph = jh, Ih = zt(function(e2) {
        var t2 = function(e3, t3) {
          return function() {
            var r3 = e3.apply(Ph, arguments);
            return "[" + (r3 + t3) + "m";
          };
        }, r2 = function(e3, t3) {
          return function() {
            var r3 = e3.apply(Ph, arguments);
            return "[" + (38 + t3) + ";5;" + r3 + "m";
          };
        }, n2 = function(e3, t3) {
          return function() {
            var r3 = e3.apply(Ph, arguments);
            return "[" + (38 + t3) + ";2;" + r3[0] + ";" + r3[1] + ";" + r3[2] + "m";
          };
        };
        Object.defineProperty(e2, "exports", { enumerable: true, get: function() {
          var e3 = new Map(), s2 = { modifier: { reset: [0, 0], bold: [1, 22], dim: [2, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], hidden: [8, 28], strikethrough: [9, 29] }, color: { black: [30, 39], red: [31, 39], green: [32, 39], yellow: [33, 39], blue: [34, 39], magenta: [35, 39], cyan: [36, 39], white: [37, 39], gray: [90, 39], redBright: [91, 39], greenBright: [92, 39], yellowBright: [93, 39], blueBright: [94, 39], magentaBright: [95, 39], cyanBright: [96, 39], whiteBright: [97, 39] }, bgColor: { bgBlack: [40, 49], bgRed: [41, 49], bgGreen: [42, 49], bgYellow: [43, 49], bgBlue: [44, 49], bgMagenta: [45, 49], bgCyan: [46, 49], bgWhite: [47, 49], bgBlackBright: [100, 49], bgRedBright: [101, 49], bgGreenBright: [102, 49], bgYellowBright: [103, 49], bgBlueBright: [104, 49], bgMagentaBright: [105, 49], bgCyanBright: [106, 49], bgWhiteBright: [107, 49] } };
          s2.color.grey = s2.color.gray;
          for (var a2 = 0, i2 = Object.keys(s2); a2 < i2.length; a2++) {
            for (var o2 = i2[a2], u2 = s2[o2], l2 = 0, c2 = Object.keys(u2); l2 < c2.length; l2++) {
              var p2 = c2[l2], d2 = u2[p2];
              s2[p2] = { open: "[" + d2[0] + "m", close: "[" + d2[1] + "m" }, u2[p2] = s2[p2], e3.set(d2[0], d2[1]);
            }
            Object.defineProperty(s2, o2, { value: u2, enumerable: false }), Object.defineProperty(s2, "codes", { value: e3, enumerable: false });
          }
          var f2 = function(e4) {
            return e4;
          }, h2 = function(e4, t3, r3) {
            return [e4, t3, r3];
          };
          s2.color.close = "[39m", s2.bgColor.close = "[49m", s2.color.ansi = { ansi: t2(f2, 0) }, s2.color.ansi256 = { ansi256: r2(f2, 0) }, s2.color.ansi16m = { rgb: n2(h2, 0) }, s2.bgColor.ansi = { ansi: t2(f2, 10) }, s2.bgColor.ansi256 = { ansi256: r2(f2, 10) }, s2.bgColor.ansi16m = { rgb: n2(h2, 10) };
          for (var m2 = 0, y2 = Object.keys(Ph); m2 < y2.length; m2++) {
            var g2 = y2[m2];
            if (typeof Ph[g2] == "object") {
              var v2 = Ph[g2];
              g2 === "ansi16" && (g2 = "ansi"), "ansi16" in v2 && (s2.color.ansi[g2] = t2(v2.ansi16, 0), s2.bgColor.ansi[g2] = t2(v2.ansi16, 10)), "ansi256" in v2 && (s2.color.ansi256[g2] = r2(v2.ansi256, 0), s2.bgColor.ansi256[g2] = r2(v2.ansi256, 10)), "rgb" in v2 && (s2.color.ansi16m[g2] = n2(v2.rgb, 0), s2.bgColor.ansi16m[g2] = n2(v2.rgb, 10));
            }
          }
          return s2;
        } });
      }, "/$$rollup_base$$/packages/babel-highlight/node_modules/chalk/node_modules/ansi-styles"), Fh = false, kh = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi, Oh = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, Rh = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, Nh = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi, Bh = new Map([["n", "\n"], ["r", "\r"], ["t", "	"], ["b", "\b"], ["f", "\f"], ["v", "\v"], ["0", "\0"], ["\\", "\\"], ["e", ""], ["a", "\x07"]]);
      function _h(e2) {
        return e2[0] === "u" && e2.length === 5 || e2[0] === "x" && e2.length === 3 ? String.fromCharCode(parseInt(e2.slice(1), 16)) : Bh.get(e2) || e2;
      }
      function Lh(e2, t2) {
        for (var r2, n2, s2 = [], a2 = f(t2.trim().split(/\s*,\s*/g)); !(n2 = a2()).done; ) {
          var i2 = n2.value;
          if (isNaN(i2)) {
            if (!(r2 = i2.match(Rh)))
              throw new Error("Invalid Chalk template style argument: " + i2 + " (in style '" + e2 + "')");
            s2.push(r2[2].replace(Nh, function(e3, t3, r3) {
              return t3 ? _h(t3) : r3;
            }));
          } else
            s2.push(Number(i2));
        }
        return s2;
      }
      function Mh(e2) {
        Oh.lastIndex = 0;
        for (var t2, r2 = []; (t2 = Oh.exec(e2)) !== null; ) {
          var n2 = t2[1];
          if (t2[2]) {
            var s2 = Lh(n2, t2[2]);
            r2.push([n2].concat(s2));
          } else
            r2.push([n2]);
        }
        return r2;
      }
      function Uh(e2, t2) {
        for (var r2, n2 = {}, s2 = f(t2); !(r2 = s2()).done; )
          for (var a2, i2 = r2.value, o2 = f(i2.styles); !(a2 = o2()).done; ) {
            var u2 = a2.value;
            n2[u2[0]] = i2.inverse ? null : u2.slice(1);
          }
        for (var l2 = e2, c2 = 0, p2 = Object.keys(n2); c2 < p2.length; c2++) {
          var d2 = p2[c2];
          if (Array.isArray(n2[d2])) {
            if (!(d2 in l2))
              throw new Error("Unknown Chalk style: " + d2);
            l2 = n2[d2].length > 0 ? l2[d2].apply(l2, n2[d2]) : l2[d2];
          }
        }
        return l2;
      }
      var Gh = function(e2, t2) {
        var r2 = [], n2 = [], s2 = [];
        if (t2.replace(kh, function(t3, a3, i2, o2, u2, l2) {
          if (a3)
            s2.push(_h(a3));
          else if (o2) {
            var c2 = s2.join("");
            s2 = [], n2.push(r2.length === 0 ? c2 : Uh(e2, r2)(c2)), r2.push({ inverse: i2, styles: Mh(o2) });
          } else if (u2) {
            if (r2.length === 0)
              throw new Error("Found extraneous } in Chalk template literal");
            n2.push(Uh(e2, r2)(s2.join(""))), s2 = [], r2.pop();
          } else
            s2.push(l2);
        }), n2.push(s2.join("")), r2.length > 0) {
          var a2 = "Chalk template literal is missing " + r2.length + " closing bracket" + (r2.length === 1 ? "" : "s") + " (`}`)";
          throw new Error(a2);
        }
        return n2.join("");
      }, Vh = zt(function(e2) {
        var t2 = Fh, r2 = ar.platform === "win32" && !(ar.env.TERM || "").toLowerCase().startsWith("xterm"), n2 = ["ansi", "ansi", "ansi256", "ansi16m"], s2 = new Set(["gray"]), a2 = Object.create(null);
        function i2(e3, t3) {
          t3 = t3 || {};
          e3.level = t3.level === void 0 ? 0 : t3.level, e3.enabled = "enabled" in t3 ? t3.enabled : e3.level > 0;
        }
        function o2(e3) {
          if (!this || !(this instanceof o2) || this.template) {
            var t3 = {};
            return i2(t3, e3), t3.template = function() {
              var e4 = [].slice.call(arguments);
              return x2.apply(null, [t3.template].concat(e4));
            }, Object.setPrototypeOf(t3, o2.prototype), Object.setPrototypeOf(t3.template, t3), t3.template.constructor = o2, t3.template;
          }
          i2(this, e3);
        }
        r2 && (Ih.blue.open = "[94m");
        for (var u2 = function() {
          var e3 = c2[l2];
          Ih[e3].closeRe = new RegExp(Dh(Ih[e3].close), "g"), a2[e3] = { get: function() {
            var t3 = Ih[e3];
            return b2.call(this, this._styles ? this._styles.concat(t3) : [t3], this._empty, e3);
          } };
        }, l2 = 0, c2 = Object.keys(Ih); l2 < c2.length; l2++)
          u2();
        a2.visible = { get: function() {
          return b2.call(this, this._styles || [], true, "visible");
        } }, Ih.color.closeRe = new RegExp(Dh(Ih.color.close), "g");
        for (var p2 = function() {
          var e3 = h2[d2];
          if (s2.has(e3))
            return "continue";
          a2[e3] = { get: function() {
            var t3 = this.level;
            return function() {
              var r3 = Ih.color[n2[t3]][e3].apply(null, arguments), s3 = { open: r3, close: Ih.color.close, closeRe: Ih.color.closeRe };
              return b2.call(this, this._styles ? this._styles.concat(s3) : [s3], this._empty, e3);
            };
          } };
        }, d2 = 0, h2 = Object.keys(Ih.color.ansi); d2 < h2.length; d2++)
          p2();
        Ih.bgColor.closeRe = new RegExp(Dh(Ih.bgColor.close), "g");
        for (var m2 = function() {
          var e3 = g2[y2];
          if (s2.has(e3))
            return "continue";
          var t3 = "bg" + e3[0].toUpperCase() + e3.slice(1);
          a2[t3] = { get: function() {
            var t4 = this.level;
            return function() {
              var r3 = Ih.bgColor[n2[t4]][e3].apply(null, arguments), s3 = { open: r3, close: Ih.bgColor.close, closeRe: Ih.bgColor.closeRe };
              return b2.call(this, this._styles ? this._styles.concat(s3) : [s3], this._empty, e3);
            };
          } };
        }, y2 = 0, g2 = Object.keys(Ih.bgColor.ansi); y2 < g2.length; y2++)
          m2();
        var v2 = Object.defineProperties(function() {
        }, a2);
        function b2(e3, t3, r3) {
          var n3 = function e4() {
            return E2.apply(e4, arguments);
          };
          n3._styles = e3, n3._empty = t3;
          var s3 = this;
          return Object.defineProperty(n3, "level", { enumerable: true, get: function() {
            return s3.level;
          }, set: function(e4) {
            s3.level = e4;
          } }), Object.defineProperty(n3, "enabled", { enumerable: true, get: function() {
            return s3.enabled;
          }, set: function(e4) {
            s3.enabled = e4;
          } }), n3.hasGrey = this.hasGrey || r3 === "gray" || r3 === "grey", n3.__proto__ = v2, n3;
        }
        function E2() {
          var e3 = arguments, t3 = e3.length, n3 = String(arguments[0]);
          if (t3 === 0)
            return "";
          if (t3 > 1)
            for (var s3 = 1; s3 < t3; s3++)
              n3 += " " + e3[s3];
          if (!this.enabled || this.level <= 0 || !n3)
            return this._empty ? "" : n3;
          var a3 = Ih.dim.open;
          r2 && this.hasGrey && (Ih.dim.open = "");
          for (var i3, o3 = f(this._styles.slice().reverse()); !(i3 = o3()).done; ) {
            var u3 = i3.value;
            n3 = (n3 = u3.open + n3.replace(u3.closeRe, u3.open) + u3.close).replace(/\r?\n/g, u3.close + "$&" + u3.open);
          }
          return Ih.dim.open = a3, n3;
        }
        function x2(e3, t3) {
          if (!Array.isArray(t3))
            return [].slice.call(arguments, 1).join(" ");
          for (var r3 = [].slice.call(arguments, 2), n3 = [t3.raw[0]], s3 = 1; s3 < t3.length; s3++)
            n3.push(String(r3[s3 - 1]).replace(/[{}\\]/g, "\\$&")), n3.push(String(t3.raw[s3]));
          return Gh(e3, n3.join(""));
        }
        Object.defineProperties(o2.prototype, a2), e2.exports = o2(), e2.exports.supportsColor = t2, e2.exports.default = e2.exports;
      }, "/$$rollup_base$$/packages/babel-highlight/node_modules/chalk"), Wh = new Set(["as", "async", "from", "get", "of", "set"]);
      var Hh, Xh = /\r\n|[\n\r\u2028\u2029]/, qh = /^[()[\]{}]$/, $h = /^[a-z][\w-]*$/i, Kh = function(e2, t2, r2) {
        if (e2.type === "name") {
          if (jr(e2.value) || Cr(e2.value, true) || Wh.has(e2.value))
            return "keyword";
          if ($h.test(e2.value) && (r2[t2 - 1] === "<" || r2.substr(t2 - 2, 2) == "</"))
            return "jsxIdentifier";
          if (e2.value[0] !== e2.value[0].toLowerCase())
            return "capitalized";
        }
        return e2.type === "punctuator" && qh.test(e2.value) ? "bracket" : e2.type !== "invalid" || e2.value !== "@" && e2.value !== "#" ? e2.type : "punctuator";
      };
      function zh(e2) {
        return !!Vh.supportsColor || e2.forceColor;
      }
      function Jh(e2) {
        return e2.forceColor ? new Vh.constructor({ enabled: true, level: 1 }) : Vh;
      }
      function Yh(e2, t2) {
        return t2 === void 0 && (t2 = {}), zh(t2) ? function(e3, t3) {
          for (var r2, n2 = "", s2 = function() {
            var t4 = r2.value, s3 = t4.type, a3 = t4.value, i2 = e3[s3];
            n2 += i2 ? a3.split(Xh).map(function(e4) {
              return i2(e4);
            }).join("\n") : a3;
          }, a2 = f(Hh(t3)); !(r2 = a2()).done; )
            s2();
          return n2;
        }(function(e3) {
          return { keyword: e3.cyan, capitalized: e3.yellow, jsxIdentifier: e3.yellow, punctuator: e3.yellow, number: e3.magenta, string: e3.green, regex: e3.magenta, comment: e3.grey, invalid: e3.white.bgRed.bold };
        }(Jh(t2)), e2) : e2;
      }
      Hh = bh.mark(function e2(t2) {
        var r2, n2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                if (!(r2 = Eh.default.exec(t2))) {
                  e3.next = 6;
                  break;
                }
                return n2 = Eh.matchToToken(r2), e3.next = 4, { type: Kh(n2, r2.index, t2), value: n2.value };
              case 4:
                e3.next = 0;
                break;
              case 6:
              case "end":
                return e3.stop();
            }
        }, e2);
      });
      var Qh = /\r\n|[\n\r\u2028\u2029]/;
      function Zh(e2, t2, r2) {
        r2 === void 0 && (r2 = {});
        var n2 = (r2.highlightCode || r2.forceColor) && zh(r2), s2 = Jh(r2), a2 = function(e3) {
          return { gutter: e3.grey, marker: e3.red.bold, message: e3.red.bold };
        }(s2), i2 = function(e3, t3) {
          return n2 ? e3(t3) : t3;
        }, o2 = function(e3, t3, r3) {
          var n3 = Object.assign({ column: 0, line: -1 }, e3.start), s3 = Object.assign({}, n3, e3.end), a3 = r3 || {}, i3 = a3.linesAbove, o3 = i3 === void 0 ? 2 : i3, u3 = a3.linesBelow, l3 = u3 === void 0 ? 3 : u3, c3 = n3.line, p3 = n3.column, d3 = s3.line, f3 = s3.column, h2 = Math.max(c3 - (o3 + 1), 0), m2 = Math.min(t3.length, d3 + l3);
          c3 === -1 && (h2 = 0), d3 === -1 && (m2 = t3.length);
          var y2 = d3 - c3, g2 = {};
          if (y2)
            for (var v2 = 0; v2 <= y2; v2++) {
              var b2 = v2 + c3;
              if (p3)
                if (v2 === 0) {
                  var E2 = t3[b2 - 1].length;
                  g2[b2] = [p3, E2 - p3 + 1];
                } else if (v2 === y2)
                  g2[b2] = [0, f3];
                else {
                  var x2 = t3[b2 - v2].length;
                  g2[b2] = [0, x2];
                }
              else
                g2[b2] = true;
            }
          else
            g2[c3] = p3 === f3 ? !p3 || [p3, 0] : [p3, f3 - p3];
          return { start: h2, end: m2, markerLines: g2 };
        }(t2, e2.split(Qh), r2), u2 = o2.start, l2 = o2.end, c2 = o2.markerLines, p2 = t2.start && typeof t2.start.column == "number", d2 = String(l2).length, f2 = (n2 ? Yh(e2, r2) : e2).split(Qh).slice(u2, l2).map(function(e3, t3) {
          var n3 = u2 + 1 + t3, s3 = " " + (" " + n3).slice(-d2) + " |", o3 = c2[n3], l3 = !c2[n3 + 1];
          if (o3) {
            var p3 = "";
            if (Array.isArray(o3)) {
              var f3 = e3.slice(0, Math.max(o3[0] - 1, 0)).replace(/[^\t]/g, " "), h2 = o3[1] || 1;
              p3 = ["\n ", i2(a2.gutter, s3.replace(/\d/g, " ")), " ", f3, i2(a2.marker, "^").repeat(h2)].join(""), l3 && r2.message && (p3 += " " + i2(a2.message, r2.message));
            }
            return [i2(a2.marker, ">"), i2(a2.gutter, s3), e3.length > 0 ? " " + e3 : "", p3].join("");
          }
          return " " + i2(a2.gutter, s3) + (e3.length > 0 ? " " + e3 : "");
        }).join("\n");
        return r2.message && !p2 && (f2 = "" + " ".repeat(d2 + 1) + r2.message + "\n" + f2), n2 ? s2.reset(f2) : f2;
      }
      var em = true, tm = true, rm = true, nm = true, sm = true, am = function(e2, t2) {
        t2 === void 0 && (t2 = {}), this.label = void 0, this.keyword = void 0, this.beforeExpr = void 0, this.startsExpr = void 0, this.rightAssociative = void 0, this.isLoop = void 0, this.isAssign = void 0, this.prefix = void 0, this.postfix = void 0, this.binop = void 0, this.updateContext = void 0, this.label = e2, this.keyword = t2.keyword, this.beforeExpr = !!t2.beforeExpr, this.startsExpr = !!t2.startsExpr, this.rightAssociative = !!t2.rightAssociative, this.isLoop = !!t2.isLoop, this.isAssign = !!t2.isAssign, this.prefix = !!t2.prefix, this.postfix = !!t2.postfix, this.binop = t2.binop != null ? t2.binop : null, this.updateContext = null;
      }, im = new Map();
      function om(e2, t2) {
        t2 === void 0 && (t2 = {}), t2.keyword = e2;
        var r2 = new am(e2, t2);
        return im.set(e2, r2), r2;
      }
      function um(e2, t2) {
        return new am(e2, { beforeExpr: em, binop: t2 });
      }
      var lm = { num: new am("num", { startsExpr: tm }), bigint: new am("bigint", { startsExpr: tm }), decimal: new am("decimal", { startsExpr: tm }), regexp: new am("regexp", { startsExpr: tm }), string: new am("string", { startsExpr: tm }), name: new am("name", { startsExpr: tm }), privateName: new am("#name", { startsExpr: tm }), eof: new am("eof"), bracketL: new am("[", { beforeExpr: em, startsExpr: tm }), bracketHashL: new am("#[", { beforeExpr: em, startsExpr: tm }), bracketBarL: new am("[|", { beforeExpr: em, startsExpr: tm }), bracketR: new am("]"), bracketBarR: new am("|]"), braceL: new am("{", { beforeExpr: em, startsExpr: tm }), braceBarL: new am("{|", { beforeExpr: em, startsExpr: tm }), braceHashL: new am("#{", { beforeExpr: em, startsExpr: tm }), braceR: new am("}", { beforeExpr: em }), braceBarR: new am("|}"), parenL: new am("(", { beforeExpr: em, startsExpr: tm }), parenR: new am(")"), comma: new am(",", { beforeExpr: em }), semi: new am(";", { beforeExpr: em }), colon: new am(":", { beforeExpr: em }), doubleColon: new am("::", { beforeExpr: em }), dot: new am("."), question: new am("?", { beforeExpr: em }), questionDot: new am("?."), arrow: new am("=>", { beforeExpr: em }), template: new am("template"), ellipsis: new am("...", { beforeExpr: em }), backQuote: new am("`", { startsExpr: tm }), dollarBraceL: new am("${", { beforeExpr: em, startsExpr: tm }), at: new am("@"), hash: new am("#", { startsExpr: tm }), interpreterDirective: new am("#!..."), eq: new am("=", { beforeExpr: em, isAssign: nm }), assign: new am("_=", { beforeExpr: em, isAssign: nm }), slashAssign: new am("_=", { beforeExpr: em, isAssign: nm }), incDec: new am("++/--", { prefix: sm, postfix: true, startsExpr: tm }), bang: new am("!", { beforeExpr: em, prefix: sm, startsExpr: tm }), tilde: new am("~", { beforeExpr: em, prefix: sm, startsExpr: tm }), pipeline: um("|>", 0), nullishCoalescing: um("??", 1), logicalOR: um("||", 1), logicalAND: um("&&", 2), bitwiseOR: um("|", 3), bitwiseXOR: um("^", 4), bitwiseAND: um("&", 5), equality: um("==/!=/===/!==", 6), relational: um("</>/<=/>=", 7), bitShift: um("<</>>/>>>", 8), plusMin: new am("+/-", { beforeExpr: em, binop: 9, prefix: sm, startsExpr: tm }), modulo: new am("%", { beforeExpr: em, binop: 10, startsExpr: tm }), star: new am("*", { binop: 10 }), slash: um("/", 10), exponent: new am("**", { beforeExpr: em, binop: 11, rightAssociative: true }), _break: om("break"), _case: om("case", { beforeExpr: em }), _catch: om("catch"), _continue: om("continue"), _debugger: om("debugger"), _default: om("default", { beforeExpr: em }), _do: om("do", { isLoop: rm, beforeExpr: em }), _else: om("else", { beforeExpr: em }), _finally: om("finally"), _for: om("for", { isLoop: rm }), _function: om("function", { startsExpr: tm }), _if: om("if"), _return: om("return", { beforeExpr: em }), _switch: om("switch"), _throw: om("throw", { beforeExpr: em, prefix: sm, startsExpr: tm }), _try: om("try"), _var: om("var"), _const: om("const"), _while: om("while", { isLoop: rm }), _with: om("with"), _new: om("new", { beforeExpr: em, startsExpr: tm }), _this: om("this", { startsExpr: tm }), _super: om("super", { startsExpr: tm }), _class: om("class", { startsExpr: tm }), _extends: om("extends", { beforeExpr: em }), _export: om("export"), _import: om("import", { startsExpr: tm }), _null: om("null", { startsExpr: tm }), _true: om("true", { startsExpr: tm }), _false: om("false", { startsExpr: tm }), _in: om("in", { beforeExpr: em, binop: 7 }), _instanceof: om("instanceof", { beforeExpr: em, binop: 7 }), _typeof: om("typeof", { beforeExpr: em, prefix: sm, startsExpr: tm }), _void: om("void", { beforeExpr: em, prefix: sm, startsExpr: tm }), _delete: om("delete", { beforeExpr: em, prefix: sm, startsExpr: tm }) }, cm = /\r\n?|[\n\u2028\u2029]/, pm = new RegExp(cm.source, "g");
      function dm(e2) {
        switch (e2) {
          case 10:
          case 13:
          case 8232:
          case 8233:
            return true;
          default:
            return false;
        }
      }
      var fm = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
      function hm(e2) {
        switch (e2) {
          case 9:
          case 11:
          case 12:
          case 32:
          case 160:
          case 5760:
          case 8192:
          case 8193:
          case 8194:
          case 8195:
          case 8196:
          case 8197:
          case 8198:
          case 8199:
          case 8200:
          case 8201:
          case 8202:
          case 8239:
          case 8287:
          case 12288:
          case 65279:
            return true;
          default:
            return false;
        }
      }
      var mm = function(e2, t2) {
        this.line = void 0, this.column = void 0, this.line = e2, this.column = t2;
      }, ym = function(e2, t2) {
        this.start = void 0, this.end = void 0, this.filename = void 0, this.identifierName = void 0, this.start = e2, this.end = t2;
      };
      function gm(e2) {
        return e2[e2.length - 1];
      }
      var vm = function(e2) {
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.addComment = function(e3) {
          this.filename && (e3.loc.filename = this.filename), this.state.trailingComments.push(e3), this.state.leadingComments.push(e3);
        }, r2.adjustCommentsAfterTrailingComma = function(e3, t3, r3) {
          if (this.state.leadingComments.length !== 0) {
            for (var n2 = null, s2 = t3.length; n2 === null && s2 > 0; )
              n2 = t3[--s2];
            if (n2 !== null) {
              for (var a2 = 0; a2 < this.state.leadingComments.length; a2++)
                this.state.leadingComments[a2].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(a2, 1), a2--);
              for (var i2 = [], o2 = 0; o2 < this.state.leadingComments.length; o2++) {
                var u2 = this.state.leadingComments[o2];
                u2.end < e3.end ? (i2.push(u2), r3 || (this.state.leadingComments.splice(o2, 1), o2--)) : (e3.trailingComments === void 0 && (e3.trailingComments = []), e3.trailingComments.push(u2));
              }
              r3 && (this.state.leadingComments = []), i2.length > 0 ? n2.trailingComments = i2 : n2.trailingComments !== void 0 && (n2.trailingComments = []);
            }
          }
        }, r2.processComment = function(e3) {
          if (!(e3.type === "Program" && e3.body.length > 0)) {
            var t3, r3, n2, s2, a2, i2 = this.state.commentStack;
            if (this.state.trailingComments.length > 0)
              this.state.trailingComments[0].start >= e3.end ? (n2 = this.state.trailingComments, this.state.trailingComments = []) : this.state.trailingComments.length = 0;
            else if (i2.length > 0) {
              var o2 = gm(i2);
              o2.trailingComments && o2.trailingComments[0].start >= e3.end && (n2 = o2.trailingComments, delete o2.trailingComments);
            }
            for (i2.length > 0 && gm(i2).start >= e3.start && (t3 = i2.pop()); i2.length > 0 && gm(i2).start >= e3.start; )
              r3 = i2.pop();
            if (!r3 && t3 && (r3 = t3), t3)
              switch (e3.type) {
                case "ObjectExpression":
                  this.adjustCommentsAfterTrailingComma(e3, e3.properties);
                  break;
                case "ObjectPattern":
                  this.adjustCommentsAfterTrailingComma(e3, e3.properties, true);
                  break;
                case "CallExpression":
                  this.adjustCommentsAfterTrailingComma(e3, e3.arguments);
                  break;
                case "ArrayExpression":
                  this.adjustCommentsAfterTrailingComma(e3, e3.elements);
                  break;
                case "ArrayPattern":
                  this.adjustCommentsAfterTrailingComma(e3, e3.elements, true);
              }
            else
              this.state.commentPreviousNode && (this.state.commentPreviousNode.type === "ImportSpecifier" && e3.type !== "ImportSpecifier" || this.state.commentPreviousNode.type === "ExportSpecifier" && e3.type !== "ExportSpecifier") && this.adjustCommentsAfterTrailingComma(e3, [this.state.commentPreviousNode]);
            if (r3) {
              if (r3.leadingComments) {
                if (r3 !== e3 && r3.leadingComments.length > 0 && gm(r3.leadingComments).end <= e3.start)
                  e3.leadingComments = r3.leadingComments, delete r3.leadingComments;
                else
                  for (s2 = r3.leadingComments.length - 2; s2 >= 0; --s2)
                    if (r3.leadingComments[s2].end <= e3.start) {
                      e3.leadingComments = r3.leadingComments.splice(0, s2 + 1);
                      break;
                    }
              }
            } else if (this.state.leadingComments.length > 0)
              if (gm(this.state.leadingComments).end <= e3.start) {
                if (this.state.commentPreviousNode)
                  for (a2 = 0; a2 < this.state.leadingComments.length; a2++)
                    this.state.leadingComments[a2].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(a2, 1), a2--);
                this.state.leadingComments.length > 0 && (e3.leadingComments = this.state.leadingComments, this.state.leadingComments = []);
              } else {
                for (s2 = 0; s2 < this.state.leadingComments.length && !(this.state.leadingComments[s2].end > e3.start); s2++)
                  ;
                var u2 = this.state.leadingComments.slice(0, s2);
                u2.length && (e3.leadingComments = u2), (n2 = this.state.leadingComments.slice(s2)).length === 0 && (n2 = null);
              }
            if (this.state.commentPreviousNode = e3, n2)
              if (n2.length && n2[0].start >= e3.start && gm(n2).end <= e3.end)
                e3.innerComments = n2;
              else {
                var l2 = n2.findIndex(function(t4) {
                  return t4.end >= e3.end;
                });
                l2 > 0 ? (e3.innerComments = n2.slice(0, l2), e3.trailingComments = n2.slice(l2)) : e3.trailingComments = n2;
              }
            i2.push(e3);
          }
        }, t2;
      }(function() {
        function e2() {
          this.sawUnambiguousESM = false, this.ambiguousScriptDifferentAst = false;
        }
        var t2 = e2.prototype;
        return t2.hasPlugin = function(e3) {
          return this.plugins.has(e3);
        }, t2.getPluginOption = function(e3, t3) {
          if (this.hasPlugin(e3))
            return this.plugins.get(e3)[t3];
        }, e2;
      }()), bm = Object.freeze({ SyntaxError: "BABEL_PARSER_SYNTAX_ERROR", SourceTypeModuleError: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED" }), Em = Dm({ AccessorIsGenerator: "A %0ter cannot be a generator.", ArgumentsInClass: "'arguments' is only allowed in functions and class methods.", AsyncFunctionInSingleStatementContext: "Async functions can only be declared at the top level or inside a block.", AwaitBindingIdentifier: "Can not use 'await' as identifier inside an async function.", AwaitBindingIdentifierInStaticBlock: "Can not use 'await' as identifier inside a static block.", AwaitExpressionFormalParameter: "'await' is not allowed in async function parameters.", AwaitNotInAsyncContext: "'await' is only allowed within async functions and at the top levels of modules.", AwaitNotInAsyncFunction: "'await' is only allowed within async functions.", BadGetterArity: "A 'get' accesor must not have any formal parameters.", BadSetterArity: "A 'set' accesor must have exactly one formal parameter.", BadSetterRestParameter: "A 'set' accesor function argument must not be a rest parameter.", ConstructorClassField: "Classes may not have a field named 'constructor'.", ConstructorClassPrivateField: "Classes may not have a private field named '#constructor'.", ConstructorIsAccessor: "Class constructor may not be an accessor.", ConstructorIsAsync: "Constructor can't be an async function.", ConstructorIsGenerator: "Constructor can't be a generator.", DeclarationMissingInitializer: "'%0' require an initialization value.", DecoratorBeforeExport: "Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.", DecoratorConstructor: "Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?", DecoratorExportClass: "Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.", DecoratorSemicolon: "Decorators must not be followed by a semicolon.", DecoratorStaticBlock: "Decorators can't be used with a static block.", DeletePrivateField: "Deleting a private field is not allowed.", DestructureNamedImport: "ES2015 named imports do not destructure. Use another statement for destructuring after the import.", DuplicateConstructor: "Duplicate constructor in the same class.", DuplicateDefaultExport: "Only one default export allowed per module.", DuplicateExport: "`%0` has already been exported. Exported identifiers must be unique.", DuplicateProto: "Redefinition of __proto__ property.", DuplicateRegExpFlags: "Duplicate regular expression flag.", ElementAfterRest: "Rest element must be last element.", EscapedCharNotAnIdentifier: "Invalid Unicode escape.", ExportBindingIsString: "A string literal cannot be used as an exported binding without `from`.\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?", ExportDefaultFromAsIdentifier: "'from' is not allowed as an identifier after 'export default'.", ForInOfLoopInitializer: "'%0' loop variable declaration may not have an initializer.", ForOfAsync: "The left-hand side of a for-of loop may not be 'async'.", ForOfLet: "The left-hand side of a for-of loop may not start with 'let'.", GeneratorInSingleStatementContext: "Generators can only be declared at the top level or inside a block.", IllegalBreakContinue: "Unsyntactic %0.", IllegalLanguageModeDirective: "Illegal 'use strict' directive in function with non-simple parameter list.", IllegalReturn: "'return' outside of function.", ImportBindingIsString: 'A string literal cannot be used as an imported binding.\n- Did you mean `import { "%0" as foo }`?', ImportCallArgumentTrailingComma: "Trailing comma is disallowed inside import(...) arguments.", ImportCallArity: "`import()` requires exactly %0.", ImportCallNotNewExpression: "Cannot use new with import(...).", ImportCallSpreadArgument: "`...` is not allowed in `import()`.", InvalidBigIntLiteral: "Invalid BigIntLiteral.", InvalidCodePoint: "Code point out of bounds.", InvalidDecimal: "Invalid decimal.", InvalidDigit: "Expected number in radix %0.", InvalidEscapeSequence: "Bad character escape sequence.", InvalidEscapeSequenceTemplate: "Invalid escape sequence in template.", InvalidEscapedReservedWord: "Escape sequence in keyword %0.", InvalidIdentifier: "Invalid identifier %0.", InvalidLhs: "Invalid left-hand side in %0.", InvalidLhsBinding: "Binding invalid left-hand side in %0.", InvalidNumber: "Invalid number.", InvalidOrMissingExponent: "Floating-point numbers require a valid exponent after the 'e'.", InvalidOrUnexpectedToken: "Unexpected character '%0'.", InvalidParenthesizedAssignment: "Invalid parenthesized assignment pattern.", InvalidPrivateFieldResolution: "Private name #%0 is not defined.", InvalidPropertyBindingPattern: "Binding member expression.", InvalidRecordProperty: "Only properties and spread elements are allowed in record definitions.", InvalidRestAssignmentPattern: "Invalid rest operator's argument.", LabelRedeclaration: "Label '%0' is already declared.", LetInLexicalBinding: "'let' is not allowed to be used as a name in 'let' or 'const' declarations.", LineTerminatorBeforeArrow: "No line break is allowed before '=>'.", MalformedRegExpFlags: "Invalid regular expression flag.", MissingClassName: "A class name is required.", MissingEqInAssignment: "Only '=' operator can be used for specifying default value.", MissingSemicolon: "Missing semicolon.", MissingUnicodeEscape: "Expecting Unicode escape sequence \\uXXXX.", MixingCoalesceWithLogical: "Nullish coalescing operator(??) requires parens when mixing with logical operators.", ModuleAttributeDifferentFromType: "The only accepted module attribute is `type`.", ModuleAttributeInvalidValue: "Only string literals are allowed as module attribute values.", ModuleAttributesWithDuplicateKeys: 'Duplicate key "%0" is not allowed in module attributes.', ModuleExportNameHasLoneSurrogate: "An export name cannot include a lone surrogate, found '\\u%0'.", ModuleExportUndefined: "Export '%0' is not defined.", MultipleDefaultsInSwitch: "Multiple default clauses.", NewlineAfterThrow: "Illegal newline after throw.", NoCatchOrFinally: "Missing catch or finally clause.", NumberIdentifier: "Identifier directly after number.", NumericSeparatorInEscapeSequence: "Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.", ObsoleteAwaitStar: "'await*' has been removed from the async functions proposal. Use Promise.all() instead.", OptionalChainingNoNew: "Constructors in/after an Optional Chain are not allowed.", OptionalChainingNoTemplate: "Tagged Template Literals are not allowed in optionalChain.", OverrideOnConstructor: "'override' modifier cannot appear on a constructor declaration.", ParamDupe: "Argument name clash.", PatternHasAccessor: "Object pattern can't contain getter or setter.", PatternHasMethod: "Object pattern can't contain methods.", PipelineBodyNoArrow: 'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized.', PipelineBodySequenceExpression: "Pipeline body may not be a comma-separated sequence expression.", PipelineHeadSequenceExpression: "Pipeline head should not be a comma-separated sequence expression.", PipelineTopicUnused: "Pipeline is in topic style but does not use topic reference.", PrimaryTopicNotAllowed: "Topic reference was used in a lexical context without topic binding.", PrimaryTopicRequiresSmartPipeline: "Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.", PrivateInExpectedIn: "Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).", PrivateNameRedeclaration: "Duplicate private name #%0.", RecordExpressionBarIncorrectEndSyntaxType: "Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.", RecordExpressionBarIncorrectStartSyntaxType: "Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.", RecordExpressionHashIncorrectStartSyntaxType: "Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.", RecordNoProto: "'__proto__' is not allowed in Record expressions.", RestTrailingComma: "Unexpected trailing comma after rest element.", SloppyFunction: "In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.", StaticPrototype: "Classes may not have static property named prototype.", StrictDelete: "Deleting local variable in strict mode.", StrictEvalArguments: "Assigning to '%0' in strict mode.", StrictEvalArgumentsBinding: "Binding '%0' in strict mode.", StrictFunction: "In strict mode code, functions can only be declared at top level or inside a block.", StrictNumericEscape: "The only valid numeric escape in strict mode is '\\0'.", StrictOctalLiteral: "Legacy octal literals are not allowed in strict mode.", StrictWith: "'with' in strict mode.", SuperNotAllowed: "`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?", SuperPrivateField: "Private fields can't be accessed on super.", TrailingDecorator: "Decorators must be attached to a class element.", TupleExpressionBarIncorrectEndSyntaxType: "Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.", TupleExpressionBarIncorrectStartSyntaxType: "Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.", TupleExpressionHashIncorrectStartSyntaxType: "Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.", UnexpectedArgumentPlaceholder: "Unexpected argument placeholder.", UnexpectedAwaitAfterPipelineBody: 'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal.', UnexpectedDigitAfterHash: "Unexpected digit after hash token.", UnexpectedImportExport: "'import' and 'export' may only appear at the top level.", UnexpectedKeyword: "Unexpected keyword '%0'.", UnexpectedLeadingDecorator: "Leading decorators must be attached to a class declaration.", UnexpectedLexicalDeclaration: "Lexical declaration cannot appear in a single-statement context.", UnexpectedNewTarget: "`new.target` can only be used in functions or class properties.", UnexpectedNumericSeparator: "A numeric separator is only allowed between two digits.", UnexpectedPrivateField: "Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\n or a property of member expression (i.e. this.#p).", UnexpectedReservedWord: "Unexpected reserved word '%0'.", UnexpectedSuper: "'super' is only allowed in object methods and classes.", UnexpectedToken: "Unexpected token '%0'.", UnexpectedTokenUnaryExponentiation: "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.", UnsupportedBind: "Binding should be performed on object property.", UnsupportedDecoratorExport: "A decorated export must export a class declaration.", UnsupportedDefaultExport: "Only expressions, functions or classes are allowed as the `default` export.", UnsupportedImport: "`import` can only be used in `import()` or `import.meta`.", UnsupportedMetaProperty: "The only valid meta property for %0 is %0.%1.", UnsupportedParameterDecorator: "Decorators cannot be used to decorate parameters.", UnsupportedPropertyDecorator: "Decorators cannot be used to decorate object literal properties.", UnsupportedSuper: "'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).", UnterminatedComment: "Unterminated comment.", UnterminatedRegExp: "Unterminated regular expression.", UnterminatedString: "Unterminated string constant.", UnterminatedTemplate: "Unterminated template.", VarRedeclaration: "Identifier '%0' has already been declared.", YieldBindingIdentifier: "Can not use 'yield' as identifier inside a generator.", YieldInParameter: "Yield expression is not allowed in formal parameters.", ZeroDigitNumericSeparator: "Numeric separator can not be used after leading 0." }, bm.SyntaxError), xm = Dm({ ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: "module"'`, ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: "module"'` }, bm.SourceTypeModuleError);
      function Dm(e2, t2) {
        var r2 = {};
        return Object.keys(e2).forEach(function(n2) {
          r2[n2] = Object.freeze({ code: t2, reasonCode: n2, template: e2[n2] });
        }), Object.freeze(r2);
      }
      var Am = function(e2) {
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.getLocationForPosition = function(e3) {
          return e3 === this.state.start ? this.state.startLoc : e3 === this.state.lastTokStart ? this.state.lastTokStartLoc : e3 === this.state.end ? this.state.endLoc : e3 === this.state.lastTokEnd ? this.state.lastTokEndLoc : function(e4, t3) {
            var r3, n2 = 1, s2 = 0;
            for (pm.lastIndex = 0; (r3 = pm.exec(e4)) && r3.index < t3; )
              n2++, s2 = pm.lastIndex;
            return new mm(n2, t3 - s2);
          }(this.input, e3);
        }, r2.raise = function(e3, t3) {
          for (var r3 = t3.code, n2 = t3.reasonCode, s2 = t3.template, a2 = arguments.length, i2 = new Array(a2 > 2 ? a2 - 2 : 0), o2 = 2; o2 < a2; o2++)
            i2[o2 - 2] = arguments[o2];
          return this.raiseWithData.apply(this, [e3, { code: r3, reasonCode: n2 }, s2].concat(i2));
        }, r2.raiseOverwrite = function(e3, t3) {
          for (var r3 = t3.code, n2 = t3.template, s2 = arguments.length, a2 = new Array(s2 > 2 ? s2 - 2 : 0), i2 = 2; i2 < s2; i2++)
            a2[i2 - 2] = arguments[i2];
          var o2 = this.getLocationForPosition(e3), u2 = n2.replace(/%(\d+)/g, function(e4, t4) {
            return a2[t4];
          }) + " (" + o2.line + ":" + o2.column + ")";
          if (this.options.errorRecovery)
            for (var l2 = this.state.errors, c2 = l2.length - 1; c2 >= 0; c2--) {
              var p2 = l2[c2];
              if (p2.pos === e3)
                return Object.assign(p2, { message: u2 });
              if (p2.pos < e3)
                break;
            }
          return this._raise({ code: r3, loc: o2, pos: e3 }, u2);
        }, r2.raiseWithData = function(e3, t3, r3) {
          for (var n2 = arguments.length, s2 = new Array(n2 > 3 ? n2 - 3 : 0), a2 = 3; a2 < n2; a2++)
            s2[a2 - 3] = arguments[a2];
          var i2 = this.getLocationForPosition(e3), o2 = r3.replace(/%(\d+)/g, function(e4, t4) {
            return s2[t4];
          }) + " (" + i2.line + ":" + i2.column + ")";
          return this._raise(Object.assign({ loc: i2, pos: e3 }, t3), o2);
        }, r2._raise = function(e3, t3) {
          var r3 = new SyntaxError(t3);
          if (Object.assign(r3, e3), this.options.errorRecovery)
            return this.isLookahead || this.state.errors.push(r3), r3;
          throw r3;
        }, t2;
      }(vm), wm = function(e2, t2) {
        this.token = void 0, this.preserveSpace = void 0, this.token = e2, this.preserveSpace = !!t2;
      }, Cm = { brace: new wm("{"), template: new wm("`", true) };
      lm.braceR.updateContext = function(e2) {
        e2.pop();
      }, lm.braceL.updateContext = lm.braceHashL.updateContext = lm.dollarBraceL.updateContext = function(e2) {
        e2.push(Cm.brace);
      }, lm.backQuote.updateContext = function(e2) {
        e2[e2.length - 1] === Cm.template ? e2.pop() : e2.push(Cm.template);
      };
      var Sm = new Set(["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete", "implements", "interface", "let", "package", "private", "protected", "public", "static", "yield", "eval", "arguments", "enum", "await"]);
      var Tm = 64, jm = 256, Pm = 128, Im = 256, Fm = 512, km = 1024, Om = 2048, Rm = 1024, Nm = function(e2) {
        this.var = new Set(), this.lexical = new Set(), this.functions = new Set(), this.flags = e2;
      }, Bm = function() {
        function e2(e3, t3) {
          this.scopeStack = [], this.undefinedExports = new Map(), this.undefinedPrivateNames = new Map(), this.raise = e3, this.inModule = t3;
        }
        var t2 = e2.prototype;
        return t2.createScope = function(e3) {
          return new Nm(e3);
        }, t2.enter = function(e3) {
          this.scopeStack.push(this.createScope(e3));
        }, t2.exit = function() {
          this.scopeStack.pop();
        }, t2.treatFunctionsAsVarInScope = function(e3) {
          return !!(2 & e3.flags || !this.inModule && 1 & e3.flags);
        }, t2.declareName = function(e3, t3, r2) {
          var n2 = this.currentScope();
          if (8 & t3 || 16 & t3)
            this.checkRedeclarationInScope(n2, e3, t3, r2), 16 & t3 ? n2.functions.add(e3) : n2.lexical.add(e3), 8 & t3 && this.maybeExportDefined(n2, e3);
          else if (4 & t3)
            for (var s2 = this.scopeStack.length - 1; s2 >= 0 && (n2 = this.scopeStack[s2], this.checkRedeclarationInScope(n2, e3, t3, r2), n2.var.add(e3), this.maybeExportDefined(n2, e3), !(259 & n2.flags)); --s2)
              ;
          this.inModule && 1 & n2.flags && this.undefinedExports.delete(e3);
        }, t2.maybeExportDefined = function(e3, t3) {
          this.inModule && 1 & e3.flags && this.undefinedExports.delete(t3);
        }, t2.checkRedeclarationInScope = function(e3, t3, r2, n2) {
          this.isRedeclaredInScope(e3, t3, r2) && this.raise(n2, Em.VarRedeclaration, t3);
        }, t2.isRedeclaredInScope = function(e3, t3, r2) {
          return !!(1 & r2) && (8 & r2 ? e3.lexical.has(t3) || e3.functions.has(t3) || e3.var.has(t3) : 16 & r2 ? e3.lexical.has(t3) || !this.treatFunctionsAsVarInScope(e3) && e3.var.has(t3) : e3.lexical.has(t3) && !(8 & e3.flags && e3.lexical.values().next().value === t3) || !this.treatFunctionsAsVarInScope(e3) && e3.functions.has(t3));
        }, t2.checkLocalExport = function(e3) {
          var t3 = e3.name, r2 = this.scopeStack[0];
          r2.lexical.has(t3) || r2.var.has(t3) || r2.functions.has(t3) || this.undefinedExports.set(t3, e3.start);
        }, t2.currentScope = function() {
          return this.scopeStack[this.scopeStack.length - 1];
        }, t2.currentVarScopeFlags = function() {
          for (var e3 = this.scopeStack.length - 1; ; e3--) {
            var t3 = this.scopeStack[e3].flags;
            if (259 & t3)
              return t3;
          }
        }, t2.currentThisScopeFlags = function() {
          for (var e3 = this.scopeStack.length - 1; ; e3--) {
            var t3 = this.scopeStack[e3].flags;
            if (323 & t3 && !(4 & t3))
              return t3;
          }
        }, n(e2, [{ key: "inFunction", get: function() {
          return (2 & this.currentVarScopeFlags()) > 0;
        } }, { key: "allowSuper", get: function() {
          return (16 & this.currentThisScopeFlags()) > 0;
        } }, { key: "allowDirectSuper", get: function() {
          return (32 & this.currentThisScopeFlags()) > 0;
        } }, { key: "inClass", get: function() {
          return (this.currentThisScopeFlags() & Tm) > 0;
        } }, { key: "inClassAndNotInNonArrowFunction", get: function() {
          var e3 = this.currentThisScopeFlags();
          return (e3 & Tm) > 0 && (2 & e3) == 0;
        } }, { key: "inStaticBlock", get: function() {
          return (128 & this.currentThisScopeFlags()) > 0;
        } }, { key: "inNonArrowFunction", get: function() {
          return (2 & this.currentThisScopeFlags()) > 0;
        } }, { key: "treatFunctionsAsVar", get: function() {
          return this.treatFunctionsAsVarInScope(this.currentScope());
        } }]), e2;
      }(), _m = function(e2) {
        function t2() {
          for (var t3, r2 = arguments.length, n2 = new Array(r2), s2 = 0; s2 < r2; s2++)
            n2[s2] = arguments[s2];
          return (t3 = e2.call.apply(e2, [this].concat(n2)) || this).declareFunctions = new Set(), t3;
        }
        return s(t2, e2), t2;
      }(Nm), Lm = function(e2) {
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.createScope = function(e3) {
          return new _m(e3);
        }, r2.declareName = function(t3, r3, n2) {
          var s2 = this.currentScope();
          if (r3 & Om)
            return this.checkRedeclarationInScope(s2, t3, r3, n2), this.maybeExportDefined(s2, t3), void s2.declareFunctions.add(t3);
          e2.prototype.declareName.apply(this, arguments);
        }, r2.isRedeclaredInScope = function(t3, r3, n2) {
          return !!e2.prototype.isRedeclaredInScope.apply(this, arguments) || !!(n2 & Om) && (!t3.declareFunctions.has(r3) && (t3.lexical.has(r3) || t3.functions.has(r3)));
        }, r2.checkLocalExport = function(t3) {
          this.scopeStack[0].declareFunctions.has(t3.name) || e2.prototype.checkLocalExport.call(this, t3);
        }, t2;
      }(Bm), Mm = new Set(["_", "any", "bool", "boolean", "empty", "extends", "false", "interface", "mixed", "null", "number", "static", "string", "true", "typeof", "void"]), Um = Dm({ AmbiguousConditionalArrow: "Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.", AmbiguousDeclareModuleKind: "Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.", AssignReservedType: "Cannot overwrite reserved type %0.", DeclareClassElement: "The `declare` modifier can only appear on class fields.", DeclareClassFieldInitializer: "Initializers are not allowed in fields with the `declare` modifier.", DuplicateDeclareModuleExports: "Duplicate `declare module.exports` statement.", EnumBooleanMemberNotInitialized: "Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.", EnumDuplicateMemberName: "Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.", EnumInconsistentMemberValues: "Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.", EnumInvalidExplicitType: "Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.", EnumInvalidExplicitTypeUnknownSupplied: "Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.", EnumInvalidMemberInitializerPrimaryType: "Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.", EnumInvalidMemberInitializerSymbolType: "Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.", EnumInvalidMemberInitializerUnknownType: "The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.", EnumInvalidMemberName: "Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.", EnumNumberMemberNotInitialized: "Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.", EnumStringMemberInconsistentlyInitailized: "String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.", GetterMayNotHaveThisParam: "A getter cannot have a `this` parameter.", ImportTypeShorthandOnlyInPureImport: "The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.", InexactInsideExact: "Explicit inexact syntax cannot appear inside an explicit exact object type.", InexactInsideNonObject: "Explicit inexact syntax cannot appear in class or interface definitions.", InexactVariance: "Explicit inexact syntax cannot have variance.", InvalidNonTypeImportInDeclareModule: "Imports within a `declare module` body must always be `import type` or `import typeof`.", MissingTypeParamDefault: "Type parameter declaration needs a default, since a preceding type parameter declaration has a default.", NestedDeclareModule: "`declare module` cannot be used inside another `declare module`.", NestedFlowComment: "Cannot have a flow comment inside another flow comment.", OptionalBindingPattern: "A binding pattern parameter cannot be optional in an implementation signature.", SetterMayNotHaveThisParam: "A setter cannot have a `this` parameter.", SpreadVariance: "Spread properties cannot have variance.", ThisParamAnnotationRequired: "A type annotation is required for the `this` parameter.", ThisParamBannedInConstructor: "Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.", ThisParamMayNotBeOptional: "The `this` parameter cannot be optional.", ThisParamMustBeFirst: "The `this` parameter must be the first function parameter.", ThisParamNoDefault: "The `this` parameter may not have a default value.", TypeBeforeInitializer: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.", TypeCastInPattern: "The type cast expression is expected to be wrapped with parenthesis.", UnexpectedExplicitInexactInObject: "Explicit inexact syntax must appear at the end of an inexact object.", UnexpectedReservedType: "Unexpected reserved type %0.", UnexpectedReservedUnderscore: "`_` is only allowed as a type argument to call or new.", UnexpectedSpaceBetweenModuloChecks: "Spaces between `%` and `checks` are not allowed here.", UnexpectedSpreadType: "Spread operator cannot appear in class or interface definitions.", UnexpectedSubtractionOperand: 'Unexpected token, expected "number" or "bigint".', UnexpectedTokenAfterTypeParameter: "Expected an arrow function after this type parameter declaration.", UnexpectedTypeParameterBeforeAsyncArrowFunction: "Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.", UnsupportedDeclareExportKind: "`declare export %0` is not supported. Use `%1` instead.", UnsupportedStatementInDeclareModule: "Only declares and type imports are allowed inside declare module.", UnterminatedFlowComment: "Unterminated flow-comment." }, bm.SyntaxError);
      function Gm(e2) {
        return e2.importKind === "type" || e2.importKind === "typeof";
      }
      function Vm(e2) {
        return (e2.type === lm.name || !!e2.type.keyword) && e2.value !== "from";
      }
      var Wm = { const: "declare export var", let: "declare export var", type: "export type", interface: "export interface" };
      var Hm = /\*?\s*@((?:no)?flow)\b/, Xm = { quot: '"', amp: "&", apos: "'", lt: "<", gt: ">", nbsp: "\xA0", iexcl: "\xA1", cent: "\xA2", pound: "\xA3", curren: "\xA4", yen: "\xA5", brvbar: "\xA6", sect: "\xA7", uml: "\xA8", copy: "\xA9", ordf: "\xAA", laquo: "\xAB", not: "\xAC", shy: "\xAD", reg: "\xAE", macr: "\xAF", deg: "\xB0", plusmn: "\xB1", sup2: "\xB2", sup3: "\xB3", acute: "\xB4", micro: "\xB5", para: "\xB6", middot: "\xB7", cedil: "\xB8", sup1: "\xB9", ordm: "\xBA", raquo: "\xBB", frac14: "\xBC", frac12: "\xBD", frac34: "\xBE", iquest: "\xBF", Agrave: "\xC0", Aacute: "\xC1", Acirc: "\xC2", Atilde: "\xC3", Auml: "\xC4", Aring: "\xC5", AElig: "\xC6", Ccedil: "\xC7", Egrave: "\xC8", Eacute: "\xC9", Ecirc: "\xCA", Euml: "\xCB", Igrave: "\xCC", Iacute: "\xCD", Icirc: "\xCE", Iuml: "\xCF", ETH: "\xD0", Ntilde: "\xD1", Ograve: "\xD2", Oacute: "\xD3", Ocirc: "\xD4", Otilde: "\xD5", Ouml: "\xD6", times: "\xD7", Oslash: "\xD8", Ugrave: "\xD9", Uacute: "\xDA", Ucirc: "\xDB", Uuml: "\xDC", Yacute: "\xDD", THORN: "\xDE", szlig: "\xDF", agrave: "\xE0", aacute: "\xE1", acirc: "\xE2", atilde: "\xE3", auml: "\xE4", aring: "\xE5", aelig: "\xE6", ccedil: "\xE7", egrave: "\xE8", eacute: "\xE9", ecirc: "\xEA", euml: "\xEB", igrave: "\xEC", iacute: "\xED", icirc: "\xEE", iuml: "\xEF", eth: "\xF0", ntilde: "\xF1", ograve: "\xF2", oacute: "\xF3", ocirc: "\xF4", otilde: "\xF5", ouml: "\xF6", divide: "\xF7", oslash: "\xF8", ugrave: "\xF9", uacute: "\xFA", ucirc: "\xFB", uuml: "\xFC", yacute: "\xFD", thorn: "\xFE", yuml: "\xFF", OElig: "\u0152", oelig: "\u0153", Scaron: "\u0160", scaron: "\u0161", Yuml: "\u0178", fnof: "\u0192", circ: "\u02C6", tilde: "\u02DC", Alpha: "\u0391", Beta: "\u0392", Gamma: "\u0393", Delta: "\u0394", Epsilon: "\u0395", Zeta: "\u0396", Eta: "\u0397", Theta: "\u0398", Iota: "\u0399", Kappa: "\u039A", Lambda: "\u039B", Mu: "\u039C", Nu: "\u039D", Xi: "\u039E", Omicron: "\u039F", Pi: "\u03A0", Rho: "\u03A1", Sigma: "\u03A3", Tau: "\u03A4", Upsilon: "\u03A5", Phi: "\u03A6", Chi: "\u03A7", Psi: "\u03A8", Omega: "\u03A9", alpha: "\u03B1", beta: "\u03B2", gamma: "\u03B3", delta: "\u03B4", epsilon: "\u03B5", zeta: "\u03B6", eta: "\u03B7", theta: "\u03B8", iota: "\u03B9", kappa: "\u03BA", lambda: "\u03BB", mu: "\u03BC", nu: "\u03BD", xi: "\u03BE", omicron: "\u03BF", pi: "\u03C0", rho: "\u03C1", sigmaf: "\u03C2", sigma: "\u03C3", tau: "\u03C4", upsilon: "\u03C5", phi: "\u03C6", chi: "\u03C7", psi: "\u03C8", omega: "\u03C9", thetasym: "\u03D1", upsih: "\u03D2", piv: "\u03D6", ensp: "\u2002", emsp: "\u2003", thinsp: "\u2009", zwnj: "\u200C", zwj: "\u200D", lrm: "\u200E", rlm: "\u200F", ndash: "\u2013", mdash: "\u2014", lsquo: "\u2018", rsquo: "\u2019", sbquo: "\u201A", ldquo: "\u201C", rdquo: "\u201D", bdquo: "\u201E", dagger: "\u2020", Dagger: "\u2021", bull: "\u2022", hellip: "\u2026", permil: "\u2030", prime: "\u2032", Prime: "\u2033", lsaquo: "\u2039", rsaquo: "\u203A", oline: "\u203E", frasl: "\u2044", euro: "\u20AC", image: "\u2111", weierp: "\u2118", real: "\u211C", trade: "\u2122", alefsym: "\u2135", larr: "\u2190", uarr: "\u2191", rarr: "\u2192", darr: "\u2193", harr: "\u2194", crarr: "\u21B5", lArr: "\u21D0", uArr: "\u21D1", rArr: "\u21D2", dArr: "\u21D3", hArr: "\u21D4", forall: "\u2200", part: "\u2202", exist: "\u2203", empty: "\u2205", nabla: "\u2207", isin: "\u2208", notin: "\u2209", ni: "\u220B", prod: "\u220F", sum: "\u2211", minus: "\u2212", lowast: "\u2217", radic: "\u221A", prop: "\u221D", infin: "\u221E", ang: "\u2220", and: "\u2227", or: "\u2228", cap: "\u2229", cup: "\u222A", int: "\u222B", there4: "\u2234", sim: "\u223C", cong: "\u2245", asymp: "\u2248", ne: "\u2260", equiv: "\u2261", le: "\u2264", ge: "\u2265", sub: "\u2282", sup: "\u2283", nsub: "\u2284", sube: "\u2286", supe: "\u2287", oplus: "\u2295", otimes: "\u2297", perp: "\u22A5", sdot: "\u22C5", lceil: "\u2308", rceil: "\u2309", lfloor: "\u230A", rfloor: "\u230B", lang: "\u2329", rang: "\u232A", loz: "\u25CA", spades: "\u2660", clubs: "\u2663", hearts: "\u2665", diams: "\u2666" }, qm = function() {
        function e2() {
          this.strict = void 0, this.curLine = void 0, this.startLoc = void 0, this.endLoc = void 0, this.errors = [], this.potentialArrowAt = -1, this.noArrowAt = [], this.noArrowParamsConversionAt = [], this.maybeInArrowParameters = false, this.inPipeline = false, this.inType = false, this.noAnonFunctionType = false, this.inPropertyName = false, this.hasFlowComment = false, this.isAmbientContext = false, this.inAbstractClass = false, this.topicContext = { maxNumOfResolvableTopics: 0, maxTopicIndex: null }, this.soloAwait = false, this.inFSharpPipelineDirectBody = false, this.labels = [], this.decoratorStack = [[]], this.comments = [], this.trailingComments = [], this.leadingComments = [], this.commentStack = [], this.commentPreviousNode = null, this.pos = 0, this.lineStart = 0, this.type = lm.eof, this.value = null, this.start = 0, this.end = 0, this.lastTokEndLoc = null, this.lastTokStartLoc = null, this.lastTokStart = 0, this.lastTokEnd = 0, this.context = [Cm.brace], this.exprAllowed = true, this.containsEsc = false, this.strictErrors = new Map(), this.tokensLength = 0;
        }
        var t2 = e2.prototype;
        return t2.init = function(e3) {
          this.strict = e3.strictMode !== false && e3.sourceType === "module", this.curLine = e3.startLine, this.startLoc = this.endLoc = this.curPosition();
        }, t2.curPosition = function() {
          return new mm(this.curLine, this.pos - this.lineStart);
        }, t2.clone = function(t3) {
          for (var r2 = new e2(), n2 = Object.keys(this), s2 = 0, a2 = n2.length; s2 < a2; s2++) {
            var i2 = n2[s2], o2 = this[i2];
            !t3 && Array.isArray(o2) && (o2 = o2.slice()), r2[i2] = o2;
          }
          return r2;
        }, e2;
      }(), $m = /^[\da-fA-F]+$/, Km = /^\d+$/, zm = Dm({ AttributeIsEmpty: "JSX attributes must only be assigned a non-empty expression.", MissingClosingTagElement: "Expected corresponding JSX closing tag for <%0>.", MissingClosingTagFragment: "Expected corresponding JSX closing tag for <>.", UnexpectedSequenceExpression: "Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?", UnsupportedJsxValue: "JSX value should be either an expression or a quoted JSX text.", UnterminatedJsxContent: "Unterminated JSX contents.", UnwrappedAdjacentJSXElements: "Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?" }, bm.SyntaxError);
      function Jm(e2) {
        return !!e2 && (e2.type === "JSXOpeningFragment" || e2.type === "JSXClosingFragment");
      }
      function Ym(e2) {
        if (e2.type === "JSXIdentifier")
          return e2.name;
        if (e2.type === "JSXNamespacedName")
          return e2.namespace.name + ":" + e2.name.name;
        if (e2.type === "JSXMemberExpression")
          return Ym(e2.object) + "." + Ym(e2.property);
        throw new Error("Node had unexpected type: " + e2.type);
      }
      Cm.j_oTag = new wm("<tag"), Cm.j_cTag = new wm("</tag"), Cm.j_expr = new wm("<tag>...</tag>", true), lm.jsxName = new am("jsxName"), lm.jsxText = new am("jsxText", { beforeExpr: true }), lm.jsxTagStart = new am("jsxTagStart", { startsExpr: true }), lm.jsxTagEnd = new am("jsxTagEnd"), lm.jsxTagStart.updateContext = function(e2) {
        e2.push(Cm.j_expr, Cm.j_oTag);
      };
      var Qm = function(e2) {
        function t2() {
          for (var t3, r2 = arguments.length, n2 = new Array(r2), s2 = 0; s2 < r2; s2++)
            n2[s2] = arguments[s2];
          return (t3 = e2.call.apply(e2, [this].concat(n2)) || this).types = new Set(), t3.enums = new Set(), t3.constEnums = new Set(), t3.classes = new Set(), t3.exportOnlyBindings = new Set(), t3;
        }
        return s(t2, e2), t2;
      }(Nm), Zm = function(e2) {
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.createScope = function(e3) {
          return new Qm(e3);
        }, r2.declareName = function(t3, r3, n2) {
          var s2 = this.currentScope();
          if (r3 & km)
            return this.maybeExportDefined(s2, t3), void s2.exportOnlyBindings.add(t3);
          e2.prototype.declareName.apply(this, arguments), 2 & r3 && (1 & r3 || (this.checkRedeclarationInScope(s2, t3, r3, n2), this.maybeExportDefined(s2, t3)), s2.types.add(t3)), r3 & Im && s2.enums.add(t3), r3 & Fm && s2.constEnums.add(t3), r3 & Pm && s2.classes.add(t3);
        }, r2.isRedeclaredInScope = function(t3, r3, n2) {
          if (t3.enums.has(r3)) {
            if (n2 & Im) {
              var s2 = !!(n2 & Fm), a2 = t3.constEnums.has(r3);
              return s2 !== a2;
            }
            return true;
          }
          return n2 & Pm && t3.classes.has(r3) ? !!t3.lexical.has(r3) && !!(1 & n2) : !!(2 & n2 && t3.types.has(r3)) || e2.prototype.isRedeclaredInScope.apply(this, arguments);
        }, r2.checkLocalExport = function(t3) {
          var r3 = this.scopeStack[0], n2 = t3.name;
          r3.types.has(n2) || r3.exportOnlyBindings.has(n2) || e2.prototype.checkLocalExport.call(this, t3);
        }, t2;
      }(Bm), ey = function() {
        function e2() {
          this.stacks = [];
        }
        var t2 = e2.prototype;
        return t2.enter = function(e3) {
          this.stacks.push(e3);
        }, t2.exit = function() {
          this.stacks.pop();
        }, t2.currentFlags = function() {
          return this.stacks[this.stacks.length - 1];
        }, n(e2, [{ key: "hasAwait", get: function() {
          return (2 & this.currentFlags()) > 0;
        } }, { key: "hasYield", get: function() {
          return (1 & this.currentFlags()) > 0;
        } }, { key: "hasReturn", get: function() {
          return (4 & this.currentFlags()) > 0;
        } }, { key: "hasIn", get: function() {
          return (8 & this.currentFlags()) > 0;
        } }]), e2;
      }();
      function ty(e2, t2) {
        return (e2 ? 2 : 0) | (t2 ? 1 : 0);
      }
      function ry(e2) {
        if (e2 == null)
          throw new Error("Unexpected " + e2 + " value.");
        return e2;
      }
      function ny(e2) {
        if (!e2)
          throw new Error("Assert fail");
      }
      var sy = Dm({ AbstractMethodHasImplementation: "Method '%0' cannot have an implementation because it is marked abstract.", AccesorCannotDeclareThisParameter: "'get' and 'set' accessors cannot declare 'this' parameters.", AccesorCannotHaveTypeParameters: "An accessor cannot have type parameters.", ClassMethodHasDeclare: "Class methods cannot have the 'declare' modifier.", ClassMethodHasReadonly: "Class methods cannot have the 'readonly' modifier.", ConstructorHasTypeParameters: "Type parameters cannot appear on a constructor declaration.", DeclareAccessor: "'declare' is not allowed in %0ters.", DeclareClassFieldHasInitializer: "Initializers are not allowed in ambient contexts.", DeclareFunctionHasImplementation: "An implementation cannot be declared in ambient contexts.", DuplicateAccessibilityModifier: "Accessibility modifier already seen.", DuplicateModifier: "Duplicate modifier: '%0'.", EmptyHeritageClauseType: "'%0' list cannot be empty.", EmptyTypeArguments: "Type argument list cannot be empty.", EmptyTypeParameters: "Type parameter list cannot be empty.", ExpectedAmbientAfterExportDeclare: "'export declare' must be followed by an ambient declaration.", ImportAliasHasImportType: "An import alias can not use 'import type'.", IncompatibleModifiers: "'%0' modifier cannot be used with '%1' modifier.", IndexSignatureHasAbstract: "Index signatures cannot have the 'abstract' modifier.", IndexSignatureHasAccessibility: "Index signatures cannot have an accessibility modifier ('%0').", IndexSignatureHasDeclare: "Index signatures cannot have the 'declare' modifier.", IndexSignatureHasOverride: "'override' modifier cannot appear on an index signature.", IndexSignatureHasStatic: "Index signatures cannot have the 'static' modifier.", InvalidModifierOnTypeMember: "'%0' modifier cannot appear on a type member.", InvalidModifiersOrder: "'%0' modifier must precede '%1' modifier.", InvalidTupleMemberLabel: "Tuple members must be labeled with a simple identifier.", MixedLabeledAndUnlabeledElements: "Tuple members must all have names or all not have names.", NonAbstractClassHasAbstractMethod: "Abstract methods can only appear within an abstract class.", NonClassMethodPropertyHasAbstractModifer: "'abstract' modifier can only appear on a class, method, or property declaration.", OptionalTypeBeforeRequired: "A required element cannot follow an optional element.", OverrideNotInSubClass: "This member cannot have an 'override' modifier because its containing class does not extend another class.", PatternIsOptional: "A binding pattern parameter cannot be optional in an implementation signature.", PrivateElementHasAbstract: "Private elements cannot have the 'abstract' modifier.", PrivateElementHasAccessibility: "Private elements cannot have an accessibility modifier ('%0').", ReadonlyForMethodSignature: "'readonly' modifier can only appear on a property declaration or index signature.", SetAccesorCannotHaveOptionalParameter: "A 'set' accessor cannot have an optional parameter.", SetAccesorCannotHaveRestParameter: "A 'set' accessor cannot have rest parameter.", SetAccesorCannotHaveReturnType: "A 'set' accessor cannot have a return type annotation.", StaticBlockCannotHaveModifier: "Static class blocks cannot have any modifier.", TypeAnnotationAfterAssign: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.", TypeImportCannotSpecifyDefaultAndNamed: "A type-only import can specify a default import or named bindings, but not both.", UnexpectedParameterModifier: "A parameter property is only allowed in a constructor implementation.", UnexpectedReadonly: "'readonly' type modifier is only permitted on array and tuple literal types.", UnexpectedTypeAnnotation: "Did not expect a type annotation here.", UnexpectedTypeCastInParameter: "Unexpected type cast in parameter position.", UnsupportedImportTypeArgument: "Argument in a type import must be a string literal.", UnsupportedParameterPropertyKind: "A parameter property may not be declared using a binding pattern.", UnsupportedSignatureParameterKind: "Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0." }, bm.SyntaxError);
      function ay(e2) {
        return e2 === "private" || e2 === "public" || e2 === "protected";
      }
      lm.placeholder = new am("%%", { startsExpr: true });
      var iy = Dm({ ClassNameIsRequired: "A class name is required." }, bm.SyntaxError);
      function oy(e2, t2) {
        return e2.some(function(e3) {
          return Array.isArray(e3) ? e3[0] === t2 : e3 === t2;
        });
      }
      function uy(e2, t2, r2) {
        var n2 = e2.find(function(e3) {
          return Array.isArray(e3) ? e3[0] === t2 : e3 === t2;
        });
        return n2 && Array.isArray(n2) ? n2[1][r2] : null;
      }
      var ly = ["minimal", "smart", "fsharp"], cy = ["hash", "bar"];
      var py = { estree: function(e2) {
        return function(e3) {
          function t2() {
            return e3.apply(this, arguments) || this;
          }
          s(t2, e3);
          var r2 = t2.prototype;
          return r2.parseRegExpLiteral = function(e4) {
            var t3 = e4.pattern, r3 = e4.flags, n2 = null;
            try {
              n2 = new RegExp(t3, r3);
            } catch (e5) {
            }
            var s2 = this.estreeParseLiteral(n2);
            return s2.regex = { pattern: t3, flags: r3 }, s2;
          }, r2.parseBigIntLiteral = function(e4) {
            var t3;
            try {
              t3 = BigInt(e4);
            } catch (e5) {
              t3 = null;
            }
            var r3 = this.estreeParseLiteral(t3);
            return r3.bigint = String(r3.value || e4), r3;
          }, r2.parseDecimalLiteral = function(e4) {
            var t3 = this.estreeParseLiteral(null);
            return t3.decimal = String(t3.value || e4), t3;
          }, r2.estreeParseLiteral = function(e4) {
            return this.parseLiteral(e4, "Literal");
          }, r2.parseStringLiteral = function(e4) {
            return this.estreeParseLiteral(e4);
          }, r2.parseNumericLiteral = function(e4) {
            return this.estreeParseLiteral(e4);
          }, r2.parseNullLiteral = function() {
            return this.estreeParseLiteral(null);
          }, r2.parseBooleanLiteral = function(e4) {
            return this.estreeParseLiteral(e4);
          }, r2.directiveToStmt = function(e4) {
            var t3 = e4.value, r3 = this.startNodeAt(e4.start, e4.loc.start), n2 = this.startNodeAt(t3.start, t3.loc.start);
            return n2.value = t3.extra.expressionValue, n2.raw = t3.extra.raw, r3.expression = this.finishNodeAt(n2, "Literal", t3.end, t3.loc.end), r3.directive = t3.extra.raw.slice(1, -1), this.finishNodeAt(r3, "ExpressionStatement", e4.end, e4.loc.end);
          }, r2.initFunction = function(t3, r3) {
            e3.prototype.initFunction.call(this, t3, r3), t3.expression = false;
          }, r2.checkDeclaration = function(t3) {
            t3 != null && this.isObjectProperty(t3) ? this.checkDeclaration(t3.value) : e3.prototype.checkDeclaration.call(this, t3);
          }, r2.getObjectOrClassMethodParams = function(e4) {
            return e4.value.params;
          }, r2.isValidDirective = function(e4) {
            var t3;
            return e4.type === "ExpressionStatement" && e4.expression.type === "Literal" && typeof e4.expression.value == "string" && !((t3 = e4.expression.extra) != null && t3.parenthesized);
          }, r2.stmtToDirective = function(t3) {
            var r3 = e3.prototype.stmtToDirective.call(this, t3), n2 = t3.expression.value;
            return this.addExtra(r3.value, "expressionValue", n2), r3;
          }, r2.parseBlockBody = function(t3) {
            for (var r3, n2 = this, s2 = arguments.length, a2 = new Array(s2 > 1 ? s2 - 1 : 0), i2 = 1; i2 < s2; i2++)
              a2[i2 - 1] = arguments[i2];
            (r3 = e3.prototype.parseBlockBody).call.apply(r3, [this, t3].concat(a2));
            var o2 = t3.directives.map(function(e4) {
              return n2.directiveToStmt(e4);
            });
            t3.body = o2.concat(t3.body), delete t3.directives;
          }, r2.pushClassMethod = function(e4, t3, r3, n2, s2, a2) {
            this.parseMethod(t3, r3, n2, s2, a2, "ClassMethod", true), t3.typeParameters && (t3.value.typeParameters = t3.typeParameters, delete t3.typeParameters), e4.body.push(t3);
          }, r2.parseMaybePrivateName = function() {
            for (var t3, r3 = arguments.length, n2 = new Array(r3), s2 = 0; s2 < r3; s2++)
              n2[s2] = arguments[s2];
            var a2 = (t3 = e3.prototype.parseMaybePrivateName).call.apply(t3, [this].concat(n2));
            return a2.type === "PrivateName" && this.getPluginOption("estree", "classFeatures") ? this.convertPrivateNameToPrivateIdentifier(a2) : a2;
          }, r2.convertPrivateNameToPrivateIdentifier = function(t3) {
            var r3 = e3.prototype.getPrivateNameSV.call(this, t3);
            return delete (t3 = t3).id, t3.name = r3, t3.type = "PrivateIdentifier", t3;
          }, r2.isPrivateName = function(t3) {
            return this.getPluginOption("estree", "classFeatures") ? t3.type === "PrivateIdentifier" : e3.prototype.isPrivateName.call(this, t3);
          }, r2.getPrivateNameSV = function(t3) {
            return this.getPluginOption("estree", "classFeatures") ? t3.name : e3.prototype.getPrivateNameSV.call(this, t3);
          }, r2.parseLiteral = function(t3, r3) {
            var n2 = e3.prototype.parseLiteral.call(this, t3, r3);
            return n2.raw = n2.extra.raw, delete n2.extra, n2;
          }, r2.parseFunctionBody = function(t3, r3, n2) {
            n2 === void 0 && (n2 = false), e3.prototype.parseFunctionBody.call(this, t3, r3, n2), t3.expression = t3.body.type !== "BlockStatement";
          }, r2.parseMethod = function(t3, r3, n2, s2, a2, i2, o2) {
            o2 === void 0 && (o2 = false);
            var u2 = this.startNode();
            return u2.kind = t3.kind, (u2 = e3.prototype.parseMethod.call(this, u2, r3, n2, s2, a2, i2, o2)).type = "FunctionExpression", delete u2.kind, t3.value = u2, i2 === "ClassPrivateMethod" && (t3.computed = false), i2 = "MethodDefinition", this.finishNode(t3, i2);
          }, r2.parseClassProperty = function() {
            for (var t3, r3 = arguments.length, n2 = new Array(r3), s2 = 0; s2 < r3; s2++)
              n2[s2] = arguments[s2];
            var a2 = (t3 = e3.prototype.parseClassProperty).call.apply(t3, [this].concat(n2));
            return this.getPluginOption("estree", "classFeatures") && (a2.type = "PropertyDefinition"), a2;
          }, r2.parseClassPrivateProperty = function() {
            for (var t3, r3 = arguments.length, n2 = new Array(r3), s2 = 0; s2 < r3; s2++)
              n2[s2] = arguments[s2];
            var a2 = (t3 = e3.prototype.parseClassPrivateProperty).call.apply(t3, [this].concat(n2));
            return this.getPluginOption("estree", "classFeatures") && (a2.type = "PropertyDefinition", a2.computed = false), a2;
          }, r2.parseObjectMethod = function(t3, r3, n2, s2, a2) {
            var i2 = e3.prototype.parseObjectMethod.call(this, t3, r3, n2, s2, a2);
            return i2 && (i2.type = "Property", i2.kind === "method" && (i2.kind = "init"), i2.shorthand = false), i2;
          }, r2.parseObjectProperty = function(t3, r3, n2, s2, a2) {
            var i2 = e3.prototype.parseObjectProperty.call(this, t3, r3, n2, s2, a2);
            return i2 && (i2.kind = "init", i2.type = "Property"), i2;
          }, r2.toAssignable = function(t3, r3) {
            return r3 === void 0 && (r3 = false), t3 != null && this.isObjectProperty(t3) ? (this.toAssignable(t3.value, r3), t3) : e3.prototype.toAssignable.call(this, t3, r3);
          }, r2.toAssignableObjectExpressionProp = function(t3) {
            if (t3.kind === "get" || t3.kind === "set")
              this.raise(t3.key.start, Em.PatternHasAccessor);
            else if (t3.method)
              this.raise(t3.key.start, Em.PatternHasMethod);
            else {
              for (var r3, n2 = arguments.length, s2 = new Array(n2 > 1 ? n2 - 1 : 0), a2 = 1; a2 < n2; a2++)
                s2[a2 - 1] = arguments[a2];
              (r3 = e3.prototype.toAssignableObjectExpressionProp).call.apply(r3, [this, t3].concat(s2));
            }
          }, r2.finishCallExpression = function(t3, r3) {
            if (e3.prototype.finishCallExpression.call(this, t3, r3), t3.callee.type === "Import") {
              var n2;
              if (t3.type = "ImportExpression", t3.source = t3.arguments[0], this.hasPlugin("importAssertions"))
                t3.attributes = (n2 = t3.arguments[1]) != null ? n2 : null;
              delete t3.arguments, delete t3.callee;
            }
            return t3;
          }, r2.toReferencedArguments = function(t3) {
            t3.type !== "ImportExpression" && e3.prototype.toReferencedArguments.call(this, t3);
          }, r2.parseExport = function(t3) {
            switch (e3.prototype.parseExport.call(this, t3), t3.type) {
              case "ExportAllDeclaration":
                t3.exported = null;
                break;
              case "ExportNamedDeclaration":
                t3.specifiers.length === 1 && t3.specifiers[0].type === "ExportNamespaceSpecifier" && (t3.type = "ExportAllDeclaration", t3.exported = t3.specifiers[0].exported, delete t3.specifiers);
            }
            return t3;
          }, r2.parseSubscript = function(t3, r3, n2, s2, a2) {
            var i2 = e3.prototype.parseSubscript.call(this, t3, r3, n2, s2, a2);
            if (a2.optionalChainMember) {
              if (i2.type !== "OptionalMemberExpression" && i2.type !== "OptionalCallExpression" || (i2.type = i2.type.substring(8)), a2.stop) {
                var o2 = this.startNodeAtNode(i2);
                return o2.expression = i2, this.finishNode(o2, "ChainExpression");
              }
            } else
              i2.type !== "MemberExpression" && i2.type !== "CallExpression" || (i2.optional = false);
            return i2;
          }, r2.hasPropertyAsPrivateName = function(t3) {
            return t3.type === "ChainExpression" && (t3 = t3.expression), e3.prototype.hasPropertyAsPrivateName.call(this, t3);
          }, r2.isOptionalChain = function(e4) {
            return e4.type === "ChainExpression";
          }, r2.isObjectProperty = function(e4) {
            return e4.type === "Property" && e4.kind === "init" && !e4.method;
          }, r2.isObjectMethod = function(e4) {
            return e4.method || e4.kind === "get" || e4.kind === "set";
          }, t2;
        }(e2);
      }, jsx: function(e2) {
        return function(e3) {
          function t2() {
            return e3.apply(this, arguments) || this;
          }
          s(t2, e3);
          var r2 = t2.prototype;
          return r2.jsxReadToken = function() {
            for (var t3 = "", r3 = this.state.pos; ; ) {
              if (this.state.pos >= this.length)
                throw this.raise(this.state.start, zm.UnterminatedJsxContent);
              var n2 = this.input.charCodeAt(this.state.pos);
              switch (n2) {
                case 60:
                case 123:
                  return this.state.pos === this.state.start ? n2 === 60 && this.state.exprAllowed ? (++this.state.pos, this.finishToken(lm.jsxTagStart)) : e3.prototype.getTokenFromCode.call(this, n2) : (t3 += this.input.slice(r3, this.state.pos), this.finishToken(lm.jsxText, t3));
                case 38:
                  t3 += this.input.slice(r3, this.state.pos), t3 += this.jsxReadEntity(), r3 = this.state.pos;
                  break;
                case 62:
                case 125:
                default:
                  dm(n2) ? (t3 += this.input.slice(r3, this.state.pos), t3 += this.jsxReadNewLine(true), r3 = this.state.pos) : ++this.state.pos;
              }
            }
          }, r2.jsxReadNewLine = function(e4) {
            var t3, r3 = this.input.charCodeAt(this.state.pos);
            return ++this.state.pos, r3 === 13 && this.input.charCodeAt(this.state.pos) === 10 ? (++this.state.pos, t3 = e4 ? "\n" : "\r\n") : t3 = String.fromCharCode(r3), ++this.state.curLine, this.state.lineStart = this.state.pos, t3;
          }, r2.jsxReadString = function(e4) {
            for (var t3 = "", r3 = ++this.state.pos; ; ) {
              if (this.state.pos >= this.length)
                throw this.raise(this.state.start, Em.UnterminatedString);
              var n2 = this.input.charCodeAt(this.state.pos);
              if (n2 === e4)
                break;
              n2 === 38 ? (t3 += this.input.slice(r3, this.state.pos), t3 += this.jsxReadEntity(), r3 = this.state.pos) : dm(n2) ? (t3 += this.input.slice(r3, this.state.pos), t3 += this.jsxReadNewLine(false), r3 = this.state.pos) : ++this.state.pos;
            }
            return t3 += this.input.slice(r3, this.state.pos++), this.finishToken(lm.string, t3);
          }, r2.jsxReadEntity = function() {
            for (var e4, t3 = "", r3 = 0, n2 = this.input[this.state.pos], s2 = ++this.state.pos; this.state.pos < this.length && r3++ < 10; ) {
              if ((n2 = this.input[this.state.pos++]) === ";") {
                t3[0] === "#" ? t3[1] === "x" ? (t3 = t3.substr(2), $m.test(t3) && (e4 = String.fromCodePoint(parseInt(t3, 16)))) : (t3 = t3.substr(1), Km.test(t3) && (e4 = String.fromCodePoint(parseInt(t3, 10)))) : e4 = Xm[t3];
                break;
              }
              t3 += n2;
            }
            return e4 || (this.state.pos = s2, "&");
          }, r2.jsxReadWord = function() {
            var e4, t3 = this.state.pos;
            do {
              e4 = this.input.charCodeAt(++this.state.pos);
            } while (gr(e4) || e4 === 45);
            return this.finishToken(lm.jsxName, this.input.slice(t3, this.state.pos));
          }, r2.jsxParseIdentifier = function() {
            var e4 = this.startNode();
            return this.match(lm.jsxName) ? e4.name = this.state.value : this.state.type.keyword ? e4.name = this.state.type.keyword : this.unexpected(), this.next(), this.finishNode(e4, "JSXIdentifier");
          }, r2.jsxParseNamespacedName = function() {
            var e4 = this.state.start, t3 = this.state.startLoc, r3 = this.jsxParseIdentifier();
            if (!this.eat(lm.colon))
              return r3;
            var n2 = this.startNodeAt(e4, t3);
            return n2.namespace = r3, n2.name = this.jsxParseIdentifier(), this.finishNode(n2, "JSXNamespacedName");
          }, r2.jsxParseElementName = function() {
            var e4 = this.state.start, t3 = this.state.startLoc, r3 = this.jsxParseNamespacedName();
            if (r3.type === "JSXNamespacedName")
              return r3;
            for (; this.eat(lm.dot); ) {
              var n2 = this.startNodeAt(e4, t3);
              n2.object = r3, n2.property = this.jsxParseIdentifier(), r3 = this.finishNode(n2, "JSXMemberExpression");
            }
            return r3;
          }, r2.jsxParseAttributeValue = function() {
            var e4;
            switch (this.state.type) {
              case lm.braceL:
                return e4 = this.startNode(), this.next(), (e4 = this.jsxParseExpressionContainer(e4)).expression.type === "JSXEmptyExpression" && this.raise(e4.start, zm.AttributeIsEmpty), e4;
              case lm.jsxTagStart:
              case lm.string:
                return this.parseExprAtom();
              default:
                throw this.raise(this.state.start, zm.UnsupportedJsxValue);
            }
          }, r2.jsxParseEmptyExpression = function() {
            var e4 = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);
            return this.finishNodeAt(e4, "JSXEmptyExpression", this.state.start, this.state.startLoc);
          }, r2.jsxParseSpreadChild = function(e4) {
            return this.next(), e4.expression = this.parseExpression(), this.expect(lm.braceR), this.finishNode(e4, "JSXSpreadChild");
          }, r2.jsxParseExpressionContainer = function(e4) {
            if (this.match(lm.braceR))
              e4.expression = this.jsxParseEmptyExpression();
            else {
              var t3 = this.parseExpression();
              e4.expression = t3;
            }
            return this.expect(lm.braceR), this.finishNode(e4, "JSXExpressionContainer");
          }, r2.jsxParseAttribute = function() {
            var e4 = this.startNode();
            return this.eat(lm.braceL) ? (this.expect(lm.ellipsis), e4.argument = this.parseMaybeAssignAllowIn(), this.expect(lm.braceR), this.finishNode(e4, "JSXSpreadAttribute")) : (e4.name = this.jsxParseNamespacedName(), e4.value = this.eat(lm.eq) ? this.jsxParseAttributeValue() : null, this.finishNode(e4, "JSXAttribute"));
          }, r2.jsxParseOpeningElementAt = function(e4, t3) {
            var r3 = this.startNodeAt(e4, t3);
            return this.match(lm.jsxTagEnd) ? (this.expect(lm.jsxTagEnd), this.finishNode(r3, "JSXOpeningFragment")) : (r3.name = this.jsxParseElementName(), this.jsxParseOpeningElementAfterName(r3));
          }, r2.jsxParseOpeningElementAfterName = function(e4) {
            for (var t3 = []; !this.match(lm.slash) && !this.match(lm.jsxTagEnd); )
              t3.push(this.jsxParseAttribute());
            return e4.attributes = t3, e4.selfClosing = this.eat(lm.slash), this.expect(lm.jsxTagEnd), this.finishNode(e4, "JSXOpeningElement");
          }, r2.jsxParseClosingElementAt = function(e4, t3) {
            var r3 = this.startNodeAt(e4, t3);
            return this.match(lm.jsxTagEnd) ? (this.expect(lm.jsxTagEnd), this.finishNode(r3, "JSXClosingFragment")) : (r3.name = this.jsxParseElementName(), this.expect(lm.jsxTagEnd), this.finishNode(r3, "JSXClosingElement"));
          }, r2.jsxParseElementAt = function(e4, t3) {
            var r3 = this.startNodeAt(e4, t3), n2 = [], s2 = this.jsxParseOpeningElementAt(e4, t3), a2 = null;
            if (!s2.selfClosing) {
              e:
                for (; ; )
                  switch (this.state.type) {
                    case lm.jsxTagStart:
                      if (e4 = this.state.start, t3 = this.state.startLoc, this.next(), this.eat(lm.slash)) {
                        a2 = this.jsxParseClosingElementAt(e4, t3);
                        break e;
                      }
                      n2.push(this.jsxParseElementAt(e4, t3));
                      break;
                    case lm.jsxText:
                      n2.push(this.parseExprAtom());
                      break;
                    case lm.braceL:
                      var i2 = this.startNode();
                      this.next(), this.match(lm.ellipsis) ? n2.push(this.jsxParseSpreadChild(i2)) : n2.push(this.jsxParseExpressionContainer(i2));
                      break;
                    default:
                      throw this.unexpected();
                  }
              Jm(s2) && !Jm(a2) ? this.raise(a2.start, zm.MissingClosingTagFragment) : !Jm(s2) && Jm(a2) ? this.raise(a2.start, zm.MissingClosingTagElement, Ym(s2.name)) : Jm(s2) || Jm(a2) || Ym(a2.name) !== Ym(s2.name) && this.raise(a2.start, zm.MissingClosingTagElement, Ym(s2.name));
            }
            if (Jm(s2) ? (r3.openingFragment = s2, r3.closingFragment = a2) : (r3.openingElement = s2, r3.closingElement = a2), r3.children = n2, this.isRelational("<"))
              throw this.raise(this.state.start, zm.UnwrappedAdjacentJSXElements);
            return Jm(s2) ? this.finishNode(r3, "JSXFragment") : this.finishNode(r3, "JSXElement");
          }, r2.jsxParseElement = function() {
            var e4 = this.state.start, t3 = this.state.startLoc;
            return this.next(), this.jsxParseElementAt(e4, t3);
          }, r2.parseExprAtom = function(t3) {
            return this.match(lm.jsxText) ? this.parseLiteral(this.state.value, "JSXText") : this.match(lm.jsxTagStart) ? this.jsxParseElement() : this.isRelational("<") && this.input.charCodeAt(this.state.pos) !== 33 ? (this.finishToken(lm.jsxTagStart), this.jsxParseElement()) : e3.prototype.parseExprAtom.call(this, t3);
          }, r2.createLookaheadState = function(t3) {
            var r3 = e3.prototype.createLookaheadState.call(this, t3);
            return r3.inPropertyName = t3.inPropertyName, r3;
          }, r2.getTokenFromCode = function(t3) {
            if (this.state.inPropertyName)
              return e3.prototype.getTokenFromCode.call(this, t3);
            var r3 = this.curContext();
            if (r3 === Cm.j_expr)
              return this.jsxReadToken();
            if (r3 === Cm.j_oTag || r3 === Cm.j_cTag) {
              if (yr(t3))
                return this.jsxReadWord();
              if (t3 === 62)
                return ++this.state.pos, this.finishToken(lm.jsxTagEnd);
              if ((t3 === 34 || t3 === 39) && r3 === Cm.j_oTag)
                return this.jsxReadString(t3);
            }
            return t3 === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33 ? (++this.state.pos, this.finishToken(lm.jsxTagStart)) : e3.prototype.getTokenFromCode.call(this, t3);
          }, r2.updateContext = function(t3) {
            e3.prototype.updateContext.call(this, t3);
            var r3 = this.state, n2 = r3.context, s2 = r3.type;
            if (s2 === lm.slash && t3 === lm.jsxTagStart)
              n2.splice(-2, 2, Cm.j_cTag), this.state.exprAllowed = false;
            else if (s2 === lm.jsxTagEnd) {
              var a2 = n2.pop();
              a2 === Cm.j_oTag && t3 === lm.slash || a2 === Cm.j_cTag ? (n2.pop(), this.state.exprAllowed = n2[n2.length - 1] === Cm.j_expr) : this.state.exprAllowed = true;
            } else
              !s2.keyword || t3 !== lm.dot && t3 !== lm.questionDot ? this.state.exprAllowed = s2.beforeExpr : this.state.exprAllowed = false;
          }, t2;
        }(e2);
      }, flow: function(e2) {
        return function(e3) {
          function t2() {
            for (var t3, r3 = arguments.length, n2 = new Array(r3), s2 = 0; s2 < r3; s2++)
              n2[s2] = arguments[s2];
            return (t3 = e3.call.apply(e3, [this].concat(n2)) || this).flowPragma = void 0, t3;
          }
          s(t2, e3);
          var r2 = t2.prototype;
          return r2.getScopeHandler = function() {
            return Lm;
          }, r2.shouldParseTypes = function() {
            return this.getPluginOption("flow", "all") || this.flowPragma === "flow";
          }, r2.shouldParseEnums = function() {
            return !!this.getPluginOption("flow", "enums");
          }, r2.finishToken = function(t3, r3) {
            return t3 !== lm.string && t3 !== lm.semi && t3 !== lm.interpreterDirective && this.flowPragma === void 0 && (this.flowPragma = null), e3.prototype.finishToken.call(this, t3, r3);
          }, r2.addComment = function(t3) {
            if (this.flowPragma === void 0) {
              var r3 = Hm.exec(t3.value);
              if (r3)
                if (r3[1] === "flow")
                  this.flowPragma = "flow";
                else {
                  if (r3[1] !== "noflow")
                    throw new Error("Unexpected flow pragma");
                  this.flowPragma = "noflow";
                }
              else
                ;
            }
            return e3.prototype.addComment.call(this, t3);
          }, r2.flowParseTypeInitialiser = function(e4) {
            var t3 = this.state.inType;
            this.state.inType = true, this.expect(e4 || lm.colon);
            var r3 = this.flowParseType();
            return this.state.inType = t3, r3;
          }, r2.flowParsePredicate = function() {
            var e4 = this.startNode(), t3 = this.state.start;
            return this.next(), this.expectContextual("checks"), this.state.lastTokStart > t3 + 1 && this.raise(t3, Um.UnexpectedSpaceBetweenModuloChecks), this.eat(lm.parenL) ? (e4.value = this.parseExpression(), this.expect(lm.parenR), this.finishNode(e4, "DeclaredPredicate")) : this.finishNode(e4, "InferredPredicate");
          }, r2.flowParseTypeAndPredicateInitialiser = function() {
            var e4 = this.state.inType;
            this.state.inType = true, this.expect(lm.colon);
            var t3 = null, r3 = null;
            return this.match(lm.modulo) ? (this.state.inType = e4, r3 = this.flowParsePredicate()) : (t3 = this.flowParseType(), this.state.inType = e4, this.match(lm.modulo) && (r3 = this.flowParsePredicate())), [t3, r3];
          }, r2.flowParseDeclareClass = function(e4) {
            return this.next(), this.flowParseInterfaceish(e4, true), this.finishNode(e4, "DeclareClass");
          }, r2.flowParseDeclareFunction = function(e4) {
            this.next();
            var t3 = e4.id = this.parseIdentifier(), r3 = this.startNode(), n2 = this.startNode();
            this.isRelational("<") ? r3.typeParameters = this.flowParseTypeParameterDeclaration() : r3.typeParameters = null, this.expect(lm.parenL);
            var s2 = this.flowParseFunctionTypeParams();
            r3.params = s2.params, r3.rest = s2.rest, r3.this = s2._this, this.expect(lm.parenR);
            var a2 = this.flowParseTypeAndPredicateInitialiser();
            return r3.returnType = a2[0], e4.predicate = a2[1], n2.typeAnnotation = this.finishNode(r3, "FunctionTypeAnnotation"), t3.typeAnnotation = this.finishNode(n2, "TypeAnnotation"), this.resetEndLocation(t3), this.semicolon(), this.scope.declareName(e4.id.name, 2048, e4.id.start), this.finishNode(e4, "DeclareFunction");
          }, r2.flowParseDeclare = function(e4, t3) {
            if (this.match(lm._class))
              return this.flowParseDeclareClass(e4);
            if (this.match(lm._function))
              return this.flowParseDeclareFunction(e4);
            if (this.match(lm._var))
              return this.flowParseDeclareVariable(e4);
            if (this.eatContextual("module"))
              return this.match(lm.dot) ? this.flowParseDeclareModuleExports(e4) : (t3 && this.raise(this.state.lastTokStart, Um.NestedDeclareModule), this.flowParseDeclareModule(e4));
            if (this.isContextual("type"))
              return this.flowParseDeclareTypeAlias(e4);
            if (this.isContextual("opaque"))
              return this.flowParseDeclareOpaqueType(e4);
            if (this.isContextual("interface"))
              return this.flowParseDeclareInterface(e4);
            if (this.match(lm._export))
              return this.flowParseDeclareExportDeclaration(e4, t3);
            throw this.unexpected();
          }, r2.flowParseDeclareVariable = function(e4) {
            return this.next(), e4.id = this.flowParseTypeAnnotatableIdentifier(true), this.scope.declareName(e4.id.name, 5, e4.id.start), this.semicolon(), this.finishNode(e4, "DeclareVariable");
          }, r2.flowParseDeclareModule = function(e4) {
            var t3 = this;
            this.scope.enter(0), this.match(lm.string) ? e4.id = this.parseExprAtom() : e4.id = this.parseIdentifier();
            var r3 = e4.body = this.startNode(), n2 = r3.body = [];
            for (this.expect(lm.braceL); !this.match(lm.braceR); ) {
              var s2 = this.startNode();
              this.match(lm._import) ? (this.next(), this.isContextual("type") || this.match(lm._typeof) || this.raise(this.state.lastTokStart, Um.InvalidNonTypeImportInDeclareModule), this.parseImport(s2)) : (this.expectContextual("declare", Um.UnsupportedStatementInDeclareModule), s2 = this.flowParseDeclare(s2, true)), n2.push(s2);
            }
            this.scope.exit(), this.expect(lm.braceR), this.finishNode(r3, "BlockStatement");
            var a2 = null, i2 = false;
            return n2.forEach(function(e5) {
              !function(e6) {
                return e6.type === "DeclareExportAllDeclaration" || e6.type === "DeclareExportDeclaration" && (!e6.declaration || e6.declaration.type !== "TypeAlias" && e6.declaration.type !== "InterfaceDeclaration");
              }(e5) ? e5.type === "DeclareModuleExports" && (i2 && t3.raise(e5.start, Um.DuplicateDeclareModuleExports), a2 === "ES" && t3.raise(e5.start, Um.AmbiguousDeclareModuleKind), a2 = "CommonJS", i2 = true) : (a2 === "CommonJS" && t3.raise(e5.start, Um.AmbiguousDeclareModuleKind), a2 = "ES");
            }), e4.kind = a2 || "CommonJS", this.finishNode(e4, "DeclareModule");
          }, r2.flowParseDeclareExportDeclaration = function(e4, t3) {
            if (this.expect(lm._export), this.eat(lm._default))
              return this.match(lm._function) || this.match(lm._class) ? e4.declaration = this.flowParseDeclare(this.startNode()) : (e4.declaration = this.flowParseType(), this.semicolon()), e4.default = true, this.finishNode(e4, "DeclareExportDeclaration");
            if (this.match(lm._const) || this.isLet() || (this.isContextual("type") || this.isContextual("interface")) && !t3) {
              var r3 = this.state.value, n2 = Wm[r3];
              throw this.raise(this.state.start, Um.UnsupportedDeclareExportKind, r3, n2);
            }
            if (this.match(lm._var) || this.match(lm._function) || this.match(lm._class) || this.isContextual("opaque"))
              return e4.declaration = this.flowParseDeclare(this.startNode()), e4.default = false, this.finishNode(e4, "DeclareExportDeclaration");
            if (this.match(lm.star) || this.match(lm.braceL) || this.isContextual("interface") || this.isContextual("type") || this.isContextual("opaque"))
              return (e4 = this.parseExport(e4)).type === "ExportNamedDeclaration" && (e4.type = "ExportDeclaration", e4.default = false, delete e4.exportKind), e4.type = "Declare" + e4.type, e4;
            throw this.unexpected();
          }, r2.flowParseDeclareModuleExports = function(e4) {
            return this.next(), this.expectContextual("exports"), e4.typeAnnotation = this.flowParseTypeAnnotation(), this.semicolon(), this.finishNode(e4, "DeclareModuleExports");
          }, r2.flowParseDeclareTypeAlias = function(e4) {
            return this.next(), this.flowParseTypeAlias(e4), e4.type = "DeclareTypeAlias", e4;
          }, r2.flowParseDeclareOpaqueType = function(e4) {
            return this.next(), this.flowParseOpaqueType(e4, true), e4.type = "DeclareOpaqueType", e4;
          }, r2.flowParseDeclareInterface = function(e4) {
            return this.next(), this.flowParseInterfaceish(e4), this.finishNode(e4, "DeclareInterface");
          }, r2.flowParseInterfaceish = function(e4, t3) {
            if (t3 === void 0 && (t3 = false), e4.id = this.flowParseRestrictedIdentifier(!t3, true), this.scope.declareName(e4.id.name, t3 ? 17 : 9, e4.id.start), this.isRelational("<") ? e4.typeParameters = this.flowParseTypeParameterDeclaration() : e4.typeParameters = null, e4.extends = [], e4.implements = [], e4.mixins = [], this.eat(lm._extends))
              do {
                e4.extends.push(this.flowParseInterfaceExtends());
              } while (!t3 && this.eat(lm.comma));
            if (this.isContextual("mixins")) {
              this.next();
              do {
                e4.mixins.push(this.flowParseInterfaceExtends());
              } while (this.eat(lm.comma));
            }
            if (this.isContextual("implements")) {
              this.next();
              do {
                e4.implements.push(this.flowParseInterfaceExtends());
              } while (this.eat(lm.comma));
            }
            e4.body = this.flowParseObjectType({ allowStatic: t3, allowExact: false, allowSpread: false, allowProto: t3, allowInexact: false });
          }, r2.flowParseInterfaceExtends = function() {
            var e4 = this.startNode();
            return e4.id = this.flowParseQualifiedTypeIdentifier(), this.isRelational("<") ? e4.typeParameters = this.flowParseTypeParameterInstantiation() : e4.typeParameters = null, this.finishNode(e4, "InterfaceExtends");
          }, r2.flowParseInterface = function(e4) {
            return this.flowParseInterfaceish(e4), this.finishNode(e4, "InterfaceDeclaration");
          }, r2.checkNotUnderscore = function(e4) {
            e4 === "_" && this.raise(this.state.start, Um.UnexpectedReservedUnderscore);
          }, r2.checkReservedType = function(e4, t3, r3) {
            Mm.has(e4) && this.raise(t3, r3 ? Um.AssignReservedType : Um.UnexpectedReservedType, e4);
          }, r2.flowParseRestrictedIdentifier = function(e4, t3) {
            return this.checkReservedType(this.state.value, this.state.start, t3), this.parseIdentifier(e4);
          }, r2.flowParseTypeAlias = function(e4) {
            return e4.id = this.flowParseRestrictedIdentifier(false, true), this.scope.declareName(e4.id.name, 9, e4.id.start), this.isRelational("<") ? e4.typeParameters = this.flowParseTypeParameterDeclaration() : e4.typeParameters = null, e4.right = this.flowParseTypeInitialiser(lm.eq), this.semicolon(), this.finishNode(e4, "TypeAlias");
          }, r2.flowParseOpaqueType = function(e4, t3) {
            return this.expectContextual("type"), e4.id = this.flowParseRestrictedIdentifier(true, true), this.scope.declareName(e4.id.name, 9, e4.id.start), this.isRelational("<") ? e4.typeParameters = this.flowParseTypeParameterDeclaration() : e4.typeParameters = null, e4.supertype = null, this.match(lm.colon) && (e4.supertype = this.flowParseTypeInitialiser(lm.colon)), e4.impltype = null, t3 || (e4.impltype = this.flowParseTypeInitialiser(lm.eq)), this.semicolon(), this.finishNode(e4, "OpaqueType");
          }, r2.flowParseTypeParameter = function(e4) {
            e4 === void 0 && (e4 = false);
            var t3 = this.state.start, r3 = this.startNode(), n2 = this.flowParseVariance(), s2 = this.flowParseTypeAnnotatableIdentifier();
            return r3.name = s2.name, r3.variance = n2, r3.bound = s2.typeAnnotation, this.match(lm.eq) ? (this.eat(lm.eq), r3.default = this.flowParseType()) : e4 && this.raise(t3, Um.MissingTypeParamDefault), this.finishNode(r3, "TypeParameter");
          }, r2.flowParseTypeParameterDeclaration = function() {
            var e4 = this.state.inType, t3 = this.startNode();
            t3.params = [], this.state.inType = true, this.isRelational("<") || this.match(lm.jsxTagStart) ? this.next() : this.unexpected();
            var r3 = false;
            do {
              var n2 = this.flowParseTypeParameter(r3);
              t3.params.push(n2), n2.default && (r3 = true), this.isRelational(">") || this.expect(lm.comma);
            } while (!this.isRelational(">"));
            return this.expectRelational(">"), this.state.inType = e4, this.finishNode(t3, "TypeParameterDeclaration");
          }, r2.flowParseTypeParameterInstantiation = function() {
            var e4 = this.startNode(), t3 = this.state.inType;
            e4.params = [], this.state.inType = true, this.expectRelational("<");
            var r3 = this.state.noAnonFunctionType;
            for (this.state.noAnonFunctionType = false; !this.isRelational(">"); )
              e4.params.push(this.flowParseType()), this.isRelational(">") || this.expect(lm.comma);
            return this.state.noAnonFunctionType = r3, this.expectRelational(">"), this.state.inType = t3, this.finishNode(e4, "TypeParameterInstantiation");
          }, r2.flowParseTypeParameterInstantiationCallOrNew = function() {
            var e4 = this.startNode(), t3 = this.state.inType;
            for (e4.params = [], this.state.inType = true, this.expectRelational("<"); !this.isRelational(">"); )
              e4.params.push(this.flowParseTypeOrImplicitInstantiation()), this.isRelational(">") || this.expect(lm.comma);
            return this.expectRelational(">"), this.state.inType = t3, this.finishNode(e4, "TypeParameterInstantiation");
          }, r2.flowParseInterfaceType = function() {
            var e4 = this.startNode();
            if (this.expectContextual("interface"), e4.extends = [], this.eat(lm._extends))
              do {
                e4.extends.push(this.flowParseInterfaceExtends());
              } while (this.eat(lm.comma));
            return e4.body = this.flowParseObjectType({ allowStatic: false, allowExact: false, allowSpread: false, allowProto: false, allowInexact: false }), this.finishNode(e4, "InterfaceTypeAnnotation");
          }, r2.flowParseObjectPropertyKey = function() {
            return this.match(lm.num) || this.match(lm.string) ? this.parseExprAtom() : this.parseIdentifier(true);
          }, r2.flowParseObjectTypeIndexer = function(e4, t3, r3) {
            return e4.static = t3, this.lookahead().type === lm.colon ? (e4.id = this.flowParseObjectPropertyKey(), e4.key = this.flowParseTypeInitialiser()) : (e4.id = null, e4.key = this.flowParseType()), this.expect(lm.bracketR), e4.value = this.flowParseTypeInitialiser(), e4.variance = r3, this.finishNode(e4, "ObjectTypeIndexer");
          }, r2.flowParseObjectTypeInternalSlot = function(e4, t3) {
            return e4.static = t3, e4.id = this.flowParseObjectPropertyKey(), this.expect(lm.bracketR), this.expect(lm.bracketR), this.isRelational("<") || this.match(lm.parenL) ? (e4.method = true, e4.optional = false, e4.value = this.flowParseObjectTypeMethodish(this.startNodeAt(e4.start, e4.loc.start))) : (e4.method = false, this.eat(lm.question) && (e4.optional = true), e4.value = this.flowParseTypeInitialiser()), this.finishNode(e4, "ObjectTypeInternalSlot");
          }, r2.flowParseObjectTypeMethodish = function(e4) {
            for (e4.params = [], e4.rest = null, e4.typeParameters = null, e4.this = null, this.isRelational("<") && (e4.typeParameters = this.flowParseTypeParameterDeclaration()), this.expect(lm.parenL), this.match(lm._this) && (e4.this = this.flowParseFunctionTypeParam(true), e4.this.name = null, this.match(lm.parenR) || this.expect(lm.comma)); !this.match(lm.parenR) && !this.match(lm.ellipsis); )
              e4.params.push(this.flowParseFunctionTypeParam(false)), this.match(lm.parenR) || this.expect(lm.comma);
            return this.eat(lm.ellipsis) && (e4.rest = this.flowParseFunctionTypeParam(false)), this.expect(lm.parenR), e4.returnType = this.flowParseTypeInitialiser(), this.finishNode(e4, "FunctionTypeAnnotation");
          }, r2.flowParseObjectTypeCallProperty = function(e4, t3) {
            var r3 = this.startNode();
            return e4.static = t3, e4.value = this.flowParseObjectTypeMethodish(r3), this.finishNode(e4, "ObjectTypeCallProperty");
          }, r2.flowParseObjectType = function(e4) {
            var t3 = e4.allowStatic, r3 = e4.allowExact, n2 = e4.allowSpread, s2 = e4.allowProto, a2 = e4.allowInexact, i2 = this.state.inType;
            this.state.inType = true;
            var o2, u2, l2 = this.startNode();
            l2.callProperties = [], l2.properties = [], l2.indexers = [], l2.internalSlots = [];
            var c2 = false;
            for (r3 && this.match(lm.braceBarL) ? (this.expect(lm.braceBarL), o2 = lm.braceBarR, u2 = true) : (this.expect(lm.braceL), o2 = lm.braceR, u2 = false), l2.exact = u2; !this.match(o2); ) {
              var p2 = false, d2 = null, f2 = null, h2 = this.startNode();
              if (s2 && this.isContextual("proto")) {
                var m2 = this.lookahead();
                m2.type !== lm.colon && m2.type !== lm.question && (this.next(), d2 = this.state.start, t3 = false);
              }
              if (t3 && this.isContextual("static")) {
                var y2 = this.lookahead();
                y2.type !== lm.colon && y2.type !== lm.question && (this.next(), p2 = true);
              }
              var g2 = this.flowParseVariance();
              if (this.eat(lm.bracketL))
                d2 != null && this.unexpected(d2), this.eat(lm.bracketL) ? (g2 && this.unexpected(g2.start), l2.internalSlots.push(this.flowParseObjectTypeInternalSlot(h2, p2))) : l2.indexers.push(this.flowParseObjectTypeIndexer(h2, p2, g2));
              else if (this.match(lm.parenL) || this.isRelational("<"))
                d2 != null && this.unexpected(d2), g2 && this.unexpected(g2.start), l2.callProperties.push(this.flowParseObjectTypeCallProperty(h2, p2));
              else {
                var v2 = "init";
                if (this.isContextual("get") || this.isContextual("set")) {
                  var b2 = this.lookahead();
                  b2.type !== lm.name && b2.type !== lm.string && b2.type !== lm.num || (v2 = this.state.value, this.next());
                }
                var E2 = this.flowParseObjectTypeProperty(h2, p2, d2, g2, v2, n2, a2 != null ? a2 : !u2);
                E2 === null ? (c2 = true, f2 = this.state.lastTokStart) : l2.properties.push(E2);
              }
              this.flowObjectTypeSemicolon(), !f2 || this.match(lm.braceR) || this.match(lm.braceBarR) || this.raise(f2, Um.UnexpectedExplicitInexactInObject);
            }
            this.expect(o2), n2 && (l2.inexact = c2);
            var x2 = this.finishNode(l2, "ObjectTypeAnnotation");
            return this.state.inType = i2, x2;
          }, r2.flowParseObjectTypeProperty = function(e4, t3, r3, n2, s2, a2, i2) {
            if (this.eat(lm.ellipsis))
              return this.match(lm.comma) || this.match(lm.semi) || this.match(lm.braceR) || this.match(lm.braceBarR) ? (a2 ? i2 || this.raise(this.state.lastTokStart, Um.InexactInsideExact) : this.raise(this.state.lastTokStart, Um.InexactInsideNonObject), n2 && this.raise(n2.start, Um.InexactVariance), null) : (a2 || this.raise(this.state.lastTokStart, Um.UnexpectedSpreadType), r3 != null && this.unexpected(r3), n2 && this.raise(n2.start, Um.SpreadVariance), e4.argument = this.flowParseType(), this.finishNode(e4, "ObjectTypeSpreadProperty"));
            e4.key = this.flowParseObjectPropertyKey(), e4.static = t3, e4.proto = r3 != null, e4.kind = s2;
            var o2 = false;
            return this.isRelational("<") || this.match(lm.parenL) ? (e4.method = true, r3 != null && this.unexpected(r3), n2 && this.unexpected(n2.start), e4.value = this.flowParseObjectTypeMethodish(this.startNodeAt(e4.start, e4.loc.start)), s2 !== "get" && s2 !== "set" || this.flowCheckGetterSetterParams(e4), !a2 && e4.key.name === "constructor" && e4.value.this && this.raise(e4.value.this.start, Um.ThisParamBannedInConstructor)) : (s2 !== "init" && this.unexpected(), e4.method = false, this.eat(lm.question) && (o2 = true), e4.value = this.flowParseTypeInitialiser(), e4.variance = n2), e4.optional = o2, this.finishNode(e4, "ObjectTypeProperty");
          }, r2.flowCheckGetterSetterParams = function(e4) {
            var t3 = e4.kind === "get" ? 0 : 1, r3 = e4.start, n2 = e4.value.params.length + (e4.value.rest ? 1 : 0);
            e4.value.this && this.raise(e4.value.this.start, e4.kind === "get" ? Um.GetterMayNotHaveThisParam : Um.SetterMayNotHaveThisParam), n2 !== t3 && (e4.kind === "get" ? this.raise(r3, Em.BadGetterArity) : this.raise(r3, Em.BadSetterArity)), e4.kind === "set" && e4.value.rest && this.raise(r3, Em.BadSetterRestParameter);
          }, r2.flowObjectTypeSemicolon = function() {
            this.eat(lm.semi) || this.eat(lm.comma) || this.match(lm.braceR) || this.match(lm.braceBarR) || this.unexpected();
          }, r2.flowParseQualifiedTypeIdentifier = function(e4, t3, r3) {
            e4 = e4 || this.state.start, t3 = t3 || this.state.startLoc;
            for (var n2 = r3 || this.flowParseRestrictedIdentifier(true); this.eat(lm.dot); ) {
              var s2 = this.startNodeAt(e4, t3);
              s2.qualification = n2, s2.id = this.flowParseRestrictedIdentifier(true), n2 = this.finishNode(s2, "QualifiedTypeIdentifier");
            }
            return n2;
          }, r2.flowParseGenericType = function(e4, t3, r3) {
            var n2 = this.startNodeAt(e4, t3);
            return n2.typeParameters = null, n2.id = this.flowParseQualifiedTypeIdentifier(e4, t3, r3), this.isRelational("<") && (n2.typeParameters = this.flowParseTypeParameterInstantiation()), this.finishNode(n2, "GenericTypeAnnotation");
          }, r2.flowParseTypeofType = function() {
            var e4 = this.startNode();
            return this.expect(lm._typeof), e4.argument = this.flowParsePrimaryType(), this.finishNode(e4, "TypeofTypeAnnotation");
          }, r2.flowParseTupleType = function() {
            var e4 = this.startNode();
            for (e4.types = [], this.expect(lm.bracketL); this.state.pos < this.length && !this.match(lm.bracketR) && (e4.types.push(this.flowParseType()), !this.match(lm.bracketR)); )
              this.expect(lm.comma);
            return this.expect(lm.bracketR), this.finishNode(e4, "TupleTypeAnnotation");
          }, r2.flowParseFunctionTypeParam = function(e4) {
            var t3 = null, r3 = false, n2 = null, s2 = this.startNode(), a2 = this.lookahead(), i2 = this.state.type === lm._this;
            return a2.type === lm.colon || a2.type === lm.question ? (i2 && !e4 && this.raise(s2.start, Um.ThisParamMustBeFirst), t3 = this.parseIdentifier(i2), this.eat(lm.question) && (r3 = true, i2 && this.raise(s2.start, Um.ThisParamMayNotBeOptional)), n2 = this.flowParseTypeInitialiser()) : n2 = this.flowParseType(), s2.name = t3, s2.optional = r3, s2.typeAnnotation = n2, this.finishNode(s2, "FunctionTypeParam");
          }, r2.reinterpretTypeAsFunctionTypeParam = function(e4) {
            var t3 = this.startNodeAt(e4.start, e4.loc.start);
            return t3.name = null, t3.optional = false, t3.typeAnnotation = e4, this.finishNode(t3, "FunctionTypeParam");
          }, r2.flowParseFunctionTypeParams = function(e4) {
            e4 === void 0 && (e4 = []);
            var t3 = null, r3 = null;
            for (this.match(lm._this) && ((r3 = this.flowParseFunctionTypeParam(true)).name = null, this.match(lm.parenR) || this.expect(lm.comma)); !this.match(lm.parenR) && !this.match(lm.ellipsis); )
              e4.push(this.flowParseFunctionTypeParam(false)), this.match(lm.parenR) || this.expect(lm.comma);
            return this.eat(lm.ellipsis) && (t3 = this.flowParseFunctionTypeParam(false)), { params: e4, rest: t3, _this: r3 };
          }, r2.flowIdentToTypeAnnotation = function(e4, t3, r3, n2) {
            switch (n2.name) {
              case "any":
                return this.finishNode(r3, "AnyTypeAnnotation");
              case "bool":
              case "boolean":
                return this.finishNode(r3, "BooleanTypeAnnotation");
              case "mixed":
                return this.finishNode(r3, "MixedTypeAnnotation");
              case "empty":
                return this.finishNode(r3, "EmptyTypeAnnotation");
              case "number":
                return this.finishNode(r3, "NumberTypeAnnotation");
              case "string":
                return this.finishNode(r3, "StringTypeAnnotation");
              case "symbol":
                return this.finishNode(r3, "SymbolTypeAnnotation");
              default:
                return this.checkNotUnderscore(n2.name), this.flowParseGenericType(e4, t3, n2);
            }
          }, r2.flowParsePrimaryType = function() {
            var t3, r3, n2 = this.state.start, s2 = this.state.startLoc, a2 = this.startNode(), i2 = false, o2 = this.state.noAnonFunctionType;
            switch (this.state.type) {
              case lm.name:
                return this.isContextual("interface") ? this.flowParseInterfaceType() : this.flowIdentToTypeAnnotation(n2, s2, a2, this.parseIdentifier());
              case lm.braceL:
                return this.flowParseObjectType({ allowStatic: false, allowExact: false, allowSpread: true, allowProto: false, allowInexact: true });
              case lm.braceBarL:
                return this.flowParseObjectType({ allowStatic: false, allowExact: true, allowSpread: true, allowProto: false, allowInexact: false });
              case lm.bracketL:
                return this.state.noAnonFunctionType = false, r3 = this.flowParseTupleType(), this.state.noAnonFunctionType = o2, r3;
              case lm.relational:
                if (this.state.value === "<")
                  return a2.typeParameters = this.flowParseTypeParameterDeclaration(), this.expect(lm.parenL), t3 = this.flowParseFunctionTypeParams(), a2.params = t3.params, a2.rest = t3.rest, a2.this = t3._this, this.expect(lm.parenR), this.expect(lm.arrow), a2.returnType = this.flowParseType(), this.finishNode(a2, "FunctionTypeAnnotation");
                break;
              case lm.parenL:
                if (this.next(), !this.match(lm.parenR) && !this.match(lm.ellipsis))
                  if (this.match(lm.name) || this.match(lm._this)) {
                    var u2 = this.lookahead().type;
                    i2 = u2 !== lm.question && u2 !== lm.colon;
                  } else
                    i2 = true;
                if (i2) {
                  if (this.state.noAnonFunctionType = false, r3 = this.flowParseType(), this.state.noAnonFunctionType = o2, this.state.noAnonFunctionType || !(this.match(lm.comma) || this.match(lm.parenR) && this.lookahead().type === lm.arrow))
                    return this.expect(lm.parenR), r3;
                  this.eat(lm.comma);
                }
                return t3 = r3 ? this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(r3)]) : this.flowParseFunctionTypeParams(), a2.params = t3.params, a2.rest = t3.rest, a2.this = t3._this, this.expect(lm.parenR), this.expect(lm.arrow), a2.returnType = this.flowParseType(), a2.typeParameters = null, this.finishNode(a2, "FunctionTypeAnnotation");
              case lm.string:
                return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");
              case lm._true:
              case lm._false:
                return a2.value = this.match(lm._true), this.next(), this.finishNode(a2, "BooleanLiteralTypeAnnotation");
              case lm.plusMin:
                if (this.state.value === "-") {
                  if (this.next(), this.match(lm.num))
                    return this.parseLiteralAtNode(-this.state.value, "NumberLiteralTypeAnnotation", a2);
                  if (this.match(lm.bigint))
                    return this.parseLiteralAtNode(-this.state.value, "BigIntLiteralTypeAnnotation", a2);
                  throw this.raise(this.state.start, Um.UnexpectedSubtractionOperand);
                }
                throw this.unexpected();
              case lm.num:
                return this.parseLiteral(this.state.value, "NumberLiteralTypeAnnotation");
              case lm.bigint:
                return this.parseLiteral(this.state.value, "BigIntLiteralTypeAnnotation");
              case lm._void:
                return this.next(), this.finishNode(a2, "VoidTypeAnnotation");
              case lm._null:
                return this.next(), this.finishNode(a2, "NullLiteralTypeAnnotation");
              case lm._this:
                return this.next(), this.finishNode(a2, "ThisTypeAnnotation");
              case lm.star:
                return this.next(), this.finishNode(a2, "ExistsTypeAnnotation");
              default:
                if (this.state.type.keyword === "typeof")
                  return this.flowParseTypeofType();
                if (this.state.type.keyword) {
                  var l2 = this.state.type.label;
                  return this.next(), e3.prototype.createIdentifier.call(this, a2, l2);
                }
            }
            throw this.unexpected();
          }, r2.flowParsePostfixType = function() {
            for (var e4 = this.state.start, t3 = this.state.startLoc, r3 = this.flowParsePrimaryType(), n2 = false; (this.match(lm.bracketL) || this.match(lm.questionDot)) && !this.canInsertSemicolon(); ) {
              var s2 = this.startNodeAt(e4, t3), a2 = this.eat(lm.questionDot);
              n2 = n2 || a2, this.expect(lm.bracketL), !a2 && this.match(lm.bracketR) ? (s2.elementType = r3, this.next(), r3 = this.finishNode(s2, "ArrayTypeAnnotation")) : (s2.objectType = r3, s2.indexType = this.flowParseType(), this.expect(lm.bracketR), n2 ? (s2.optional = a2, r3 = this.finishNode(s2, "OptionalIndexedAccessType")) : r3 = this.finishNode(s2, "IndexedAccessType"));
            }
            return r3;
          }, r2.flowParsePrefixType = function() {
            var e4 = this.startNode();
            return this.eat(lm.question) ? (e4.typeAnnotation = this.flowParsePrefixType(), this.finishNode(e4, "NullableTypeAnnotation")) : this.flowParsePostfixType();
          }, r2.flowParseAnonFunctionWithoutParens = function() {
            var e4 = this.flowParsePrefixType();
            if (!this.state.noAnonFunctionType && this.eat(lm.arrow)) {
              var t3 = this.startNodeAt(e4.start, e4.loc.start);
              return t3.params = [this.reinterpretTypeAsFunctionTypeParam(e4)], t3.rest = null, t3.this = null, t3.returnType = this.flowParseType(), t3.typeParameters = null, this.finishNode(t3, "FunctionTypeAnnotation");
            }
            return e4;
          }, r2.flowParseIntersectionType = function() {
            var e4 = this.startNode();
            this.eat(lm.bitwiseAND);
            var t3 = this.flowParseAnonFunctionWithoutParens();
            for (e4.types = [t3]; this.eat(lm.bitwiseAND); )
              e4.types.push(this.flowParseAnonFunctionWithoutParens());
            return e4.types.length === 1 ? t3 : this.finishNode(e4, "IntersectionTypeAnnotation");
          }, r2.flowParseUnionType = function() {
            var e4 = this.startNode();
            this.eat(lm.bitwiseOR);
            var t3 = this.flowParseIntersectionType();
            for (e4.types = [t3]; this.eat(lm.bitwiseOR); )
              e4.types.push(this.flowParseIntersectionType());
            return e4.types.length === 1 ? t3 : this.finishNode(e4, "UnionTypeAnnotation");
          }, r2.flowParseType = function() {
            var e4 = this.state.inType;
            this.state.inType = true;
            var t3 = this.flowParseUnionType();
            return this.state.inType = e4, t3;
          }, r2.flowParseTypeOrImplicitInstantiation = function() {
            if (this.state.type === lm.name && this.state.value === "_") {
              var e4 = this.state.start, t3 = this.state.startLoc, r3 = this.parseIdentifier();
              return this.flowParseGenericType(e4, t3, r3);
            }
            return this.flowParseType();
          }, r2.flowParseTypeAnnotation = function() {
            var e4 = this.startNode();
            return e4.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(e4, "TypeAnnotation");
          }, r2.flowParseTypeAnnotatableIdentifier = function(e4) {
            var t3 = e4 ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();
            return this.match(lm.colon) && (t3.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(t3)), t3;
          }, r2.typeCastToParameter = function(e4) {
            return e4.expression.typeAnnotation = e4.typeAnnotation, this.resetEndLocation(e4.expression, e4.typeAnnotation.end, e4.typeAnnotation.loc.end), e4.expression;
          }, r2.flowParseVariance = function() {
            var e4 = null;
            return this.match(lm.plusMin) && (e4 = this.startNode(), this.state.value === "+" ? e4.kind = "plus" : e4.kind = "minus", this.next(), this.finishNode(e4, "Variance")), e4;
          }, r2.parseFunctionBody = function(t3, r3, n2) {
            var s2 = this;
            return n2 === void 0 && (n2 = false), r3 ? this.forwardNoArrowParamsConversionAt(t3, function() {
              return e3.prototype.parseFunctionBody.call(s2, t3, true, n2);
            }) : e3.prototype.parseFunctionBody.call(this, t3, false, n2);
          }, r2.parseFunctionBodyAndFinish = function(t3, r3, n2) {
            if (n2 === void 0 && (n2 = false), this.match(lm.colon)) {
              var s2 = this.startNode(), a2 = this.flowParseTypeAndPredicateInitialiser();
              s2.typeAnnotation = a2[0], t3.predicate = a2[1], t3.returnType = s2.typeAnnotation ? this.finishNode(s2, "TypeAnnotation") : null;
            }
            e3.prototype.parseFunctionBodyAndFinish.call(this, t3, r3, n2);
          }, r2.parseStatement = function(t3, r3) {
            if (this.state.strict && this.match(lm.name) && this.state.value === "interface") {
              var n2 = this.lookahead();
              if (n2.type === lm.name || jr(n2.value)) {
                var s2 = this.startNode();
                return this.next(), this.flowParseInterface(s2);
              }
            } else if (this.shouldParseEnums() && this.isContextual("enum")) {
              var a2 = this.startNode();
              return this.next(), this.flowParseEnumDeclaration(a2);
            }
            var i2 = e3.prototype.parseStatement.call(this, t3, r3);
            return this.flowPragma !== void 0 || this.isValidDirective(i2) || (this.flowPragma = null), i2;
          }, r2.parseExpressionStatement = function(t3, r3) {
            if (r3.type === "Identifier") {
              if (r3.name === "declare") {
                if (this.match(lm._class) || this.match(lm.name) || this.match(lm._function) || this.match(lm._var) || this.match(lm._export))
                  return this.flowParseDeclare(t3);
              } else if (this.match(lm.name)) {
                if (r3.name === "interface")
                  return this.flowParseInterface(t3);
                if (r3.name === "type")
                  return this.flowParseTypeAlias(t3);
                if (r3.name === "opaque")
                  return this.flowParseOpaqueType(t3, false);
              }
            }
            return e3.prototype.parseExpressionStatement.call(this, t3, r3);
          }, r2.shouldParseExportDeclaration = function() {
            return this.isContextual("type") || this.isContextual("interface") || this.isContextual("opaque") || this.shouldParseEnums() && this.isContextual("enum") || e3.prototype.shouldParseExportDeclaration.call(this);
          }, r2.isExportDefaultSpecifier = function() {
            return (!this.match(lm.name) || !(this.state.value === "type" || this.state.value === "interface" || this.state.value === "opaque" || this.shouldParseEnums() && this.state.value === "enum")) && e3.prototype.isExportDefaultSpecifier.call(this);
          }, r2.parseExportDefaultExpression = function() {
            if (this.shouldParseEnums() && this.isContextual("enum")) {
              var t3 = this.startNode();
              return this.next(), this.flowParseEnumDeclaration(t3);
            }
            return e3.prototype.parseExportDefaultExpression.call(this);
          }, r2.parseConditional = function(t3, r3, n2, s2) {
            var a2 = this;
            if (!this.match(lm.question))
              return t3;
            if (this.state.maybeInArrowParameters) {
              var i2 = this.tryParse(function() {
                return e3.prototype.parseConditional.call(a2, t3, r3, n2);
              });
              return i2.node ? (i2.error && (this.state = i2.failState), i2.node) : (i2.error && e3.prototype.setOptionalParametersError.call(this, s2, i2.error), t3);
            }
            this.expect(lm.question);
            var o2 = this.state.clone(), u2 = this.state.noArrowAt, l2 = this.startNodeAt(r3, n2), c2 = this.tryParseConditionalConsequent(), p2 = c2.consequent, d2 = c2.failed, f2 = this.getArrowLikeExpressions(p2), h2 = f2[0], m2 = f2[1];
            if (d2 || m2.length > 0) {
              var y2 = [].concat(u2);
              if (m2.length > 0) {
                this.state = o2, this.state.noArrowAt = y2;
                for (var g2 = 0; g2 < m2.length; g2++)
                  y2.push(m2[g2].start);
                var v2 = this.tryParseConditionalConsequent();
                p2 = v2.consequent, d2 = v2.failed;
                var b2 = this.getArrowLikeExpressions(p2);
                h2 = b2[0], m2 = b2[1];
              }
              if (d2 && h2.length > 1 && this.raise(o2.start, Um.AmbiguousConditionalArrow), d2 && h2.length === 1) {
                this.state = o2, this.state.noArrowAt = y2.concat(h2[0].start);
                var E2 = this.tryParseConditionalConsequent();
                p2 = E2.consequent, d2 = E2.failed;
              }
            }
            return this.getArrowLikeExpressions(p2, true), this.state.noArrowAt = u2, this.expect(lm.colon), l2.test = t3, l2.consequent = p2, l2.alternate = this.forwardNoArrowParamsConversionAt(l2, function() {
              return a2.parseMaybeAssign(void 0, void 0);
            }), this.finishNode(l2, "ConditionalExpression");
          }, r2.tryParseConditionalConsequent = function() {
            this.state.noArrowParamsConversionAt.push(this.state.start);
            var e4 = this.parseMaybeAssignAllowIn(), t3 = !this.match(lm.colon);
            return this.state.noArrowParamsConversionAt.pop(), { consequent: e4, failed: t3 };
          }, r2.getArrowLikeExpressions = function(e4, t3) {
            for (var r3 = this, n2 = [e4], s2 = []; n2.length !== 0; ) {
              var a2 = n2.pop();
              a2.type === "ArrowFunctionExpression" ? (a2.typeParameters || !a2.returnType ? this.finishArrowValidation(a2) : s2.push(a2), n2.push(a2.body)) : a2.type === "ConditionalExpression" && (n2.push(a2.consequent), n2.push(a2.alternate));
            }
            return t3 ? (s2.forEach(function(e5) {
              return r3.finishArrowValidation(e5);
            }), [s2, []]) : function(e5, t4) {
              for (var r4 = [], n3 = [], s3 = 0; s3 < e5.length; s3++)
                (t4(e5[s3], s3, e5) ? r4 : n3).push(e5[s3]);
              return [r4, n3];
            }(s2, function(e5) {
              return e5.params.every(function(e6) {
                return r3.isAssignable(e6, true);
              });
            });
          }, r2.finishArrowValidation = function(t3) {
            var r3;
            this.toAssignableList(t3.params, (r3 = t3.extra) == null ? void 0 : r3.trailingComma, false), this.scope.enter(6), e3.prototype.checkParams.call(this, t3, false, true), this.scope.exit();
          }, r2.forwardNoArrowParamsConversionAt = function(e4, t3) {
            var r3;
            return this.state.noArrowParamsConversionAt.indexOf(e4.start) !== -1 ? (this.state.noArrowParamsConversionAt.push(this.state.start), r3 = t3(), this.state.noArrowParamsConversionAt.pop()) : r3 = t3(), r3;
          }, r2.parseParenItem = function(t3, r3, n2) {
            if (t3 = e3.prototype.parseParenItem.call(this, t3, r3, n2), this.eat(lm.question) && (t3.optional = true, this.resetEndLocation(t3)), this.match(lm.colon)) {
              var s2 = this.startNodeAt(r3, n2);
              return s2.expression = t3, s2.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(s2, "TypeCastExpression");
            }
            return t3;
          }, r2.assertModuleNodeAllowed = function(t3) {
            t3.type === "ImportDeclaration" && (t3.importKind === "type" || t3.importKind === "typeof") || t3.type === "ExportNamedDeclaration" && t3.exportKind === "type" || t3.type === "ExportAllDeclaration" && t3.exportKind === "type" || e3.prototype.assertModuleNodeAllowed.call(this, t3);
          }, r2.parseExport = function(t3) {
            var r3 = e3.prototype.parseExport.call(this, t3);
            return r3.type !== "ExportNamedDeclaration" && r3.type !== "ExportAllDeclaration" || (r3.exportKind = r3.exportKind || "value"), r3;
          }, r2.parseExportDeclaration = function(t3) {
            if (this.isContextual("type")) {
              t3.exportKind = "type";
              var r3 = this.startNode();
              return this.next(), this.match(lm.braceL) ? (t3.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(t3), null) : this.flowParseTypeAlias(r3);
            }
            if (this.isContextual("opaque")) {
              t3.exportKind = "type";
              var n2 = this.startNode();
              return this.next(), this.flowParseOpaqueType(n2, false);
            }
            if (this.isContextual("interface")) {
              t3.exportKind = "type";
              var s2 = this.startNode();
              return this.next(), this.flowParseInterface(s2);
            }
            if (this.shouldParseEnums() && this.isContextual("enum")) {
              t3.exportKind = "value";
              var a2 = this.startNode();
              return this.next(), this.flowParseEnumDeclaration(a2);
            }
            return e3.prototype.parseExportDeclaration.call(this, t3);
          }, r2.eatExportStar = function(t3) {
            return !!e3.prototype.eatExportStar.apply(this, arguments) || !(!this.isContextual("type") || this.lookahead().type !== lm.star) && (t3.exportKind = "type", this.next(), this.next(), true);
          }, r2.maybeParseExportNamespaceSpecifier = function(t3) {
            var r3 = this.state.start, n2 = e3.prototype.maybeParseExportNamespaceSpecifier.call(this, t3);
            return n2 && t3.exportKind === "type" && this.unexpected(r3), n2;
          }, r2.parseClassId = function(t3, r3, n2) {
            e3.prototype.parseClassId.call(this, t3, r3, n2), this.isRelational("<") && (t3.typeParameters = this.flowParseTypeParameterDeclaration());
          }, r2.parseClassMember = function(t3, r3, n2) {
            var s2 = this.state.start;
            if (this.isContextual("declare")) {
              if (this.parseClassMemberFromModifier(t3, r3))
                return;
              r3.declare = true;
            }
            e3.prototype.parseClassMember.call(this, t3, r3, n2), r3.declare && (r3.type !== "ClassProperty" && r3.type !== "ClassPrivateProperty" && r3.type !== "PropertyDefinition" ? this.raise(s2, Um.DeclareClassElement) : r3.value && this.raise(r3.value.start, Um.DeclareClassFieldInitializer));
          }, r2.isIterator = function(e4) {
            return e4 === "iterator" || e4 === "asyncIterator";
          }, r2.readIterator = function() {
            var t3 = e3.prototype.readWord1.call(this), r3 = "@@" + t3;
            this.isIterator(t3) && this.state.inType || this.raise(this.state.pos, Em.InvalidIdentifier, r3), this.finishToken(lm.name, r3);
          }, r2.getTokenFromCode = function(t3) {
            var r3 = this.input.charCodeAt(this.state.pos + 1);
            return t3 === 123 && r3 === 124 ? this.finishOp(lm.braceBarL, 2) : !this.state.inType || t3 !== 62 && t3 !== 60 ? this.state.inType && t3 === 63 ? r3 === 46 ? this.finishOp(lm.questionDot, 2) : this.finishOp(lm.question, 1) : function(e4, t4) {
              return e4 === 64 && t4 === 64;
            }(t3, r3) ? (this.state.pos += 2, this.readIterator()) : e3.prototype.getTokenFromCode.call(this, t3) : this.finishOp(lm.relational, 1);
          }, r2.isAssignable = function(e4, t3) {
            var r3 = this;
            switch (e4.type) {
              case "Identifier":
              case "ObjectPattern":
              case "ArrayPattern":
              case "AssignmentPattern":
                return true;
              case "ObjectExpression":
                var n2 = e4.properties.length - 1;
                return e4.properties.every(function(e5, t4) {
                  return e5.type !== "ObjectMethod" && (t4 === n2 || e5.type === "SpreadElement") && r3.isAssignable(e5);
                });
              case "ObjectProperty":
                return this.isAssignable(e4.value);
              case "SpreadElement":
                return this.isAssignable(e4.argument);
              case "ArrayExpression":
                return e4.elements.every(function(e5) {
                  return r3.isAssignable(e5);
                });
              case "AssignmentExpression":
                return e4.operator === "=";
              case "ParenthesizedExpression":
              case "TypeCastExpression":
                return this.isAssignable(e4.expression);
              case "MemberExpression":
              case "OptionalMemberExpression":
                return !t3;
              default:
                return false;
            }
          }, r2.toAssignable = function(t3, r3) {
            return r3 === void 0 && (r3 = false), t3.type === "TypeCastExpression" ? e3.prototype.toAssignable.call(this, this.typeCastToParameter(t3), r3) : e3.prototype.toAssignable.call(this, t3, r3);
          }, r2.toAssignableList = function(t3, r3, n2) {
            for (var s2 = 0; s2 < t3.length; s2++) {
              var a2 = t3[s2];
              (a2 == null ? void 0 : a2.type) === "TypeCastExpression" && (t3[s2] = this.typeCastToParameter(a2));
            }
            return e3.prototype.toAssignableList.call(this, t3, r3, n2);
          }, r2.toReferencedList = function(e4, t3) {
            for (var r3 = 0; r3 < e4.length; r3++) {
              var n2, s2 = e4[r3];
              !s2 || s2.type !== "TypeCastExpression" || (n2 = s2.extra) != null && n2.parenthesized || !(e4.length > 1) && t3 || this.raise(s2.typeAnnotation.start, Um.TypeCastInPattern);
            }
            return e4;
          }, r2.parseArrayLike = function(t3, r3, n2, s2) {
            var a2 = e3.prototype.parseArrayLike.call(this, t3, r3, n2, s2);
            return r3 && !this.state.maybeInArrowParameters && this.toReferencedList(a2.elements), a2;
          }, r2.checkLVal = function(t3) {
            if (t3.type !== "TypeCastExpression") {
              for (var r3, n2 = arguments.length, s2 = new Array(n2 > 1 ? n2 - 1 : 0), a2 = 1; a2 < n2; a2++)
                s2[a2 - 1] = arguments[a2];
              return (r3 = e3.prototype.checkLVal).call.apply(r3, [this, t3].concat(s2));
            }
          }, r2.parseClassProperty = function(t3) {
            return this.match(lm.colon) && (t3.typeAnnotation = this.flowParseTypeAnnotation()), e3.prototype.parseClassProperty.call(this, t3);
          }, r2.parseClassPrivateProperty = function(t3) {
            return this.match(lm.colon) && (t3.typeAnnotation = this.flowParseTypeAnnotation()), e3.prototype.parseClassPrivateProperty.call(this, t3);
          }, r2.isClassMethod = function() {
            return this.isRelational("<") || e3.prototype.isClassMethod.call(this);
          }, r2.isClassProperty = function() {
            return this.match(lm.colon) || e3.prototype.isClassProperty.call(this);
          }, r2.isNonstaticConstructor = function(t3) {
            return !this.match(lm.colon) && e3.prototype.isNonstaticConstructor.call(this, t3);
          }, r2.pushClassMethod = function(t3, r3, n2, s2, a2, i2) {
            if (r3.variance && this.unexpected(r3.variance.start), delete r3.variance, this.isRelational("<") && (r3.typeParameters = this.flowParseTypeParameterDeclaration()), e3.prototype.pushClassMethod.call(this, t3, r3, n2, s2, a2, i2), r3.params && a2) {
              var o2 = r3.params;
              o2.length > 0 && this.isThisParam(o2[0]) && this.raise(r3.start, Um.ThisParamBannedInConstructor);
            } else if (r3.type === "MethodDefinition" && a2 && r3.value.params) {
              var u2 = r3.value.params;
              u2.length > 0 && this.isThisParam(u2[0]) && this.raise(r3.start, Um.ThisParamBannedInConstructor);
            }
          }, r2.pushClassPrivateMethod = function(t3, r3, n2, s2) {
            r3.variance && this.unexpected(r3.variance.start), delete r3.variance, this.isRelational("<") && (r3.typeParameters = this.flowParseTypeParameterDeclaration()), e3.prototype.pushClassPrivateMethod.call(this, t3, r3, n2, s2);
          }, r2.parseClassSuper = function(t3) {
            if (e3.prototype.parseClassSuper.call(this, t3), t3.superClass && this.isRelational("<") && (t3.superTypeParameters = this.flowParseTypeParameterInstantiation()), this.isContextual("implements")) {
              this.next();
              var r3 = t3.implements = [];
              do {
                var n2 = this.startNode();
                n2.id = this.flowParseRestrictedIdentifier(true), this.isRelational("<") ? n2.typeParameters = this.flowParseTypeParameterInstantiation() : n2.typeParameters = null, r3.push(this.finishNode(n2, "ClassImplements"));
              } while (this.eat(lm.comma));
            }
          }, r2.checkGetterSetterParams = function(t3) {
            e3.prototype.checkGetterSetterParams.call(this, t3);
            var r3 = this.getObjectOrClassMethodParams(t3);
            if (r3.length > 0) {
              var n2 = r3[0];
              this.isThisParam(n2) && t3.kind === "get" ? this.raise(n2.start, Um.GetterMayNotHaveThisParam) : this.isThisParam(n2) && this.raise(n2.start, Um.SetterMayNotHaveThisParam);
            }
          }, r2.parsePropertyName = function(t3, r3) {
            var n2 = this.flowParseVariance(), s2 = e3.prototype.parsePropertyName.call(this, t3, r3);
            return t3.variance = n2, s2;
          }, r2.parseObjPropValue = function(t3, r3, n2, s2, a2, i2, o2, u2) {
            var l2;
            t3.variance && this.unexpected(t3.variance.start), delete t3.variance, this.isRelational("<") && !o2 && (l2 = this.flowParseTypeParameterDeclaration(), this.match(lm.parenL) || this.unexpected()), e3.prototype.parseObjPropValue.call(this, t3, r3, n2, s2, a2, i2, o2, u2), l2 && ((t3.value || t3).typeParameters = l2);
          }, r2.parseAssignableListItemTypes = function(e4) {
            return this.eat(lm.question) && (e4.type !== "Identifier" && this.raise(e4.start, Um.OptionalBindingPattern), this.isThisParam(e4) && this.raise(e4.start, Um.ThisParamMayNotBeOptional), e4.optional = true), this.match(lm.colon) ? e4.typeAnnotation = this.flowParseTypeAnnotation() : this.isThisParam(e4) && this.raise(e4.start, Um.ThisParamAnnotationRequired), this.match(lm.eq) && this.isThisParam(e4) && this.raise(e4.start, Um.ThisParamNoDefault), this.resetEndLocation(e4), e4;
          }, r2.parseMaybeDefault = function(t3, r3, n2) {
            var s2 = e3.prototype.parseMaybeDefault.call(this, t3, r3, n2);
            return s2.type === "AssignmentPattern" && s2.typeAnnotation && s2.right.start < s2.typeAnnotation.start && this.raise(s2.typeAnnotation.start, Um.TypeBeforeInitializer), s2;
          }, r2.shouldParseDefaultImport = function(t3) {
            return Gm(t3) ? Vm(this.state) : e3.prototype.shouldParseDefaultImport.call(this, t3);
          }, r2.parseImportSpecifierLocal = function(e4, t3, r3, n2) {
            t3.local = Gm(e4) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier(), this.checkLVal(t3.local, n2, 9), e4.specifiers.push(this.finishNode(t3, r3));
          }, r2.maybeParseDefaultImportSpecifier = function(t3) {
            t3.importKind = "value";
            var r3 = null;
            if (this.match(lm._typeof) ? r3 = "typeof" : this.isContextual("type") && (r3 = "type"), r3) {
              var n2 = this.lookahead();
              r3 === "type" && n2.type === lm.star && this.unexpected(n2.start), (Vm(n2) || n2.type === lm.braceL || n2.type === lm.star) && (this.next(), t3.importKind = r3);
            }
            return e3.prototype.maybeParseDefaultImportSpecifier.call(this, t3);
          }, r2.parseImportSpecifier = function(e4) {
            var t3 = this.startNode(), r3 = this.match(lm.string), n2 = this.parseModuleExportName(), s2 = null;
            n2.type === "Identifier" && (n2.name === "type" ? s2 = "type" : n2.name === "typeof" && (s2 = "typeof"));
            var a2 = false;
            if (this.isContextual("as") && !this.isLookaheadContextual("as")) {
              var i2 = this.parseIdentifier(true);
              s2 === null || this.match(lm.name) || this.state.type.keyword ? (t3.imported = n2, t3.importKind = null, t3.local = this.parseIdentifier()) : (t3.imported = i2, t3.importKind = s2, t3.local = i2.__clone());
            } else if (s2 !== null && (this.match(lm.name) || this.state.type.keyword))
              t3.imported = this.parseIdentifier(true), t3.importKind = s2, this.eatContextual("as") ? t3.local = this.parseIdentifier() : (a2 = true, t3.local = t3.imported.__clone());
            else {
              if (r3)
                throw this.raise(t3.start, Em.ImportBindingIsString, n2.value);
              a2 = true, t3.imported = n2, t3.importKind = null, t3.local = t3.imported.__clone();
            }
            var o2 = Gm(e4), u2 = Gm(t3);
            o2 && u2 && this.raise(t3.start, Um.ImportTypeShorthandOnlyInPureImport), (o2 || u2) && this.checkReservedType(t3.local.name, t3.local.start, true), !a2 || o2 || u2 || this.checkReservedWord(t3.local.name, t3.start, true, true), this.checkLVal(t3.local, "import specifier", 9), e4.specifiers.push(this.finishNode(t3, "ImportSpecifier"));
          }, r2.parseBindingAtom = function() {
            switch (this.state.type) {
              case lm._this:
                return this.parseIdentifier(true);
              default:
                return e3.prototype.parseBindingAtom.call(this);
            }
          }, r2.parseFunctionParams = function(t3, r3) {
            var n2 = t3.kind;
            n2 !== "get" && n2 !== "set" && this.isRelational("<") && (t3.typeParameters = this.flowParseTypeParameterDeclaration()), e3.prototype.parseFunctionParams.call(this, t3, r3);
          }, r2.parseVarId = function(t3, r3) {
            e3.prototype.parseVarId.call(this, t3, r3), this.match(lm.colon) && (t3.id.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(t3.id));
          }, r2.parseAsyncArrowFromCallExpression = function(t3, r3) {
            if (this.match(lm.colon)) {
              var n2 = this.state.noAnonFunctionType;
              this.state.noAnonFunctionType = true, t3.returnType = this.flowParseTypeAnnotation(), this.state.noAnonFunctionType = n2;
            }
            return e3.prototype.parseAsyncArrowFromCallExpression.call(this, t3, r3);
          }, r2.shouldParseAsyncArrow = function() {
            return this.match(lm.colon) || e3.prototype.shouldParseAsyncArrow.call(this);
          }, r2.parseMaybeAssign = function(t3, r3) {
            var n2, s2, a2 = this, i2 = null;
            if (this.hasPlugin("jsx") && (this.match(lm.jsxTagStart) || this.isRelational("<"))) {
              if (i2 = this.state.clone(), !(s2 = this.tryParse(function() {
                return e3.prototype.parseMaybeAssign.call(a2, t3, r3);
              }, i2)).error)
                return s2.node;
              var o2 = this.state.context, u2 = o2[o2.length - 1];
              u2 === Cm.j_oTag ? o2.length -= 2 : u2 === Cm.j_expr && (o2.length -= 1);
            }
            if ((n2 = s2) != null && n2.error || this.isRelational("<")) {
              var l2, c2, p2;
              i2 = i2 || this.state.clone();
              var d2 = this.tryParse(function(n3) {
                var s3;
                p2 = a2.flowParseTypeParameterDeclaration();
                var i3 = a2.forwardNoArrowParamsConversionAt(p2, function() {
                  var n4 = e3.prototype.parseMaybeAssign.call(a2, t3, r3);
                  return a2.resetStartLocationFromNode(n4, p2), n4;
                });
                i3.type !== "ArrowFunctionExpression" && (s3 = i3.extra) != null && s3.parenthesized && n3();
                var o3 = a2.maybeUnwrapTypeCastExpression(i3);
                return o3.typeParameters = p2, a2.resetStartLocationFromNode(o3, p2), i3;
              }, i2), f2 = null;
              if (d2.node && this.maybeUnwrapTypeCastExpression(d2.node).type === "ArrowFunctionExpression") {
                if (!d2.error && !d2.aborted)
                  return d2.node.async && this.raise(p2.start, Um.UnexpectedTypeParameterBeforeAsyncArrowFunction), d2.node;
                f2 = d2.node;
              }
              if ((l2 = s2) != null && l2.node)
                return this.state = s2.failState, s2.node;
              if (f2)
                return this.state = d2.failState, f2;
              if ((c2 = s2) != null && c2.thrown)
                throw s2.error;
              if (d2.thrown)
                throw d2.error;
              throw this.raise(p2.start, Um.UnexpectedTokenAfterTypeParameter);
            }
            return e3.prototype.parseMaybeAssign.call(this, t3, r3);
          }, r2.parseArrow = function(t3) {
            var r3 = this;
            if (this.match(lm.colon)) {
              var n2 = this.tryParse(function() {
                var e4 = r3.state.noAnonFunctionType;
                r3.state.noAnonFunctionType = true;
                var n3 = r3.startNode(), s2 = r3.flowParseTypeAndPredicateInitialiser();
                return n3.typeAnnotation = s2[0], t3.predicate = s2[1], r3.state.noAnonFunctionType = e4, r3.canInsertSemicolon() && r3.unexpected(), r3.match(lm.arrow) || r3.unexpected(), n3;
              });
              if (n2.thrown)
                return null;
              n2.error && (this.state = n2.failState), t3.returnType = n2.node.typeAnnotation ? this.finishNode(n2.node, "TypeAnnotation") : null;
            }
            return e3.prototype.parseArrow.call(this, t3);
          }, r2.shouldParseArrow = function() {
            return this.match(lm.colon) || e3.prototype.shouldParseArrow.call(this);
          }, r2.setArrowFunctionParameters = function(t3, r3) {
            this.state.noArrowParamsConversionAt.indexOf(t3.start) !== -1 ? t3.params = r3 : e3.prototype.setArrowFunctionParameters.call(this, t3, r3);
          }, r2.checkParams = function(t3, r3, n2) {
            if (!n2 || this.state.noArrowParamsConversionAt.indexOf(t3.start) === -1) {
              for (var s2 = 0; s2 < t3.params.length; s2++)
                this.isThisParam(t3.params[s2]) && s2 > 0 && this.raise(t3.params[s2].start, Um.ThisParamMustBeFirst);
              return e3.prototype.checkParams.apply(this, arguments);
            }
          }, r2.parseParenAndDistinguishExpression = function(t3) {
            return e3.prototype.parseParenAndDistinguishExpression.call(this, t3 && this.state.noArrowAt.indexOf(this.state.start) === -1);
          }, r2.parseSubscripts = function(t3, r3, n2, s2) {
            var a2 = this;
            if (t3.type === "Identifier" && t3.name === "async" && this.state.noArrowAt.indexOf(r3) !== -1) {
              this.next();
              var i2 = this.startNodeAt(r3, n2);
              i2.callee = t3, i2.arguments = this.parseCallExpressionArguments(lm.parenR, false), t3 = this.finishNode(i2, "CallExpression");
            } else if (t3.type === "Identifier" && t3.name === "async" && this.isRelational("<")) {
              var o2 = this.state.clone(), u2 = this.tryParse(function(e4) {
                return a2.parseAsyncArrowWithTypeParameters(r3, n2) || e4();
              }, o2);
              if (!u2.error && !u2.aborted)
                return u2.node;
              var l2 = this.tryParse(function() {
                return e3.prototype.parseSubscripts.call(a2, t3, r3, n2, s2);
              }, o2);
              if (l2.node && !l2.error)
                return l2.node;
              if (u2.node)
                return this.state = u2.failState, u2.node;
              if (l2.node)
                return this.state = l2.failState, l2.node;
              throw u2.error || l2.error;
            }
            return e3.prototype.parseSubscripts.call(this, t3, r3, n2, s2);
          }, r2.parseSubscript = function(t3, r3, n2, s2, a2) {
            var i2 = this;
            if (this.match(lm.questionDot) && this.isLookaheadToken_lt()) {
              if (a2.optionalChainMember = true, s2)
                return a2.stop = true, t3;
              this.next();
              var o2 = this.startNodeAt(r3, n2);
              return o2.callee = t3, o2.typeArguments = this.flowParseTypeParameterInstantiation(), this.expect(lm.parenL), o2.arguments = this.parseCallExpressionArguments(lm.parenR, false), o2.optional = true, this.finishCallExpression(o2, true);
            }
            if (!s2 && this.shouldParseTypes() && this.isRelational("<")) {
              var u2 = this.startNodeAt(r3, n2);
              u2.callee = t3;
              var l2 = this.tryParse(function() {
                return u2.typeArguments = i2.flowParseTypeParameterInstantiationCallOrNew(), i2.expect(lm.parenL), u2.arguments = i2.parseCallExpressionArguments(lm.parenR, false), a2.optionalChainMember && (u2.optional = false), i2.finishCallExpression(u2, a2.optionalChainMember);
              });
              if (l2.node)
                return l2.error && (this.state = l2.failState), l2.node;
            }
            return e3.prototype.parseSubscript.call(this, t3, r3, n2, s2, a2);
          }, r2.parseNewArguments = function(t3) {
            var r3 = this, n2 = null;
            this.shouldParseTypes() && this.isRelational("<") && (n2 = this.tryParse(function() {
              return r3.flowParseTypeParameterInstantiationCallOrNew();
            }).node), t3.typeArguments = n2, e3.prototype.parseNewArguments.call(this, t3);
          }, r2.parseAsyncArrowWithTypeParameters = function(e4, t3) {
            var r3 = this.startNodeAt(e4, t3);
            if (this.parseFunctionParams(r3), this.parseArrow(r3))
              return this.parseArrowExpression(r3, void 0, true);
          }, r2.readToken_mult_modulo = function(t3) {
            var r3 = this.input.charCodeAt(this.state.pos + 1);
            if (t3 === 42 && r3 === 47 && this.state.hasFlowComment)
              return this.state.hasFlowComment = false, this.state.pos += 2, void this.nextToken();
            e3.prototype.readToken_mult_modulo.call(this, t3);
          }, r2.readToken_pipe_amp = function(t3) {
            var r3 = this.input.charCodeAt(this.state.pos + 1);
            t3 !== 124 || r3 !== 125 ? e3.prototype.readToken_pipe_amp.call(this, t3) : this.finishOp(lm.braceBarR, 2);
          }, r2.parseTopLevel = function(t3, r3) {
            var n2 = e3.prototype.parseTopLevel.call(this, t3, r3);
            return this.state.hasFlowComment && this.raise(this.state.pos, Um.UnterminatedFlowComment), n2;
          }, r2.skipBlockComment = function() {
            if (this.hasPlugin("flowComments") && this.skipFlowComment())
              return this.state.hasFlowComment && this.unexpected(null, Um.NestedFlowComment), this.hasFlowCommentCompletion(), this.state.pos += this.skipFlowComment(), void (this.state.hasFlowComment = true);
            if (this.state.hasFlowComment) {
              var t3 = this.input.indexOf("*-/", this.state.pos += 2);
              if (t3 === -1)
                throw this.raise(this.state.pos - 2, Em.UnterminatedComment);
              this.state.pos = t3 + 3;
            } else
              e3.prototype.skipBlockComment.call(this);
          }, r2.skipFlowComment = function() {
            for (var e4 = this.state.pos, t3 = 2; [32, 9].includes(this.input.charCodeAt(e4 + t3)); )
              t3++;
            var r3 = this.input.charCodeAt(t3 + e4), n2 = this.input.charCodeAt(t3 + e4 + 1);
            return r3 === 58 && n2 === 58 ? t3 + 2 : this.input.slice(t3 + e4, t3 + e4 + 12) === "flow-include" ? t3 + 12 : r3 === 58 && n2 !== 58 && t3;
          }, r2.hasFlowCommentCompletion = function() {
            if (this.input.indexOf("*/", this.state.pos) === -1)
              throw this.raise(this.state.pos, Em.UnterminatedComment);
          }, r2.flowEnumErrorBooleanMemberNotInitialized = function(e4, t3) {
            var r3 = t3.enumName, n2 = t3.memberName;
            this.raise(e4, Um.EnumBooleanMemberNotInitialized, n2, r3);
          }, r2.flowEnumErrorInvalidMemberName = function(e4, t3) {
            var r3 = t3.enumName, n2 = t3.memberName, s2 = n2[0].toUpperCase() + n2.slice(1);
            this.raise(e4, Um.EnumInvalidMemberName, n2, s2, r3);
          }, r2.flowEnumErrorDuplicateMemberName = function(e4, t3) {
            var r3 = t3.enumName, n2 = t3.memberName;
            this.raise(e4, Um.EnumDuplicateMemberName, n2, r3);
          }, r2.flowEnumErrorInconsistentMemberValues = function(e4, t3) {
            var r3 = t3.enumName;
            this.raise(e4, Um.EnumInconsistentMemberValues, r3);
          }, r2.flowEnumErrorInvalidExplicitType = function(e4, t3) {
            var r3 = t3.enumName, n2 = t3.suppliedType;
            return this.raise(e4, n2 === null ? Um.EnumInvalidExplicitTypeUnknownSupplied : Um.EnumInvalidExplicitType, r3, n2);
          }, r2.flowEnumErrorInvalidMemberInitializer = function(e4, t3) {
            var r3 = t3.enumName, n2 = t3.explicitType, s2 = t3.memberName, a2 = null;
            switch (n2) {
              case "boolean":
              case "number":
              case "string":
                a2 = Um.EnumInvalidMemberInitializerPrimaryType;
                break;
              case "symbol":
                a2 = Um.EnumInvalidMemberInitializerSymbolType;
                break;
              default:
                a2 = Um.EnumInvalidMemberInitializerUnknownType;
            }
            return this.raise(e4, a2, r3, s2, n2);
          }, r2.flowEnumErrorNumberMemberNotInitialized = function(e4, t3) {
            var r3 = t3.enumName, n2 = t3.memberName;
            this.raise(e4, Um.EnumNumberMemberNotInitialized, r3, n2);
          }, r2.flowEnumErrorStringMemberInconsistentlyInitailized = function(e4, t3) {
            var r3 = t3.enumName;
            this.raise(e4, Um.EnumStringMemberInconsistentlyInitailized, r3);
          }, r2.flowEnumMemberInit = function() {
            var e4 = this, t3 = this.state.start, r3 = function() {
              return e4.match(lm.comma) || e4.match(lm.braceR);
            };
            switch (this.state.type) {
              case lm.num:
                var n2 = this.parseNumericLiteral(this.state.value);
                return r3() ? { type: "number", pos: n2.start, value: n2 } : { type: "invalid", pos: t3 };
              case lm.string:
                var s2 = this.parseStringLiteral(this.state.value);
                return r3() ? { type: "string", pos: s2.start, value: s2 } : { type: "invalid", pos: t3 };
              case lm._true:
              case lm._false:
                var a2 = this.parseBooleanLiteral(this.match(lm._true));
                return r3() ? { type: "boolean", pos: a2.start, value: a2 } : { type: "invalid", pos: t3 };
              default:
                return { type: "invalid", pos: t3 };
            }
          }, r2.flowEnumMemberRaw = function() {
            var e4 = this.state.start;
            return { id: this.parseIdentifier(true), init: this.eat(lm.eq) ? this.flowEnumMemberInit() : { type: "none", pos: e4 } };
          }, r2.flowEnumCheckExplicitTypeMismatch = function(e4, t3, r3) {
            var n2 = t3.explicitType;
            n2 !== null && n2 !== r3 && this.flowEnumErrorInvalidMemberInitializer(e4, t3);
          }, r2.flowEnumMembers = function(e4) {
            for (var t3 = e4.enumName, r3 = e4.explicitType, n2 = new Set(), s2 = { booleanMembers: [], numberMembers: [], stringMembers: [], defaultedMembers: [] }, a2 = false; !this.match(lm.braceR); ) {
              if (this.eat(lm.ellipsis)) {
                a2 = true;
                break;
              }
              var i2 = this.startNode(), o2 = this.flowEnumMemberRaw(), u2 = o2.id, l2 = o2.init, c2 = u2.name;
              if (c2 !== "") {
                /^[a-z]/.test(c2) && this.flowEnumErrorInvalidMemberName(u2.start, { enumName: t3, memberName: c2 }), n2.has(c2) && this.flowEnumErrorDuplicateMemberName(u2.start, { enumName: t3, memberName: c2 }), n2.add(c2);
                var p2 = { enumName: t3, explicitType: r3, memberName: c2 };
                switch (i2.id = u2, l2.type) {
                  case "boolean":
                    this.flowEnumCheckExplicitTypeMismatch(l2.pos, p2, "boolean"), i2.init = l2.value, s2.booleanMembers.push(this.finishNode(i2, "EnumBooleanMember"));
                    break;
                  case "number":
                    this.flowEnumCheckExplicitTypeMismatch(l2.pos, p2, "number"), i2.init = l2.value, s2.numberMembers.push(this.finishNode(i2, "EnumNumberMember"));
                    break;
                  case "string":
                    this.flowEnumCheckExplicitTypeMismatch(l2.pos, p2, "string"), i2.init = l2.value, s2.stringMembers.push(this.finishNode(i2, "EnumStringMember"));
                    break;
                  case "invalid":
                    throw this.flowEnumErrorInvalidMemberInitializer(l2.pos, p2);
                  case "none":
                    switch (r3) {
                      case "boolean":
                        this.flowEnumErrorBooleanMemberNotInitialized(l2.pos, p2);
                        break;
                      case "number":
                        this.flowEnumErrorNumberMemberNotInitialized(l2.pos, p2);
                        break;
                      default:
                        s2.defaultedMembers.push(this.finishNode(i2, "EnumDefaultedMember"));
                    }
                }
                this.match(lm.braceR) || this.expect(lm.comma);
              }
            }
            return { members: s2, hasUnknownMembers: a2 };
          }, r2.flowEnumStringMembers = function(e4, t3, r3) {
            var n2 = r3.enumName;
            if (e4.length === 0)
              return t3;
            if (t3.length === 0)
              return e4;
            if (t3.length > e4.length) {
              for (var s2 = 0; s2 < e4.length; s2++) {
                var a2 = e4[s2];
                this.flowEnumErrorStringMemberInconsistentlyInitailized(a2.start, { enumName: n2 });
              }
              return t3;
            }
            for (var i2 = 0; i2 < t3.length; i2++) {
              var o2 = t3[i2];
              this.flowEnumErrorStringMemberInconsistentlyInitailized(o2.start, { enumName: n2 });
            }
            return e4;
          }, r2.flowEnumParseExplicitType = function(e4) {
            var t3 = e4.enumName;
            if (this.eatContextual("of")) {
              if (!this.match(lm.name))
                throw this.flowEnumErrorInvalidExplicitType(this.state.start, { enumName: t3, suppliedType: null });
              var r3 = this.state.value;
              return this.next(), r3 !== "boolean" && r3 !== "number" && r3 !== "string" && r3 !== "symbol" && this.flowEnumErrorInvalidExplicitType(this.state.start, { enumName: t3, suppliedType: r3 }), r3;
            }
            return null;
          }, r2.flowEnumBody = function(e4, t3) {
            var r3 = this, n2 = t3.enumName, s2 = t3.nameLoc, a2 = this.flowEnumParseExplicitType({ enumName: n2 });
            this.expect(lm.braceL);
            var i2 = this.flowEnumMembers({ enumName: n2, explicitType: a2 }), o2 = i2.members, u2 = i2.hasUnknownMembers;
            switch (e4.hasUnknownMembers = u2, a2) {
              case "boolean":
                return e4.explicitType = true, e4.members = o2.booleanMembers, this.expect(lm.braceR), this.finishNode(e4, "EnumBooleanBody");
              case "number":
                return e4.explicitType = true, e4.members = o2.numberMembers, this.expect(lm.braceR), this.finishNode(e4, "EnumNumberBody");
              case "string":
                return e4.explicitType = true, e4.members = this.flowEnumStringMembers(o2.stringMembers, o2.defaultedMembers, { enumName: n2 }), this.expect(lm.braceR), this.finishNode(e4, "EnumStringBody");
              case "symbol":
                return e4.members = o2.defaultedMembers, this.expect(lm.braceR), this.finishNode(e4, "EnumSymbolBody");
              default:
                var l2 = function() {
                  return e4.members = [], r3.expect(lm.braceR), r3.finishNode(e4, "EnumStringBody");
                };
                e4.explicitType = false;
                var c2 = o2.booleanMembers.length, p2 = o2.numberMembers.length, d2 = o2.stringMembers.length, f2 = o2.defaultedMembers.length;
                if (c2 || p2 || d2 || f2) {
                  if (c2 || p2) {
                    if (!p2 && !d2 && c2 >= f2) {
                      for (var h2 = 0, m2 = o2.defaultedMembers; h2 < m2.length; h2++) {
                        var y2 = m2[h2];
                        this.flowEnumErrorBooleanMemberNotInitialized(y2.start, { enumName: n2, memberName: y2.id.name });
                      }
                      return e4.members = o2.booleanMembers, this.expect(lm.braceR), this.finishNode(e4, "EnumBooleanBody");
                    }
                    if (!c2 && !d2 && p2 >= f2) {
                      for (var g2 = 0, v2 = o2.defaultedMembers; g2 < v2.length; g2++) {
                        var b2 = v2[g2];
                        this.flowEnumErrorNumberMemberNotInitialized(b2.start, { enumName: n2, memberName: b2.id.name });
                      }
                      return e4.members = o2.numberMembers, this.expect(lm.braceR), this.finishNode(e4, "EnumNumberBody");
                    }
                    return this.flowEnumErrorInconsistentMemberValues(s2, { enumName: n2 }), l2();
                  }
                  return e4.members = this.flowEnumStringMembers(o2.stringMembers, o2.defaultedMembers, { enumName: n2 }), this.expect(lm.braceR), this.finishNode(e4, "EnumStringBody");
                }
                return l2();
            }
          }, r2.flowParseEnumDeclaration = function(e4) {
            var t3 = this.parseIdentifier();
            return e4.id = t3, e4.body = this.flowEnumBody(this.startNode(), { enumName: t3.name, nameLoc: t3.start }), this.finishNode(e4, "EnumDeclaration");
          }, r2.isLookaheadToken_lt = function() {
            var e4 = this.nextTokenStart();
            if (this.input.charCodeAt(e4) === 60) {
              var t3 = this.input.charCodeAt(e4 + 1);
              return t3 !== 60 && t3 !== 61;
            }
            return false;
          }, r2.maybeUnwrapTypeCastExpression = function(e4) {
            return e4.type === "TypeCastExpression" ? e4.expression : e4;
          }, t2;
        }(e2);
      }, typescript: function(e2) {
        return function(e3) {
          function t2() {
            return e3.apply(this, arguments) || this;
          }
          s(t2, e3);
          var r2 = t2.prototype;
          return r2.getScopeHandler = function() {
            return Zm;
          }, r2.tsIsIdentifier = function() {
            return this.match(lm.name);
          }, r2.tsTokenCanFollowModifier = function() {
            return (this.match(lm.bracketL) || this.match(lm.braceL) || this.match(lm.star) || this.match(lm.ellipsis) || this.match(lm.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();
          }, r2.tsNextTokenCanFollowModifier = function() {
            return this.next(), this.tsTokenCanFollowModifier();
          }, r2.tsParseModifier = function(e4) {
            if (this.match(lm.name)) {
              var t3 = this.state.value;
              return e4.indexOf(t3) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this)) ? t3 : void 0;
            }
          }, r2.tsParseModifiers = function(e4, t3, r3, n2) {
            for (var s2 = this, a2 = function(t4, r4, n3, a3) {
              r4 === n3 && e4[a3] && s2.raise(t4, sy.InvalidModifiersOrder, n3, a3);
            }, i2 = function(t4, r4, n3, a3) {
              (e4[n3] && r4 === a3 || e4[a3] && r4 === n3) && s2.raise(t4, sy.IncompatibleModifiers, n3, a3);
            }; ; ) {
              var o2 = this.state.start, u2 = this.tsParseModifier(t3.concat(r3 != null ? r3 : []));
              if (!u2)
                break;
              ay(u2) ? e4.accessibility ? this.raise(o2, sy.DuplicateAccessibilityModifier) : (a2(o2, u2, u2, "override"), a2(o2, u2, u2, "static"), a2(o2, u2, u2, "readonly"), e4.accessibility = u2) : (Object.hasOwnProperty.call(e4, u2) ? this.raise(o2, sy.DuplicateModifier, u2) : (a2(o2, u2, "static", "readonly"), a2(o2, u2, "static", "override"), a2(o2, u2, "override", "readonly"), a2(o2, u2, "abstract", "override"), i2(o2, u2, "declare", "override"), i2(o2, u2, "static", "abstract")), e4[u2] = true), r3 != null && r3.includes(u2) && this.raise(o2, n2, u2);
            }
          }, r2.tsIsListTerminator = function(e4) {
            switch (e4) {
              case "EnumMembers":
              case "TypeMembers":
                return this.match(lm.braceR);
              case "HeritageClauseElement":
                return this.match(lm.braceL);
              case "TupleElementTypes":
                return this.match(lm.bracketR);
              case "TypeParametersOrArguments":
                return this.isRelational(">");
            }
            throw new Error("Unreachable");
          }, r2.tsParseList = function(e4, t3) {
            for (var r3 = []; !this.tsIsListTerminator(e4); )
              r3.push(t3());
            return r3;
          }, r2.tsParseDelimitedList = function(e4, t3) {
            return ry(this.tsParseDelimitedListWorker(e4, t3, true));
          }, r2.tsParseDelimitedListWorker = function(e4, t3, r3) {
            for (var n2 = []; !this.tsIsListTerminator(e4); ) {
              var s2 = t3();
              if (s2 == null)
                return;
              if (n2.push(s2), !this.eat(lm.comma)) {
                if (this.tsIsListTerminator(e4))
                  break;
                return void (r3 && this.expect(lm.comma));
              }
            }
            return n2;
          }, r2.tsParseBracketedList = function(e4, t3, r3, n2) {
            n2 || (r3 ? this.expect(lm.bracketL) : this.expectRelational("<"));
            var s2 = this.tsParseDelimitedList(e4, t3);
            return r3 ? this.expect(lm.bracketR) : this.expectRelational(">"), s2;
          }, r2.tsParseImportType = function() {
            var e4 = this.startNode();
            return this.expect(lm._import), this.expect(lm.parenL), this.match(lm.string) || this.raise(this.state.start, sy.UnsupportedImportTypeArgument), e4.argument = this.parseExprAtom(), this.expect(lm.parenR), this.eat(lm.dot) && (e4.qualifier = this.tsParseEntityName(true)), this.isRelational("<") && (e4.typeParameters = this.tsParseTypeArguments()), this.finishNode(e4, "TSImportType");
          }, r2.tsParseEntityName = function(e4) {
            for (var t3 = this.parseIdentifier(); this.eat(lm.dot); ) {
              var r3 = this.startNodeAtNode(t3);
              r3.left = t3, r3.right = this.parseIdentifier(e4), t3 = this.finishNode(r3, "TSQualifiedName");
            }
            return t3;
          }, r2.tsParseTypeReference = function() {
            var e4 = this.startNode();
            return e4.typeName = this.tsParseEntityName(false), !this.hasPrecedingLineBreak() && this.isRelational("<") && (e4.typeParameters = this.tsParseTypeArguments()), this.finishNode(e4, "TSTypeReference");
          }, r2.tsParseThisTypePredicate = function(e4) {
            this.next();
            var t3 = this.startNodeAtNode(e4);
            return t3.parameterName = e4, t3.typeAnnotation = this.tsParseTypeAnnotation(false), t3.asserts = false, this.finishNode(t3, "TSTypePredicate");
          }, r2.tsParseThisTypeNode = function() {
            var e4 = this.startNode();
            return this.next(), this.finishNode(e4, "TSThisType");
          }, r2.tsParseTypeQuery = function() {
            var e4 = this.startNode();
            return this.expect(lm._typeof), this.match(lm._import) ? e4.exprName = this.tsParseImportType() : e4.exprName = this.tsParseEntityName(true), this.finishNode(e4, "TSTypeQuery");
          }, r2.tsParseTypeParameter = function() {
            var e4 = this.startNode();
            return e4.name = this.parseIdentifierName(e4.start), e4.constraint = this.tsEatThenParseType(lm._extends), e4.default = this.tsEatThenParseType(lm.eq), this.finishNode(e4, "TSTypeParameter");
          }, r2.tsTryParseTypeParameters = function() {
            if (this.isRelational("<"))
              return this.tsParseTypeParameters();
          }, r2.tsParseTypeParameters = function() {
            var e4 = this.startNode();
            return this.isRelational("<") || this.match(lm.jsxTagStart) ? this.next() : this.unexpected(), e4.params = this.tsParseBracketedList("TypeParametersOrArguments", this.tsParseTypeParameter.bind(this), false, true), e4.params.length === 0 && this.raise(e4.start, sy.EmptyTypeParameters), this.finishNode(e4, "TSTypeParameterDeclaration");
          }, r2.tsTryNextParseConstantContext = function() {
            return this.lookahead().type === lm._const ? (this.next(), this.tsParseTypeReference()) : null;
          }, r2.tsFillSignature = function(e4, t3) {
            var r3 = e4 === lm.arrow;
            t3.typeParameters = this.tsTryParseTypeParameters(), this.expect(lm.parenL), t3.parameters = this.tsParseBindingListForSignature(), (r3 || this.match(e4)) && (t3.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(e4));
          }, r2.tsParseBindingListForSignature = function() {
            var e4 = this;
            return this.parseBindingList(lm.parenR, 41).map(function(t3) {
              return t3.type !== "Identifier" && t3.type !== "RestElement" && t3.type !== "ObjectPattern" && t3.type !== "ArrayPattern" && e4.raise(t3.start, sy.UnsupportedSignatureParameterKind, t3.type), t3;
            });
          }, r2.tsParseTypeMemberSemicolon = function() {
            this.eat(lm.comma) || this.isLineTerminator() || this.expect(lm.semi);
          }, r2.tsParseSignatureMember = function(e4, t3) {
            return this.tsFillSignature(lm.colon, t3), this.tsParseTypeMemberSemicolon(), this.finishNode(t3, e4);
          }, r2.tsIsUnambiguouslyIndexSignature = function() {
            return this.next(), this.eat(lm.name) && this.match(lm.colon);
          }, r2.tsTryParseIndexSignature = function(e4) {
            if (this.match(lm.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))) {
              this.expect(lm.bracketL);
              var t3 = this.parseIdentifier();
              t3.typeAnnotation = this.tsParseTypeAnnotation(), this.resetEndLocation(t3), this.expect(lm.bracketR), e4.parameters = [t3];
              var r3 = this.tsTryParseTypeAnnotation();
              return r3 && (e4.typeAnnotation = r3), this.tsParseTypeMemberSemicolon(), this.finishNode(e4, "TSIndexSignature");
            }
          }, r2.tsParsePropertyOrMethodSignature = function(e4, t3) {
            this.eat(lm.question) && (e4.optional = true);
            var r3 = e4;
            if (this.match(lm.parenL) || this.isRelational("<")) {
              t3 && this.raise(e4.start, sy.ReadonlyForMethodSignature);
              var n2 = r3;
              if (n2.kind && this.isRelational("<") && this.raise(this.state.pos, sy.AccesorCannotHaveTypeParameters), this.tsFillSignature(lm.colon, n2), this.tsParseTypeMemberSemicolon(), n2.kind === "get")
                n2.parameters.length > 0 && (this.raise(this.state.pos, Em.BadGetterArity), this.isThisParam(n2.parameters[0]) && this.raise(this.state.pos, sy.AccesorCannotDeclareThisParameter));
              else if (n2.kind === "set") {
                if (n2.parameters.length !== 1)
                  this.raise(this.state.pos, Em.BadSetterArity);
                else {
                  var s2 = n2.parameters[0];
                  this.isThisParam(s2) && this.raise(this.state.pos, sy.AccesorCannotDeclareThisParameter), s2.type === "Identifier" && s2.optional && this.raise(this.state.pos, sy.SetAccesorCannotHaveOptionalParameter), s2.type === "RestElement" && this.raise(this.state.pos, sy.SetAccesorCannotHaveRestParameter);
                }
                n2.typeAnnotation && this.raise(n2.typeAnnotation.start, sy.SetAccesorCannotHaveReturnType);
              } else
                n2.kind = "method";
              return this.finishNode(n2, "TSMethodSignature");
            }
            var a2 = r3;
            t3 && (a2.readonly = true);
            var i2 = this.tsTryParseTypeAnnotation();
            return i2 && (a2.typeAnnotation = i2), this.tsParseTypeMemberSemicolon(), this.finishNode(a2, "TSPropertySignature");
          }, r2.tsParseTypeMember = function() {
            var e4 = this.startNode();
            if (this.match(lm.parenL) || this.isRelational("<"))
              return this.tsParseSignatureMember("TSCallSignatureDeclaration", e4);
            if (this.match(lm._new)) {
              var t3 = this.startNode();
              return this.next(), this.match(lm.parenL) || this.isRelational("<") ? this.tsParseSignatureMember("TSConstructSignatureDeclaration", e4) : (e4.key = this.createIdentifier(t3, "new"), this.tsParsePropertyOrMethodSignature(e4, false));
            }
            this.tsParseModifiers(e4, ["readonly"], ["declare", "abstract", "private", "protected", "public", "static", "override"], sy.InvalidModifierOnTypeMember);
            var r3 = this.tsTryParseIndexSignature(e4);
            return r3 || (this.parsePropertyName(e4, false), e4.computed || e4.key.type !== "Identifier" || e4.key.name !== "get" && e4.key.name !== "set" || !this.tsTokenCanFollowModifier() || (e4.kind = e4.key.name, this.parsePropertyName(e4, false)), this.tsParsePropertyOrMethodSignature(e4, !!e4.readonly));
          }, r2.tsParseTypeLiteral = function() {
            var e4 = this.startNode();
            return e4.members = this.tsParseObjectTypeMembers(), this.finishNode(e4, "TSTypeLiteral");
          }, r2.tsParseObjectTypeMembers = function() {
            this.expect(lm.braceL);
            var e4 = this.tsParseList("TypeMembers", this.tsParseTypeMember.bind(this));
            return this.expect(lm.braceR), e4;
          }, r2.tsIsStartOfMappedType = function() {
            return this.next(), this.eat(lm.plusMin) ? this.isContextual("readonly") : (this.isContextual("readonly") && this.next(), !!this.match(lm.bracketL) && (this.next(), !!this.tsIsIdentifier() && (this.next(), this.match(lm._in))));
          }, r2.tsParseMappedTypeParameter = function() {
            var e4 = this.startNode();
            return e4.name = this.parseIdentifierName(e4.start), e4.constraint = this.tsExpectThenParseType(lm._in), this.finishNode(e4, "TSTypeParameter");
          }, r2.tsParseMappedType = function() {
            var e4 = this.startNode();
            return this.expect(lm.braceL), this.match(lm.plusMin) ? (e4.readonly = this.state.value, this.next(), this.expectContextual("readonly")) : this.eatContextual("readonly") && (e4.readonly = true), this.expect(lm.bracketL), e4.typeParameter = this.tsParseMappedTypeParameter(), e4.nameType = this.eatContextual("as") ? this.tsParseType() : null, this.expect(lm.bracketR), this.match(lm.plusMin) ? (e4.optional = this.state.value, this.next(), this.expect(lm.question)) : this.eat(lm.question) && (e4.optional = true), e4.typeAnnotation = this.tsTryParseType(), this.semicolon(), this.expect(lm.braceR), this.finishNode(e4, "TSMappedType");
          }, r2.tsParseTupleType = function() {
            var e4 = this, t3 = this.startNode();
            t3.elementTypes = this.tsParseBracketedList("TupleElementTypes", this.tsParseTupleElementType.bind(this), true, false);
            var r3 = false, n2 = null;
            return t3.elementTypes.forEach(function(t4) {
              var s2, a2 = t4.type;
              !r3 || a2 === "TSRestType" || a2 === "TSOptionalType" || a2 === "TSNamedTupleMember" && t4.optional || e4.raise(t4.start, sy.OptionalTypeBeforeRequired), r3 = r3 || a2 === "TSNamedTupleMember" && t4.optional || a2 === "TSOptionalType", a2 === "TSRestType" && (a2 = (t4 = t4.typeAnnotation).type);
              var i2 = a2 === "TSNamedTupleMember";
              (n2 = (s2 = n2) != null ? s2 : i2) !== i2 && e4.raise(t4.start, sy.MixedLabeledAndUnlabeledElements);
            }), this.finishNode(t3, "TSTupleType");
          }, r2.tsParseTupleElementType = function() {
            var e4 = this.state, t3 = e4.start, r3 = e4.startLoc, n2 = this.eat(lm.ellipsis), s2 = this.tsParseType(), a2 = this.eat(lm.question);
            if (this.eat(lm.colon)) {
              var i2 = this.startNodeAtNode(s2);
              i2.optional = a2, s2.type !== "TSTypeReference" || s2.typeParameters || s2.typeName.type !== "Identifier" ? (this.raise(s2.start, sy.InvalidTupleMemberLabel), i2.label = s2) : i2.label = s2.typeName, i2.elementType = this.tsParseType(), s2 = this.finishNode(i2, "TSNamedTupleMember");
            } else if (a2) {
              var o2 = this.startNodeAtNode(s2);
              o2.typeAnnotation = s2, s2 = this.finishNode(o2, "TSOptionalType");
            }
            if (n2) {
              var u2 = this.startNodeAt(t3, r3);
              u2.typeAnnotation = s2, s2 = this.finishNode(u2, "TSRestType");
            }
            return s2;
          }, r2.tsParseParenthesizedType = function() {
            var e4 = this.startNode();
            return this.expect(lm.parenL), e4.typeAnnotation = this.tsParseType(), this.expect(lm.parenR), this.finishNode(e4, "TSParenthesizedType");
          }, r2.tsParseFunctionOrConstructorType = function(e4, t3) {
            var r3 = this.startNode();
            return e4 === "TSConstructorType" && (r3.abstract = !!t3, t3 && this.next(), this.next()), this.tsFillSignature(lm.arrow, r3), this.finishNode(r3, e4);
          }, r2.tsParseLiteralTypeNode = function() {
            var e4 = this, t3 = this.startNode();
            return t3.literal = function() {
              switch (e4.state.type) {
                case lm.num:
                case lm.bigint:
                case lm.string:
                case lm._true:
                case lm._false:
                  return e4.parseExprAtom();
                default:
                  throw e4.unexpected();
              }
            }(), this.finishNode(t3, "TSLiteralType");
          }, r2.tsParseTemplateLiteralType = function() {
            var e4 = this.startNode();
            return e4.literal = this.parseTemplate(false), this.finishNode(e4, "TSLiteralType");
          }, r2.parseTemplateSubstitution = function() {
            return this.state.inType ? this.tsParseType() : e3.prototype.parseTemplateSubstitution.call(this);
          }, r2.tsParseThisTypeOrThisTypePredicate = function() {
            var e4 = this.tsParseThisTypeNode();
            return this.isContextual("is") && !this.hasPrecedingLineBreak() ? this.tsParseThisTypePredicate(e4) : e4;
          }, r2.tsParseNonArrayType = function() {
            switch (this.state.type) {
              case lm.name:
              case lm._void:
              case lm._null:
                var e4 = this.match(lm._void) ? "TSVoidKeyword" : this.match(lm._null) ? "TSNullKeyword" : function(e5) {
                  switch (e5) {
                    case "any":
                      return "TSAnyKeyword";
                    case "boolean":
                      return "TSBooleanKeyword";
                    case "bigint":
                      return "TSBigIntKeyword";
                    case "never":
                      return "TSNeverKeyword";
                    case "number":
                      return "TSNumberKeyword";
                    case "object":
                      return "TSObjectKeyword";
                    case "string":
                      return "TSStringKeyword";
                    case "symbol":
                      return "TSSymbolKeyword";
                    case "undefined":
                      return "TSUndefinedKeyword";
                    case "unknown":
                      return "TSUnknownKeyword";
                    default:
                      return;
                  }
                }(this.state.value);
                if (e4 !== void 0 && this.lookaheadCharCode() !== 46) {
                  var t3 = this.startNode();
                  return this.next(), this.finishNode(t3, e4);
                }
                return this.tsParseTypeReference();
              case lm.string:
              case lm.num:
              case lm.bigint:
              case lm._true:
              case lm._false:
                return this.tsParseLiteralTypeNode();
              case lm.plusMin:
                if (this.state.value === "-") {
                  var r3 = this.startNode(), n2 = this.lookahead();
                  if (n2.type !== lm.num && n2.type !== lm.bigint)
                    throw this.unexpected();
                  return r3.literal = this.parseMaybeUnary(), this.finishNode(r3, "TSLiteralType");
                }
                break;
              case lm._this:
                return this.tsParseThisTypeOrThisTypePredicate();
              case lm._typeof:
                return this.tsParseTypeQuery();
              case lm._import:
                return this.tsParseImportType();
              case lm.braceL:
                return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();
              case lm.bracketL:
                return this.tsParseTupleType();
              case lm.parenL:
                return this.tsParseParenthesizedType();
              case lm.backQuote:
                return this.tsParseTemplateLiteralType();
            }
            throw this.unexpected();
          }, r2.tsParseArrayTypeOrHigher = function() {
            for (var e4 = this.tsParseNonArrayType(); !this.hasPrecedingLineBreak() && this.eat(lm.bracketL); )
              if (this.match(lm.bracketR)) {
                var t3 = this.startNodeAtNode(e4);
                t3.elementType = e4, this.expect(lm.bracketR), e4 = this.finishNode(t3, "TSArrayType");
              } else {
                var r3 = this.startNodeAtNode(e4);
                r3.objectType = e4, r3.indexType = this.tsParseType(), this.expect(lm.bracketR), e4 = this.finishNode(r3, "TSIndexedAccessType");
              }
            return e4;
          }, r2.tsParseTypeOperator = function(e4) {
            var t3 = this.startNode();
            return this.expectContextual(e4), t3.operator = e4, t3.typeAnnotation = this.tsParseTypeOperatorOrHigher(), e4 === "readonly" && this.tsCheckTypeAnnotationForReadOnly(t3), this.finishNode(t3, "TSTypeOperator");
          }, r2.tsCheckTypeAnnotationForReadOnly = function(e4) {
            switch (e4.typeAnnotation.type) {
              case "TSTupleType":
              case "TSArrayType":
                return;
              default:
                this.raise(e4.start, sy.UnexpectedReadonly);
            }
          }, r2.tsParseInferType = function() {
            var e4 = this.startNode();
            this.expectContextual("infer");
            var t3 = this.startNode();
            return t3.name = this.parseIdentifierName(t3.start), e4.typeParameter = this.finishNode(t3, "TSTypeParameter"), this.finishNode(e4, "TSInferType");
          }, r2.tsParseTypeOperatorOrHigher = function() {
            var e4 = this, t3 = ["keyof", "unique", "readonly"].find(function(t4) {
              return e4.isContextual(t4);
            });
            return t3 ? this.tsParseTypeOperator(t3) : this.isContextual("infer") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();
          }, r2.tsParseUnionOrIntersectionType = function(e4, t3, r3) {
            var n2 = this.startNode(), s2 = this.eat(r3), a2 = [];
            do {
              a2.push(t3());
            } while (this.eat(r3));
            return a2.length !== 1 || s2 ? (n2.types = a2, this.finishNode(n2, e4)) : a2[0];
          }, r2.tsParseIntersectionTypeOrHigher = function() {
            return this.tsParseUnionOrIntersectionType("TSIntersectionType", this.tsParseTypeOperatorOrHigher.bind(this), lm.bitwiseAND);
          }, r2.tsParseUnionTypeOrHigher = function() {
            return this.tsParseUnionOrIntersectionType("TSUnionType", this.tsParseIntersectionTypeOrHigher.bind(this), lm.bitwiseOR);
          }, r2.tsIsStartOfFunctionType = function() {
            return !!this.isRelational("<") || this.match(lm.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));
          }, r2.tsSkipParameterStart = function() {
            if (this.match(lm.name) || this.match(lm._this))
              return this.next(), true;
            if (this.match(lm.braceL)) {
              var e4 = 1;
              for (this.next(); e4 > 0; )
                this.match(lm.braceL) ? ++e4 : this.match(lm.braceR) && --e4, this.next();
              return true;
            }
            if (this.match(lm.bracketL)) {
              var t3 = 1;
              for (this.next(); t3 > 0; )
                this.match(lm.bracketL) ? ++t3 : this.match(lm.bracketR) && --t3, this.next();
              return true;
            }
            return false;
          }, r2.tsIsUnambiguouslyStartOfFunctionType = function() {
            if (this.next(), this.match(lm.parenR) || this.match(lm.ellipsis))
              return true;
            if (this.tsSkipParameterStart()) {
              if (this.match(lm.colon) || this.match(lm.comma) || this.match(lm.question) || this.match(lm.eq))
                return true;
              if (this.match(lm.parenR) && (this.next(), this.match(lm.arrow)))
                return true;
            }
            return false;
          }, r2.tsParseTypeOrTypePredicateAnnotation = function(e4) {
            var t3 = this;
            return this.tsInType(function() {
              var r3 = t3.startNode();
              t3.expect(e4);
              var n2 = t3.startNode(), s2 = !!t3.tsTryParse(t3.tsParseTypePredicateAsserts.bind(t3));
              if (s2 && t3.match(lm._this)) {
                var a2 = t3.tsParseThisTypeOrThisTypePredicate();
                return a2.type === "TSThisType" ? (n2.parameterName = a2, n2.asserts = true, n2.typeAnnotation = null, a2 = t3.finishNode(n2, "TSTypePredicate")) : (t3.resetStartLocationFromNode(a2, n2), a2.asserts = true), r3.typeAnnotation = a2, t3.finishNode(r3, "TSTypeAnnotation");
              }
              var i2 = t3.tsIsIdentifier() && t3.tsTryParse(t3.tsParseTypePredicatePrefix.bind(t3));
              if (!i2)
                return s2 ? (n2.parameterName = t3.parseIdentifier(), n2.asserts = s2, n2.typeAnnotation = null, r3.typeAnnotation = t3.finishNode(n2, "TSTypePredicate"), t3.finishNode(r3, "TSTypeAnnotation")) : t3.tsParseTypeAnnotation(false, r3);
              var o2 = t3.tsParseTypeAnnotation(false);
              return n2.parameterName = i2, n2.typeAnnotation = o2, n2.asserts = s2, r3.typeAnnotation = t3.finishNode(n2, "TSTypePredicate"), t3.finishNode(r3, "TSTypeAnnotation");
            });
          }, r2.tsTryParseTypeOrTypePredicateAnnotation = function() {
            return this.match(lm.colon) ? this.tsParseTypeOrTypePredicateAnnotation(lm.colon) : void 0;
          }, r2.tsTryParseTypeAnnotation = function() {
            return this.match(lm.colon) ? this.tsParseTypeAnnotation() : void 0;
          }, r2.tsTryParseType = function() {
            return this.tsEatThenParseType(lm.colon);
          }, r2.tsParseTypePredicatePrefix = function() {
            var e4 = this.parseIdentifier();
            if (this.isContextual("is") && !this.hasPrecedingLineBreak())
              return this.next(), e4;
          }, r2.tsParseTypePredicateAsserts = function() {
            if (!this.match(lm.name) || this.state.value !== "asserts" || this.hasPrecedingLineBreak())
              return false;
            var e4 = this.state.containsEsc;
            return this.next(), !(!this.match(lm.name) && !this.match(lm._this)) && (e4 && this.raise(this.state.lastTokStart, Em.InvalidEscapedReservedWord, "asserts"), true);
          }, r2.tsParseTypeAnnotation = function(e4, t3) {
            var r3 = this;
            return e4 === void 0 && (e4 = true), t3 === void 0 && (t3 = this.startNode()), this.tsInType(function() {
              e4 && r3.expect(lm.colon), t3.typeAnnotation = r3.tsParseType();
            }), this.finishNode(t3, "TSTypeAnnotation");
          }, r2.tsParseType = function() {
            ny(this.state.inType);
            var e4 = this.tsParseNonConditionalType();
            if (this.hasPrecedingLineBreak() || !this.eat(lm._extends))
              return e4;
            var t3 = this.startNodeAtNode(e4);
            return t3.checkType = e4, t3.extendsType = this.tsParseNonConditionalType(), this.expect(lm.question), t3.trueType = this.tsParseType(), this.expect(lm.colon), t3.falseType = this.tsParseType(), this.finishNode(t3, "TSConditionalType");
          }, r2.isAbstractConstructorSignature = function() {
            return this.isContextual("abstract") && this.lookahead().type === lm._new;
          }, r2.tsParseNonConditionalType = function() {
            return this.tsIsStartOfFunctionType() ? this.tsParseFunctionOrConstructorType("TSFunctionType") : this.match(lm._new) ? this.tsParseFunctionOrConstructorType("TSConstructorType") : this.isAbstractConstructorSignature() ? this.tsParseFunctionOrConstructorType("TSConstructorType", true) : this.tsParseUnionTypeOrHigher();
          }, r2.tsParseTypeAssertion = function() {
            var e4 = this.startNode(), t3 = this.tsTryNextParseConstantContext();
            return e4.typeAnnotation = t3 || this.tsNextThenParseType(), this.expectRelational(">"), e4.expression = this.parseMaybeUnary(), this.finishNode(e4, "TSTypeAssertion");
          }, r2.tsParseHeritageClause = function(e4) {
            var t3 = this.state.start, r3 = this.tsParseDelimitedList("HeritageClauseElement", this.tsParseExpressionWithTypeArguments.bind(this));
            return r3.length || this.raise(t3, sy.EmptyHeritageClauseType, e4), r3;
          }, r2.tsParseExpressionWithTypeArguments = function() {
            var e4 = this.startNode();
            return e4.expression = this.tsParseEntityName(false), this.isRelational("<") && (e4.typeParameters = this.tsParseTypeArguments()), this.finishNode(e4, "TSExpressionWithTypeArguments");
          }, r2.tsParseInterfaceDeclaration = function(e4) {
            e4.id = this.parseIdentifier(), this.checkLVal(e4.id, "typescript interface declaration", 130), e4.typeParameters = this.tsTryParseTypeParameters(), this.eat(lm._extends) && (e4.extends = this.tsParseHeritageClause("extends"));
            var t3 = this.startNode();
            return t3.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this)), e4.body = this.finishNode(t3, "TSInterfaceBody"), this.finishNode(e4, "TSInterfaceDeclaration");
          }, r2.tsParseTypeAliasDeclaration = function(e4) {
            var t3 = this;
            return e4.id = this.parseIdentifier(), this.checkLVal(e4.id, "typescript type alias", 2), e4.typeParameters = this.tsTryParseTypeParameters(), e4.typeAnnotation = this.tsInType(function() {
              if (t3.expect(lm.eq), t3.isContextual("intrinsic") && t3.lookahead().type !== lm.dot) {
                var e5 = t3.startNode();
                return t3.next(), t3.finishNode(e5, "TSIntrinsicKeyword");
              }
              return t3.tsParseType();
            }), this.semicolon(), this.finishNode(e4, "TSTypeAliasDeclaration");
          }, r2.tsInNoContext = function(e4) {
            var t3 = this.state.context;
            this.state.context = [t3[0]];
            try {
              return e4();
            } finally {
              this.state.context = t3;
            }
          }, r2.tsInType = function(e4) {
            var t3 = this.state.inType;
            this.state.inType = true;
            try {
              return e4();
            } finally {
              this.state.inType = t3;
            }
          }, r2.tsEatThenParseType = function(e4) {
            return this.match(e4) ? this.tsNextThenParseType() : void 0;
          }, r2.tsExpectThenParseType = function(e4) {
            var t3 = this;
            return this.tsDoThenParseType(function() {
              return t3.expect(e4);
            });
          }, r2.tsNextThenParseType = function() {
            var e4 = this;
            return this.tsDoThenParseType(function() {
              return e4.next();
            });
          }, r2.tsDoThenParseType = function(e4) {
            var t3 = this;
            return this.tsInType(function() {
              return e4(), t3.tsParseType();
            });
          }, r2.tsParseEnumMember = function() {
            var e4 = this.startNode();
            return e4.id = this.match(lm.string) ? this.parseExprAtom() : this.parseIdentifier(true), this.eat(lm.eq) && (e4.initializer = this.parseMaybeAssignAllowIn()), this.finishNode(e4, "TSEnumMember");
          }, r2.tsParseEnumDeclaration = function(e4, t3) {
            return t3 && (e4.const = true), e4.id = this.parseIdentifier(), this.checkLVal(e4.id, "typescript enum declaration", t3 ? 779 : 267), this.expect(lm.braceL), e4.members = this.tsParseDelimitedList("EnumMembers", this.tsParseEnumMember.bind(this)), this.expect(lm.braceR), this.finishNode(e4, "TSEnumDeclaration");
          }, r2.tsParseModuleBlock = function() {
            var e4 = this.startNode();
            return this.scope.enter(0), this.expect(lm.braceL), this.parseBlockOrModuleBlockBody(e4.body = [], void 0, true, lm.braceR), this.scope.exit(), this.finishNode(e4, "TSModuleBlock");
          }, r2.tsParseModuleOrNamespaceDeclaration = function(e4, t3) {
            if (t3 === void 0 && (t3 = false), e4.id = this.parseIdentifier(), t3 || this.checkLVal(e4.id, "module or namespace declaration", 1024), this.eat(lm.dot)) {
              var r3 = this.startNode();
              this.tsParseModuleOrNamespaceDeclaration(r3, true), e4.body = r3;
            } else
              this.scope.enter(jm), this.prodParam.enter(0), e4.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit();
            return this.finishNode(e4, "TSModuleDeclaration");
          }, r2.tsParseAmbientExternalModuleDeclaration = function(e4) {
            return this.isContextual("global") ? (e4.global = true, e4.id = this.parseIdentifier()) : this.match(lm.string) ? e4.id = this.parseExprAtom() : this.unexpected(), this.match(lm.braceL) ? (this.scope.enter(jm), this.prodParam.enter(0), e4.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit()) : this.semicolon(), this.finishNode(e4, "TSModuleDeclaration");
          }, r2.tsParseImportEqualsDeclaration = function(e4, t3) {
            e4.isExport = t3 || false, e4.id = this.parseIdentifier(), this.checkLVal(e4.id, "import equals declaration", 9), this.expect(lm.eq);
            var r3 = this.tsParseModuleReference();
            return e4.importKind === "type" && r3.type !== "TSExternalModuleReference" && this.raise(r3.start, sy.ImportAliasHasImportType), e4.moduleReference = r3, this.semicolon(), this.finishNode(e4, "TSImportEqualsDeclaration");
          }, r2.tsIsExternalModuleReference = function() {
            return this.isContextual("require") && this.lookaheadCharCode() === 40;
          }, r2.tsParseModuleReference = function() {
            return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);
          }, r2.tsParseExternalModuleReference = function() {
            var e4 = this.startNode();
            if (this.expectContextual("require"), this.expect(lm.parenL), !this.match(lm.string))
              throw this.unexpected();
            return e4.expression = this.parseExprAtom(), this.expect(lm.parenR), this.finishNode(e4, "TSExternalModuleReference");
          }, r2.tsLookAhead = function(e4) {
            var t3 = this.state.clone(), r3 = e4();
            return this.state = t3, r3;
          }, r2.tsTryParseAndCatch = function(e4) {
            var t3 = this.tryParse(function(t4) {
              return e4() || t4();
            });
            if (!t3.aborted && t3.node)
              return t3.error && (this.state = t3.failState), t3.node;
          }, r2.tsTryParse = function(e4) {
            var t3 = this.state.clone(), r3 = e4();
            return r3 !== void 0 && r3 !== false ? r3 : void (this.state = t3);
          }, r2.tsTryParseDeclare = function(e4) {
            var t3 = this;
            if (!this.isLineTerminator()) {
              var r3, n2 = this.state.type;
              return this.isContextual("let") && (n2 = lm._var, r3 = "let"), this.tsInAmbientContext(function() {
                switch (n2) {
                  case lm._function:
                    return e4.declare = true, t3.parseFunctionStatement(e4, false, true);
                  case lm._class:
                    return e4.declare = true, t3.parseClass(e4, true, false);
                  case lm._const:
                    if (t3.match(lm._const) && t3.isLookaheadContextual("enum"))
                      return t3.expect(lm._const), t3.expectContextual("enum"), t3.tsParseEnumDeclaration(e4, true);
                  case lm._var:
                    return r3 = r3 || t3.state.value, t3.parseVarStatement(e4, r3);
                  case lm.name:
                    var s2 = t3.state.value;
                    return s2 === "global" ? t3.tsParseAmbientExternalModuleDeclaration(e4) : t3.tsParseDeclaration(e4, s2, true);
                }
              });
            }
          }, r2.tsTryParseExportDeclaration = function() {
            return this.tsParseDeclaration(this.startNode(), this.state.value, true);
          }, r2.tsParseExpressionStatement = function(e4, t3) {
            switch (t3.name) {
              case "declare":
                var r3 = this.tsTryParseDeclare(e4);
                if (r3)
                  return r3.declare = true, r3;
                break;
              case "global":
                if (this.match(lm.braceL)) {
                  this.scope.enter(jm), this.prodParam.enter(0);
                  var n2 = e4;
                  return n2.global = true, n2.id = t3, n2.body = this.tsParseModuleBlock(), this.scope.exit(), this.prodParam.exit(), this.finishNode(n2, "TSModuleDeclaration");
                }
                break;
              default:
                return this.tsParseDeclaration(e4, t3.name, false);
            }
          }, r2.tsParseDeclaration = function(e4, t3, r3) {
            switch (t3) {
              case "abstract":
                if (this.tsCheckLineTerminator(r3) && (this.match(lm._class) || this.match(lm.name)))
                  return this.tsParseAbstractDeclaration(e4);
                break;
              case "enum":
                if (r3 || this.match(lm.name))
                  return r3 && this.next(), this.tsParseEnumDeclaration(e4, false);
                break;
              case "interface":
                if (this.tsCheckLineTerminator(r3) && this.match(lm.name))
                  return this.tsParseInterfaceDeclaration(e4);
                break;
              case "module":
                if (this.tsCheckLineTerminator(r3)) {
                  if (this.match(lm.string))
                    return this.tsParseAmbientExternalModuleDeclaration(e4);
                  if (this.match(lm.name))
                    return this.tsParseModuleOrNamespaceDeclaration(e4);
                }
                break;
              case "namespace":
                if (this.tsCheckLineTerminator(r3) && this.match(lm.name))
                  return this.tsParseModuleOrNamespaceDeclaration(e4);
                break;
              case "type":
                if (this.tsCheckLineTerminator(r3) && this.match(lm.name))
                  return this.tsParseTypeAliasDeclaration(e4);
            }
          }, r2.tsCheckLineTerminator = function(e4) {
            return e4 ? !this.hasFollowingLineBreak() && (this.next(), true) : !this.isLineTerminator();
          }, r2.tsTryParseGenericAsyncArrowFunction = function(t3, r3) {
            var n2 = this;
            if (this.isRelational("<")) {
              var s2 = this.state.maybeInArrowParameters;
              this.state.maybeInArrowParameters = true;
              var a2 = this.tsTryParseAndCatch(function() {
                var s3 = n2.startNodeAt(t3, r3);
                return s3.typeParameters = n2.tsParseTypeParameters(), e3.prototype.parseFunctionParams.call(n2, s3), s3.returnType = n2.tsTryParseTypeOrTypePredicateAnnotation(), n2.expect(lm.arrow), s3;
              });
              if (this.state.maybeInArrowParameters = s2, a2)
                return this.parseArrowExpression(a2, null, true);
            }
          }, r2.tsParseTypeArguments = function() {
            var e4 = this, t3 = this.startNode();
            return t3.params = this.tsInType(function() {
              return e4.tsInNoContext(function() {
                return e4.expectRelational("<"), e4.tsParseDelimitedList("TypeParametersOrArguments", e4.tsParseType.bind(e4));
              });
            }), t3.params.length === 0 && this.raise(t3.start, sy.EmptyTypeArguments), this.expectRelational(">"), this.finishNode(t3, "TSTypeParameterInstantiation");
          }, r2.tsIsDeclarationStart = function() {
            if (this.match(lm.name))
              switch (this.state.value) {
                case "abstract":
                case "declare":
                case "enum":
                case "interface":
                case "module":
                case "namespace":
                case "type":
                  return true;
              }
            return false;
          }, r2.isExportDefaultSpecifier = function() {
            return !this.tsIsDeclarationStart() && e3.prototype.isExportDefaultSpecifier.call(this);
          }, r2.parseAssignableListItem = function(e4, t3) {
            var r3, n2 = this.state.start, s2 = this.state.startLoc, a2 = false, i2 = false;
            if (e4 !== void 0) {
              var o2 = {};
              this.tsParseModifiers(o2, ["public", "private", "protected", "override", "readonly"]), r3 = o2.accessibility, i2 = o2.override, a2 = o2.readonly, e4 === false && (r3 || a2 || i2) && this.raise(n2, sy.UnexpectedParameterModifier);
            }
            var u2 = this.parseMaybeDefault();
            this.parseAssignableListItemTypes(u2);
            var l2 = this.parseMaybeDefault(u2.start, u2.loc.start, u2);
            if (r3 || a2 || i2) {
              var c2 = this.startNodeAt(n2, s2);
              return t3.length && (c2.decorators = t3), r3 && (c2.accessibility = r3), a2 && (c2.readonly = a2), i2 && (c2.override = i2), l2.type !== "Identifier" && l2.type !== "AssignmentPattern" && this.raise(c2.start, sy.UnsupportedParameterPropertyKind), c2.parameter = l2, this.finishNode(c2, "TSParameterProperty");
            }
            return t3.length && (u2.decorators = t3), l2;
          }, r2.parseFunctionBodyAndFinish = function(t3, r3, n2) {
            n2 === void 0 && (n2 = false), this.match(lm.colon) && (t3.returnType = this.tsParseTypeOrTypePredicateAnnotation(lm.colon));
            var s2 = r3 === "FunctionDeclaration" ? "TSDeclareFunction" : r3 === "ClassMethod" ? "TSDeclareMethod" : void 0;
            s2 && !this.match(lm.braceL) && this.isLineTerminator() ? this.finishNode(t3, s2) : s2 === "TSDeclareFunction" && this.state.isAmbientContext && (this.raise(t3.start, sy.DeclareFunctionHasImplementation), t3.declare) ? e3.prototype.parseFunctionBodyAndFinish.call(this, t3, s2, n2) : e3.prototype.parseFunctionBodyAndFinish.call(this, t3, r3, n2);
          }, r2.registerFunctionStatementId = function(t3) {
            !t3.body && t3.id ? this.checkLVal(t3.id, "function name", Rm) : e3.prototype.registerFunctionStatementId.apply(this, arguments);
          }, r2.tsCheckForInvalidTypeCasts = function(e4) {
            var t3 = this;
            e4.forEach(function(e5) {
              (e5 == null ? void 0 : e5.type) === "TSTypeCastExpression" && t3.raise(e5.typeAnnotation.start, sy.UnexpectedTypeAnnotation);
            });
          }, r2.toReferencedList = function(e4, t3) {
            return this.tsCheckForInvalidTypeCasts(e4), e4;
          }, r2.parseArrayLike = function() {
            for (var t3, r3 = arguments.length, n2 = new Array(r3), s2 = 0; s2 < r3; s2++)
              n2[s2] = arguments[s2];
            var a2 = (t3 = e3.prototype.parseArrayLike).call.apply(t3, [this].concat(n2));
            return a2.type === "ArrayExpression" && this.tsCheckForInvalidTypeCasts(a2.elements), a2;
          }, r2.parseSubscript = function(t3, r3, n2, s2, a2) {
            var i2 = this;
            if (!this.hasPrecedingLineBreak() && this.match(lm.bang)) {
              this.state.exprAllowed = false, this.next();
              var o2 = this.startNodeAt(r3, n2);
              return o2.expression = t3, this.finishNode(o2, "TSNonNullExpression");
            }
            if (this.isRelational("<")) {
              var u2 = this.tsTryParseAndCatch(function() {
                if (!s2 && i2.atPossibleAsyncArrow(t3)) {
                  var e4 = i2.tsTryParseGenericAsyncArrowFunction(r3, n2);
                  if (e4)
                    return e4;
                }
                var o3 = i2.startNodeAt(r3, n2);
                o3.callee = t3;
                var u3 = i2.tsParseTypeArguments();
                if (u3) {
                  if (!s2 && i2.eat(lm.parenL))
                    return o3.arguments = i2.parseCallExpressionArguments(lm.parenR, false), i2.tsCheckForInvalidTypeCasts(o3.arguments), o3.typeParameters = u3, a2.optionalChainMember && (o3.optional = false), i2.finishCallExpression(o3, a2.optionalChainMember);
                  if (i2.match(lm.backQuote)) {
                    var l2 = i2.parseTaggedTemplateExpression(t3, r3, n2, a2);
                    return l2.typeParameters = u3, l2;
                  }
                }
                i2.unexpected();
              });
              if (u2)
                return u2;
            }
            return e3.prototype.parseSubscript.call(this, t3, r3, n2, s2, a2);
          }, r2.parseNewArguments = function(t3) {
            var r3 = this;
            if (this.isRelational("<")) {
              var n2 = this.tsTryParseAndCatch(function() {
                var e4 = r3.tsParseTypeArguments();
                return r3.match(lm.parenL) || r3.unexpected(), e4;
              });
              n2 && (t3.typeParameters = n2);
            }
            e3.prototype.parseNewArguments.call(this, t3);
          }, r2.parseExprOp = function(t3, r3, n2, s2) {
            if (ry(lm._in.binop) > s2 && !this.hasPrecedingLineBreak() && this.isContextual("as")) {
              var a2 = this.startNodeAt(r3, n2);
              a2.expression = t3;
              var i2 = this.tsTryNextParseConstantContext();
              return a2.typeAnnotation = i2 || this.tsNextThenParseType(), this.finishNode(a2, "TSAsExpression"), this.reScan_lt_gt(), this.parseExprOp(a2, r3, n2, s2);
            }
            return e3.prototype.parseExprOp.call(this, t3, r3, n2, s2);
          }, r2.checkReservedWord = function(e4, t3, r3, n2) {
          }, r2.checkDuplicateExports = function() {
          }, r2.parseImport = function(t3) {
            if (t3.importKind = "value", this.match(lm.name) || this.match(lm.star) || this.match(lm.braceL)) {
              var r3 = this.lookahead();
              if (!this.isContextual("type") || r3.type === lm.comma || r3.type === lm.name && r3.value === "from" || r3.type === lm.eq || (t3.importKind = "type", this.next(), r3 = this.lookahead()), this.match(lm.name) && r3.type === lm.eq)
                return this.tsParseImportEqualsDeclaration(t3);
            }
            var n2 = e3.prototype.parseImport.call(this, t3);
            return n2.importKind === "type" && n2.specifiers.length > 1 && n2.specifiers[0].type === "ImportDefaultSpecifier" && this.raise(n2.start, sy.TypeImportCannotSpecifyDefaultAndNamed), n2;
          }, r2.parseExport = function(t3) {
            if (this.match(lm._import))
              return this.next(), this.isContextual("type") && this.lookaheadCharCode() !== 61 ? (t3.importKind = "type", this.next()) : t3.importKind = "value", this.tsParseImportEqualsDeclaration(t3, true);
            if (this.eat(lm.eq)) {
              var r3 = t3;
              return r3.expression = this.parseExpression(), this.semicolon(), this.finishNode(r3, "TSExportAssignment");
            }
            if (this.eatContextual("as")) {
              var n2 = t3;
              return this.expectContextual("namespace"), n2.id = this.parseIdentifier(), this.semicolon(), this.finishNode(n2, "TSNamespaceExportDeclaration");
            }
            return this.isContextual("type") && this.lookahead().type === lm.braceL ? (this.next(), t3.exportKind = "type") : t3.exportKind = "value", e3.prototype.parseExport.call(this, t3);
          }, r2.isAbstractClass = function() {
            return this.isContextual("abstract") && this.lookahead().type === lm._class;
          }, r2.parseExportDefaultExpression = function() {
            if (this.isAbstractClass()) {
              var t3 = this.startNode();
              return this.next(), t3.abstract = true, this.parseClass(t3, true, true), t3;
            }
            if (this.state.value === "interface") {
              var r3 = this.tsParseDeclaration(this.startNode(), this.state.value, true);
              if (r3)
                return r3;
            }
            return e3.prototype.parseExportDefaultExpression.call(this);
          }, r2.parseStatementContent = function(t3, r3) {
            if (this.state.type === lm._const) {
              var n2 = this.lookahead();
              if (n2.type === lm.name && n2.value === "enum") {
                var s2 = this.startNode();
                return this.expect(lm._const), this.expectContextual("enum"), this.tsParseEnumDeclaration(s2, true);
              }
            }
            return e3.prototype.parseStatementContent.call(this, t3, r3);
          }, r2.parseAccessModifier = function() {
            return this.tsParseModifier(["public", "protected", "private"]);
          }, r2.tsHasSomeModifiers = function(e4, t3) {
            return t3.some(function(t4) {
              return ay(t4) ? e4.accessibility === t4 : !!e4[t4];
            });
          }, r2.parseClassMember = function(e4, t3, r3) {
            var n2 = this, s2 = ["declare", "private", "public", "protected", "override", "abstract", "readonly"];
            this.tsParseModifiers(t3, s2.concat(["static"]));
            var a2 = function() {
              var a3 = !!t3.static;
              a3 && n2.eat(lm.braceL) ? (n2.tsHasSomeModifiers(t3, s2) && n2.raise(n2.state.pos, sy.StaticBlockCannotHaveModifier), n2.parseClassStaticBlock(e4, t3)) : n2.parseClassMemberWithIsStatic(e4, t3, r3, a3);
            };
            t3.declare ? this.tsInAmbientContext(a2) : a2();
          }, r2.parseClassMemberWithIsStatic = function(t3, r3, n2, s2) {
            var a2 = this.tsTryParseIndexSignature(r3);
            if (a2)
              return t3.body.push(a2), r3.abstract && this.raise(r3.start, sy.IndexSignatureHasAbstract), r3.accessibility && this.raise(r3.start, sy.IndexSignatureHasAccessibility, r3.accessibility), r3.declare && this.raise(r3.start, sy.IndexSignatureHasDeclare), void (r3.override && this.raise(r3.start, sy.IndexSignatureHasOverride));
            !this.state.inAbstractClass && r3.abstract && this.raise(r3.start, sy.NonAbstractClassHasAbstractMethod), r3.override && (n2.hadSuperClass || this.raise(r3.start, sy.OverrideNotInSubClass)), e3.prototype.parseClassMemberWithIsStatic.call(this, t3, r3, n2, s2);
          }, r2.parsePostMemberNameModifiers = function(e4) {
            this.eat(lm.question) && (e4.optional = true), e4.readonly && this.match(lm.parenL) && this.raise(e4.start, sy.ClassMethodHasReadonly), e4.declare && this.match(lm.parenL) && this.raise(e4.start, sy.ClassMethodHasDeclare);
          }, r2.parseExpressionStatement = function(t3, r3) {
            return (r3.type === "Identifier" ? this.tsParseExpressionStatement(t3, r3) : void 0) || e3.prototype.parseExpressionStatement.call(this, t3, r3);
          }, r2.shouldParseExportDeclaration = function() {
            return !!this.tsIsDeclarationStart() || e3.prototype.shouldParseExportDeclaration.call(this);
          }, r2.parseConditional = function(t3, r3, n2, s2) {
            var a2 = this;
            if (!this.state.maybeInArrowParameters || !this.match(lm.question))
              return e3.prototype.parseConditional.call(this, t3, r3, n2, s2);
            var i2 = this.tryParse(function() {
              return e3.prototype.parseConditional.call(a2, t3, r3, n2);
            });
            return i2.node ? (i2.error && (this.state = i2.failState), i2.node) : (i2.error && e3.prototype.setOptionalParametersError.call(this, s2, i2.error), t3);
          }, r2.parseParenItem = function(t3, r3, n2) {
            if (t3 = e3.prototype.parseParenItem.call(this, t3, r3, n2), this.eat(lm.question) && (t3.optional = true, this.resetEndLocation(t3)), this.match(lm.colon)) {
              var s2 = this.startNodeAt(r3, n2);
              return s2.expression = t3, s2.typeAnnotation = this.tsParseTypeAnnotation(), this.finishNode(s2, "TSTypeCastExpression");
            }
            return t3;
          }, r2.parseExportDeclaration = function(t3) {
            var r3, n2 = this.state.start, s2 = this.state.startLoc, a2 = this.eatContextual("declare");
            if (a2 && (this.isContextual("declare") || !this.shouldParseExportDeclaration()))
              throw this.raise(this.state.start, sy.ExpectedAmbientAfterExportDeclare);
            return this.match(lm.name) && (r3 = this.tsTryParseExportDeclaration()), r3 || (r3 = e3.prototype.parseExportDeclaration.call(this, t3)), r3 && (r3.type === "TSInterfaceDeclaration" || r3.type === "TSTypeAliasDeclaration" || a2) && (t3.exportKind = "type"), r3 && a2 && (this.resetStartLocation(r3, n2, s2), r3.declare = true), r3;
          }, r2.parseClassId = function(t3, r3, n2) {
            if (r3 && !n2 || !this.isContextual("implements")) {
              e3.prototype.parseClassId.call(this, t3, r3, n2, t3.declare ? Rm : 139);
              var s2 = this.tsTryParseTypeParameters();
              s2 && (t3.typeParameters = s2);
            }
          }, r2.parseClassPropertyAnnotation = function(e4) {
            !e4.optional && this.eat(lm.bang) && (e4.definite = true);
            var t3 = this.tsTryParseTypeAnnotation();
            t3 && (e4.typeAnnotation = t3);
          }, r2.parseClassProperty = function(t3) {
            return this.parseClassPropertyAnnotation(t3), this.state.isAmbientContext && this.match(lm.eq) && this.raise(this.state.start, sy.DeclareClassFieldHasInitializer), e3.prototype.parseClassProperty.call(this, t3);
          }, r2.parseClassPrivateProperty = function(t3) {
            return t3.abstract && this.raise(t3.start, sy.PrivateElementHasAbstract), t3.accessibility && this.raise(t3.start, sy.PrivateElementHasAccessibility, t3.accessibility), this.parseClassPropertyAnnotation(t3), e3.prototype.parseClassPrivateProperty.call(this, t3);
          }, r2.pushClassMethod = function(t3, r3, n2, s2, a2, i2) {
            var o2 = this.tsTryParseTypeParameters();
            o2 && a2 && this.raise(o2.start, sy.ConstructorHasTypeParameters), !r3.declare || r3.kind !== "get" && r3.kind !== "set" || this.raise(r3.start, sy.DeclareAccessor, r3.kind), o2 && (r3.typeParameters = o2), e3.prototype.pushClassMethod.call(this, t3, r3, n2, s2, a2, i2);
          }, r2.pushClassPrivateMethod = function(t3, r3, n2, s2) {
            var a2 = this.tsTryParseTypeParameters();
            a2 && (r3.typeParameters = a2), e3.prototype.pushClassPrivateMethod.call(this, t3, r3, n2, s2);
          }, r2.parseClassSuper = function(t3) {
            e3.prototype.parseClassSuper.call(this, t3), t3.superClass && this.isRelational("<") && (t3.superTypeParameters = this.tsParseTypeArguments()), this.eatContextual("implements") && (t3.implements = this.tsParseHeritageClause("implements"));
          }, r2.parseObjPropValue = function(t3) {
            var r3, n2 = this.tsTryParseTypeParameters();
            n2 && (t3.typeParameters = n2);
            for (var s2 = arguments.length, a2 = new Array(s2 > 1 ? s2 - 1 : 0), i2 = 1; i2 < s2; i2++)
              a2[i2 - 1] = arguments[i2];
            (r3 = e3.prototype.parseObjPropValue).call.apply(r3, [this, t3].concat(a2));
          }, r2.parseFunctionParams = function(t3, r3) {
            var n2 = this.tsTryParseTypeParameters();
            n2 && (t3.typeParameters = n2), e3.prototype.parseFunctionParams.call(this, t3, r3);
          }, r2.parseVarId = function(t3, r3) {
            e3.prototype.parseVarId.call(this, t3, r3), t3.id.type === "Identifier" && this.eat(lm.bang) && (t3.definite = true);
            var n2 = this.tsTryParseTypeAnnotation();
            n2 && (t3.id.typeAnnotation = n2, this.resetEndLocation(t3.id));
          }, r2.parseAsyncArrowFromCallExpression = function(t3, r3) {
            return this.match(lm.colon) && (t3.returnType = this.tsParseTypeAnnotation()), e3.prototype.parseAsyncArrowFromCallExpression.call(this, t3, r3);
          }, r2.parseMaybeAssign = function() {
            for (var t3, r3, n2, s2, a2, i2, o2, u2, l2, c2, p2, d2, f2 = this, h2 = arguments.length, m2 = new Array(h2), y2 = 0; y2 < h2; y2++)
              m2[y2] = arguments[y2];
            if (this.hasPlugin("jsx") && (this.match(lm.jsxTagStart) || this.isRelational("<"))) {
              if (u2 = this.state.clone(), !(l2 = this.tryParse(function() {
                var t4;
                return (t4 = e3.prototype.parseMaybeAssign).call.apply(t4, [f2].concat(m2));
              }, u2)).error)
                return l2.node;
              var g2 = this.state.context;
              g2[g2.length - 1] === Cm.j_oTag ? g2.length -= 2 : g2[g2.length - 1] === Cm.j_expr && (g2.length -= 1);
            }
            if (!((t3 = l2) != null && t3.error || this.isRelational("<")))
              return (p2 = e3.prototype.parseMaybeAssign).call.apply(p2, [this].concat(m2));
            u2 = u2 || this.state.clone();
            var v2 = this.tryParse(function(t4) {
              var r4, n3, s3;
              d2 = f2.tsParseTypeParameters();
              var a3 = (r4 = e3.prototype.parseMaybeAssign).call.apply(r4, [f2].concat(m2));
              return (a3.type !== "ArrowFunctionExpression" || (n3 = a3.extra) != null && n3.parenthesized) && t4(), ((s3 = d2) == null ? void 0 : s3.params.length) !== 0 && f2.resetStartLocationFromNode(a3, d2), a3.typeParameters = d2, a3;
            }, u2);
            if (!v2.error && !v2.aborted)
              return v2.node;
            if (!l2 && (ny(!this.hasPlugin("jsx")), !(c2 = this.tryParse(function() {
              var t4;
              return (t4 = e3.prototype.parseMaybeAssign).call.apply(t4, [f2].concat(m2));
            }, u2)).error))
              return c2.node;
            if ((r3 = l2) != null && r3.node)
              return this.state = l2.failState, l2.node;
            if (v2.node)
              return this.state = v2.failState, v2.node;
            if ((n2 = c2) != null && n2.node)
              return this.state = c2.failState, c2.node;
            if ((s2 = l2) != null && s2.thrown)
              throw l2.error;
            if (v2.thrown)
              throw v2.error;
            if ((a2 = c2) != null && a2.thrown)
              throw c2.error;
            throw ((i2 = l2) == null ? void 0 : i2.error) || v2.error || ((o2 = c2) == null ? void 0 : o2.error);
          }, r2.parseMaybeUnary = function(t3) {
            return !this.hasPlugin("jsx") && this.isRelational("<") ? this.tsParseTypeAssertion() : e3.prototype.parseMaybeUnary.call(this, t3);
          }, r2.parseArrow = function(t3) {
            var r3 = this;
            if (this.match(lm.colon)) {
              var n2 = this.tryParse(function(e4) {
                var t4 = r3.tsParseTypeOrTypePredicateAnnotation(lm.colon);
                return !r3.canInsertSemicolon() && r3.match(lm.arrow) || e4(), t4;
              });
              if (n2.aborted)
                return;
              n2.thrown || (n2.error && (this.state = n2.failState), t3.returnType = n2.node);
            }
            return e3.prototype.parseArrow.call(this, t3);
          }, r2.parseAssignableListItemTypes = function(e4) {
            this.eat(lm.question) && (e4.type === "Identifier" || this.state.isAmbientContext || this.state.inType || this.raise(e4.start, sy.PatternIsOptional), e4.optional = true);
            var t3 = this.tsTryParseTypeAnnotation();
            return t3 && (e4.typeAnnotation = t3), this.resetEndLocation(e4), e4;
          }, r2.toAssignable = function(t3, r3) {
            switch (r3 === void 0 && (r3 = false), t3.type) {
              case "TSTypeCastExpression":
                return e3.prototype.toAssignable.call(this, this.typeCastToParameter(t3), r3);
              case "TSParameterProperty":
                return e3.prototype.toAssignable.call(this, t3, r3);
              case "ParenthesizedExpression":
                return this.toAssignableParenthesizedExpression(t3, r3);
              case "TSAsExpression":
              case "TSNonNullExpression":
              case "TSTypeAssertion":
                return t3.expression = this.toAssignable(t3.expression, r3), t3;
              default:
                return e3.prototype.toAssignable.call(this, t3, r3);
            }
          }, r2.toAssignableParenthesizedExpression = function(t3, r3) {
            switch (t3.expression.type) {
              case "TSAsExpression":
              case "TSNonNullExpression":
              case "TSTypeAssertion":
              case "ParenthesizedExpression":
                return t3.expression = this.toAssignable(t3.expression, r3), t3;
              default:
                return e3.prototype.toAssignable.call(this, t3, r3);
            }
          }, r2.checkLVal = function(t3, r3) {
            for (var n2, s2, a2 = arguments.length, i2 = new Array(a2 > 2 ? a2 - 2 : 0), o2 = 2; o2 < a2; o2++)
              i2[o2 - 2] = arguments[o2];
            switch (t3.type) {
              case "TSTypeCastExpression":
                return;
              case "TSParameterProperty":
                return void this.checkLVal.apply(this, [t3.parameter, "parameter property"].concat(i2));
              case "TSAsExpression":
              case "TSTypeAssertion":
                if (!(i2[0] || r3 === "parenthesized expression" || (n2 = t3.extra) != null && n2.parenthesized)) {
                  this.raise(t3.start, Em.InvalidLhs, r3);
                  break;
                }
                return void this.checkLVal.apply(this, [t3.expression, "parenthesized expression"].concat(i2));
              case "TSNonNullExpression":
                return void this.checkLVal.apply(this, [t3.expression, r3].concat(i2));
              default:
                return void (s2 = e3.prototype.checkLVal).call.apply(s2, [this, t3, r3].concat(i2));
            }
          }, r2.parseBindingAtom = function() {
            switch (this.state.type) {
              case lm._this:
                return this.parseIdentifier(true);
              default:
                return e3.prototype.parseBindingAtom.call(this);
            }
          }, r2.parseMaybeDecoratorArguments = function(t3) {
            if (this.isRelational("<")) {
              var r3 = this.tsParseTypeArguments();
              if (this.match(lm.parenL)) {
                var n2 = e3.prototype.parseMaybeDecoratorArguments.call(this, t3);
                return n2.typeParameters = r3, n2;
              }
              this.unexpected(this.state.start, lm.parenL);
            }
            return e3.prototype.parseMaybeDecoratorArguments.call(this, t3);
          }, r2.checkCommaAfterRest = function(t3) {
            this.state.isAmbientContext && this.match(lm.comma) && this.lookaheadCharCode() === t3 ? this.next() : e3.prototype.checkCommaAfterRest.call(this, t3);
          }, r2.isClassMethod = function() {
            return this.isRelational("<") || e3.prototype.isClassMethod.call(this);
          }, r2.isClassProperty = function() {
            return this.match(lm.bang) || this.match(lm.colon) || e3.prototype.isClassProperty.call(this);
          }, r2.parseMaybeDefault = function() {
            for (var t3, r3 = arguments.length, n2 = new Array(r3), s2 = 0; s2 < r3; s2++)
              n2[s2] = arguments[s2];
            var a2 = (t3 = e3.prototype.parseMaybeDefault).call.apply(t3, [this].concat(n2));
            return a2.type === "AssignmentPattern" && a2.typeAnnotation && a2.right.start < a2.typeAnnotation.start && this.raise(a2.typeAnnotation.start, sy.TypeAnnotationAfterAssign), a2;
          }, r2.getTokenFromCode = function(t3) {
            return !this.state.inType || t3 !== 62 && t3 !== 60 ? e3.prototype.getTokenFromCode.call(this, t3) : this.finishOp(lm.relational, 1);
          }, r2.reScan_lt_gt = function() {
            if (this.match(lm.relational)) {
              var e4 = this.input.charCodeAt(this.state.start);
              e4 !== 60 && e4 !== 62 || (this.state.pos -= 1, this.readToken_lt_gt(e4));
            }
          }, r2.toAssignableList = function(t3) {
            for (var r3 = 0; r3 < t3.length; r3++) {
              var n2 = t3[r3];
              if (n2)
                switch (n2.type) {
                  case "TSTypeCastExpression":
                    t3[r3] = this.typeCastToParameter(n2);
                    break;
                  case "TSAsExpression":
                  case "TSTypeAssertion":
                    this.state.maybeInArrowParameters ? this.raise(n2.start, sy.UnexpectedTypeCastInParameter) : t3[r3] = this.typeCastToParameter(n2);
                }
            }
            return e3.prototype.toAssignableList.apply(this, arguments);
          }, r2.typeCastToParameter = function(e4) {
            return e4.expression.typeAnnotation = e4.typeAnnotation, this.resetEndLocation(e4.expression, e4.typeAnnotation.end, e4.typeAnnotation.loc.end), e4.expression;
          }, r2.shouldParseArrow = function() {
            return this.match(lm.colon) || e3.prototype.shouldParseArrow.call(this);
          }, r2.shouldParseAsyncArrow = function() {
            return this.match(lm.colon) || e3.prototype.shouldParseAsyncArrow.call(this);
          }, r2.canHaveLeadingDecorator = function() {
            return e3.prototype.canHaveLeadingDecorator.call(this) || this.isAbstractClass();
          }, r2.jsxParseOpeningElementAfterName = function(t3) {
            var r3 = this;
            if (this.isRelational("<")) {
              var n2 = this.tsTryParseAndCatch(function() {
                return r3.tsParseTypeArguments();
              });
              n2 && (t3.typeParameters = n2);
            }
            return e3.prototype.jsxParseOpeningElementAfterName.call(this, t3);
          }, r2.getGetterSetterExpectedParamCount = function(t3) {
            var r3 = e3.prototype.getGetterSetterExpectedParamCount.call(this, t3), n2 = this.getObjectOrClassMethodParams(t3)[0];
            return n2 && this.isThisParam(n2) ? r3 + 1 : r3;
          }, r2.parseCatchClauseParam = function() {
            var t3 = e3.prototype.parseCatchClauseParam.call(this), r3 = this.tsTryParseTypeAnnotation();
            return r3 && (t3.typeAnnotation = r3, this.resetEndLocation(t3)), t3;
          }, r2.tsInAmbientContext = function(e4) {
            var t3 = this.state.isAmbientContext;
            this.state.isAmbientContext = true;
            try {
              return e4();
            } finally {
              this.state.isAmbientContext = t3;
            }
          }, r2.parseClass = function(t3) {
            var r3 = this.state.inAbstractClass;
            this.state.inAbstractClass = !!t3.abstract;
            try {
              for (var n2, s2 = arguments.length, a2 = new Array(s2 > 1 ? s2 - 1 : 0), i2 = 1; i2 < s2; i2++)
                a2[i2 - 1] = arguments[i2];
              return (n2 = e3.prototype.parseClass).call.apply(n2, [this, t3].concat(a2));
            } finally {
              this.state.inAbstractClass = r3;
            }
          }, r2.tsParseAbstractDeclaration = function(e4) {
            if (this.match(lm._class))
              return e4.abstract = true, this.parseClass(e4, true, false);
            if (this.isContextual("interface")) {
              if (!this.hasFollowingLineBreak())
                return e4.abstract = true, this.raise(e4.start, sy.NonClassMethodPropertyHasAbstractModifer), this.next(), this.tsParseInterfaceDeclaration(e4);
            } else
              this.unexpected(null, lm._class);
          }, r2.parseMethod = function() {
            for (var t3, r3 = arguments.length, n2 = new Array(r3), s2 = 0; s2 < r3; s2++)
              n2[s2] = arguments[s2];
            var a2 = (t3 = e3.prototype.parseMethod).call.apply(t3, [this].concat(n2));
            if (a2.abstract) {
              var i2 = this.hasPlugin("estree") ? !!a2.value.body : !!a2.body;
              if (i2) {
                var o2 = a2.key;
                this.raise(a2.start, sy.AbstractMethodHasImplementation, o2.type === "Identifier" ? o2.name : "[" + this.input.slice(o2.start, o2.end) + "]");
              }
            }
            return a2;
          }, r2.shouldParseAsAmbientContext = function() {
            return !!this.getPluginOption("typescript", "dts");
          }, r2.parse = function() {
            return this.shouldParseAsAmbientContext() && (this.state.isAmbientContext = true), e3.prototype.parse.call(this);
          }, r2.getExpression = function() {
            return this.shouldParseAsAmbientContext() && (this.state.isAmbientContext = true), e3.prototype.getExpression.call(this);
          }, t2;
        }(e2);
      }, v8intrinsic: function(e2) {
        return function(e3) {
          function t2() {
            return e3.apply(this, arguments) || this;
          }
          s(t2, e3);
          var r2 = t2.prototype;
          return r2.parseV8Intrinsic = function() {
            if (this.match(lm.modulo)) {
              var e4 = this.state.start, t3 = this.startNode();
              if (this.eat(lm.modulo), this.match(lm.name)) {
                var r3 = this.parseIdentifierName(this.state.start), n2 = this.createIdentifier(t3, r3);
                if (n2.type = "V8IntrinsicIdentifier", this.match(lm.parenL))
                  return n2;
              }
              this.unexpected(e4);
            }
          }, r2.parseExprAtom = function() {
            return this.parseV8Intrinsic() || e3.prototype.parseExprAtom.apply(this, arguments);
          }, t2;
        }(e2);
      }, placeholders: function(e2) {
        return function(e3) {
          function t2() {
            return e3.apply(this, arguments) || this;
          }
          s(t2, e3);
          var r2 = t2.prototype;
          return r2.parsePlaceholder = function(t3) {
            if (this.match(lm.placeholder)) {
              var r3 = this.startNode();
              return this.next(), this.assertNoSpace("Unexpected space in placeholder."), r3.name = e3.prototype.parseIdentifier.call(this, true), this.assertNoSpace("Unexpected space in placeholder."), this.expect(lm.placeholder), this.finishPlaceholder(r3, t3);
            }
          }, r2.finishPlaceholder = function(e4, t3) {
            var r3 = !(!e4.expectedNode || e4.type !== "Placeholder");
            return e4.expectedNode = t3, r3 ? e4 : this.finishNode(e4, "Placeholder");
          }, r2.getTokenFromCode = function(t3) {
            return t3 === 37 && this.input.charCodeAt(this.state.pos + 1) === 37 ? this.finishOp(lm.placeholder, 2) : e3.prototype.getTokenFromCode.apply(this, arguments);
          }, r2.parseExprAtom = function() {
            return this.parsePlaceholder("Expression") || e3.prototype.parseExprAtom.apply(this, arguments);
          }, r2.parseIdentifier = function() {
            return this.parsePlaceholder("Identifier") || e3.prototype.parseIdentifier.apply(this, arguments);
          }, r2.checkReservedWord = function(t3) {
            t3 !== void 0 && e3.prototype.checkReservedWord.apply(this, arguments);
          }, r2.parseBindingAtom = function() {
            return this.parsePlaceholder("Pattern") || e3.prototype.parseBindingAtom.apply(this, arguments);
          }, r2.checkLVal = function(t3) {
            t3.type !== "Placeholder" && e3.prototype.checkLVal.apply(this, arguments);
          }, r2.toAssignable = function(t3) {
            return t3 && t3.type === "Placeholder" && t3.expectedNode === "Expression" ? (t3.expectedNode = "Pattern", t3) : e3.prototype.toAssignable.apply(this, arguments);
          }, r2.isLet = function(t3) {
            return !!e3.prototype.isLet.call(this, t3) || !!this.isContextual("let") && (!t3 && this.lookahead().type === lm.placeholder);
          }, r2.verifyBreakContinue = function(t3) {
            t3.label && t3.label.type === "Placeholder" || e3.prototype.verifyBreakContinue.apply(this, arguments);
          }, r2.parseExpressionStatement = function(t3, r3) {
            if (r3.type !== "Placeholder" || r3.extra && r3.extra.parenthesized)
              return e3.prototype.parseExpressionStatement.apply(this, arguments);
            if (this.match(lm.colon)) {
              var n2 = t3;
              return n2.label = this.finishPlaceholder(r3, "Identifier"), this.next(), n2.body = this.parseStatement("label"), this.finishNode(n2, "LabeledStatement");
            }
            return this.semicolon(), t3.name = r3.name, this.finishPlaceholder(t3, "Statement");
          }, r2.parseBlock = function() {
            return this.parsePlaceholder("BlockStatement") || e3.prototype.parseBlock.apply(this, arguments);
          }, r2.parseFunctionId = function() {
            return this.parsePlaceholder("Identifier") || e3.prototype.parseFunctionId.apply(this, arguments);
          }, r2.parseClass = function(e4, t3, r3) {
            var n2 = t3 ? "ClassDeclaration" : "ClassExpression";
            this.next(), this.takeDecorators(e4);
            var s2 = this.state.strict, a2 = this.parsePlaceholder("Identifier");
            if (a2)
              if (this.match(lm._extends) || this.match(lm.placeholder) || this.match(lm.braceL))
                e4.id = a2;
              else {
                if (r3 || !t3)
                  return e4.id = null, e4.body = this.finishPlaceholder(a2, "ClassBody"), this.finishNode(e4, n2);
                this.unexpected(null, iy.ClassNameIsRequired);
              }
            else
              this.parseClassId(e4, t3, r3);
            return this.parseClassSuper(e4), e4.body = this.parsePlaceholder("ClassBody") || this.parseClassBody(!!e4.superClass, s2), this.finishNode(e4, n2);
          }, r2.parseExport = function(t3) {
            var r3 = this.parsePlaceholder("Identifier");
            if (!r3)
              return e3.prototype.parseExport.apply(this, arguments);
            if (!this.isContextual("from") && !this.match(lm.comma))
              return t3.specifiers = [], t3.source = null, t3.declaration = this.finishPlaceholder(r3, "Declaration"), this.finishNode(t3, "ExportNamedDeclaration");
            this.expectPlugin("exportDefaultFrom");
            var n2 = this.startNode();
            return n2.exported = r3, t3.specifiers = [this.finishNode(n2, "ExportDefaultSpecifier")], e3.prototype.parseExport.call(this, t3);
          }, r2.isExportDefaultSpecifier = function() {
            if (this.match(lm._default)) {
              var t3 = this.nextTokenStart();
              if (this.isUnparsedContextual(t3, "from") && this.input.startsWith(lm.placeholder.label, this.nextTokenStartSince(t3 + 4)))
                return true;
            }
            return e3.prototype.isExportDefaultSpecifier.call(this);
          }, r2.maybeParseExportDefaultSpecifier = function(t3) {
            return !!(t3.specifiers && t3.specifiers.length > 0) || e3.prototype.maybeParseExportDefaultSpecifier.apply(this, arguments);
          }, r2.checkExport = function(t3) {
            var r3 = t3.specifiers;
            r3 != null && r3.length && (t3.specifiers = r3.filter(function(e4) {
              return e4.exported.type === "Placeholder";
            })), e3.prototype.checkExport.call(this, t3), t3.specifiers = r3;
          }, r2.parseImport = function(t3) {
            var r3 = this.parsePlaceholder("Identifier");
            if (!r3)
              return e3.prototype.parseImport.apply(this, arguments);
            if (t3.specifiers = [], !this.isContextual("from") && !this.match(lm.comma))
              return t3.source = this.finishPlaceholder(r3, "StringLiteral"), this.semicolon(), this.finishNode(t3, "ImportDeclaration");
            var n2 = this.startNodeAtNode(r3);
            if (n2.local = r3, this.finishNode(n2, "ImportDefaultSpecifier"), t3.specifiers.push(n2), this.eat(lm.comma)) {
              var s2 = this.maybeParseStarImportSpecifier(t3);
              s2 || this.parseNamedImportSpecifiers(t3);
            }
            return this.expectContextual("from"), t3.source = this.parseImportSource(), this.semicolon(), this.finishNode(t3, "ImportDeclaration");
          }, r2.parseImportSource = function() {
            return this.parsePlaceholder("StringLiteral") || e3.prototype.parseImportSource.apply(this, arguments);
          }, t2;
        }(e2);
      } }, dy = Object.keys(py), fy = { sourceType: "script", sourceFilename: void 0, startLine: 1, allowAwaitOutsideFunction: false, allowReturnOutsideFunction: false, allowImportExportEverywhere: false, allowSuperOutsideMethod: false, allowUndeclaredExports: false, plugins: [], strictMode: null, ranges: false, tokens: false, createParenthesizedExpressions: false, errorRecovery: false };
      var hy = function(e2) {
        return e2 >= 48 && e2 <= 57;
      }, my = new Set([103, 109, 115, 105, 121, 117, 100]), yy = { decBinOct: [46, 66, 69, 79, 95, 98, 101, 111], hex: [46, 88, 95, 120] }, gy = { bin: [48, 49] };
      gy.oct = [].concat(gy.bin, [50, 51, 52, 53, 54, 55]), gy.dec = [].concat(gy.oct, [56, 57]), gy.hex = [].concat(gy.dec, [65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102]);
      var vy = function(e2) {
        this.type = e2.type, this.value = e2.value, this.start = e2.start, this.end = e2.end, this.loc = new ym(e2.startLoc, e2.endLoc);
      }, by = function(e2) {
        function t2(t3, r3) {
          var n2;
          return (n2 = e2.call(this) || this).isLookahead = void 0, n2.tokens = [], n2.state = new qm(), n2.state.init(t3), n2.input = r3, n2.length = r3.length, n2.isLookahead = false, n2;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.pushToken = function(e3) {
          this.tokens.length = this.state.tokensLength, this.tokens.push(e3), ++this.state.tokensLength;
        }, r2.next = function() {
          this.checkKeywordEscapes(), this.options.tokens && this.pushToken(new vy(this.state)), this.state.lastTokEnd = this.state.end, this.state.lastTokStart = this.state.start, this.state.lastTokEndLoc = this.state.endLoc, this.state.lastTokStartLoc = this.state.startLoc, this.nextToken();
        }, r2.eat = function(e3) {
          return !!this.match(e3) && (this.next(), true);
        }, r2.match = function(e3) {
          return this.state.type === e3;
        }, r2.createLookaheadState = function(e3) {
          return { pos: e3.pos, value: null, type: e3.type, start: e3.start, end: e3.end, lastTokEnd: e3.end, context: [this.curContext()], inType: e3.inType };
        }, r2.lookahead = function() {
          var e3 = this.state;
          this.state = this.createLookaheadState(e3), this.isLookahead = true, this.nextToken(), this.isLookahead = false;
          var t3 = this.state;
          return this.state = e3, t3;
        }, r2.nextTokenStart = function() {
          return this.nextTokenStartSince(this.state.pos);
        }, r2.nextTokenStartSince = function(e3) {
          return fm.lastIndex = e3, e3 + fm.exec(this.input)[0].length;
        }, r2.lookaheadCharCode = function() {
          return this.input.charCodeAt(this.nextTokenStart());
        }, r2.codePointAtPos = function(e3) {
          var t3 = this.input.charCodeAt(e3);
          if ((64512 & t3) == 55296 && ++e3 < this.input.length) {
            var r3 = this.input.charCodeAt(e3);
            (64512 & r3) == 56320 && (t3 = 65536 + ((1023 & t3) << 10) + (1023 & r3));
          }
          return t3;
        }, r2.setStrict = function(e3) {
          var t3 = this;
          this.state.strict = e3, e3 && (this.state.strictErrors.forEach(function(e4, r3) {
            return t3.raise(r3, e4);
          }), this.state.strictErrors.clear());
        }, r2.curContext = function() {
          return this.state.context[this.state.context.length - 1];
        }, r2.nextToken = function() {
          var e3 = this.curContext();
          e3.preserveSpace || this.skipSpace(), this.state.start = this.state.pos, this.isLookahead || (this.state.startLoc = this.state.curPosition()), this.state.pos >= this.length ? this.finishToken(lm.eof) : e3 === Cm.template ? this.readTmplToken() : this.getTokenFromCode(this.codePointAtPos(this.state.pos));
        }, r2.pushComment = function(e3, t3, r3, n2, s2, a2) {
          var i2 = { type: e3 ? "CommentBlock" : "CommentLine", value: t3, start: r3, end: n2, loc: new ym(s2, a2) };
          this.options.tokens && this.pushToken(i2), this.state.comments.push(i2), this.addComment(i2);
        }, r2.skipBlockComment = function() {
          var e3;
          this.isLookahead || (e3 = this.state.curPosition());
          var t3, r3 = this.state.pos, n2 = this.input.indexOf("*/", this.state.pos + 2);
          if (n2 === -1)
            throw this.raise(r3, Em.UnterminatedComment);
          for (this.state.pos = n2 + 2, pm.lastIndex = r3; (t3 = pm.exec(this.input)) && t3.index < this.state.pos; )
            ++this.state.curLine, this.state.lineStart = t3.index + t3[0].length;
          this.isLookahead || this.pushComment(true, this.input.slice(r3 + 2, n2), r3, this.state.pos, e3, this.state.curPosition());
        }, r2.skipLineComment = function(e3) {
          var t3, r3 = this.state.pos;
          this.isLookahead || (t3 = this.state.curPosition());
          var n2 = this.input.charCodeAt(this.state.pos += e3);
          if (this.state.pos < this.length)
            for (; !dm(n2) && ++this.state.pos < this.length; )
              n2 = this.input.charCodeAt(this.state.pos);
          this.isLookahead || this.pushComment(false, this.input.slice(r3 + e3, this.state.pos), r3, this.state.pos, t3, this.state.curPosition());
        }, r2.skipSpace = function() {
          e:
            for (; this.state.pos < this.length; ) {
              var e3 = this.input.charCodeAt(this.state.pos);
              switch (e3) {
                case 32:
                case 160:
                case 9:
                  ++this.state.pos;
                  break;
                case 13:
                  this.input.charCodeAt(this.state.pos + 1) === 10 && ++this.state.pos;
                case 10:
                case 8232:
                case 8233:
                  ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;
                  break;
                case 47:
                  switch (this.input.charCodeAt(this.state.pos + 1)) {
                    case 42:
                      this.skipBlockComment();
                      break;
                    case 47:
                      this.skipLineComment(2);
                      break;
                    default:
                      break e;
                  }
                  break;
                default:
                  if (!hm(e3))
                    break e;
                  ++this.state.pos;
              }
            }
        }, r2.finishToken = function(e3, t3) {
          this.state.end = this.state.pos;
          var r3 = this.state.type;
          this.state.type = e3, this.state.value = t3, this.isLookahead || (this.state.endLoc = this.state.curPosition(), this.updateContext(r3));
        }, r2.readToken_numberSign = function() {
          if (this.state.pos !== 0 || !this.readToken_interpreter()) {
            var e3 = this.state.pos + 1, t3 = this.codePointAtPos(e3);
            if (t3 >= 48 && t3 <= 57)
              throw this.raise(this.state.pos, Em.UnexpectedDigitAfterHash);
            if (t3 === 123 || t3 === 91 && this.hasPlugin("recordAndTuple")) {
              if (this.expectPlugin("recordAndTuple"), this.getPluginOption("recordAndTuple", "syntaxType") !== "hash")
                throw this.raise(this.state.pos, t3 === 123 ? Em.RecordExpressionHashIncorrectStartSyntaxType : Em.TupleExpressionHashIncorrectStartSyntaxType);
              this.state.pos += 2, t3 === 123 ? this.finishToken(lm.braceHashL) : this.finishToken(lm.bracketHashL);
            } else
              yr(t3) ? (++this.state.pos, this.finishToken(lm.privateName, this.readWord1(t3))) : t3 === 92 ? (++this.state.pos, this.finishToken(lm.privateName, this.readWord1())) : this.finishOp(lm.hash, 1);
          }
        }, r2.readToken_dot = function() {
          var e3 = this.input.charCodeAt(this.state.pos + 1);
          e3 >= 48 && e3 <= 57 ? this.readNumber(true) : e3 === 46 && this.input.charCodeAt(this.state.pos + 2) === 46 ? (this.state.pos += 3, this.finishToken(lm.ellipsis)) : (++this.state.pos, this.finishToken(lm.dot));
        }, r2.readToken_slash = function() {
          this.input.charCodeAt(this.state.pos + 1) === 61 ? this.finishOp(lm.slashAssign, 2) : this.finishOp(lm.slash, 1);
        }, r2.readToken_interpreter = function() {
          if (this.state.pos !== 0 || this.length < 2)
            return false;
          var e3 = this.input.charCodeAt(this.state.pos + 1);
          if (e3 !== 33)
            return false;
          var t3 = this.state.pos;
          for (this.state.pos += 1; !dm(e3) && ++this.state.pos < this.length; )
            e3 = this.input.charCodeAt(this.state.pos);
          var r3 = this.input.slice(t3 + 2, this.state.pos);
          return this.finishToken(lm.interpreterDirective, r3), true;
        }, r2.readToken_mult_modulo = function(e3) {
          var t3 = e3 === 42 ? lm.star : lm.modulo, r3 = 1, n2 = this.input.charCodeAt(this.state.pos + 1);
          e3 === 42 && n2 === 42 && (r3++, n2 = this.input.charCodeAt(this.state.pos + 2), t3 = lm.exponent), n2 !== 61 || this.state.inType || (r3++, t3 = lm.assign), this.finishOp(t3, r3);
        }, r2.readToken_pipe_amp = function(e3) {
          var t3 = this.input.charCodeAt(this.state.pos + 1);
          if (t3 !== e3) {
            if (e3 === 124) {
              if (t3 === 62)
                return void this.finishOp(lm.pipeline, 2);
              if (this.hasPlugin("recordAndTuple") && t3 === 125) {
                if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar")
                  throw this.raise(this.state.pos, Em.RecordExpressionBarIncorrectEndSyntaxType);
                return this.state.pos += 2, void this.finishToken(lm.braceBarR);
              }
              if (this.hasPlugin("recordAndTuple") && t3 === 93) {
                if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar")
                  throw this.raise(this.state.pos, Em.TupleExpressionBarIncorrectEndSyntaxType);
                return this.state.pos += 2, void this.finishToken(lm.bracketBarR);
              }
            }
            t3 !== 61 ? this.finishOp(e3 === 124 ? lm.bitwiseOR : lm.bitwiseAND, 1) : this.finishOp(lm.assign, 2);
          } else
            this.input.charCodeAt(this.state.pos + 2) === 61 ? this.finishOp(lm.assign, 3) : this.finishOp(e3 === 124 ? lm.logicalOR : lm.logicalAND, 2);
        }, r2.readToken_caret = function() {
          this.input.charCodeAt(this.state.pos + 1) === 61 ? this.finishOp(lm.assign, 2) : this.finishOp(lm.bitwiseXOR, 1);
        }, r2.readToken_plus_min = function(e3) {
          var t3 = this.input.charCodeAt(this.state.pos + 1);
          if (t3 === e3)
            return t3 !== 45 || this.inModule || this.input.charCodeAt(this.state.pos + 2) !== 62 || this.state.lastTokEnd !== 0 && !this.hasPrecedingLineBreak() ? void this.finishOp(lm.incDec, 2) : (this.skipLineComment(3), this.skipSpace(), void this.nextToken());
          t3 === 61 ? this.finishOp(lm.assign, 2) : this.finishOp(lm.plusMin, 1);
        }, r2.readToken_lt_gt = function(e3) {
          var t3 = this.input.charCodeAt(this.state.pos + 1), r3 = 1;
          return t3 === e3 ? (r3 = e3 === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2, this.input.charCodeAt(this.state.pos + r3) === 61 ? void this.finishOp(lm.assign, r3 + 1) : void this.finishOp(lm.bitShift, r3)) : t3 !== 33 || e3 !== 60 || this.inModule || this.input.charCodeAt(this.state.pos + 2) !== 45 || this.input.charCodeAt(this.state.pos + 3) !== 45 ? (t3 === 61 && (r3 = 2), void this.finishOp(lm.relational, r3)) : (this.skipLineComment(4), this.skipSpace(), void this.nextToken());
        }, r2.readToken_eq_excl = function(e3) {
          var t3 = this.input.charCodeAt(this.state.pos + 1);
          if (t3 !== 61)
            return e3 === 61 && t3 === 62 ? (this.state.pos += 2, void this.finishToken(lm.arrow)) : void this.finishOp(e3 === 61 ? lm.eq : lm.bang, 1);
          this.finishOp(lm.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);
        }, r2.readToken_question = function() {
          var e3 = this.input.charCodeAt(this.state.pos + 1), t3 = this.input.charCodeAt(this.state.pos + 2);
          e3 === 63 ? t3 === 61 ? this.finishOp(lm.assign, 3) : this.finishOp(lm.nullishCoalescing, 2) : e3 !== 46 || t3 >= 48 && t3 <= 57 ? (++this.state.pos, this.finishToken(lm.question)) : (this.state.pos += 2, this.finishToken(lm.questionDot));
        }, r2.getTokenFromCode = function(e3) {
          switch (e3) {
            case 46:
              return void this.readToken_dot();
            case 40:
              return ++this.state.pos, void this.finishToken(lm.parenL);
            case 41:
              return ++this.state.pos, void this.finishToken(lm.parenR);
            case 59:
              return ++this.state.pos, void this.finishToken(lm.semi);
            case 44:
              return ++this.state.pos, void this.finishToken(lm.comma);
            case 91:
              if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
                if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar")
                  throw this.raise(this.state.pos, Em.TupleExpressionBarIncorrectStartSyntaxType);
                this.state.pos += 2, this.finishToken(lm.bracketBarL);
              } else
                ++this.state.pos, this.finishToken(lm.bracketL);
              return;
            case 93:
              return ++this.state.pos, void this.finishToken(lm.bracketR);
            case 123:
              if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
                if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar")
                  throw this.raise(this.state.pos, Em.RecordExpressionBarIncorrectStartSyntaxType);
                this.state.pos += 2, this.finishToken(lm.braceBarL);
              } else
                ++this.state.pos, this.finishToken(lm.braceL);
              return;
            case 125:
              return ++this.state.pos, void this.finishToken(lm.braceR);
            case 58:
              return void (this.hasPlugin("functionBind") && this.input.charCodeAt(this.state.pos + 1) === 58 ? this.finishOp(lm.doubleColon, 2) : (++this.state.pos, this.finishToken(lm.colon)));
            case 63:
              return void this.readToken_question();
            case 96:
              return ++this.state.pos, void this.finishToken(lm.backQuote);
            case 48:
              var t3 = this.input.charCodeAt(this.state.pos + 1);
              if (t3 === 120 || t3 === 88)
                return void this.readRadixNumber(16);
              if (t3 === 111 || t3 === 79)
                return void this.readRadixNumber(8);
              if (t3 === 98 || t3 === 66)
                return void this.readRadixNumber(2);
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
              return void this.readNumber(false);
            case 34:
            case 39:
              return void this.readString(e3);
            case 47:
              return void this.readToken_slash();
            case 37:
            case 42:
              return void this.readToken_mult_modulo(e3);
            case 124:
            case 38:
              return void this.readToken_pipe_amp(e3);
            case 94:
              return void this.readToken_caret();
            case 43:
            case 45:
              return void this.readToken_plus_min(e3);
            case 60:
            case 62:
              return void this.readToken_lt_gt(e3);
            case 61:
            case 33:
              return void this.readToken_eq_excl(e3);
            case 126:
              return void this.finishOp(lm.tilde, 1);
            case 64:
              return ++this.state.pos, void this.finishToken(lm.at);
            case 35:
              return void this.readToken_numberSign();
            case 92:
              return void this.readWord();
            default:
              if (yr(e3))
                return void this.readWord(e3);
          }
          throw this.raise(this.state.pos, Em.InvalidOrUnexpectedToken, String.fromCodePoint(e3));
        }, r2.finishOp = function(e3, t3) {
          var r3 = this.input.slice(this.state.pos, this.state.pos + t3);
          this.state.pos += t3, this.finishToken(e3, r3);
        }, r2.readRegexp = function() {
          for (var e3, t3, r3 = this.state.start + 1, n2 = this.state.pos; ; ++n2) {
            if (n2 >= this.length)
              throw this.raise(r3, Em.UnterminatedRegExp);
            var s2 = this.input.charCodeAt(n2);
            if (dm(s2))
              throw this.raise(r3, Em.UnterminatedRegExp);
            if (e3)
              e3 = false;
            else {
              if (s2 === 91)
                t3 = true;
              else if (s2 === 93 && t3)
                t3 = false;
              else if (s2 === 47 && !t3)
                break;
              e3 = s2 === 92;
            }
          }
          var a2 = this.input.slice(r3, n2);
          ++n2;
          for (var i2 = ""; n2 < this.length; ) {
            var o2 = this.codePointAtPos(n2), u2 = String.fromCharCode(o2);
            if (my.has(o2))
              i2.includes(u2) && this.raise(n2 + 1, Em.DuplicateRegExpFlags);
            else {
              if (!gr(o2) && o2 !== 92)
                break;
              this.raise(n2 + 1, Em.MalformedRegExpFlags);
            }
            ++n2, i2 += u2;
          }
          this.state.pos = n2, this.finishToken(lm.regexp, { pattern: a2, flags: i2 });
        }, r2.readInt = function(e3, t3, r3, n2) {
          n2 === void 0 && (n2 = true);
          for (var s2 = this.state.pos, a2 = e3 === 16 ? yy.hex : yy.decBinOct, i2 = e3 === 16 ? gy.hex : e3 === 10 ? gy.dec : e3 === 8 ? gy.oct : gy.bin, o2 = false, u2 = 0, l2 = 0, c2 = t3 == null ? 1 / 0 : t3; l2 < c2; ++l2) {
            var p2 = this.input.charCodeAt(this.state.pos), d2 = void 0;
            if (p2 !== 95) {
              if ((d2 = p2 >= 97 ? p2 - 97 + 10 : p2 >= 65 ? p2 - 65 + 10 : hy(p2) ? p2 - 48 : 1 / 0) >= e3)
                if (this.options.errorRecovery && d2 <= 9)
                  d2 = 0, this.raise(this.state.start + l2 + 2, Em.InvalidDigit, e3);
                else {
                  if (!r3)
                    break;
                  d2 = 0, o2 = true;
                }
              ++this.state.pos, u2 = u2 * e3 + d2;
            } else {
              var f2 = this.input.charCodeAt(this.state.pos - 1), h2 = this.input.charCodeAt(this.state.pos + 1);
              (i2.indexOf(h2) === -1 || a2.indexOf(f2) > -1 || a2.indexOf(h2) > -1 || Number.isNaN(h2)) && this.raise(this.state.pos, Em.UnexpectedNumericSeparator), n2 || this.raise(this.state.pos, Em.NumericSeparatorInEscapeSequence), ++this.state.pos;
            }
          }
          return this.state.pos === s2 || t3 != null && this.state.pos - s2 !== t3 || o2 ? null : u2;
        }, r2.readRadixNumber = function(e3) {
          var t3 = this.state.pos, r3 = false;
          this.state.pos += 2;
          var n2 = this.readInt(e3);
          n2 == null && this.raise(this.state.start + 2, Em.InvalidDigit, e3);
          var s2 = this.input.charCodeAt(this.state.pos);
          if (s2 === 110)
            ++this.state.pos, r3 = true;
          else if (s2 === 109)
            throw this.raise(t3, Em.InvalidDecimal);
          if (yr(this.codePointAtPos(this.state.pos)))
            throw this.raise(this.state.pos, Em.NumberIdentifier);
          if (r3) {
            var a2 = this.input.slice(t3, this.state.pos).replace(/[_n]/g, "");
            this.finishToken(lm.bigint, a2);
          } else
            this.finishToken(lm.num, n2);
        }, r2.readNumber = function(e3) {
          var t3 = this.state.pos, r3 = false, n2 = false, s2 = false, a2 = false, i2 = false;
          e3 || this.readInt(10) !== null || this.raise(t3, Em.InvalidNumber);
          var o2 = this.state.pos - t3 >= 2 && this.input.charCodeAt(t3) === 48;
          if (o2) {
            var u2 = this.input.slice(t3, this.state.pos);
            if (this.recordStrictModeErrors(t3, Em.StrictOctalLiteral), !this.state.strict) {
              var l2 = u2.indexOf("_");
              l2 > 0 && this.raise(l2 + t3, Em.ZeroDigitNumericSeparator);
            }
            i2 = o2 && !/[89]/.test(u2);
          }
          var c2 = this.input.charCodeAt(this.state.pos);
          if (c2 !== 46 || i2 || (++this.state.pos, this.readInt(10), r3 = true, c2 = this.input.charCodeAt(this.state.pos)), c2 !== 69 && c2 !== 101 || i2 || ((c2 = this.input.charCodeAt(++this.state.pos)) !== 43 && c2 !== 45 || ++this.state.pos, this.readInt(10) === null && this.raise(t3, Em.InvalidOrMissingExponent), r3 = true, a2 = true, c2 = this.input.charCodeAt(this.state.pos)), c2 === 110 && ((r3 || o2) && this.raise(t3, Em.InvalidBigIntLiteral), ++this.state.pos, n2 = true), c2 === 109 && (this.expectPlugin("decimal", this.state.pos), (a2 || o2) && this.raise(t3, Em.InvalidDecimal), ++this.state.pos, s2 = true), yr(this.codePointAtPos(this.state.pos)))
            throw this.raise(this.state.pos, Em.NumberIdentifier);
          var p2 = this.input.slice(t3, this.state.pos).replace(/[_mn]/g, "");
          if (n2)
            this.finishToken(lm.bigint, p2);
          else if (s2)
            this.finishToken(lm.decimal, p2);
          else {
            var d2 = i2 ? parseInt(p2, 8) : parseFloat(p2);
            this.finishToken(lm.num, d2);
          }
        }, r2.readCodePoint = function(e3) {
          var t3;
          if (this.input.charCodeAt(this.state.pos) === 123) {
            var r3 = ++this.state.pos;
            if (t3 = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos, true, e3), ++this.state.pos, t3 !== null && t3 > 1114111) {
              if (!e3)
                return null;
              this.raise(r3, Em.InvalidCodePoint);
            }
          } else
            t3 = this.readHexChar(4, false, e3);
          return t3;
        }, r2.readString = function(e3) {
          for (var t3 = "", r3 = ++this.state.pos; ; ) {
            if (this.state.pos >= this.length)
              throw this.raise(this.state.start, Em.UnterminatedString);
            var n2 = this.input.charCodeAt(this.state.pos);
            if (n2 === e3)
              break;
            if (n2 === 92)
              t3 += this.input.slice(r3, this.state.pos), t3 += this.readEscapedChar(false), r3 = this.state.pos;
            else if (n2 === 8232 || n2 === 8233)
              ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;
            else {
              if (dm(n2))
                throw this.raise(this.state.start, Em.UnterminatedString);
              ++this.state.pos;
            }
          }
          t3 += this.input.slice(r3, this.state.pos++), this.finishToken(lm.string, t3);
        }, r2.readTmplToken = function() {
          for (var e3 = "", t3 = this.state.pos, r3 = false; ; ) {
            if (this.state.pos >= this.length)
              throw this.raise(this.state.start, Em.UnterminatedTemplate);
            var n2 = this.input.charCodeAt(this.state.pos);
            if (n2 === 96 || n2 === 36 && this.input.charCodeAt(this.state.pos + 1) === 123)
              return this.state.pos === this.state.start && this.match(lm.template) ? n2 === 36 ? (this.state.pos += 2, void this.finishToken(lm.dollarBraceL)) : (++this.state.pos, void this.finishToken(lm.backQuote)) : (e3 += this.input.slice(t3, this.state.pos), void this.finishToken(lm.template, r3 ? null : e3));
            if (n2 === 92) {
              e3 += this.input.slice(t3, this.state.pos);
              var s2 = this.readEscapedChar(true);
              s2 === null ? r3 = true : e3 += s2, t3 = this.state.pos;
            } else if (dm(n2)) {
              switch (e3 += this.input.slice(t3, this.state.pos), ++this.state.pos, n2) {
                case 13:
                  this.input.charCodeAt(this.state.pos) === 10 && ++this.state.pos;
                case 10:
                  e3 += "\n";
                  break;
                default:
                  e3 += String.fromCharCode(n2);
              }
              ++this.state.curLine, this.state.lineStart = this.state.pos, t3 = this.state.pos;
            } else
              ++this.state.pos;
          }
        }, r2.recordStrictModeErrors = function(e3, t3) {
          this.state.strict && !this.state.strictErrors.has(e3) ? this.raise(e3, t3) : this.state.strictErrors.set(e3, t3);
        }, r2.readEscapedChar = function(e3) {
          var t3 = !e3, r3 = this.input.charCodeAt(++this.state.pos);
          switch (++this.state.pos, r3) {
            case 110:
              return "\n";
            case 114:
              return "\r";
            case 120:
              var n2 = this.readHexChar(2, false, t3);
              return n2 === null ? null : String.fromCharCode(n2);
            case 117:
              var s2 = this.readCodePoint(t3);
              return s2 === null ? null : String.fromCodePoint(s2);
            case 116:
              return "	";
            case 98:
              return "\b";
            case 118:
              return "\v";
            case 102:
              return "\f";
            case 13:
              this.input.charCodeAt(this.state.pos) === 10 && ++this.state.pos;
            case 10:
              this.state.lineStart = this.state.pos, ++this.state.curLine;
            case 8232:
            case 8233:
              return "";
            case 56:
            case 57:
              if (e3)
                return null;
              this.recordStrictModeErrors(this.state.pos - 1, Em.StrictNumericEscape);
            default:
              if (r3 >= 48 && r3 <= 55) {
                var a2 = this.state.pos - 1, i2 = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0], o2 = parseInt(i2, 8);
                o2 > 255 && (i2 = i2.slice(0, -1), o2 = parseInt(i2, 8)), this.state.pos += i2.length - 1;
                var u2 = this.input.charCodeAt(this.state.pos);
                if (i2 !== "0" || u2 === 56 || u2 === 57) {
                  if (e3)
                    return null;
                  this.recordStrictModeErrors(a2, Em.StrictNumericEscape);
                }
                return String.fromCharCode(o2);
              }
              return String.fromCharCode(r3);
          }
        }, r2.readHexChar = function(e3, t3, r3) {
          var n2 = this.state.pos, s2 = this.readInt(16, e3, t3, false);
          return s2 === null && (r3 ? this.raise(n2, Em.InvalidEscapeSequence) : this.state.pos = n2 - 1), s2;
        }, r2.readWord1 = function(e3) {
          this.state.containsEsc = false;
          var t3 = "", r3 = this.state.pos, n2 = this.state.pos;
          for (e3 !== void 0 && (this.state.pos += e3 <= 65535 ? 1 : 2); this.state.pos < this.length; ) {
            var s2 = this.codePointAtPos(this.state.pos);
            if (gr(s2))
              this.state.pos += s2 <= 65535 ? 1 : 2;
            else {
              if (s2 !== 92)
                break;
              this.state.containsEsc = true, t3 += this.input.slice(n2, this.state.pos);
              var a2 = this.state.pos, i2 = this.state.pos === r3 ? yr : gr;
              if (this.input.charCodeAt(++this.state.pos) !== 117) {
                this.raise(this.state.pos, Em.MissingUnicodeEscape), n2 = this.state.pos - 1;
                continue;
              }
              ++this.state.pos;
              var o2 = this.readCodePoint(true);
              o2 !== null && (i2(o2) || this.raise(a2, Em.EscapedCharNotAnIdentifier), t3 += String.fromCodePoint(o2)), n2 = this.state.pos;
            }
          }
          return t3 + this.input.slice(n2, this.state.pos);
        }, r2.readWord = function(e3) {
          var t3 = this.readWord1(e3), r3 = im.get(t3) || lm.name;
          this.finishToken(r3, t3);
        }, r2.checkKeywordEscapes = function() {
          var e3 = this.state.type.keyword;
          e3 && this.state.containsEsc && this.raise(this.state.start, Em.InvalidEscapedReservedWord, e3);
        }, r2.updateContext = function(e3) {
          var t3, r3;
          (t3 = (r3 = this.state.type).updateContext) == null || t3.call(r3, this.state.context);
        }, t2;
      }(Am), Ey = function() {
        this.privateNames = new Set(), this.loneAccessors = new Map(), this.undefinedPrivateNames = new Map();
      }, xy = function() {
        function e2(e3) {
          this.stack = [], this.undefinedPrivateNames = new Map(), this.raise = e3;
        }
        var t2 = e2.prototype;
        return t2.current = function() {
          return this.stack[this.stack.length - 1];
        }, t2.enter = function() {
          this.stack.push(new Ey());
        }, t2.exit = function() {
          for (var e3 = this.stack.pop(), t3 = this.current(), r2 = 0, n2 = Array.from(e3.undefinedPrivateNames); r2 < n2.length; r2++) {
            var s2 = n2[r2], a2 = s2[0], i2 = s2[1];
            t3 ? t3.undefinedPrivateNames.has(a2) || t3.undefinedPrivateNames.set(a2, i2) : this.raise(i2, Em.InvalidPrivateFieldResolution, a2);
          }
        }, t2.declarePrivateName = function(e3, t3, r2) {
          var n2 = this.current(), s2 = n2.privateNames.has(e3);
          if (3 & t3) {
            var a2 = s2 && n2.loneAccessors.get(e3);
            if (a2)
              (s2 = (3 & a2) === (3 & t3) || (4 & a2) !== (4 & t3)) || n2.loneAccessors.delete(e3);
            else
              s2 || n2.loneAccessors.set(e3, t3);
          }
          s2 && this.raise(r2, Em.PrivateNameRedeclaration, e3), n2.privateNames.add(e3), n2.undefinedPrivateNames.delete(e3);
        }, t2.usePrivateName = function(e3, t3) {
          for (var r2, n2 = 0, s2 = this.stack; n2 < s2.length; n2++)
            if ((r2 = s2[n2]).privateNames.has(e3))
              return;
          r2 ? r2.undefinedPrivateNames.set(e3, t3) : this.raise(t3, Em.InvalidPrivateFieldResolution, e3);
        }, e2;
      }(), Dy = function() {
        function e2(e3) {
          e3 === void 0 && (e3 = 0), this.type = void 0, this.type = e3;
        }
        var t2 = e2.prototype;
        return t2.canBeArrowParameterDeclaration = function() {
          return this.type === 2 || this.type === 1;
        }, t2.isCertainlyParameterDeclaration = function() {
          return this.type === 3;
        }, e2;
      }(), Ay = function(e2) {
        function t2(t3) {
          var r3;
          return (r3 = e2.call(this, t3) || this).errors = new Map(), r3;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.recordDeclarationError = function(e3, t3) {
          this.errors.set(e3, t3);
        }, r2.clearDeclarationError = function(e3) {
          this.errors.delete(e3);
        }, r2.iterateErrors = function(e3) {
          this.errors.forEach(e3);
        }, t2;
      }(Dy), wy = function() {
        function e2(e3) {
          this.stack = [new Dy()], this.raise = e3;
        }
        var t2 = e2.prototype;
        return t2.enter = function(e3) {
          this.stack.push(e3);
        }, t2.exit = function() {
          this.stack.pop();
        }, t2.recordParameterInitializerError = function(e3, t3) {
          for (var r2 = this.stack, n2 = r2.length - 1, s2 = r2[n2]; !s2.isCertainlyParameterDeclaration(); ) {
            if (!s2.canBeArrowParameterDeclaration())
              return;
            s2.recordDeclarationError(e3, t3), s2 = r2[--n2];
          }
          this.raise(e3, t3);
        }, t2.recordParenthesizedIdentifierError = function(e3, t3) {
          var r2 = this.stack, n2 = r2[r2.length - 1];
          if (n2.isCertainlyParameterDeclaration())
            this.raise(e3, t3);
          else {
            if (!n2.canBeArrowParameterDeclaration())
              return;
            n2.recordDeclarationError(e3, t3);
          }
        }, t2.recordAsyncArrowParametersError = function(e3, t3) {
          for (var r2 = this.stack, n2 = r2.length - 1, s2 = r2[n2]; s2.canBeArrowParameterDeclaration(); )
            s2.type === 2 && s2.recordDeclarationError(e3, t3), s2 = r2[--n2];
        }, t2.validateAsPattern = function() {
          var e3 = this, t3 = this.stack, r2 = t3[t3.length - 1];
          r2.canBeArrowParameterDeclaration() && r2.iterateErrors(function(r3, n2) {
            e3.raise(n2, r3);
            for (var s2 = t3.length - 2, a2 = t3[s2]; a2.canBeArrowParameterDeclaration(); )
              a2.clearDeclarationError(n2), a2 = t3[--s2];
          });
        }, e2;
      }();
      function Cy() {
        return new Dy();
      }
      var Sy = function(e2) {
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.addExtra = function(e3, t3, r3) {
          e3 && ((e3.extra = e3.extra || {})[t3] = r3);
        }, r2.isRelational = function(e3) {
          return this.match(lm.relational) && this.state.value === e3;
        }, r2.expectRelational = function(e3) {
          this.isRelational(e3) ? this.next() : this.unexpected(null, lm.relational);
        }, r2.isContextual = function(e3) {
          return this.match(lm.name) && this.state.value === e3 && !this.state.containsEsc;
        }, r2.isUnparsedContextual = function(e3, t3) {
          var r3 = e3 + t3.length;
          if (this.input.slice(e3, r3) === t3) {
            var n2 = this.input.charCodeAt(r3);
            return !(gr(n2) || (64512 & n2) == 55296);
          }
          return false;
        }, r2.isLookaheadContextual = function(e3) {
          var t3 = this.nextTokenStart();
          return this.isUnparsedContextual(t3, e3);
        }, r2.eatContextual = function(e3) {
          return this.isContextual(e3) && this.eat(lm.name);
        }, r2.expectContextual = function(e3, t3) {
          this.eatContextual(e3) || this.unexpected(null, t3);
        }, r2.canInsertSemicolon = function() {
          return this.match(lm.eof) || this.match(lm.braceR) || this.hasPrecedingLineBreak();
        }, r2.hasPrecedingLineBreak = function() {
          return cm.test(this.input.slice(this.state.lastTokEnd, this.state.start));
        }, r2.hasFollowingLineBreak = function() {
          return cm.test(this.input.slice(this.state.end, this.nextTokenStart()));
        }, r2.isLineTerminator = function() {
          return this.eat(lm.semi) || this.canInsertSemicolon();
        }, r2.semicolon = function(e3) {
          e3 === void 0 && (e3 = true), (e3 ? this.isLineTerminator() : this.eat(lm.semi)) || this.raise(this.state.lastTokEnd, Em.MissingSemicolon);
        }, r2.expect = function(e3, t3) {
          this.eat(e3) || this.unexpected(t3, e3);
        }, r2.assertNoSpace = function(e3) {
          e3 === void 0 && (e3 = "Unexpected space."), this.state.start > this.state.lastTokEnd && this.raise(this.state.lastTokEnd, { code: bm.SyntaxError, reasonCode: "UnexpectedSpace", template: e3 });
        }, r2.unexpected = function(e3, t3) {
          throw t3 === void 0 && (t3 = { code: bm.SyntaxError, reasonCode: "UnexpectedToken", template: "Unexpected token" }), t3 instanceof am && (t3 = { code: bm.SyntaxError, reasonCode: "UnexpectedToken", template: 'Unexpected token, expected "' + t3.label + '"' }), this.raise(e3 != null ? e3 : this.state.start, t3);
        }, r2.expectPlugin = function(e3, t3) {
          if (!this.hasPlugin(e3))
            throw this.raiseWithData(t3 != null ? t3 : this.state.start, { missingPlugin: [e3] }, "This experimental syntax requires enabling the parser plugin: '" + e3 + "'");
          return true;
        }, r2.expectOnePlugin = function(e3, t3) {
          var r3 = this;
          if (!e3.some(function(e4) {
            return r3.hasPlugin(e4);
          }))
            throw this.raiseWithData(t3 != null ? t3 : this.state.start, { missingPlugin: e3 }, "This experimental syntax requires enabling one of the following parser plugin(s): '" + e3.join(", ") + "'");
        }, r2.tryParse = function(e3, t3) {
          t3 === void 0 && (t3 = this.state.clone());
          var r3 = { node: null };
          try {
            var n2 = e3(function(e4) {
              throw e4 === void 0 && (e4 = null), r3.node = e4, r3;
            });
            if (this.state.errors.length > t3.errors.length) {
              var s2 = this.state;
              return this.state = t3, this.state.tokensLength = s2.tokensLength, { node: n2, error: s2.errors[t3.errors.length], thrown: false, aborted: false, failState: s2 };
            }
            return { node: n2, error: null, thrown: false, aborted: false, failState: null };
          } catch (e4) {
            var a2 = this.state;
            if (this.state = t3, e4 instanceof SyntaxError)
              return { node: null, error: e4, thrown: true, aborted: false, failState: a2 };
            if (e4 === r3)
              return { node: r3.node, error: null, thrown: false, aborted: true, failState: a2 };
            throw e4;
          }
        }, r2.checkExpressionErrors = function(e3, t3) {
          if (!e3)
            return false;
          var r3 = e3.shorthandAssign, n2 = e3.doubleProto, s2 = e3.optionalParameters;
          if (!t3)
            return r3 >= 0 || n2 >= 0 || s2 >= 0;
          r3 >= 0 && this.unexpected(r3), n2 >= 0 && this.raise(n2, Em.DuplicateProto), s2 >= 0 && this.unexpected(s2);
        }, r2.isLiteralPropertyName = function() {
          return this.match(lm.name) || !!this.state.type.keyword || this.match(lm.string) || this.match(lm.num) || this.match(lm.bigint) || this.match(lm.decimal);
        }, r2.isPrivateName = function(e3) {
          return e3.type === "PrivateName";
        }, r2.getPrivateNameSV = function(e3) {
          return e3.id.name;
        }, r2.hasPropertyAsPrivateName = function(e3) {
          return (e3.type === "MemberExpression" || e3.type === "OptionalMemberExpression") && this.isPrivateName(e3.property);
        }, r2.isOptionalChain = function(e3) {
          return e3.type === "OptionalMemberExpression" || e3.type === "OptionalCallExpression";
        }, r2.isObjectProperty = function(e3) {
          return e3.type === "ObjectProperty";
        }, r2.isObjectMethod = function(e3) {
          return e3.type === "ObjectMethod";
        }, r2.initializeScopes = function(e3) {
          var t3 = this;
          e3 === void 0 && (e3 = this.options.sourceType === "module");
          var r3 = this.state.labels;
          this.state.labels = [];
          var n2 = this.exportedIdentifiers;
          this.exportedIdentifiers = new Set();
          var s2 = this.inModule;
          this.inModule = e3;
          var a2 = this.scope, i2 = this.getScopeHandler();
          this.scope = new i2(this.raise.bind(this), this.inModule);
          var o2 = this.prodParam;
          this.prodParam = new ey();
          var u2 = this.classScope;
          this.classScope = new xy(this.raise.bind(this));
          var l2 = this.expressionScope;
          return this.expressionScope = new wy(this.raise.bind(this)), function() {
            t3.state.labels = r3, t3.exportedIdentifiers = n2, t3.inModule = s2, t3.scope = a2, t3.prodParam = o2, t3.classScope = u2, t3.expressionScope = l2;
          };
        }, r2.enterInitialScopes = function() {
          var e3 = 0;
          this.hasPlugin("topLevelAwait") && this.inModule && (e3 |= 2), this.scope.enter(1), this.prodParam.enter(e3);
        }, t2;
      }(by), Ty = function() {
        this.shorthandAssign = -1, this.doubleProto = -1, this.optionalParameters = -1;
      }, jy = function() {
        function e2(e3, t2, r2) {
          this.type = void 0, this.start = void 0, this.end = void 0, this.loc = void 0, this.range = void 0, this.leadingComments = void 0, this.trailingComments = void 0, this.innerComments = void 0, this.extra = void 0, this.type = "", this.start = t2, this.end = 0, this.loc = new ym(r2), e3 != null && e3.options.ranges && (this.range = [t2, 0]), e3 != null && e3.filename && (this.loc.filename = e3.filename);
        }
        return e2.prototype.__clone = function() {
          for (var t2 = new e2(), r2 = Object.keys(this), n2 = 0, s2 = r2.length; n2 < s2; n2++) {
            var a2 = r2[n2];
            a2 !== "leadingComments" && a2 !== "trailingComments" && a2 !== "innerComments" && (t2[a2] = this[a2]);
          }
          return t2;
        }, e2;
      }(), Py = function(e2) {
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.startNode = function() {
          return new jy(this, this.state.start, this.state.startLoc);
        }, r2.startNodeAt = function(e3, t3) {
          return new jy(this, e3, t3);
        }, r2.startNodeAtNode = function(e3) {
          return this.startNodeAt(e3.start, e3.loc.start);
        }, r2.finishNode = function(e3, t3) {
          return this.finishNodeAt(e3, t3, this.state.lastTokEnd, this.state.lastTokEndLoc);
        }, r2.finishNodeAt = function(e3, t3, r3, n2) {
          if (e3.end > 0)
            throw new Error("Do not call finishNode*() twice on the same node. Instead use resetEndLocation() or change type directly.");
          return e3.type = t3, e3.end = r3, e3.loc.end = n2, this.options.ranges && (e3.range[1] = r3), this.processComment(e3), e3;
        }, r2.resetStartLocation = function(e3, t3, r3) {
          e3.start = t3, e3.loc.start = r3, this.options.ranges && (e3.range[0] = t3);
        }, r2.resetEndLocation = function(e3, t3, r3) {
          t3 === void 0 && (t3 = this.state.lastTokEnd), r3 === void 0 && (r3 = this.state.lastTokEndLoc), e3.end = t3, e3.loc.end = r3, this.options.ranges && (e3.range[1] = t3);
        }, r2.resetStartLocationFromNode = function(e3, t3) {
          this.resetStartLocation(e3, t3.start, t3.loc.start);
        }, t2;
      }(Sy), Iy = function e2(t2) {
        return t2.type === "ParenthesizedExpression" ? e2(t2.expression) : t2;
      }, Fy = function(e2) {
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.checkProto = function(e3, t3, r3, n2) {
          if (!(e3.type === "SpreadElement" || this.isObjectMethod(e3) || e3.computed || e3.shorthand)) {
            var s2 = e3.key;
            if ((s2.type === "Identifier" ? s2.name : s2.value) === "__proto__") {
              if (t3)
                return void this.raise(s2.start, Em.RecordNoProto);
              r3.used && (n2 ? n2.doubleProto === -1 && (n2.doubleProto = s2.start) : this.raise(s2.start, Em.DuplicateProto)), r3.used = true;
            }
          }
        }, r2.shouldExitDescending = function(e3, t3) {
          return e3.type === "ArrowFunctionExpression" && e3.start === t3;
        }, r2.getExpression = function() {
          var e3 = 0;
          this.hasPlugin("topLevelAwait") && this.inModule && (e3 |= 2), this.scope.enter(1), this.prodParam.enter(e3), this.nextToken();
          var t3 = this.parseExpression();
          return this.match(lm.eof) || this.unexpected(), t3.comments = this.state.comments, t3.errors = this.state.errors, this.options.tokens && (t3.tokens = this.tokens), t3;
        }, r2.parseExpression = function(e3, t3) {
          var r3 = this;
          return e3 ? this.disallowInAnd(function() {
            return r3.parseExpressionBase(t3);
          }) : this.allowInAnd(function() {
            return r3.parseExpressionBase(t3);
          });
        }, r2.parseExpressionBase = function(e3) {
          var t3 = this.state.start, r3 = this.state.startLoc, n2 = this.parseMaybeAssign(e3);
          if (this.match(lm.comma)) {
            var s2 = this.startNodeAt(t3, r3);
            for (s2.expressions = [n2]; this.eat(lm.comma); )
              s2.expressions.push(this.parseMaybeAssign(e3));
            return this.toReferencedList(s2.expressions), this.finishNode(s2, "SequenceExpression");
          }
          return n2;
        }, r2.parseMaybeAssignDisallowIn = function(e3, t3) {
          var r3 = this;
          return this.disallowInAnd(function() {
            return r3.parseMaybeAssign(e3, t3);
          });
        }, r2.parseMaybeAssignAllowIn = function(e3, t3) {
          var r3 = this;
          return this.allowInAnd(function() {
            return r3.parseMaybeAssign(e3, t3);
          });
        }, r2.setOptionalParametersError = function(e3, t3) {
          var r3;
          e3.optionalParameters = (r3 = t3 == null ? void 0 : t3.pos) != null ? r3 : this.state.start;
        }, r2.parseMaybeAssign = function(e3, t3) {
          var r3, n2 = this.state.start, s2 = this.state.startLoc;
          if (this.isContextual("yield") && this.prodParam.hasYield) {
            var a2 = this.parseYield();
            return t3 && (a2 = t3.call(this, a2, n2, s2)), a2;
          }
          e3 ? r3 = false : (e3 = new Ty(), r3 = true), (this.match(lm.parenL) || this.match(lm.name)) && (this.state.potentialArrowAt = this.state.start);
          var i2 = this.parseMaybeConditional(e3);
          if (t3 && (i2 = t3.call(this, i2, n2, s2)), this.state.type.isAssign) {
            var o2 = this.startNodeAt(n2, s2), u2 = this.state.value;
            return o2.operator = u2, this.match(lm.eq) ? (o2.left = this.toAssignable(i2, true), e3.doubleProto = -1) : o2.left = i2, e3.shorthandAssign >= o2.left.start && (e3.shorthandAssign = -1), this.checkLVal(i2, "assignment expression"), this.next(), o2.right = this.parseMaybeAssign(), this.finishNode(o2, "AssignmentExpression");
          }
          return r3 && this.checkExpressionErrors(e3, true), i2;
        }, r2.parseMaybeConditional = function(e3) {
          var t3 = this.state.start, r3 = this.state.startLoc, n2 = this.state.potentialArrowAt, s2 = this.parseExprOps(e3);
          return this.shouldExitDescending(s2, n2) ? s2 : this.parseConditional(s2, t3, r3, e3);
        }, r2.parseConditional = function(e3, t3, r3, n2) {
          if (this.eat(lm.question)) {
            var s2 = this.startNodeAt(t3, r3);
            return s2.test = e3, s2.consequent = this.parseMaybeAssignAllowIn(), this.expect(lm.colon), s2.alternate = this.parseMaybeAssign(), this.finishNode(s2, "ConditionalExpression");
          }
          return e3;
        }, r2.parseExprOps = function(e3) {
          var t3 = this.state.start, r3 = this.state.startLoc, n2 = this.state.potentialArrowAt, s2 = this.parseMaybeUnary(e3);
          return this.shouldExitDescending(s2, n2) ? s2 : this.parseExprOp(s2, t3, r3, -1);
        }, r2.parseExprOp = function(e3, t3, r3, n2) {
          var s2 = this.state.type.binop;
          if (s2 != null && (this.prodParam.hasIn || !this.match(lm._in)) && s2 > n2) {
            var a2 = this.state.type;
            if (a2 === lm.pipeline) {
              if (this.expectPlugin("pipelineOperator"), this.state.inFSharpPipelineDirectBody)
                return e3;
              this.state.inPipeline = true, this.checkPipelineAtInfixOperator(e3, t3);
            }
            var i2 = this.startNodeAt(t3, r3);
            i2.left = e3, i2.operator = this.state.value;
            var o2 = a2 === lm.logicalOR || a2 === lm.logicalAND, u2 = a2 === lm.nullishCoalescing;
            if (u2 && (s2 = lm.logicalAND.binop), this.next(), a2 === lm.pipeline && this.getPluginOption("pipelineOperator", "proposal") === "minimal" && this.match(lm.name) && this.state.value === "await" && this.prodParam.hasAwait)
              throw this.raise(this.state.start, Em.UnexpectedAwaitAfterPipelineBody);
            i2.right = this.parseExprOpRightExpr(a2, s2), this.finishNode(i2, o2 || u2 ? "LogicalExpression" : "BinaryExpression");
            var l2 = this.state.type;
            if (u2 && (l2 === lm.logicalOR || l2 === lm.logicalAND) || o2 && l2 === lm.nullishCoalescing)
              throw this.raise(this.state.start, Em.MixingCoalesceWithLogical);
            return this.parseExprOp(i2, t3, r3, n2);
          }
          return e3;
        }, r2.parseExprOpRightExpr = function(e3, t3) {
          var r3 = this, n2 = this.state.start, s2 = this.state.startLoc;
          switch (e3) {
            case lm.pipeline:
              switch (this.getPluginOption("pipelineOperator", "proposal")) {
                case "smart":
                  return this.withTopicPermittingContext(function() {
                    return r3.parseSmartPipelineBody(r3.parseExprOpBaseRightExpr(e3, t3), n2, s2);
                  });
                case "fsharp":
                  return this.withSoloAwaitPermittingContext(function() {
                    return r3.parseFSharpPipelineBody(t3);
                  });
              }
            default:
              return this.parseExprOpBaseRightExpr(e3, t3);
          }
        }, r2.parseExprOpBaseRightExpr = function(e3, t3) {
          var r3 = this.state.start, n2 = this.state.startLoc;
          return this.parseExprOp(this.parseMaybeUnary(), r3, n2, e3.rightAssociative ? t3 - 1 : t3);
        }, r2.checkExponentialAfterUnary = function(e3) {
          this.match(lm.exponent) && this.raise(e3.argument.start, Em.UnexpectedTokenUnaryExponentiation);
        }, r2.parseMaybeUnary = function(e3, t3) {
          var r3 = this.state.start, n2 = this.state.startLoc, s2 = this.isContextual("await");
          if (s2 && this.isAwaitAllowed()) {
            this.next();
            var a2 = this.parseAwait(r3, n2);
            return t3 || this.checkExponentialAfterUnary(a2), a2;
          }
          if (this.isContextual("module") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak())
            return this.parseModuleExpression();
          var i2 = this.match(lm.incDec), o2 = this.startNode();
          if (this.state.type.prefix) {
            o2.operator = this.state.value, o2.prefix = true, this.match(lm._throw) && this.expectPlugin("throwExpressions");
            var u2 = this.match(lm._delete);
            if (this.next(), o2.argument = this.parseMaybeUnary(null, true), this.checkExpressionErrors(e3, true), this.state.strict && u2) {
              var l2 = o2.argument;
              l2.type === "Identifier" ? this.raise(o2.start, Em.StrictDelete) : this.hasPropertyAsPrivateName(l2) && this.raise(o2.start, Em.DeletePrivateField);
            }
            if (!i2)
              return t3 || this.checkExponentialAfterUnary(o2), this.finishNode(o2, "UnaryExpression");
          }
          var c2 = this.parseUpdate(o2, i2, e3);
          if (s2 && ((this.hasPlugin("v8intrinsic") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(lm.modulo)) && !this.isAmbiguousAwait()))
            return this.raiseOverwrite(r3, this.hasPlugin("topLevelAwait") ? Em.AwaitNotInAsyncContext : Em.AwaitNotInAsyncFunction), this.parseAwait(r3, n2);
          return c2;
        }, r2.parseUpdate = function(e3, t3, r3) {
          if (t3)
            return this.checkLVal(e3.argument, "prefix operation"), this.finishNode(e3, "UpdateExpression");
          var n2 = this.state.start, s2 = this.state.startLoc, a2 = this.parseExprSubscripts(r3);
          if (this.checkExpressionErrors(r3, false))
            return a2;
          for (; this.state.type.postfix && !this.canInsertSemicolon(); ) {
            var i2 = this.startNodeAt(n2, s2);
            i2.operator = this.state.value, i2.prefix = false, i2.argument = a2, this.checkLVal(a2, "postfix operation"), this.next(), a2 = this.finishNode(i2, "UpdateExpression");
          }
          return a2;
        }, r2.parseExprSubscripts = function(e3) {
          var t3 = this.state.start, r3 = this.state.startLoc, n2 = this.state.potentialArrowAt, s2 = this.parseExprAtom(e3);
          return this.shouldExitDescending(s2, n2) ? s2 : this.parseSubscripts(s2, t3, r3);
        }, r2.parseSubscripts = function(e3, t3, r3, n2) {
          var s2 = { optionalChainMember: false, maybeAsyncArrow: this.atPossibleAsyncArrow(e3), stop: false };
          do {
            e3 = this.parseSubscript(e3, t3, r3, n2, s2), s2.maybeAsyncArrow = false;
          } while (!s2.stop);
          return e3;
        }, r2.parseSubscript = function(e3, t3, r3, n2, s2) {
          if (!n2 && this.eat(lm.doubleColon))
            return this.parseBind(e3, t3, r3, n2, s2);
          if (this.match(lm.backQuote))
            return this.parseTaggedTemplateExpression(e3, t3, r3, s2);
          var a2 = false;
          if (this.match(lm.questionDot)) {
            if (n2 && this.lookaheadCharCode() === 40)
              return s2.stop = true, e3;
            s2.optionalChainMember = a2 = true, this.next();
          }
          return !n2 && this.match(lm.parenL) ? this.parseCoverCallAndAsyncArrowHead(e3, t3, r3, s2, a2) : a2 || this.match(lm.bracketL) || this.eat(lm.dot) ? this.parseMember(e3, t3, r3, s2, a2) : (s2.stop = true, e3);
        }, r2.parseMember = function(e3, t3, r3, n2, s2) {
          var a2 = this.startNodeAt(t3, r3), i2 = this.eat(lm.bracketL);
          a2.object = e3, a2.computed = i2;
          var o2 = !i2 && this.match(lm.privateName) && this.state.value, u2 = i2 ? this.parseExpression() : o2 ? this.parsePrivateName() : this.parseIdentifier(true);
          return o2 !== false && (a2.object.type === "Super" && this.raise(t3, Em.SuperPrivateField), this.classScope.usePrivateName(o2, u2.start)), a2.property = u2, i2 && this.expect(lm.bracketR), n2.optionalChainMember ? (a2.optional = s2, this.finishNode(a2, "OptionalMemberExpression")) : this.finishNode(a2, "MemberExpression");
        }, r2.parseBind = function(e3, t3, r3, n2, s2) {
          var a2 = this.startNodeAt(t3, r3);
          return a2.object = e3, a2.callee = this.parseNoCallExpr(), s2.stop = true, this.parseSubscripts(this.finishNode(a2, "BindExpression"), t3, r3, n2);
        }, r2.parseCoverCallAndAsyncArrowHead = function(e3, t3, r3, n2, s2) {
          var a2 = this.state.maybeInArrowParameters, i2 = null;
          this.state.maybeInArrowParameters = true, this.next();
          var o2 = this.startNodeAt(t3, r3);
          return o2.callee = e3, n2.maybeAsyncArrow && (this.expressionScope.enter(new Ay(2)), i2 = new Ty()), n2.optionalChainMember && (o2.optional = s2), o2.arguments = s2 ? this.parseCallExpressionArguments(lm.parenR) : this.parseCallExpressionArguments(lm.parenR, e3.type === "Import", e3.type !== "Super", o2, i2), this.finishCallExpression(o2, n2.optionalChainMember), n2.maybeAsyncArrow && this.shouldParseAsyncArrow() && !s2 ? (n2.stop = true, this.expressionScope.validateAsPattern(), this.expressionScope.exit(), o2 = this.parseAsyncArrowFromCallExpression(this.startNodeAt(t3, r3), o2)) : (n2.maybeAsyncArrow && (this.checkExpressionErrors(i2, true), this.expressionScope.exit()), this.toReferencedArguments(o2)), this.state.maybeInArrowParameters = a2, o2;
        }, r2.toReferencedArguments = function(e3, t3) {
          this.toReferencedListDeep(e3.arguments, t3);
        }, r2.parseTaggedTemplateExpression = function(e3, t3, r3, n2) {
          var s2 = this.startNodeAt(t3, r3);
          return s2.tag = e3, s2.quasi = this.parseTemplate(true), n2.optionalChainMember && this.raise(t3, Em.OptionalChainingNoTemplate), this.finishNode(s2, "TaggedTemplateExpression");
        }, r2.atPossibleAsyncArrow = function(e3) {
          return e3.type === "Identifier" && e3.name === "async" && this.state.lastTokEnd === e3.end && !this.canInsertSemicolon() && e3.end - e3.start == 5 && e3.start === this.state.potentialArrowAt;
        }, r2.finishCallExpression = function(e3, t3) {
          if (e3.callee.type === "Import")
            if (e3.arguments.length === 2 && (this.hasPlugin("moduleAttributes") || this.expectPlugin("importAssertions")), e3.arguments.length === 0 || e3.arguments.length > 2)
              this.raise(e3.start, Em.ImportCallArity, this.hasPlugin("importAssertions") || this.hasPlugin("moduleAttributes") ? "one or two arguments" : "one argument");
            else
              for (var r3 = 0, n2 = e3.arguments; r3 < n2.length; r3++) {
                var s2 = n2[r3];
                s2.type === "SpreadElement" && this.raise(s2.start, Em.ImportCallSpreadArgument);
              }
          return this.finishNode(e3, t3 ? "OptionalCallExpression" : "CallExpression");
        }, r2.parseCallExpressionArguments = function(e3, t3, r3, n2, s2) {
          var a2 = [], i2 = true, o2 = this.state.inFSharpPipelineDirectBody;
          for (this.state.inFSharpPipelineDirectBody = false; !this.eat(e3); ) {
            if (i2)
              i2 = false;
            else if (this.expect(lm.comma), this.match(e3)) {
              !t3 || this.hasPlugin("importAssertions") || this.hasPlugin("moduleAttributes") || this.raise(this.state.lastTokStart, Em.ImportCallArgumentTrailingComma), n2 && this.addExtra(n2, "trailingComma", this.state.lastTokStart), this.next();
              break;
            }
            a2.push(this.parseExprListItem(false, s2, r3));
          }
          return this.state.inFSharpPipelineDirectBody = o2, a2;
        }, r2.shouldParseAsyncArrow = function() {
          return this.match(lm.arrow) && !this.canInsertSemicolon();
        }, r2.parseAsyncArrowFromCallExpression = function(e3, t3) {
          var r3;
          return this.expect(lm.arrow), this.parseArrowExpression(e3, t3.arguments, true, (r3 = t3.extra) == null ? void 0 : r3.trailingComma), e3;
        }, r2.parseNoCallExpr = function() {
          var e3 = this.state.start, t3 = this.state.startLoc;
          return this.parseSubscripts(this.parseExprAtom(), e3, t3, true);
        }, r2.parseExprAtom = function(e3) {
          var t3;
          switch (this.state.type) {
            case lm._super:
              return this.parseSuper();
            case lm._import:
              return t3 = this.startNode(), this.next(), this.match(lm.dot) ? this.parseImportMetaProperty(t3) : (this.match(lm.parenL) || this.raise(this.state.lastTokStart, Em.UnsupportedImport), this.finishNode(t3, "Import"));
            case lm._this:
              return t3 = this.startNode(), this.next(), this.finishNode(t3, "ThisExpression");
            case lm.name:
              var r3 = this.state.potentialArrowAt === this.state.start, n2 = this.state.containsEsc, s2 = this.parseIdentifier();
              if (!n2 && s2.name === "async" && !this.canInsertSemicolon()) {
                if (this.match(lm._function))
                  return this.next(), this.parseFunction(this.startNodeAtNode(s2), void 0, true);
                if (this.match(lm.name))
                  return this.lookaheadCharCode() === 61 ? this.parseAsyncArrowUnaryFunction(s2) : s2;
                if (this.match(lm._do))
                  return this.parseDo(true);
              }
              return r3 && this.match(lm.arrow) && !this.canInsertSemicolon() ? (this.next(), this.parseArrowExpression(this.startNodeAtNode(s2), [s2], false)) : s2;
            case lm._do:
              return this.parseDo(false);
            case lm.slash:
            case lm.slashAssign:
              return this.readRegexp(), this.parseRegExpLiteral(this.state.value);
            case lm.num:
              return this.parseNumericLiteral(this.state.value);
            case lm.bigint:
              return this.parseBigIntLiteral(this.state.value);
            case lm.decimal:
              return this.parseDecimalLiteral(this.state.value);
            case lm.string:
              return this.parseStringLiteral(this.state.value);
            case lm._null:
              return this.parseNullLiteral();
            case lm._true:
              return this.parseBooleanLiteral(true);
            case lm._false:
              return this.parseBooleanLiteral(false);
            case lm.parenL:
              var a2 = this.state.potentialArrowAt === this.state.start;
              return this.parseParenAndDistinguishExpression(a2);
            case lm.bracketBarL:
            case lm.bracketHashL:
              return this.parseArrayLike(this.state.type === lm.bracketBarL ? lm.bracketBarR : lm.bracketR, false, true, e3);
            case lm.bracketL:
              return this.parseArrayLike(lm.bracketR, true, false, e3);
            case lm.braceBarL:
            case lm.braceHashL:
              return this.parseObjectLike(this.state.type === lm.braceBarL ? lm.braceBarR : lm.braceR, false, true, e3);
            case lm.braceL:
              return this.parseObjectLike(lm.braceR, false, false, e3);
            case lm._function:
              return this.parseFunctionOrFunctionSent();
            case lm.at:
              this.parseDecorators();
            case lm._class:
              return t3 = this.startNode(), this.takeDecorators(t3), this.parseClass(t3, false);
            case lm._new:
              return this.parseNewOrNewTarget();
            case lm.backQuote:
              return this.parseTemplate(false);
            case lm.doubleColon:
              t3 = this.startNode(), this.next(), t3.object = null;
              var i2 = t3.callee = this.parseNoCallExpr();
              if (i2.type === "MemberExpression")
                return this.finishNode(t3, "BindExpression");
              throw this.raise(i2.start, Em.UnsupportedBind);
            case lm.privateName:
              var o2 = this.state.start, u2 = this.state.value;
              if (t3 = this.parsePrivateName(), this.match(lm._in))
                this.expectPlugin("privateIn"), this.classScope.usePrivateName(u2, t3.start);
              else {
                if (!this.hasPlugin("privateIn"))
                  throw this.unexpected(o2);
                this.raise(this.state.start, Em.PrivateInExpectedIn, u2);
              }
              return t3;
            case lm.hash:
              if (this.state.inPipeline)
                return t3 = this.startNode(), this.getPluginOption("pipelineOperator", "proposal") !== "smart" && this.raise(t3.start, Em.PrimaryTopicRequiresSmartPipeline), this.next(), this.primaryTopicReferenceIsAllowedInCurrentTopicContext() || this.raise(t3.start, Em.PrimaryTopicNotAllowed), this.registerTopicReference(), this.finishNode(t3, "PipelinePrimaryTopicReference");
            case lm.relational:
              if (this.state.value === "<") {
                var l2 = this.input.codePointAt(this.nextTokenStart());
                (yr(l2) || l2 === 62) && this.expectOnePlugin(["jsx", "flow", "typescript"]);
              }
            default:
              throw this.unexpected();
          }
        }, r2.parseAsyncArrowUnaryFunction = function(e3) {
          var t3 = this.startNodeAtNode(e3);
          this.prodParam.enter(ty(true, this.prodParam.hasYield));
          var r3 = [this.parseIdentifier()];
          return this.prodParam.exit(), this.hasPrecedingLineBreak() && this.raise(this.state.pos, Em.LineTerminatorBeforeArrow), this.expect(lm.arrow), this.parseArrowExpression(t3, r3, true), t3;
        }, r2.parseDo = function(e3) {
          this.expectPlugin("doExpressions"), e3 && this.expectPlugin("asyncDoExpressions");
          var t3 = this.startNode();
          t3.async = e3, this.next();
          var r3 = this.state.labels;
          return this.state.labels = [], e3 ? (this.prodParam.enter(2), t3.body = this.parseBlock(), this.prodParam.exit()) : t3.body = this.parseBlock(), this.state.labels = r3, this.finishNode(t3, "DoExpression");
        }, r2.parseSuper = function() {
          var e3 = this.startNode();
          return this.next(), !this.match(lm.parenL) || this.scope.allowDirectSuper || this.options.allowSuperOutsideMethod ? this.scope.allowSuper || this.options.allowSuperOutsideMethod || this.raise(e3.start, Em.UnexpectedSuper) : this.raise(e3.start, Em.SuperNotAllowed), this.match(lm.parenL) || this.match(lm.bracketL) || this.match(lm.dot) || this.raise(e3.start, Em.UnsupportedSuper), this.finishNode(e3, "Super");
        }, r2.parseMaybePrivateName = function(e3) {
          return this.match(lm.privateName) ? (e3 || this.raise(this.state.start + 1, Em.UnexpectedPrivateField), this.parsePrivateName()) : this.parseIdentifier(true);
        }, r2.parsePrivateName = function() {
          var e3 = this.startNode(), t3 = this.startNodeAt(this.state.start + 1, new mm(this.state.curLine, this.state.start + 1 - this.state.lineStart)), r3 = this.state.value;
          return this.next(), e3.id = this.createIdentifier(t3, r3), this.finishNode(e3, "PrivateName");
        }, r2.parseFunctionOrFunctionSent = function() {
          var e3 = this.startNode();
          if (this.next(), this.prodParam.hasYield && this.match(lm.dot)) {
            var t3 = this.createIdentifier(this.startNodeAtNode(e3), "function");
            return this.next(), this.parseMetaProperty(e3, t3, "sent");
          }
          return this.parseFunction(e3);
        }, r2.parseMetaProperty = function(e3, t3, r3) {
          e3.meta = t3, t3.name === "function" && r3 === "sent" && (this.isContextual(r3) ? this.expectPlugin("functionSent") : this.hasPlugin("functionSent") || this.unexpected());
          var n2 = this.state.containsEsc;
          return e3.property = this.parseIdentifier(true), (e3.property.name !== r3 || n2) && this.raise(e3.property.start, Em.UnsupportedMetaProperty, t3.name, r3), this.finishNode(e3, "MetaProperty");
        }, r2.parseImportMetaProperty = function(e3) {
          var t3 = this.createIdentifier(this.startNodeAtNode(e3), "import");
          return this.next(), this.isContextual("meta") && (this.inModule || this.raise(t3.start, xm.ImportMetaOutsideModule), this.sawUnambiguousESM = true), this.parseMetaProperty(e3, t3, "meta");
        }, r2.parseLiteralAtNode = function(e3, t3, r3) {
          return this.addExtra(r3, "rawValue", e3), this.addExtra(r3, "raw", this.input.slice(r3.start, this.state.end)), r3.value = e3, this.next(), this.finishNode(r3, t3);
        }, r2.parseLiteral = function(e3, t3) {
          var r3 = this.startNode();
          return this.parseLiteralAtNode(e3, t3, r3);
        }, r2.parseStringLiteral = function(e3) {
          return this.parseLiteral(e3, "StringLiteral");
        }, r2.parseNumericLiteral = function(e3) {
          return this.parseLiteral(e3, "NumericLiteral");
        }, r2.parseBigIntLiteral = function(e3) {
          return this.parseLiteral(e3, "BigIntLiteral");
        }, r2.parseDecimalLiteral = function(e3) {
          return this.parseLiteral(e3, "DecimalLiteral");
        }, r2.parseRegExpLiteral = function(e3) {
          var t3 = this.parseLiteral(e3.value, "RegExpLiteral");
          return t3.pattern = e3.pattern, t3.flags = e3.flags, t3;
        }, r2.parseBooleanLiteral = function(e3) {
          var t3 = this.startNode();
          return t3.value = e3, this.next(), this.finishNode(t3, "BooleanLiteral");
        }, r2.parseNullLiteral = function() {
          var e3 = this.startNode();
          return this.next(), this.finishNode(e3, "NullLiteral");
        }, r2.parseParenAndDistinguishExpression = function(e3) {
          var t3, r3 = this.state.start, n2 = this.state.startLoc;
          this.next(), this.expressionScope.enter(new Ay(1));
          var s2 = this.state.maybeInArrowParameters, a2 = this.state.inFSharpPipelineDirectBody;
          this.state.maybeInArrowParameters = true, this.state.inFSharpPipelineDirectBody = false;
          for (var i2, o2, u2 = this.state.start, l2 = this.state.startLoc, c2 = [], p2 = new Ty(), d2 = true; !this.match(lm.parenR); ) {
            if (d2)
              d2 = false;
            else if (this.expect(lm.comma, p2.optionalParameters === -1 ? null : p2.optionalParameters), this.match(lm.parenR)) {
              o2 = this.state.start;
              break;
            }
            if (this.match(lm.ellipsis)) {
              var f2 = this.state.start, h2 = this.state.startLoc;
              i2 = this.state.start, c2.push(this.parseParenItem(this.parseRestBinding(), f2, h2)), this.checkCommaAfterRest(41);
              break;
            }
            c2.push(this.parseMaybeAssignAllowIn(p2, this.parseParenItem));
          }
          var m2 = this.state.lastTokEnd, y2 = this.state.lastTokEndLoc;
          this.expect(lm.parenR), this.state.maybeInArrowParameters = s2, this.state.inFSharpPipelineDirectBody = a2;
          var g2 = this.startNodeAt(r3, n2);
          if (e3 && this.shouldParseArrow() && (g2 = this.parseArrow(g2)))
            return this.expressionScope.validateAsPattern(), this.expressionScope.exit(), this.parseArrowExpression(g2, c2, false), g2;
          if (this.expressionScope.exit(), c2.length || this.unexpected(this.state.lastTokStart), o2 && this.unexpected(o2), i2 && this.unexpected(i2), this.checkExpressionErrors(p2, true), this.toReferencedListDeep(c2, true), c2.length > 1 ? ((t3 = this.startNodeAt(u2, l2)).expressions = c2, this.finishNodeAt(t3, "SequenceExpression", m2, y2)) : t3 = c2[0], !this.options.createParenthesizedExpressions)
            return this.addExtra(t3, "parenthesized", true), this.addExtra(t3, "parenStart", r3), t3;
          var v2 = this.startNodeAt(r3, n2);
          return v2.expression = t3, this.finishNode(v2, "ParenthesizedExpression"), v2;
        }, r2.shouldParseArrow = function() {
          return !this.canInsertSemicolon();
        }, r2.parseArrow = function(e3) {
          if (this.eat(lm.arrow))
            return e3;
        }, r2.parseParenItem = function(e3, t3, r3) {
          return e3;
        }, r2.parseNewOrNewTarget = function() {
          var e3 = this.startNode();
          if (this.next(), this.match(lm.dot)) {
            var t3 = this.createIdentifier(this.startNodeAtNode(e3), "new");
            this.next();
            var r3 = this.parseMetaProperty(e3, t3, "target");
            return this.scope.inNonArrowFunction || this.scope.inClass || this.raise(r3.start, Em.UnexpectedNewTarget), r3;
          }
          return this.parseNew(e3);
        }, r2.parseNew = function(e3) {
          return e3.callee = this.parseNoCallExpr(), e3.callee.type === "Import" ? this.raise(e3.callee.start, Em.ImportCallNotNewExpression) : this.isOptionalChain(e3.callee) ? this.raise(this.state.lastTokEnd, Em.OptionalChainingNoNew) : this.eat(lm.questionDot) && this.raise(this.state.start, Em.OptionalChainingNoNew), this.parseNewArguments(e3), this.finishNode(e3, "NewExpression");
        }, r2.parseNewArguments = function(e3) {
          if (this.eat(lm.parenL)) {
            var t3 = this.parseExprList(lm.parenR);
            this.toReferencedList(t3), e3.arguments = t3;
          } else
            e3.arguments = [];
        }, r2.parseTemplateElement = function(e3) {
          var t3 = this.startNode();
          return this.state.value === null && (e3 || this.raise(this.state.start + 1, Em.InvalidEscapeSequenceTemplate)), t3.value = { raw: this.input.slice(this.state.start, this.state.end).replace(/\r\n?/g, "\n"), cooked: this.state.value }, this.next(), t3.tail = this.match(lm.backQuote), this.finishNode(t3, "TemplateElement");
        }, r2.parseTemplate = function(e3) {
          var t3 = this.startNode();
          this.next(), t3.expressions = [];
          var r3 = this.parseTemplateElement(e3);
          for (t3.quasis = [r3]; !r3.tail; )
            this.expect(lm.dollarBraceL), t3.expressions.push(this.parseTemplateSubstitution()), this.expect(lm.braceR), t3.quasis.push(r3 = this.parseTemplateElement(e3));
          return this.next(), this.finishNode(t3, "TemplateLiteral");
        }, r2.parseTemplateSubstitution = function() {
          return this.parseExpression();
        }, r2.parseObjectLike = function(e3, t3, r3, n2) {
          r3 && this.expectPlugin("recordAndTuple");
          var s2 = this.state.inFSharpPipelineDirectBody;
          this.state.inFSharpPipelineDirectBody = false;
          var a2 = Object.create(null), i2 = true, o2 = this.startNode();
          for (o2.properties = [], this.next(); !this.match(e3); ) {
            if (i2)
              i2 = false;
            else if (this.expect(lm.comma), this.match(e3)) {
              this.addExtra(o2, "trailingComma", this.state.lastTokStart);
              break;
            }
            var u2 = this.parsePropertyDefinition(t3, n2);
            t3 || this.checkProto(u2, r3, a2, n2), r3 && !this.isObjectProperty(u2) && u2.type !== "SpreadElement" && this.raise(u2.start, Em.InvalidRecordProperty), u2.shorthand && this.addExtra(u2, "shorthand", true), o2.properties.push(u2);
          }
          this.next(), this.state.inFSharpPipelineDirectBody = s2;
          var l2 = "ObjectExpression";
          return t3 ? l2 = "ObjectPattern" : r3 && (l2 = "RecordExpression"), this.finishNode(o2, l2);
        }, r2.maybeAsyncOrAccessorProp = function(e3) {
          return !e3.computed && e3.key.type === "Identifier" && (this.isLiteralPropertyName() || this.match(lm.bracketL) || this.match(lm.star));
        }, r2.parsePropertyDefinition = function(e3, t3) {
          var r3 = [];
          if (this.match(lm.at))
            for (this.hasPlugin("decorators") && this.raise(this.state.start, Em.UnsupportedPropertyDecorator); this.match(lm.at); )
              r3.push(this.parseDecorator());
          var n2, s2, a2 = this.startNode(), i2 = false, o2 = false, u2 = false;
          if (this.match(lm.ellipsis))
            return r3.length && this.unexpected(), e3 ? (this.next(), a2.argument = this.parseIdentifier(), this.checkCommaAfterRest(125), this.finishNode(a2, "RestElement")) : this.parseSpread();
          r3.length && (a2.decorators = r3, r3 = []), a2.method = false, (e3 || t3) && (n2 = this.state.start, s2 = this.state.startLoc), e3 || (i2 = this.eat(lm.star));
          var l2 = this.state.containsEsc, c2 = this.parsePropertyName(a2, false);
          if (!e3 && !i2 && !l2 && this.maybeAsyncOrAccessorProp(a2)) {
            var p2 = c2.name;
            p2 !== "async" || this.hasPrecedingLineBreak() || (o2 = true, i2 = this.eat(lm.star), this.parsePropertyName(a2, false)), p2 !== "get" && p2 !== "set" || (u2 = true, a2.kind = p2, this.match(lm.star) && (i2 = true, this.raise(this.state.pos, Em.AccessorIsGenerator, p2), this.next()), this.parsePropertyName(a2, false));
          }
          return this.parseObjPropValue(a2, n2, s2, i2, o2, e3, u2, t3), a2;
        }, r2.getGetterSetterExpectedParamCount = function(e3) {
          return e3.kind === "get" ? 0 : 1;
        }, r2.getObjectOrClassMethodParams = function(e3) {
          return e3.params;
        }, r2.checkGetterSetterParams = function(e3) {
          var t3, r3 = this.getGetterSetterExpectedParamCount(e3), n2 = this.getObjectOrClassMethodParams(e3), s2 = e3.start;
          n2.length !== r3 && (e3.kind === "get" ? this.raise(s2, Em.BadGetterArity) : this.raise(s2, Em.BadSetterArity)), e3.kind === "set" && ((t3 = n2[n2.length - 1]) == null ? void 0 : t3.type) === "RestElement" && this.raise(s2, Em.BadSetterRestParameter);
        }, r2.parseObjectMethod = function(e3, t3, r3, n2, s2) {
          return s2 ? (this.parseMethod(e3, t3, false, false, false, "ObjectMethod"), this.checkGetterSetterParams(e3), e3) : r3 || t3 || this.match(lm.parenL) ? (n2 && this.unexpected(), e3.kind = "method", e3.method = true, this.parseMethod(e3, t3, r3, false, false, "ObjectMethod")) : void 0;
        }, r2.parseObjectProperty = function(e3, t3, r3, n2, s2) {
          return e3.shorthand = false, this.eat(lm.colon) ? (e3.value = n2 ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(s2), this.finishNode(e3, "ObjectProperty")) : e3.computed || e3.key.type !== "Identifier" ? void 0 : (this.checkReservedWord(e3.key.name, e3.key.start, true, false), n2 ? e3.value = this.parseMaybeDefault(t3, r3, e3.key.__clone()) : this.match(lm.eq) && s2 ? (s2.shorthandAssign === -1 && (s2.shorthandAssign = this.state.start), e3.value = this.parseMaybeDefault(t3, r3, e3.key.__clone())) : e3.value = e3.key.__clone(), e3.shorthand = true, this.finishNode(e3, "ObjectProperty"));
        }, r2.parseObjPropValue = function(e3, t3, r3, n2, s2, a2, i2, o2) {
          var u2 = this.parseObjectMethod(e3, n2, s2, a2, i2) || this.parseObjectProperty(e3, t3, r3, a2, o2);
          return u2 || this.unexpected(), u2;
        }, r2.parsePropertyName = function(e3, t3) {
          if (this.eat(lm.bracketL))
            e3.computed = true, e3.key = this.parseMaybeAssignAllowIn(), this.expect(lm.bracketR);
          else {
            var r3 = this.state.inPropertyName;
            this.state.inPropertyName = true;
            var n2 = this.state.type;
            e3.key = n2 === lm.num || n2 === lm.string || n2 === lm.bigint || n2 === lm.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(t3), n2 !== lm.privateName && (e3.computed = false), this.state.inPropertyName = r3;
          }
          return e3.key;
        }, r2.initFunction = function(e3, t3) {
          e3.id = null, e3.generator = false, e3.async = !!t3;
        }, r2.parseMethod = function(e3, t3, r3, n2, s2, a2, i2) {
          i2 === void 0 && (i2 = false), this.initFunction(e3, r3), e3.generator = !!t3;
          var o2 = n2;
          return this.scope.enter(18 | (i2 ? Tm : 0) | (s2 ? 32 : 0)), this.prodParam.enter(ty(r3, e3.generator)), this.parseFunctionParams(e3, o2), this.parseFunctionBodyAndFinish(e3, a2, true), this.prodParam.exit(), this.scope.exit(), e3;
        }, r2.parseArrayLike = function(e3, t3, r3, n2) {
          r3 && this.expectPlugin("recordAndTuple");
          var s2 = this.state.inFSharpPipelineDirectBody;
          this.state.inFSharpPipelineDirectBody = false;
          var a2 = this.startNode();
          return this.next(), a2.elements = this.parseExprList(e3, !r3, n2, a2), this.state.inFSharpPipelineDirectBody = s2, this.finishNode(a2, r3 ? "TupleExpression" : "ArrayExpression");
        }, r2.parseArrowExpression = function(e3, t3, r3, n2) {
          this.scope.enter(6);
          var s2 = ty(r3, false);
          !this.match(lm.bracketL) && this.prodParam.hasIn && (s2 |= 8), this.prodParam.enter(s2), this.initFunction(e3, r3);
          var a2 = this.state.maybeInArrowParameters;
          return t3 && (this.state.maybeInArrowParameters = true, this.setArrowFunctionParameters(e3, t3, n2)), this.state.maybeInArrowParameters = false, this.parseFunctionBody(e3, true), this.prodParam.exit(), this.scope.exit(), this.state.maybeInArrowParameters = a2, this.finishNode(e3, "ArrowFunctionExpression");
        }, r2.setArrowFunctionParameters = function(e3, t3, r3) {
          e3.params = this.toAssignableList(t3, r3, false);
        }, r2.parseFunctionBodyAndFinish = function(e3, t3, r3) {
          r3 === void 0 && (r3 = false), this.parseFunctionBody(e3, false, r3), this.finishNode(e3, t3);
        }, r2.parseFunctionBody = function(e3, t3, r3) {
          var n2 = this;
          r3 === void 0 && (r3 = false);
          var s2 = t3 && !this.match(lm.braceL);
          if (this.expressionScope.enter(Cy()), s2)
            e3.body = this.parseMaybeAssign(), this.checkParams(e3, false, t3, false);
          else {
            var a2 = this.state.strict, i2 = this.state.labels;
            this.state.labels = [], this.prodParam.enter(4 | this.prodParam.currentFlags()), e3.body = this.parseBlock(true, false, function(s3) {
              var i3 = !n2.isSimpleParamList(e3.params);
              if (s3 && i3) {
                var o2 = e3.kind !== "method" && e3.kind !== "constructor" || !e3.key ? e3.start : e3.key.end;
                n2.raise(o2, Em.IllegalLanguageModeDirective);
              }
              var u2 = !a2 && n2.state.strict;
              n2.checkParams(e3, !(n2.state.strict || t3 || r3 || i3), t3, u2), n2.state.strict && e3.id && n2.checkLVal(e3.id, "function name", 65, void 0, void 0, u2);
            }), this.prodParam.exit(), this.expressionScope.exit(), this.state.labels = i2;
          }
        }, r2.isSimpleParamList = function(e3) {
          for (var t3 = 0, r3 = e3.length; t3 < r3; t3++)
            if (e3[t3].type !== "Identifier")
              return false;
          return true;
        }, r2.checkParams = function(e3, t3, r3, n2) {
          n2 === void 0 && (n2 = true);
          for (var s2 = new Set(), a2 = 0, i2 = e3.params; a2 < i2.length; a2++) {
            var o2 = i2[a2];
            this.checkLVal(o2, "function parameter list", 5, t3 ? null : s2, void 0, n2);
          }
        }, r2.parseExprList = function(e3, t3, r3, n2) {
          for (var s2 = [], a2 = true; !this.eat(e3); ) {
            if (a2)
              a2 = false;
            else if (this.expect(lm.comma), this.match(e3)) {
              n2 && this.addExtra(n2, "trailingComma", this.state.lastTokStart), this.next();
              break;
            }
            s2.push(this.parseExprListItem(t3, r3));
          }
          return s2;
        }, r2.parseExprListItem = function(e3, t3, r3) {
          var n2;
          if (this.match(lm.comma))
            e3 || this.raise(this.state.pos, Em.UnexpectedToken, ","), n2 = null;
          else if (this.match(lm.ellipsis)) {
            var s2 = this.state.start, a2 = this.state.startLoc;
            n2 = this.parseParenItem(this.parseSpread(t3), s2, a2);
          } else if (this.match(lm.question)) {
            this.expectPlugin("partialApplication"), r3 || this.raise(this.state.start, Em.UnexpectedArgumentPlaceholder);
            var i2 = this.startNode();
            this.next(), n2 = this.finishNode(i2, "ArgumentPlaceholder");
          } else
            n2 = this.parseMaybeAssignAllowIn(t3, this.parseParenItem);
          return n2;
        }, r2.parseIdentifier = function(e3) {
          var t3 = this.startNode(), r3 = this.parseIdentifierName(t3.start, e3);
          return this.createIdentifier(t3, r3);
        }, r2.createIdentifier = function(e3, t3) {
          return e3.name = t3, e3.loc.identifierName = t3, this.finishNode(e3, "Identifier");
        }, r2.parseIdentifierName = function(e3, t3) {
          var r3, n2 = this.state, s2 = n2.start, a2 = n2.type;
          if (a2 === lm.name)
            r3 = this.state.value;
          else {
            if (!a2.keyword)
              throw this.unexpected();
            r3 = a2.keyword;
          }
          return t3 ? this.state.type = lm.name : this.checkReservedWord(r3, s2, !!a2.keyword, false), this.next(), r3;
        }, r2.checkReservedWord = function(e3, t3, r3, n2) {
          if (!(e3.length > 10) && function(e4) {
            return Sm.has(e4);
          }(e3)) {
            if (e3 === "yield") {
              if (this.prodParam.hasYield)
                return void this.raise(t3, Em.YieldBindingIdentifier);
            } else if (e3 === "await") {
              if (this.prodParam.hasAwait)
                return void this.raise(t3, Em.AwaitBindingIdentifier);
              if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction)
                return void this.raise(t3, Em.AwaitBindingIdentifierInStaticBlock);
              this.expressionScope.recordAsyncArrowParametersError(t3, Em.AwaitBindingIdentifier);
            } else if (e3 === "arguments" && this.scope.inClassAndNotInNonArrowFunction)
              return void this.raise(t3, Em.ArgumentsInClass);
            if (r3 && jr(e3))
              this.raise(t3, Em.UnexpectedKeyword, e3);
            else
              (this.state.strict ? n2 ? Tr : Cr : wr)(e3, this.inModule) && this.raise(t3, Em.UnexpectedReservedWord, e3);
          }
        }, r2.isAwaitAllowed = function() {
          return !!this.prodParam.hasAwait || !(!this.options.allowAwaitOutsideFunction || this.scope.inFunction);
        }, r2.parseAwait = function(e3, t3) {
          var r3 = this.startNodeAt(e3, t3);
          return this.expressionScope.recordParameterInitializerError(r3.start, Em.AwaitExpressionFormalParameter), this.eat(lm.star) && this.raise(r3.start, Em.ObsoleteAwaitStar), this.scope.inFunction || this.options.allowAwaitOutsideFunction || (this.isAmbiguousAwait() ? this.ambiguousScriptDifferentAst = true : this.sawUnambiguousESM = true), this.state.soloAwait || (r3.argument = this.parseMaybeUnary(null, true)), this.finishNode(r3, "AwaitExpression");
        }, r2.isAmbiguousAwait = function() {
          return this.hasPrecedingLineBreak() || this.match(lm.plusMin) || this.match(lm.parenL) || this.match(lm.bracketL) || this.match(lm.backQuote) || this.match(lm.regexp) || this.match(lm.slash) || this.hasPlugin("v8intrinsic") && this.match(lm.modulo);
        }, r2.parseYield = function() {
          var e3 = this.startNode();
          this.expressionScope.recordParameterInitializerError(e3.start, Em.YieldInParameter), this.next();
          var t3 = false, r3 = null;
          if (!this.hasPrecedingLineBreak())
            switch (t3 = this.eat(lm.star), this.state.type) {
              case lm.semi:
              case lm.eof:
              case lm.braceR:
              case lm.parenR:
              case lm.bracketR:
              case lm.braceBarR:
              case lm.colon:
              case lm.comma:
                if (!t3)
                  break;
              default:
                r3 = this.parseMaybeAssign();
            }
          return e3.delegate = t3, e3.argument = r3, this.finishNode(e3, "YieldExpression");
        }, r2.checkPipelineAtInfixOperator = function(e3, t3) {
          this.getPluginOption("pipelineOperator", "proposal") === "smart" && e3.type === "SequenceExpression" && this.raise(t3, Em.PipelineHeadSequenceExpression);
        }, r2.parseSmartPipelineBody = function(e3, t3, r3) {
          return this.checkSmartPipelineBodyEarlyErrors(e3, t3), this.parseSmartPipelineBodyInStyle(e3, t3, r3);
        }, r2.checkSmartPipelineBodyEarlyErrors = function(e3, t3) {
          if (this.match(lm.arrow))
            throw this.raise(this.state.start, Em.PipelineBodyNoArrow);
          e3.type === "SequenceExpression" && this.raise(t3, Em.PipelineBodySequenceExpression);
        }, r2.parseSmartPipelineBodyInStyle = function(e3, t3, r3) {
          var n2 = this.startNodeAt(t3, r3), s2 = this.isSimpleReference(e3);
          return s2 ? n2.callee = e3 : (this.topicReferenceWasUsedInCurrentTopicContext() || this.raise(t3, Em.PipelineTopicUnused), n2.expression = e3), this.finishNode(n2, s2 ? "PipelineBareFunction" : "PipelineTopicExpression");
        }, r2.isSimpleReference = function(e3) {
          switch (e3.type) {
            case "MemberExpression":
              return !e3.computed && this.isSimpleReference(e3.object);
            case "Identifier":
              return true;
            default:
              return false;
          }
        }, r2.withTopicPermittingContext = function(e3) {
          var t3 = this.state.topicContext;
          this.state.topicContext = { maxNumOfResolvableTopics: 1, maxTopicIndex: null };
          try {
            return e3();
          } finally {
            this.state.topicContext = t3;
          }
        }, r2.withTopicForbiddingContext = function(e3) {
          var t3 = this.state.topicContext;
          this.state.topicContext = { maxNumOfResolvableTopics: 0, maxTopicIndex: null };
          try {
            return e3();
          } finally {
            this.state.topicContext = t3;
          }
        }, r2.withSoloAwaitPermittingContext = function(e3) {
          var t3 = this.state.soloAwait;
          this.state.soloAwait = true;
          try {
            return e3();
          } finally {
            this.state.soloAwait = t3;
          }
        }, r2.allowInAnd = function(e3) {
          var t3 = this.prodParam.currentFlags();
          if (8 & ~t3) {
            this.prodParam.enter(8 | t3);
            try {
              return e3();
            } finally {
              this.prodParam.exit();
            }
          }
          return e3();
        }, r2.disallowInAnd = function(e3) {
          var t3 = this.prodParam.currentFlags();
          if (8 & t3) {
            this.prodParam.enter(-9 & t3);
            try {
              return e3();
            } finally {
              this.prodParam.exit();
            }
          }
          return e3();
        }, r2.registerTopicReference = function() {
          this.state.topicContext.maxTopicIndex = 0;
        }, r2.primaryTopicReferenceIsAllowedInCurrentTopicContext = function() {
          return this.state.topicContext.maxNumOfResolvableTopics >= 1;
        }, r2.topicReferenceWasUsedInCurrentTopicContext = function() {
          return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;
        }, r2.parseFSharpPipelineBody = function(e3) {
          var t3 = this.state.start, r3 = this.state.startLoc;
          this.state.potentialArrowAt = this.state.start;
          var n2 = this.state.inFSharpPipelineDirectBody;
          this.state.inFSharpPipelineDirectBody = true;
          var s2 = this.parseExprOp(this.parseMaybeUnary(), t3, r3, e3);
          return this.state.inFSharpPipelineDirectBody = n2, s2;
        }, r2.parseModuleExpression = function() {
          this.expectPlugin("moduleBlocks");
          var e3 = this.startNode();
          this.next(), this.eat(lm.braceL);
          var t3 = this.initializeScopes(true);
          this.enterInitialScopes();
          var r3 = this.startNode();
          try {
            e3.body = this.parseProgram(r3, lm.braceR, "module");
          } finally {
            t3();
          }
          return this.eat(lm.braceR), this.finishNode(e3, "ModuleExpression");
        }, t2;
      }(function(e2) {
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.toAssignable = function(e3, t3) {
          var r3, n2;
          t3 === void 0 && (t3 = false);
          var s2 = void 0;
          switch ((e3.type === "ParenthesizedExpression" || (r3 = e3.extra) != null && r3.parenthesized) && (s2 = Iy(e3), t3 ? s2.type === "Identifier" ? this.expressionScope.recordParenthesizedIdentifierError(e3.start, Em.InvalidParenthesizedAssignment) : s2.type !== "MemberExpression" && this.raise(e3.start, Em.InvalidParenthesizedAssignment) : this.raise(e3.start, Em.InvalidParenthesizedAssignment)), e3.type) {
            case "Identifier":
            case "ObjectPattern":
            case "ArrayPattern":
            case "AssignmentPattern":
              break;
            case "ObjectExpression":
              e3.type = "ObjectPattern";
              for (var a2 = 0, i2 = e3.properties.length, o2 = i2 - 1; a2 < i2; a2++) {
                var u2, l2 = e3.properties[a2], c2 = a2 === o2;
                this.toAssignableObjectExpressionProp(l2, c2, t3), c2 && l2.type === "RestElement" && (u2 = e3.extra) != null && u2.trailingComma && this.raiseRestNotLast(e3.extra.trailingComma);
              }
              break;
            case "ObjectProperty":
              this.toAssignable(e3.value, t3);
              break;
            case "SpreadElement":
              this.checkToRestConversion(e3), e3.type = "RestElement";
              var p2 = e3.argument;
              this.toAssignable(p2, t3);
              break;
            case "ArrayExpression":
              e3.type = "ArrayPattern", this.toAssignableList(e3.elements, (n2 = e3.extra) == null ? void 0 : n2.trailingComma, t3);
              break;
            case "AssignmentExpression":
              e3.operator !== "=" && this.raise(e3.left.end, Em.MissingEqInAssignment), e3.type = "AssignmentPattern", delete e3.operator, this.toAssignable(e3.left, t3);
              break;
            case "ParenthesizedExpression":
              this.toAssignable(s2, t3);
          }
          return e3;
        }, r2.toAssignableObjectExpressionProp = function(e3, t3, r3) {
          if (e3.type === "ObjectMethod") {
            var n2 = e3.kind === "get" || e3.kind === "set" ? Em.PatternHasAccessor : Em.PatternHasMethod;
            this.raise(e3.key.start, n2);
          } else
            e3.type !== "SpreadElement" || t3 ? this.toAssignable(e3, r3) : this.raiseRestNotLast(e3.start);
        }, r2.toAssignableList = function(e3, t3, r3) {
          var n2 = e3.length;
          if (n2) {
            var s2 = e3[n2 - 1];
            if ((s2 == null ? void 0 : s2.type) === "RestElement")
              --n2;
            else if ((s2 == null ? void 0 : s2.type) === "SpreadElement") {
              s2.type = "RestElement";
              var a2 = s2.argument;
              this.toAssignable(a2, r3), (a2 = Iy(a2)).type !== "Identifier" && a2.type !== "MemberExpression" && a2.type !== "ArrayPattern" && a2.type !== "ObjectPattern" && this.unexpected(a2.start), t3 && this.raiseTrailingCommaAfterRest(t3), --n2;
            }
          }
          for (var i2 = 0; i2 < n2; i2++) {
            var o2 = e3[i2];
            o2 && (this.toAssignable(o2, r3), o2.type === "RestElement" && this.raiseRestNotLast(o2.start));
          }
          return e3;
        }, r2.toReferencedList = function(e3, t3) {
          return e3;
        }, r2.toReferencedListDeep = function(e3, t3) {
          this.toReferencedList(e3, t3);
          for (var r3 = 0; r3 < e3.length; r3++) {
            var n2 = e3[r3];
            (n2 == null ? void 0 : n2.type) === "ArrayExpression" && this.toReferencedListDeep(n2.elements);
          }
        }, r2.parseSpread = function(e3, t3) {
          var r3 = this.startNode();
          return this.next(), r3.argument = this.parseMaybeAssignAllowIn(e3, void 0, t3), this.finishNode(r3, "SpreadElement");
        }, r2.parseRestBinding = function() {
          var e3 = this.startNode();
          return this.next(), e3.argument = this.parseBindingAtom(), this.finishNode(e3, "RestElement");
        }, r2.parseBindingAtom = function() {
          switch (this.state.type) {
            case lm.bracketL:
              var e3 = this.startNode();
              return this.next(), e3.elements = this.parseBindingList(lm.bracketR, 93, true), this.finishNode(e3, "ArrayPattern");
            case lm.braceL:
              return this.parseObjectLike(lm.braceR, true);
          }
          return this.parseIdentifier();
        }, r2.parseBindingList = function(e3, t3, r3, n2) {
          for (var s2 = [], a2 = true; !this.eat(e3); )
            if (a2 ? a2 = false : this.expect(lm.comma), r3 && this.match(lm.comma))
              s2.push(null);
            else {
              if (this.eat(e3))
                break;
              if (this.match(lm.ellipsis)) {
                s2.push(this.parseAssignableListItemTypes(this.parseRestBinding())), this.checkCommaAfterRest(t3), this.expect(e3);
                break;
              }
              var i2 = [];
              for (this.match(lm.at) && this.hasPlugin("decorators") && this.raise(this.state.start, Em.UnsupportedParameterDecorator); this.match(lm.at); )
                i2.push(this.parseDecorator());
              s2.push(this.parseAssignableListItem(n2, i2));
            }
          return s2;
        }, r2.parseAssignableListItem = function(e3, t3) {
          var r3 = this.parseMaybeDefault();
          this.parseAssignableListItemTypes(r3);
          var n2 = this.parseMaybeDefault(r3.start, r3.loc.start, r3);
          return t3.length && (r3.decorators = t3), n2;
        }, r2.parseAssignableListItemTypes = function(e3) {
          return e3;
        }, r2.parseMaybeDefault = function(e3, t3, r3) {
          var n2, s2, a2;
          if (t3 = (n2 = t3) != null ? n2 : this.state.startLoc, e3 = (s2 = e3) != null ? s2 : this.state.start, r3 = (a2 = r3) != null ? a2 : this.parseBindingAtom(), !this.eat(lm.eq))
            return r3;
          var i2 = this.startNodeAt(e3, t3);
          return i2.left = r3, i2.right = this.parseMaybeAssignAllowIn(), this.finishNode(i2, "AssignmentPattern");
        }, r2.checkLVal = function(e3, t3, r3, n2, s2, a2) {
          switch (r3 === void 0 && (r3 = 64), a2 === void 0 && (a2 = false), e3.type) {
            case "Identifier":
              var i2 = e3.name;
              this.state.strict && (a2 ? Tr(i2, this.inModule) : Sr(i2)) && this.raise(e3.start, r3 === 64 ? Em.StrictEvalArguments : Em.StrictEvalArgumentsBinding, i2), n2 && (n2.has(i2) ? this.raise(e3.start, Em.ParamDupe) : n2.add(i2)), s2 && i2 === "let" && this.raise(e3.start, Em.LetInLexicalBinding), 64 & r3 || this.scope.declareName(i2, r3, e3.start);
              break;
            case "MemberExpression":
              r3 !== 64 && this.raise(e3.start, Em.InvalidPropertyBindingPattern);
              break;
            case "ObjectPattern":
              for (var o2 = 0, u2 = e3.properties; o2 < u2.length; o2++) {
                var l2 = u2[o2];
                if (this.isObjectProperty(l2))
                  l2 = l2.value;
                else if (this.isObjectMethod(l2))
                  continue;
                this.checkLVal(l2, "object destructuring pattern", r3, n2, s2);
              }
              break;
            case "ArrayPattern":
              for (var c2 = 0, p2 = e3.elements; c2 < p2.length; c2++) {
                var d2 = p2[c2];
                d2 && this.checkLVal(d2, "array destructuring pattern", r3, n2, s2);
              }
              break;
            case "AssignmentPattern":
              this.checkLVal(e3.left, "assignment pattern", r3, n2);
              break;
            case "RestElement":
              this.checkLVal(e3.argument, "rest element", r3, n2);
              break;
            case "ParenthesizedExpression":
              this.checkLVal(e3.expression, "parenthesized expression", r3, n2);
              break;
            default:
              this.raise(e3.start, r3 === 64 ? Em.InvalidLhs : Em.InvalidLhsBinding, t3);
          }
        }, r2.checkToRestConversion = function(e3) {
          e3.argument.type !== "Identifier" && e3.argument.type !== "MemberExpression" && this.raise(e3.argument.start, Em.InvalidRestAssignmentPattern);
        }, r2.checkCommaAfterRest = function(e3) {
          this.match(lm.comma) && (this.lookaheadCharCode() === e3 ? this.raiseTrailingCommaAfterRest(this.state.start) : this.raiseRestNotLast(this.state.start));
        }, r2.raiseRestNotLast = function(e3) {
          throw this.raise(e3, Em.ElementAfterRest);
        }, r2.raiseTrailingCommaAfterRest = function(e3) {
          this.raise(e3, Em.RestTrailingComma);
        }, t2;
      }(Py)), ky = { kind: "loop" }, Oy = { kind: "switch" }, Ry = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/, Ny = new RegExp("in(?:stanceof)?", "y");
      var By = function(e2) {
        function t2(t3, r3) {
          var n2;
          return t3 = function(e3) {
            for (var t4 = {}, r4 = 0, n3 = Object.keys(fy); r4 < n3.length; r4++) {
              var s2 = n3[r4];
              t4[s2] = e3 && e3[s2] != null ? e3[s2] : fy[s2];
            }
            return t4;
          }(t3), (n2 = e2.call(this, t3, r3) || this).options = t3, n2.initializeScopes(), n2.plugins = function(e3) {
            for (var t4 = new Map(), r4 = 0; r4 < e3.length; r4++) {
              var n3 = e3[r4], s2 = Array.isArray(n3) ? n3 : [n3, {}], a2 = s2[0], i2 = s2[1];
              t4.has(a2) || t4.set(a2, i2 || {});
            }
            return t4;
          }(n2.options.plugins), n2.filename = t3.sourceFilename, n2;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.getScopeHandler = function() {
          return Bm;
        }, r2.parse = function() {
          this.enterInitialScopes();
          var e3 = this.startNode(), t3 = this.startNode();
          return this.nextToken(), e3.errors = null, this.parseTopLevel(e3, t3), e3.errors = this.state.errors, e3;
        }, t2;
      }(function(e2) {
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        s(t2, e2);
        var r2 = t2.prototype;
        return r2.parseTopLevel = function(e3, t3) {
          return e3.program = this.parseProgram(t3), e3.comments = this.state.comments, this.options.tokens && (e3.tokens = function(e4) {
            for (var t4 = 0; t4 < e4.length; t4++) {
              var r3 = e4[t4];
              if (r3.type === lm.privateName) {
                var n2 = r3.loc, s2 = r3.start, a2 = r3.value, i2 = r3.end, o2 = s2 + 1, u2 = new mm(n2.start.line, n2.start.column + 1);
                e4.splice(t4, 1, new vy({ type: lm.hash, value: "#", start: s2, end: o2, startLoc: n2.start, endLoc: u2 }), new vy({ type: lm.name, value: a2, start: o2, end: i2, startLoc: u2, endLoc: n2.end }));
              }
            }
            return e4;
          }(this.tokens)), this.finishNode(e3, "File");
        }, r2.parseProgram = function(e3, t3, r3) {
          if (t3 === void 0 && (t3 = lm.eof), r3 === void 0 && (r3 = this.options.sourceType), e3.sourceType = r3, e3.interpreter = this.parseInterpreterDirective(), this.parseBlockBody(e3, true, true, t3), this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0)
            for (var n2 = 0, s2 = Array.from(this.scope.undefinedExports); n2 < s2.length; n2++) {
              var a2 = s2[n2][0], i2 = this.scope.undefinedExports.get(a2);
              this.raise(i2, Em.ModuleExportUndefined, a2);
            }
          return this.finishNode(e3, "Program");
        }, r2.stmtToDirective = function(e3) {
          var t3 = e3.expression, r3 = this.startNodeAt(t3.start, t3.loc.start), n2 = this.startNodeAt(e3.start, e3.loc.start), s2 = this.input.slice(t3.start, t3.end), a2 = r3.value = s2.slice(1, -1);
          return this.addExtra(r3, "raw", s2), this.addExtra(r3, "rawValue", a2), n2.value = this.finishNodeAt(r3, "DirectiveLiteral", t3.end, t3.loc.end), this.finishNodeAt(n2, "Directive", e3.end, e3.loc.end);
        }, r2.parseInterpreterDirective = function() {
          if (!this.match(lm.interpreterDirective))
            return null;
          var e3 = this.startNode();
          return e3.value = this.state.value, this.next(), this.finishNode(e3, "InterpreterDirective");
        }, r2.isLet = function(e3) {
          return !!this.isContextual("let") && this.isLetKeyword(e3);
        }, r2.isLetKeyword = function(e3) {
          var t3 = this.nextTokenStart(), r3 = this.codePointAtPos(t3);
          if (r3 === 92 || r3 === 91)
            return true;
          if (e3)
            return false;
          if (r3 === 123)
            return true;
          if (yr(r3)) {
            Ny.lastIndex = t3;
            var n2 = Ny.exec(this.input);
            if (n2 !== null) {
              var s2 = this.codePointAtPos(t3 + n2[0].length);
              if (!gr(s2) && s2 !== 92)
                return false;
            }
            return true;
          }
          return false;
        }, r2.parseStatement = function(e3, t3) {
          return this.match(lm.at) && this.parseDecorators(true), this.parseStatementContent(e3, t3);
        }, r2.parseStatementContent = function(e3, t3) {
          var r3, n2 = this.state.type, s2 = this.startNode();
          switch (this.isLet(e3) && (n2 = lm._var, r3 = "let"), n2) {
            case lm._break:
            case lm._continue:
              return this.parseBreakContinueStatement(s2, n2.keyword);
            case lm._debugger:
              return this.parseDebuggerStatement(s2);
            case lm._do:
              return this.parseDoStatement(s2);
            case lm._for:
              return this.parseForStatement(s2);
            case lm._function:
              if (this.lookaheadCharCode() === 46)
                break;
              return e3 && (this.state.strict ? this.raise(this.state.start, Em.StrictFunction) : e3 !== "if" && e3 !== "label" && this.raise(this.state.start, Em.SloppyFunction)), this.parseFunctionStatement(s2, false, !e3);
            case lm._class:
              return e3 && this.unexpected(), this.parseClass(s2, true);
            case lm._if:
              return this.parseIfStatement(s2);
            case lm._return:
              return this.parseReturnStatement(s2);
            case lm._switch:
              return this.parseSwitchStatement(s2);
            case lm._throw:
              return this.parseThrowStatement(s2);
            case lm._try:
              return this.parseTryStatement(s2);
            case lm._const:
            case lm._var:
              return r3 = r3 || this.state.value, e3 && r3 !== "var" && this.raise(this.state.start, Em.UnexpectedLexicalDeclaration), this.parseVarStatement(s2, r3);
            case lm._while:
              return this.parseWhileStatement(s2);
            case lm._with:
              return this.parseWithStatement(s2);
            case lm.braceL:
              return this.parseBlock();
            case lm.semi:
              return this.parseEmptyStatement(s2);
            case lm._import:
              var a2 = this.lookaheadCharCode();
              if (a2 === 40 || a2 === 46)
                break;
            case lm._export:
              var i2;
              return this.options.allowImportExportEverywhere || t3 || this.raise(this.state.start, Em.UnexpectedImportExport), this.next(), n2 === lm._import ? (i2 = this.parseImport(s2)).type !== "ImportDeclaration" || i2.importKind && i2.importKind !== "value" || (this.sawUnambiguousESM = true) : ((i2 = this.parseExport(s2)).type !== "ExportNamedDeclaration" || i2.exportKind && i2.exportKind !== "value") && (i2.type !== "ExportAllDeclaration" || i2.exportKind && i2.exportKind !== "value") && i2.type !== "ExportDefaultDeclaration" || (this.sawUnambiguousESM = true), this.assertModuleNodeAllowed(s2), i2;
            default:
              if (this.isAsyncFunction())
                return e3 && this.raise(this.state.start, Em.AsyncFunctionInSingleStatementContext), this.next(), this.parseFunctionStatement(s2, true, !e3);
          }
          var o2 = this.state.value, u2 = this.parseExpression();
          return n2 === lm.name && u2.type === "Identifier" && this.eat(lm.colon) ? this.parseLabeledStatement(s2, o2, u2, e3) : this.parseExpressionStatement(s2, u2);
        }, r2.assertModuleNodeAllowed = function(e3) {
          this.options.allowImportExportEverywhere || this.inModule || this.raise(e3.start, xm.ImportOutsideModule);
        }, r2.takeDecorators = function(e3) {
          var t3 = this.state.decoratorStack[this.state.decoratorStack.length - 1];
          t3.length && (e3.decorators = t3, this.resetStartLocationFromNode(e3, t3[0]), this.state.decoratorStack[this.state.decoratorStack.length - 1] = []);
        }, r2.canHaveLeadingDecorator = function() {
          return this.match(lm._class);
        }, r2.parseDecorators = function(e3) {
          for (var t3 = this.state.decoratorStack[this.state.decoratorStack.length - 1]; this.match(lm.at); ) {
            var r3 = this.parseDecorator();
            t3.push(r3);
          }
          if (this.match(lm._export))
            e3 || this.unexpected(), this.hasPlugin("decorators") && !this.getPluginOption("decorators", "decoratorsBeforeExport") && this.raise(this.state.start, Em.DecoratorExportClass);
          else if (!this.canHaveLeadingDecorator())
            throw this.raise(this.state.start, Em.UnexpectedLeadingDecorator);
        }, r2.parseDecorator = function() {
          this.expectOnePlugin(["decorators-legacy", "decorators"]);
          var e3 = this.startNode();
          if (this.next(), this.hasPlugin("decorators")) {
            this.state.decoratorStack.push([]);
            var t3, r3 = this.state.start, n2 = this.state.startLoc;
            if (this.eat(lm.parenL))
              t3 = this.parseExpression(), this.expect(lm.parenR);
            else
              for (t3 = this.parseIdentifier(false); this.eat(lm.dot); ) {
                var s2 = this.startNodeAt(r3, n2);
                s2.object = t3, s2.property = this.parseIdentifier(true), s2.computed = false, t3 = this.finishNode(s2, "MemberExpression");
              }
            e3.expression = this.parseMaybeDecoratorArguments(t3), this.state.decoratorStack.pop();
          } else
            e3.expression = this.parseExprSubscripts();
          return this.finishNode(e3, "Decorator");
        }, r2.parseMaybeDecoratorArguments = function(e3) {
          if (this.eat(lm.parenL)) {
            var t3 = this.startNodeAtNode(e3);
            return t3.callee = e3, t3.arguments = this.parseCallExpressionArguments(lm.parenR, false), this.toReferencedList(t3.arguments), this.finishNode(t3, "CallExpression");
          }
          return e3;
        }, r2.parseBreakContinueStatement = function(e3, t3) {
          var r3 = t3 === "break";
          return this.next(), this.isLineTerminator() ? e3.label = null : (e3.label = this.parseIdentifier(), this.semicolon()), this.verifyBreakContinue(e3, t3), this.finishNode(e3, r3 ? "BreakStatement" : "ContinueStatement");
        }, r2.verifyBreakContinue = function(e3, t3) {
          var r3, n2 = t3 === "break";
          for (r3 = 0; r3 < this.state.labels.length; ++r3) {
            var s2 = this.state.labels[r3];
            if (e3.label == null || s2.name === e3.label.name) {
              if (s2.kind != null && (n2 || s2.kind === "loop"))
                break;
              if (e3.label && n2)
                break;
            }
          }
          r3 === this.state.labels.length && this.raise(e3.start, Em.IllegalBreakContinue, t3);
        }, r2.parseDebuggerStatement = function(e3) {
          return this.next(), this.semicolon(), this.finishNode(e3, "DebuggerStatement");
        }, r2.parseHeaderExpression = function() {
          this.expect(lm.parenL);
          var e3 = this.parseExpression();
          return this.expect(lm.parenR), e3;
        }, r2.parseDoStatement = function(e3) {
          var t3 = this;
          return this.next(), this.state.labels.push(ky), e3.body = this.withTopicForbiddingContext(function() {
            return t3.parseStatement("do");
          }), this.state.labels.pop(), this.expect(lm._while), e3.test = this.parseHeaderExpression(), this.eat(lm.semi), this.finishNode(e3, "DoWhileStatement");
        }, r2.parseForStatement = function(e3) {
          this.next(), this.state.labels.push(ky);
          var t3 = -1;
          if (this.isAwaitAllowed() && this.eatContextual("await") && (t3 = this.state.lastTokStart), this.scope.enter(0), this.expect(lm.parenL), this.match(lm.semi))
            return t3 > -1 && this.unexpected(t3), this.parseFor(e3, null);
          var r3 = this.isContextual("let"), n2 = r3 && this.isLetKeyword();
          if (this.match(lm._var) || this.match(lm._const) || n2) {
            var s2 = this.startNode(), a2 = n2 ? "let" : this.state.value;
            return this.next(), this.parseVar(s2, true, a2), this.finishNode(s2, "VariableDeclaration"), (this.match(lm._in) || this.isContextual("of")) && s2.declarations.length === 1 ? this.parseForIn(e3, s2, t3) : (t3 > -1 && this.unexpected(t3), this.parseFor(e3, s2));
          }
          var i2 = this.match(lm.name) && !this.state.containsEsc, o2 = new Ty(), u2 = this.parseExpression(true, o2), l2 = this.isContextual("of");
          if (l2 && (r3 ? this.raise(u2.start, Em.ForOfLet) : t3 === -1 && i2 && u2.type === "Identifier" && u2.name === "async" && this.raise(u2.start, Em.ForOfAsync)), l2 || this.match(lm._in)) {
            this.toAssignable(u2, true);
            var c2 = l2 ? "for-of statement" : "for-in statement";
            return this.checkLVal(u2, c2), this.parseForIn(e3, u2, t3);
          }
          return this.checkExpressionErrors(o2, true), t3 > -1 && this.unexpected(t3), this.parseFor(e3, u2);
        }, r2.parseFunctionStatement = function(e3, t3, r3) {
          return this.next(), this.parseFunction(e3, 1 | (r3 ? 0 : 2), t3);
        }, r2.parseIfStatement = function(e3) {
          return this.next(), e3.test = this.parseHeaderExpression(), e3.consequent = this.parseStatement("if"), e3.alternate = this.eat(lm._else) ? this.parseStatement("if") : null, this.finishNode(e3, "IfStatement");
        }, r2.parseReturnStatement = function(e3) {
          return this.prodParam.hasReturn || this.options.allowReturnOutsideFunction || this.raise(this.state.start, Em.IllegalReturn), this.next(), this.isLineTerminator() ? e3.argument = null : (e3.argument = this.parseExpression(), this.semicolon()), this.finishNode(e3, "ReturnStatement");
        }, r2.parseSwitchStatement = function(e3) {
          this.next(), e3.discriminant = this.parseHeaderExpression();
          var t3, r3, n2 = e3.cases = [];
          for (this.expect(lm.braceL), this.state.labels.push(Oy), this.scope.enter(0); !this.match(lm.braceR); )
            if (this.match(lm._case) || this.match(lm._default)) {
              var s2 = this.match(lm._case);
              t3 && this.finishNode(t3, "SwitchCase"), n2.push(t3 = this.startNode()), t3.consequent = [], this.next(), s2 ? t3.test = this.parseExpression() : (r3 && this.raise(this.state.lastTokStart, Em.MultipleDefaultsInSwitch), r3 = true, t3.test = null), this.expect(lm.colon);
            } else
              t3 ? t3.consequent.push(this.parseStatement(null)) : this.unexpected();
          return this.scope.exit(), t3 && this.finishNode(t3, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(e3, "SwitchStatement");
        }, r2.parseThrowStatement = function(e3) {
          return this.next(), this.hasPrecedingLineBreak() && this.raise(this.state.lastTokEnd, Em.NewlineAfterThrow), e3.argument = this.parseExpression(), this.semicolon(), this.finishNode(e3, "ThrowStatement");
        }, r2.parseCatchClauseParam = function() {
          var e3 = this.parseBindingAtom(), t3 = e3.type === "Identifier";
          return this.scope.enter(t3 ? 8 : 0), this.checkLVal(e3, "catch clause", 9), e3;
        }, r2.parseTryStatement = function(e3) {
          var t3 = this;
          if (this.next(), e3.block = this.parseBlock(), e3.handler = null, this.match(lm._catch)) {
            var r3 = this.startNode();
            this.next(), this.match(lm.parenL) ? (this.expect(lm.parenL), r3.param = this.parseCatchClauseParam(), this.expect(lm.parenR)) : (r3.param = null, this.scope.enter(0)), r3.body = this.withTopicForbiddingContext(function() {
              return t3.parseBlock(false, false);
            }), this.scope.exit(), e3.handler = this.finishNode(r3, "CatchClause");
          }
          return e3.finalizer = this.eat(lm._finally) ? this.parseBlock() : null, e3.handler || e3.finalizer || this.raise(e3.start, Em.NoCatchOrFinally), this.finishNode(e3, "TryStatement");
        }, r2.parseVarStatement = function(e3, t3) {
          return this.next(), this.parseVar(e3, false, t3), this.semicolon(), this.finishNode(e3, "VariableDeclaration");
        }, r2.parseWhileStatement = function(e3) {
          var t3 = this;
          return this.next(), e3.test = this.parseHeaderExpression(), this.state.labels.push(ky), e3.body = this.withTopicForbiddingContext(function() {
            return t3.parseStatement("while");
          }), this.state.labels.pop(), this.finishNode(e3, "WhileStatement");
        }, r2.parseWithStatement = function(e3) {
          var t3 = this;
          return this.state.strict && this.raise(this.state.start, Em.StrictWith), this.next(), e3.object = this.parseHeaderExpression(), e3.body = this.withTopicForbiddingContext(function() {
            return t3.parseStatement("with");
          }), this.finishNode(e3, "WithStatement");
        }, r2.parseEmptyStatement = function(e3) {
          return this.next(), this.finishNode(e3, "EmptyStatement");
        }, r2.parseLabeledStatement = function(e3, t3, r3, n2) {
          for (var s2 = 0, a2 = this.state.labels; s2 < a2.length; s2++) {
            a2[s2].name === t3 && this.raise(r3.start, Em.LabelRedeclaration, t3);
          }
          for (var i2 = this.state.type.isLoop ? "loop" : this.match(lm._switch) ? "switch" : null, o2 = this.state.labels.length - 1; o2 >= 0; o2--) {
            var u2 = this.state.labels[o2];
            if (u2.statementStart !== e3.start)
              break;
            u2.statementStart = this.state.start, u2.kind = i2;
          }
          return this.state.labels.push({ name: t3, kind: i2, statementStart: this.state.start }), e3.body = this.parseStatement(n2 ? n2.indexOf("label") === -1 ? n2 + "label" : n2 : "label"), this.state.labels.pop(), e3.label = r3, this.finishNode(e3, "LabeledStatement");
        }, r2.parseExpressionStatement = function(e3, t3) {
          return e3.expression = t3, this.semicolon(), this.finishNode(e3, "ExpressionStatement");
        }, r2.parseBlock = function(e3, t3, r3) {
          e3 === void 0 && (e3 = false), t3 === void 0 && (t3 = true);
          var n2 = this.startNode();
          return e3 && this.state.strictErrors.clear(), this.expect(lm.braceL), t3 && this.scope.enter(0), this.parseBlockBody(n2, e3, false, lm.braceR, r3), t3 && this.scope.exit(), this.finishNode(n2, "BlockStatement");
        }, r2.isValidDirective = function(e3) {
          return e3.type === "ExpressionStatement" && e3.expression.type === "StringLiteral" && !e3.expression.extra.parenthesized;
        }, r2.parseBlockBody = function(e3, t3, r3, n2, s2) {
          var a2 = e3.body = [], i2 = e3.directives = [];
          this.parseBlockOrModuleBlockBody(a2, t3 ? i2 : void 0, r3, n2, s2);
        }, r2.parseBlockOrModuleBlockBody = function(e3, t3, r3, n2, s2) {
          for (var a2 = this.state.strict, i2 = false, o2 = false; !this.match(n2); ) {
            var u2 = this.parseStatement(null, r3);
            if (t3 && !o2) {
              if (this.isValidDirective(u2)) {
                var l2 = this.stmtToDirective(u2);
                t3.push(l2), i2 || l2.value.value !== "use strict" || (i2 = true, this.setStrict(true));
                continue;
              }
              o2 = true, this.state.strictErrors.clear();
            }
            e3.push(u2);
          }
          s2 && s2.call(this, i2), a2 || this.setStrict(false), this.next();
        }, r2.parseFor = function(e3, t3) {
          var r3 = this;
          return e3.init = t3, this.semicolon(false), e3.test = this.match(lm.semi) ? null : this.parseExpression(), this.semicolon(false), e3.update = this.match(lm.parenR) ? null : this.parseExpression(), this.expect(lm.parenR), e3.body = this.withTopicForbiddingContext(function() {
            return r3.parseStatement("for");
          }), this.scope.exit(), this.state.labels.pop(), this.finishNode(e3, "ForStatement");
        }, r2.parseForIn = function(e3, t3, r3) {
          var n2 = this, s2 = this.match(lm._in);
          return this.next(), s2 ? r3 > -1 && this.unexpected(r3) : e3.await = r3 > -1, t3.type !== "VariableDeclaration" || t3.declarations[0].init == null || s2 && !this.state.strict && t3.kind === "var" && t3.declarations[0].id.type === "Identifier" ? t3.type === "AssignmentPattern" && this.raise(t3.start, Em.InvalidLhs, "for-loop") : this.raise(t3.start, Em.ForInOfLoopInitializer, s2 ? "for-in" : "for-of"), e3.left = t3, e3.right = s2 ? this.parseExpression() : this.parseMaybeAssignAllowIn(), this.expect(lm.parenR), e3.body = this.withTopicForbiddingContext(function() {
            return n2.parseStatement("for");
          }), this.scope.exit(), this.state.labels.pop(), this.finishNode(e3, s2 ? "ForInStatement" : "ForOfStatement");
        }, r2.parseVar = function(e3, t3, r3) {
          var n2 = e3.declarations = [], s2 = this.hasPlugin("typescript");
          for (e3.kind = r3; ; ) {
            var a2 = this.startNode();
            if (this.parseVarId(a2, r3), this.eat(lm.eq) ? a2.init = t3 ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn() : (r3 !== "const" || this.match(lm._in) || this.isContextual("of") ? a2.id.type === "Identifier" || t3 && (this.match(lm._in) || this.isContextual("of")) || this.raise(this.state.lastTokEnd, Em.DeclarationMissingInitializer, "Complex binding patterns") : s2 || this.raise(this.state.lastTokEnd, Em.DeclarationMissingInitializer, "Const declarations"), a2.init = null), n2.push(this.finishNode(a2, "VariableDeclarator")), !this.eat(lm.comma))
              break;
          }
          return e3;
        }, r2.parseVarId = function(e3, t3) {
          e3.id = this.parseBindingAtom(), this.checkLVal(e3.id, "variable declaration", t3 === "var" ? 5 : 9, void 0, t3 !== "var");
        }, r2.parseFunction = function(e3, t3, r3) {
          var n2 = this;
          t3 === void 0 && (t3 = 0), r3 === void 0 && (r3 = false);
          var s2 = 1 & t3, a2 = 2 & t3, i2 = !(!s2 || 4 & t3);
          this.initFunction(e3, r3), this.match(lm.star) && a2 && this.raise(this.state.start, Em.GeneratorInSingleStatementContext), e3.generator = this.eat(lm.star), s2 && (e3.id = this.parseFunctionId(i2));
          var o2 = this.state.maybeInArrowParameters;
          return this.state.maybeInArrowParameters = false, this.scope.enter(2), this.prodParam.enter(ty(r3, e3.generator)), s2 || (e3.id = this.parseFunctionId()), this.parseFunctionParams(e3, false), this.withTopicForbiddingContext(function() {
            n2.parseFunctionBodyAndFinish(e3, s2 ? "FunctionDeclaration" : "FunctionExpression");
          }), this.prodParam.exit(), this.scope.exit(), s2 && !a2 && this.registerFunctionStatementId(e3), this.state.maybeInArrowParameters = o2, e3;
        }, r2.parseFunctionId = function(e3) {
          return e3 || this.match(lm.name) ? this.parseIdentifier() : null;
        }, r2.parseFunctionParams = function(e3, t3) {
          this.expect(lm.parenL), this.expressionScope.enter(new Dy(3)), e3.params = this.parseBindingList(lm.parenR, 41, false, t3), this.expressionScope.exit();
        }, r2.registerFunctionStatementId = function(e3) {
          e3.id && this.scope.declareName(e3.id.name, this.state.strict || e3.generator || e3.async ? this.scope.treatFunctionsAsVar ? 5 : 9 : 17, e3.id.start);
        }, r2.parseClass = function(e3, t3, r3) {
          this.next(), this.takeDecorators(e3);
          var n2 = this.state.strict;
          return this.state.strict = true, this.parseClassId(e3, t3, r3), this.parseClassSuper(e3), e3.body = this.parseClassBody(!!e3.superClass, n2), this.finishNode(e3, t3 ? "ClassDeclaration" : "ClassExpression");
        }, r2.isClassProperty = function() {
          return this.match(lm.eq) || this.match(lm.semi) || this.match(lm.braceR);
        }, r2.isClassMethod = function() {
          return this.match(lm.parenL);
        }, r2.isNonstaticConstructor = function(e3) {
          return !(e3.computed || e3.static || e3.key.name !== "constructor" && e3.key.value !== "constructor");
        }, r2.parseClassBody = function(e3, t3) {
          var r3 = this;
          this.classScope.enter();
          var n2 = { hadConstructor: false, hadSuperClass: e3 }, s2 = [], a2 = this.startNode();
          if (a2.body = [], this.expect(lm.braceL), this.withTopicForbiddingContext(function() {
            for (; !r3.match(lm.braceR); )
              if (r3.eat(lm.semi)) {
                if (s2.length > 0)
                  throw r3.raise(r3.state.lastTokEnd, Em.DecoratorSemicolon);
              } else if (r3.match(lm.at))
                s2.push(r3.parseDecorator());
              else {
                var e4 = r3.startNode();
                s2.length && (e4.decorators = s2, r3.resetStartLocationFromNode(e4, s2[0]), s2 = []), r3.parseClassMember(a2, e4, n2), e4.kind === "constructor" && e4.decorators && e4.decorators.length > 0 && r3.raise(e4.start, Em.DecoratorConstructor);
              }
          }), this.state.strict = t3, this.next(), s2.length)
            throw this.raise(this.state.start, Em.TrailingDecorator);
          return this.classScope.exit(), this.finishNode(a2, "ClassBody");
        }, r2.parseClassMemberFromModifier = function(e3, t3) {
          var r3 = this.parseIdentifier(true);
          if (this.isClassMethod()) {
            var n2 = t3;
            return n2.kind = "method", n2.computed = false, n2.key = r3, n2.static = false, this.pushClassMethod(e3, n2, false, false, false, false), true;
          }
          if (this.isClassProperty()) {
            var s2 = t3;
            return s2.computed = false, s2.key = r3, s2.static = false, e3.body.push(this.parseClassProperty(s2)), true;
          }
          return false;
        }, r2.parseClassMember = function(e3, t3, r3) {
          var n2 = this.isContextual("static");
          if (n2) {
            if (this.parseClassMemberFromModifier(e3, t3))
              return;
            if (this.eat(lm.braceL))
              return void this.parseClassStaticBlock(e3, t3);
          }
          this.parseClassMemberWithIsStatic(e3, t3, r3, n2);
        }, r2.parseClassMemberWithIsStatic = function(e3, t3, r3, n2) {
          var s2 = t3, a2 = t3, i2 = t3, o2 = t3, u2 = s2, l2 = s2;
          if (t3.static = n2, this.eat(lm.star)) {
            u2.kind = "method";
            var c2 = this.match(lm.privateName);
            return this.parseClassElementName(u2), c2 ? void this.pushClassPrivateMethod(e3, a2, true, false) : (this.isNonstaticConstructor(s2) && this.raise(s2.key.start, Em.ConstructorIsGenerator), void this.pushClassMethod(e3, s2, true, false, false, false));
          }
          var p2 = this.state.containsEsc, d2 = this.match(lm.privateName), f2 = this.parseClassElementName(t3), h2 = f2.type === "Identifier", m2 = this.state.start;
          if (this.parsePostMemberNameModifiers(l2), this.isClassMethod()) {
            if (u2.kind = "method", d2)
              return void this.pushClassPrivateMethod(e3, a2, false, false);
            var y2 = this.isNonstaticConstructor(s2), g2 = false;
            y2 && (s2.kind = "constructor", r3.hadConstructor && !this.hasPlugin("typescript") && this.raise(f2.start, Em.DuplicateConstructor), y2 && this.hasPlugin("typescript") && t3.override && this.raise(f2.start, Em.OverrideOnConstructor), r3.hadConstructor = true, g2 = r3.hadSuperClass), this.pushClassMethod(e3, s2, false, false, y2, g2);
          } else if (this.isClassProperty())
            d2 ? this.pushClassPrivateProperty(e3, o2) : this.pushClassProperty(e3, i2);
          else if (!h2 || f2.name !== "async" || p2 || this.isLineTerminator())
            if (!h2 || f2.name !== "get" && f2.name !== "set" || p2 || this.match(lm.star) && this.isLineTerminator())
              this.isLineTerminator() ? d2 ? this.pushClassPrivateProperty(e3, o2) : this.pushClassProperty(e3, i2) : this.unexpected();
            else {
              u2.kind = f2.name;
              var v2 = this.match(lm.privateName);
              this.parseClassElementName(s2), v2 ? this.pushClassPrivateMethod(e3, a2, false, false) : (this.isNonstaticConstructor(s2) && this.raise(s2.key.start, Em.ConstructorIsAccessor), this.pushClassMethod(e3, s2, false, false, false, false)), this.checkGetterSetterParams(s2);
            }
          else {
            var b2 = this.eat(lm.star);
            l2.optional && this.unexpected(m2), u2.kind = "method";
            var E2 = this.match(lm.privateName);
            this.parseClassElementName(u2), this.parsePostMemberNameModifiers(l2), E2 ? this.pushClassPrivateMethod(e3, a2, b2, true) : (this.isNonstaticConstructor(s2) && this.raise(s2.key.start, Em.ConstructorIsAsync), this.pushClassMethod(e3, s2, b2, true, false, false));
          }
        }, r2.parseClassElementName = function(e3) {
          var t3 = this.state, r3 = t3.type, n2 = t3.value, s2 = t3.start;
          return r3 !== lm.name && r3 !== lm.string || !e3.static || n2 !== "prototype" || this.raise(s2, Em.StaticPrototype), r3 === lm.privateName && n2 === "constructor" && this.raise(s2, Em.ConstructorClassPrivateField), this.parsePropertyName(e3, true);
        }, r2.parseClassStaticBlock = function(e3, t3) {
          var r3;
          this.expectPlugin("classStaticBlock", t3.start), this.scope.enter(208);
          var n2 = this.state.labels;
          this.state.labels = [], this.prodParam.enter(0);
          var s2 = t3.body = [];
          this.parseBlockOrModuleBlockBody(s2, void 0, false, lm.braceR), this.prodParam.exit(), this.scope.exit(), this.state.labels = n2, e3.body.push(this.finishNode(t3, "StaticBlock")), (r3 = t3.decorators) != null && r3.length && this.raise(t3.start, Em.DecoratorStaticBlock);
        }, r2.pushClassProperty = function(e3, t3) {
          t3.computed || t3.key.name !== "constructor" && t3.key.value !== "constructor" || this.raise(t3.key.start, Em.ConstructorClassField), e3.body.push(this.parseClassProperty(t3));
        }, r2.pushClassPrivateProperty = function(e3, t3) {
          var r3 = this.parseClassPrivateProperty(t3);
          e3.body.push(r3), this.classScope.declarePrivateName(this.getPrivateNameSV(r3.key), 0, r3.key.start);
        }, r2.pushClassMethod = function(e3, t3, r3, n2, s2, a2) {
          e3.body.push(this.parseMethod(t3, r3, n2, s2, a2, "ClassMethod", true));
        }, r2.pushClassPrivateMethod = function(e3, t3, r3, n2) {
          var s2 = this.parseMethod(t3, r3, n2, false, false, "ClassPrivateMethod", true);
          e3.body.push(s2);
          var a2 = s2.kind === "get" ? s2.static ? 6 : 2 : s2.kind === "set" ? s2.static ? 5 : 1 : 0;
          this.classScope.declarePrivateName(this.getPrivateNameSV(s2.key), a2, s2.key.start);
        }, r2.parsePostMemberNameModifiers = function(e3) {
        }, r2.parseClassPrivateProperty = function(e3) {
          return this.parseInitializer(e3), this.semicolon(), this.finishNode(e3, "ClassPrivateProperty");
        }, r2.parseClassProperty = function(e3) {
          return this.parseInitializer(e3), this.semicolon(), this.finishNode(e3, "ClassProperty");
        }, r2.parseInitializer = function(e3) {
          this.scope.enter(80), this.expressionScope.enter(Cy()), this.prodParam.enter(0), e3.value = this.eat(lm.eq) ? this.parseMaybeAssignAllowIn() : null, this.expressionScope.exit(), this.prodParam.exit(), this.scope.exit();
        }, r2.parseClassId = function(e3, t3, r3, n2) {
          n2 === void 0 && (n2 = 139), this.match(lm.name) ? (e3.id = this.parseIdentifier(), t3 && this.checkLVal(e3.id, "class name", n2)) : r3 || !t3 ? e3.id = null : this.unexpected(null, Em.MissingClassName);
        }, r2.parseClassSuper = function(e3) {
          e3.superClass = this.eat(lm._extends) ? this.parseExprSubscripts() : null;
        }, r2.parseExport = function(e3) {
          var t3 = this.maybeParseExportDefaultSpecifier(e3), r3 = !t3 || this.eat(lm.comma), n2 = r3 && this.eatExportStar(e3), s2 = n2 && this.maybeParseExportNamespaceSpecifier(e3), a2 = r3 && (!s2 || this.eat(lm.comma)), i2 = t3 || n2;
          if (n2 && !s2)
            return t3 && this.unexpected(), this.parseExportFrom(e3, true), this.finishNode(e3, "ExportAllDeclaration");
          var o2, u2 = this.maybeParseExportNamedSpecifiers(e3);
          if (t3 && r3 && !n2 && !u2 || s2 && a2 && !u2)
            throw this.unexpected(null, lm.braceL);
          if (i2 || u2 ? (o2 = false, this.parseExportFrom(e3, i2)) : o2 = this.maybeParseExportDeclaration(e3), i2 || u2 || o2)
            return this.checkExport(e3, true, false, !!e3.source), this.finishNode(e3, "ExportNamedDeclaration");
          if (this.eat(lm._default))
            return e3.declaration = this.parseExportDefaultExpression(), this.checkExport(e3, true, true), this.finishNode(e3, "ExportDefaultDeclaration");
          throw this.unexpected(null, lm.braceL);
        }, r2.eatExportStar = function(e3) {
          return this.eat(lm.star);
        }, r2.maybeParseExportDefaultSpecifier = function(e3) {
          if (this.isExportDefaultSpecifier()) {
            this.expectPlugin("exportDefaultFrom");
            var t3 = this.startNode();
            return t3.exported = this.parseIdentifier(true), e3.specifiers = [this.finishNode(t3, "ExportDefaultSpecifier")], true;
          }
          return false;
        }, r2.maybeParseExportNamespaceSpecifier = function(e3) {
          if (this.isContextual("as")) {
            e3.specifiers || (e3.specifiers = []);
            var t3 = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);
            return this.next(), t3.exported = this.parseModuleExportName(), e3.specifiers.push(this.finishNode(t3, "ExportNamespaceSpecifier")), true;
          }
          return false;
        }, r2.maybeParseExportNamedSpecifiers = function(e3) {
          var t3;
          return !!this.match(lm.braceL) && (e3.specifiers || (e3.specifiers = []), (t3 = e3.specifiers).push.apply(t3, this.parseExportSpecifiers()), e3.source = null, e3.declaration = null, true);
        }, r2.maybeParseExportDeclaration = function(e3) {
          return !!this.shouldParseExportDeclaration() && (e3.specifiers = [], e3.source = null, e3.declaration = this.parseExportDeclaration(e3), true);
        }, r2.isAsyncFunction = function() {
          if (!this.isContextual("async"))
            return false;
          var e3 = this.nextTokenStart();
          return !cm.test(this.input.slice(this.state.pos, e3)) && this.isUnparsedContextual(e3, "function");
        }, r2.parseExportDefaultExpression = function() {
          var e3 = this.startNode(), t3 = this.isAsyncFunction();
          if (this.match(lm._function) || t3)
            return this.next(), t3 && this.next(), this.parseFunction(e3, 5, t3);
          if (this.match(lm._class))
            return this.parseClass(e3, true, true);
          if (this.match(lm.at))
            return this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport") && this.raise(this.state.start, Em.DecoratorBeforeExport), this.parseDecorators(false), this.parseClass(e3, true, true);
          if (this.match(lm._const) || this.match(lm._var) || this.isLet())
            throw this.raise(this.state.start, Em.UnsupportedDefaultExport);
          var r3 = this.parseMaybeAssignAllowIn();
          return this.semicolon(), r3;
        }, r2.parseExportDeclaration = function(e3) {
          return this.parseStatement(null);
        }, r2.isExportDefaultSpecifier = function() {
          if (this.match(lm.name)) {
            var e3 = this.state.value;
            if (e3 === "async" && !this.state.containsEsc || e3 === "let")
              return false;
            if ((e3 === "type" || e3 === "interface") && !this.state.containsEsc) {
              var t3 = this.lookahead();
              if (t3.type === lm.name && t3.value !== "from" || t3.type === lm.braceL)
                return this.expectOnePlugin(["flow", "typescript"]), false;
            }
          } else if (!this.match(lm._default))
            return false;
          var r3 = this.nextTokenStart(), n2 = this.isUnparsedContextual(r3, "from");
          if (this.input.charCodeAt(r3) === 44 || this.match(lm.name) && n2)
            return true;
          if (this.match(lm._default) && n2) {
            var s2 = this.input.charCodeAt(this.nextTokenStartSince(r3 + 4));
            return s2 === 34 || s2 === 39;
          }
          return false;
        }, r2.parseExportFrom = function(e3, t3) {
          if (this.eatContextual("from")) {
            e3.source = this.parseImportSource(), this.checkExport(e3);
            var r3 = this.maybeParseImportAssertions();
            r3 && (e3.assertions = r3);
          } else
            t3 ? this.unexpected() : e3.source = null;
          this.semicolon();
        }, r2.shouldParseExportDeclaration = function() {
          if (this.match(lm.at) && (this.expectOnePlugin(["decorators", "decorators-legacy"]), this.hasPlugin("decorators"))) {
            if (!this.getPluginOption("decorators", "decoratorsBeforeExport"))
              return true;
            this.unexpected(this.state.start, Em.DecoratorBeforeExport);
          }
          return this.state.type.keyword === "var" || this.state.type.keyword === "const" || this.state.type.keyword === "function" || this.state.type.keyword === "class" || this.isLet() || this.isAsyncFunction();
        }, r2.checkExport = function(e3, t3, r3, n2) {
          if (t3) {
            if (r3) {
              if (this.checkDuplicateExports(e3, "default"), this.hasPlugin("exportDefaultFrom")) {
                var s2, a2 = e3.declaration;
                a2.type !== "Identifier" || a2.name !== "from" || a2.end - a2.start != 4 || (s2 = a2.extra) != null && s2.parenthesized || this.raise(a2.start, Em.ExportDefaultFromAsIdentifier);
              }
            } else if (e3.specifiers && e3.specifiers.length)
              for (var i2 = 0, o2 = e3.specifiers; i2 < o2.length; i2++) {
                var u2 = o2[i2], l2 = u2.exported, c2 = l2.type === "Identifier" ? l2.name : l2.value;
                if (this.checkDuplicateExports(u2, c2), !n2 && u2.local) {
                  var p2 = u2.local;
                  p2.type !== "Identifier" ? this.raise(u2.start, Em.ExportBindingIsString, p2.value, c2) : (this.checkReservedWord(p2.name, p2.start, true, false), this.scope.checkLocalExport(p2));
                }
              }
            else if (e3.declaration) {
              if (e3.declaration.type === "FunctionDeclaration" || e3.declaration.type === "ClassDeclaration") {
                var d2 = e3.declaration.id;
                if (!d2)
                  throw new Error("Assertion failure");
                this.checkDuplicateExports(e3, d2.name);
              } else if (e3.declaration.type === "VariableDeclaration")
                for (var f2 = 0, h2 = e3.declaration.declarations; f2 < h2.length; f2++) {
                  var m2 = h2[f2];
                  this.checkDeclaration(m2.id);
                }
            }
          }
          if (this.state.decoratorStack[this.state.decoratorStack.length - 1].length)
            throw this.raise(e3.start, Em.UnsupportedDecoratorExport);
        }, r2.checkDeclaration = function(e3) {
          if (e3.type === "Identifier")
            this.checkDuplicateExports(e3, e3.name);
          else if (e3.type === "ObjectPattern")
            for (var t3 = 0, r3 = e3.properties; t3 < r3.length; t3++) {
              var n2 = r3[t3];
              this.checkDeclaration(n2);
            }
          else if (e3.type === "ArrayPattern")
            for (var s2 = 0, a2 = e3.elements; s2 < a2.length; s2++) {
              var i2 = a2[s2];
              i2 && this.checkDeclaration(i2);
            }
          else
            e3.type === "ObjectProperty" ? this.checkDeclaration(e3.value) : e3.type === "RestElement" ? this.checkDeclaration(e3.argument) : e3.type === "AssignmentPattern" && this.checkDeclaration(e3.left);
        }, r2.checkDuplicateExports = function(e3, t3) {
          this.exportedIdentifiers.has(t3) && this.raise(e3.start, t3 === "default" ? Em.DuplicateDefaultExport : Em.DuplicateExport, t3), this.exportedIdentifiers.add(t3);
        }, r2.parseExportSpecifiers = function() {
          var e3 = [], t3 = true;
          for (this.expect(lm.braceL); !this.eat(lm.braceR); ) {
            if (t3)
              t3 = false;
            else if (this.expect(lm.comma), this.eat(lm.braceR))
              break;
            var r3 = this.startNode();
            r3.local = this.parseModuleExportName(), r3.exported = this.eatContextual("as") ? this.parseModuleExportName() : r3.local.__clone(), e3.push(this.finishNode(r3, "ExportSpecifier"));
          }
          return e3;
        }, r2.parseModuleExportName = function() {
          if (this.match(lm.string)) {
            var e3 = this.parseStringLiteral(this.state.value), t3 = e3.value.match(Ry);
            return t3 && this.raise(e3.start, Em.ModuleExportNameHasLoneSurrogate, t3[0].charCodeAt(0).toString(16)), e3;
          }
          return this.parseIdentifier(true);
        }, r2.parseImport = function(e3) {
          if (e3.specifiers = [], !this.match(lm.string)) {
            var t3 = !this.maybeParseDefaultImportSpecifier(e3) || this.eat(lm.comma), r3 = t3 && this.maybeParseStarImportSpecifier(e3);
            t3 && !r3 && this.parseNamedImportSpecifiers(e3), this.expectContextual("from");
          }
          e3.source = this.parseImportSource();
          var n2 = this.maybeParseImportAssertions();
          if (n2)
            e3.assertions = n2;
          else {
            var s2 = this.maybeParseModuleAttributes();
            s2 && (e3.attributes = s2);
          }
          return this.semicolon(), this.finishNode(e3, "ImportDeclaration");
        }, r2.parseImportSource = function() {
          return this.match(lm.string) || this.unexpected(), this.parseExprAtom();
        }, r2.shouldParseDefaultImport = function(e3) {
          return this.match(lm.name);
        }, r2.parseImportSpecifierLocal = function(e3, t3, r3, n2) {
          t3.local = this.parseIdentifier(), this.checkLVal(t3.local, n2, 9), e3.specifiers.push(this.finishNode(t3, r3));
        }, r2.parseAssertEntries = function() {
          var e3 = [], t3 = new Set();
          do {
            if (this.match(lm.braceR))
              break;
            var r3 = this.startNode(), n2 = this.state.value;
            if (t3.has(n2) && this.raise(this.state.start, Em.ModuleAttributesWithDuplicateKeys, n2), t3.add(n2), this.match(lm.string) ? r3.key = this.parseStringLiteral(n2) : r3.key = this.parseIdentifier(true), this.expect(lm.colon), !this.match(lm.string))
              throw this.unexpected(this.state.start, Em.ModuleAttributeInvalidValue);
            r3.value = this.parseStringLiteral(this.state.value), this.finishNode(r3, "ImportAttribute"), e3.push(r3);
          } while (this.eat(lm.comma));
          return e3;
        }, r2.maybeParseModuleAttributes = function() {
          if (!this.match(lm._with) || this.hasPrecedingLineBreak())
            return this.hasPlugin("moduleAttributes") ? [] : null;
          this.expectPlugin("moduleAttributes"), this.next();
          var e3 = [], t3 = new Set();
          do {
            var r3 = this.startNode();
            if (r3.key = this.parseIdentifier(true), r3.key.name !== "type" && this.raise(r3.key.start, Em.ModuleAttributeDifferentFromType, r3.key.name), t3.has(r3.key.name) && this.raise(r3.key.start, Em.ModuleAttributesWithDuplicateKeys, r3.key.name), t3.add(r3.key.name), this.expect(lm.colon), !this.match(lm.string))
              throw this.unexpected(this.state.start, Em.ModuleAttributeInvalidValue);
            r3.value = this.parseStringLiteral(this.state.value), this.finishNode(r3, "ImportAttribute"), e3.push(r3);
          } while (this.eat(lm.comma));
          return e3;
        }, r2.maybeParseImportAssertions = function() {
          if (!this.isContextual("assert") || this.hasPrecedingLineBreak())
            return this.hasPlugin("importAssertions") ? [] : null;
          this.expectPlugin("importAssertions"), this.next(), this.eat(lm.braceL);
          var e3 = this.parseAssertEntries();
          return this.eat(lm.braceR), e3;
        }, r2.maybeParseDefaultImportSpecifier = function(e3) {
          return !!this.shouldParseDefaultImport(e3) && (this.parseImportSpecifierLocal(e3, this.startNode(), "ImportDefaultSpecifier", "default import specifier"), true);
        }, r2.maybeParseStarImportSpecifier = function(e3) {
          if (this.match(lm.star)) {
            var t3 = this.startNode();
            return this.next(), this.expectContextual("as"), this.parseImportSpecifierLocal(e3, t3, "ImportNamespaceSpecifier", "import namespace specifier"), true;
          }
          return false;
        }, r2.parseNamedImportSpecifiers = function(e3) {
          var t3 = true;
          for (this.expect(lm.braceL); !this.eat(lm.braceR); ) {
            if (t3)
              t3 = false;
            else {
              if (this.eat(lm.colon))
                throw this.raise(this.state.start, Em.DestructureNamedImport);
              if (this.expect(lm.comma), this.eat(lm.braceR))
                break;
            }
            this.parseImportSpecifier(e3);
          }
        }, r2.parseImportSpecifier = function(e3) {
          var t3 = this.startNode(), r3 = this.match(lm.string);
          if (t3.imported = this.parseModuleExportName(), this.eatContextual("as"))
            t3.local = this.parseIdentifier();
          else {
            var n2 = t3.imported;
            if (r3)
              throw this.raise(t3.start, Em.ImportBindingIsString, n2.value);
            this.checkReservedWord(n2.name, t3.start, true, true), t3.local = n2.__clone();
          }
          this.checkLVal(t3.local, "import specifier", 9), e3.specifiers.push(this.finishNode(t3, "ImportSpecifier"));
        }, r2.isThisParam = function(e3) {
          return e3.type === "Identifier" && e3.name === "this";
        }, t2;
      }(Fy));
      function _y(e2, t2) {
        var r2;
        if (((r2 = t2) == null ? void 0 : r2.sourceType) !== "unambiguous")
          return Ly(t2, e2).parse();
        t2 = Object.assign({}, t2);
        try {
          t2.sourceType = "module";
          var n2 = Ly(t2, e2), s2 = n2.parse();
          if (n2.sawUnambiguousESM)
            return s2;
          if (n2.ambiguousScriptDifferentAst)
            try {
              return t2.sourceType = "script", Ly(t2, e2).parse();
            } catch (e3) {
            }
          else
            s2.program.sourceType = "script";
          return s2;
        } catch (r3) {
          try {
            return t2.sourceType = "script", Ly(t2, e2).parse();
          } catch (e3) {
          }
          throw r3;
        }
      }
      function Ly(e2, t2) {
        var r2 = By;
        return e2 != null && e2.plugins && (!function(e3) {
          if (oy(e3, "decorators")) {
            if (oy(e3, "decorators-legacy"))
              throw new Error("Cannot use the decorators and decorators-legacy plugin together");
            var t3 = uy(e3, "decorators", "decoratorsBeforeExport");
            if (t3 == null)
              throw new Error("The 'decorators' plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean. If you are migrating from Babylon/Babel 6 or want to use the old decorators proposal, you should use the 'decorators-legacy' plugin instead of 'decorators'.");
            if (typeof t3 != "boolean")
              throw new Error("'decoratorsBeforeExport' must be a boolean.");
          }
          if (oy(e3, "flow") && oy(e3, "typescript"))
            throw new Error("Cannot combine flow and typescript plugins.");
          if (oy(e3, "placeholders") && oy(e3, "v8intrinsic"))
            throw new Error("Cannot combine placeholders and v8intrinsic plugins.");
          if (oy(e3, "pipelineOperator") && !ly.includes(uy(e3, "pipelineOperator", "proposal")))
            throw new Error("'pipelineOperator' requires 'proposal' option whose value should be one of: " + ly.map(function(e4) {
              return "'" + e4 + "'";
            }).join(", "));
          if (oy(e3, "moduleAttributes")) {
            if (oy(e3, "importAssertions"))
              throw new Error("Cannot combine importAssertions and moduleAttributes plugins.");
            if (uy(e3, "moduleAttributes", "version") !== "may-2020")
              throw new Error("The 'moduleAttributes' plugin requires a 'version' option, representing the last proposal update. Currently, the only supported value is 'may-2020'.");
          }
          if (oy(e3, "recordAndTuple") && !cy.includes(uy(e3, "recordAndTuple", "syntaxType")))
            throw new Error("'recordAndTuple' requires 'syntaxType' option whose value should be one of: " + cy.map(function(e4) {
              return "'" + e4 + "'";
            }).join(", "));
          if (oy(e3, "asyncDoExpressions") && !oy(e3, "doExpressions")) {
            var r3 = new Error("'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.");
            throw r3.missingPlugins = "doExpressions", r3;
          }
        }(e2.plugins), r2 = function(e3) {
          var t3 = dy.filter(function(t4) {
            return oy(e3, t4);
          }), r3 = t3.join("/"), n2 = My[r3];
          if (!n2) {
            n2 = By;
            for (var s2 = 0; s2 < t3.length; s2++) {
              var a2 = t3[s2];
              n2 = py[a2](n2);
            }
            My[r3] = n2;
          }
          return n2;
        }(e2.plugins)), new r2(e2, t2);
      }
      var My = {};
      var Uy = { Scope: function(e2, t2) {
        t2.kind === "let" && e2.skip();
      }, FunctionParent: function(e2) {
        e2.skip();
      }, VariableDeclaration: function(e2) {
        function t2(t3, r2) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2, t2) {
        if (!t2.kind || e2.node.kind === t2.kind) {
          for (var r2, n2, s2 = [], a2 = f(e2.get("declarations")); !(n2 = a2()).done; ) {
            var i2 = n2.value;
            r2 = i2.node.id, i2.node.init && s2.push(ys(rs("=", i2.node.id, i2.node.init)));
            for (var o2 = 0, u2 = Object.keys(i2.getBindingIdentifiers()); o2 < u2.length; o2++) {
              var l2 = u2[o2];
              t2.emit(Ds(l2), l2, i2.node.init !== null);
            }
          }
          e2.parentPath.isFor({ left: e2.node }) ? e2.replaceWith(r2) : e2.replaceWithMultiple(s2);
        }
      }) };
      function Gy(e2, t2, r2) {
        r2 === void 0 && (r2 = "var"), e2.traverse(Uy, { kind: r2, emit: t2 });
      }
      var Vy = Object.freeze({ __proto__: null, replaceWithMultiple: function(e2) {
        var t2;
        this.resync(), nl((e2 = this._verifyNodeList(e2))[0], this.node), sl(e2[e2.length - 1], this.node), (t2 = rp.get(this.parent)) == null || t2.delete(this.node), this.node = this.container[this.key] = null;
        var r2 = this.insertAfter(e2);
        return this.node ? this.requeue() : this.remove(), r2;
      }, replaceWithSourceString: function(e2) {
        this.resync();
        try {
          e2 = _y(e2 = "(" + e2 + ")");
        } catch (r2) {
          var t2 = r2.loc;
          throw t2 && (r2.message += " - make sure this is an expression.\n" + Zh(e2, { start: { line: t2.line, column: t2.column + 1 } }), r2.code = "BABEL_REPLACE_SOURCE_ERROR"), r2;
        }
        return e2 = e2.program.body[0].expression, vv.removeProperties(e2), this.replaceWith(e2);
      }, replaceWith: function(e2) {
        if (this.resync(), this.removed)
          throw new Error("You can't replace this node, we've already removed it");
        if (e2 instanceof tv && (e2 = e2.node), !e2)
          throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");
        if (this.node === e2)
          return [this];
        if (this.isProgram() && !G(e2))
          throw new Error("You can only replace a Program root node with another Program node");
        if (Array.isArray(e2))
          throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");
        if (typeof e2 == "string")
          throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");
        var t2 = "";
        if (this.isNodeType("Statement") && vt(e2) && (this.canHaveVariableDeclarationOrExpression() || this.canSwapBetweenExpressionAndStatement(e2) || this.parentPath.isExportDefaultDeclaration() || (e2 = ys(e2), t2 = "expression")), this.isNodeType("Expression") && xt(e2) && !this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(e2))
          return this.replaceExpressionWithStatements([e2]);
        var r2 = this.node;
        return r2 && (al(e2, r2), il(r2)), this._replaceWith(e2), this.type = e2.type, this.setScope(), this.requeue(), [t2 ? this.get(t2) : this];
      }, _replaceWith: function(e2) {
        var t2;
        if (!this.container)
          throw new ReferenceError("Container is falsy");
        this.inList ? zr(this.parent, this.key, [e2]) : zr(this.parent, this.key, e2), this.debug("Replace with " + (e2 == null ? void 0 : e2.type)), (t2 = rp.get(this.parent)) == null || t2.set(e2, this).delete(this.node), this.node = this.container[this.key] = e2;
      }, replaceExpressionWithStatements: function(e2) {
        var t2 = this;
        this.resync();
        var r2 = dc(e2, this.scope);
        if (r2)
          return this.replaceWith(r2)[0].get("expressions");
        var n2 = this.getFunctionParent(), s2 = n2 == null ? void 0 : n2.is("async"), a2 = n2 == null ? void 0 : n2.is("generator"), i2 = ea([], os(e2));
        this.replaceWith(ls(i2, []));
        var o2 = this.get("callee");
        Gy(o2.get("body"), function(e3) {
          t2.scope.push({ id: e3 });
        }, "var");
        for (var u2, l2 = f(this.get("callee").getCompletionRecords()); !(u2 = l2()).done; ) {
          var c2 = u2.value;
          if (c2.isExpressionStatement()) {
            var p2 = c2.findParent(function(e3) {
              return e3.isLoop();
            });
            if (p2) {
              var d2 = p2.getData("expressionReplacementReturnUid");
              d2 ? d2 = Ds(d2.name) : (d2 = o2.scope.generateDeclaredUidIdentifier("ret"), o2.get("body").pushContainer("body", Ls(Ju(d2))), p2.setData("expressionReplacementReturnUid", d2)), c2.get("expression").replaceWith(rs("=", Ju(d2), c2.node.expression));
            } else
              c2.replaceWith(Ls(c2.node.expression));
          }
        }
        o2.arrowFunctionToExpression();
        var h2 = o2, m2 = s2 && vv.hasType(this.get("callee.body").node, "AwaitExpression", xl), y2 = a2 && vv.hasType(this.get("callee.body").node, "YieldExpression", xl);
        return m2 && (h2.set("async", true), y2 || this.replaceWith(Da(this.node))), y2 && (h2.set("generator", true), this.replaceWith(xa(this.node, true))), h2.get("body.body");
      }, replaceInline: function(e2) {
        if (this.resync(), Array.isArray(e2)) {
          if (Array.isArray(this.container)) {
            e2 = this._verifyNodeList(e2);
            var t2 = this._containerInsertAfter(e2);
            return this.remove(), t2;
          }
          return this.replaceWithMultiple(e2);
        }
        return this.replaceWith(e2);
      } }), Wy = typeof global != "undefined" ? global : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {}, Hy = ["String", "Number", "Math"], Xy = ["random"];
      function qy(e2, t2) {
        t2.confident && (t2.deoptPath = e2, t2.confident = false);
      }
      function $y(e2, t2) {
        var r2 = e2.node, n2 = t2.seen;
        if (n2.has(r2)) {
          var s2 = n2.get(r2);
          return s2.resolved ? s2.value : void qy(e2, t2);
        }
        var a2 = { resolved: false };
        n2.set(r2, a2);
        var i2 = function(e3, t3) {
          if (!t3.confident)
            return;
          if (e3.isSequenceExpression()) {
            var r3 = e3.get("expressions");
            return $y(r3[r3.length - 1], t3);
          }
          if (e3.isStringLiteral() || e3.isNumericLiteral() || e3.isBooleanLiteral())
            return e3.node.value;
          if (e3.isNullLiteral())
            return null;
          if (e3.isTemplateLiteral())
            return Ky(e3, e3.node.quasis, t3);
          if (e3.isTaggedTemplateExpression() && e3.get("tag").isMemberExpression()) {
            var n3 = e3.get("tag.object"), s3 = n3.node.name, a3 = e3.get("tag.property");
            if (n3.isIdentifier() && s3 === "String" && !e3.scope.getBinding(s3) && a3.isIdentifier() && a3.node.name === "raw")
              return Ky(e3, e3.node.quasi.quasis, t3, true);
          }
          if (e3.isConditionalExpression()) {
            var i3 = $y(e3.get("test"), t3);
            if (!t3.confident)
              return;
            return $y(i3 ? e3.get("consequent") : e3.get("alternate"), t3);
          }
          if (e3.isExpressionWrapper())
            return $y(e3.get("expression"), t3);
          if (e3.isMemberExpression() && !e3.parentPath.isCallExpression({ callee: e3.node })) {
            var o2 = e3.get("property"), u2 = e3.get("object");
            if (u2.isLiteral() && o2.isIdentifier()) {
              var l2 = u2.node.value, c2 = typeof l2;
              if (c2 === "number" || c2 === "string")
                return l2[o2.node.name];
            }
          }
          if (e3.isReferencedIdentifier()) {
            var p2 = e3.scope.getBinding(e3.node.name);
            if (p2 && p2.constantViolations.length > 0)
              return qy(p2.path, t3);
            if (p2 && e3.node.start < p2.path.node.end)
              return qy(p2.path, t3);
            if (p2 != null && p2.hasValue)
              return p2.value;
            if (e3.node.name === "undefined")
              return p2 ? qy(p2.path, t3) : void 0;
            if (e3.node.name === "Infinity")
              return p2 ? qy(p2.path, t3) : 1 / 0;
            if (e3.node.name === "NaN")
              return p2 ? qy(p2.path, t3) : NaN;
            var d2 = e3.resolve();
            return d2 === e3 ? qy(e3, t3) : $y(d2, t3);
          }
          if (e3.isUnaryExpression({ prefix: true })) {
            if (e3.node.operator === "void")
              return;
            var h2 = e3.get("argument");
            if (e3.node.operator === "typeof" && (h2.isFunction() || h2.isClass()))
              return "function";
            var m2 = $y(h2, t3);
            if (!t3.confident)
              return;
            switch (e3.node.operator) {
              case "!":
                return !m2;
              case "+":
                return +m2;
              case "-":
                return -m2;
              case "~":
                return ~m2;
              case "typeof":
                return typeof m2;
            }
          }
          if (e3.isArrayExpression()) {
            for (var y2, g2 = [], v2 = f(e3.get("elements")); !(y2 = v2()).done; ) {
              var b2 = y2.value.evaluate();
              if (!b2.confident)
                return qy(b2.deopt, t3);
              g2.push(b2.value);
            }
            return g2;
          }
          if (e3.isObjectExpression()) {
            for (var E2, x2 = {}, D2 = f(e3.get("properties")); !(E2 = D2()).done; ) {
              var A2 = E2.value;
              if (A2.isObjectMethod() || A2.isSpreadElement())
                return qy(A2, t3);
              var w2 = A2.get("key");
              if (A2.node.computed) {
                if (!(w2 = w2.evaluate()).confident)
                  return qy(w2.deopt, t3);
                w2 = w2.value;
              } else
                w2 = w2.isIdentifier() ? w2.node.name : w2.node.value;
              var C2 = A2.get("value").evaluate();
              if (!C2.confident)
                return qy(C2.deopt, t3);
              C2 = C2.value, x2[w2] = C2;
            }
            return x2;
          }
          if (e3.isLogicalExpression()) {
            var S2 = t3.confident, T2 = $y(e3.get("left"), t3), j2 = t3.confident;
            t3.confident = S2;
            var P2 = $y(e3.get("right"), t3), I2 = t3.confident;
            switch (e3.node.operator) {
              case "||":
                if (t3.confident = j2 && (!!T2 || I2), !t3.confident)
                  return;
                return T2 || P2;
              case "&&":
                if (t3.confident = j2 && (!T2 || I2), !t3.confident)
                  return;
                return T2 && P2;
            }
          }
          if (e3.isBinaryExpression()) {
            var F2 = $y(e3.get("left"), t3);
            if (!t3.confident)
              return;
            var k2 = $y(e3.get("right"), t3);
            if (!t3.confident)
              return;
            switch (e3.node.operator) {
              case "-":
                return F2 - k2;
              case "+":
                return F2 + k2;
              case "/":
                return F2 / k2;
              case "*":
                return F2 * k2;
              case "%":
                return F2 % k2;
              case "**":
                return Math.pow(F2, k2);
              case "<":
                return F2 < k2;
              case ">":
                return F2 > k2;
              case "<=":
                return F2 <= k2;
              case ">=":
                return F2 >= k2;
              case "==":
                return F2 == k2;
              case "!=":
                return F2 != k2;
              case "===":
                return F2 === k2;
              case "!==":
                return F2 !== k2;
              case "|":
                return F2 | k2;
              case "&":
                return F2 & k2;
              case "^":
                return F2 ^ k2;
              case "<<":
                return F2 << k2;
              case ">>":
                return F2 >> k2;
              case ">>>":
                return F2 >>> k2;
            }
          }
          if (e3.isCallExpression()) {
            var O2, R2, N2 = e3.get("callee");
            if (N2.isIdentifier() && !e3.scope.getBinding(N2.node.name) && Hy.indexOf(N2.node.name) >= 0 && (R2 = Wy[N2.node.name]), N2.isMemberExpression()) {
              var B2 = N2.get("object"), _2 = N2.get("property");
              if (B2.isIdentifier() && _2.isIdentifier() && Hy.indexOf(B2.node.name) >= 0 && Xy.indexOf(_2.node.name) < 0 && (R2 = (O2 = Wy[B2.node.name])[_2.node.name]), B2.isLiteral() && _2.isIdentifier()) {
                var L2 = typeof B2.node.value;
                L2 !== "string" && L2 !== "number" || (R2 = (O2 = B2.node.value)[_2.node.name]);
              }
            }
            if (R2) {
              var M2 = e3.get("arguments").map(function(e4) {
                return $y(e4, t3);
              });
              if (!t3.confident)
                return;
              return R2.apply(O2, M2);
            }
          }
          qy(e3, t3);
        }(e2, t2);
        return t2.confident && (a2.resolved = true, a2.value = i2), i2;
      }
      function Ky(e2, t2, r2, n2) {
        n2 === void 0 && (n2 = false);
        for (var s2, a2 = "", i2 = 0, o2 = e2.get("expressions"), u2 = f(t2); !(s2 = u2()).done; ) {
          var l2 = s2.value;
          if (!r2.confident)
            break;
          a2 += n2 ? l2.value.raw : l2.value.cooked;
          var c2 = o2[i2++];
          c2 && (a2 += String($y(c2, r2)));
        }
        if (r2.confident)
          return a2;
      }
      var zy = Object.freeze({ __proto__: null, evaluateTruthy: function() {
        var e2 = this.evaluate();
        if (e2.confident)
          return !!e2.value;
      }, evaluate: function() {
        var e2 = { confident: true, deoptPath: null, seen: new Map() }, t2 = $y(this, e2);
        return e2.confident || (t2 = void 0), { confident: e2.confident, deopt: e2.deoptPath, value: t2 };
      } });
      function Jy(e2) {
        return { code: function(e3) {
          return "/* @babel/template */;\n" + e3;
        }, validate: function() {
        }, unwrap: function(t2) {
          return e2(t2.program.body.slice(1));
        } };
      }
      var Yy = Jy(function(e2) {
        return e2.length > 1 ? e2 : e2[0];
      }), Qy = Jy(function(e2) {
        return e2;
      }), Zy = Jy(function(e2) {
        if (e2.length === 0)
          throw new Error("Found nothing to return.");
        if (e2.length > 1)
          throw new Error("Found multiple statements but wanted one");
        return e2[0];
      }), eg = { code: function(e2) {
        return "(\n" + e2 + "\n)";
      }, validate: function(e2) {
        if (e2.program.body.length > 1)
          throw new Error("Found multiple statements but wanted one");
        if (eg.unwrap(e2).start === 0)
          throw new Error("Parse result included parens.");
      }, unwrap: function(e2) {
        var t2 = l(e2.program.body, 1)[0];
        return Lu(t2), t2.expression;
      } }, tg = ["placeholderWhitelist", "placeholderPattern", "preserveComments", "syntacticPlaceholders"];
      function rg(e2, t2) {
        var r2 = t2.placeholderWhitelist, n2 = r2 === void 0 ? e2.placeholderWhitelist : r2, s2 = t2.placeholderPattern, a2 = s2 === void 0 ? e2.placeholderPattern : s2, i2 = t2.preserveComments, o2 = i2 === void 0 ? e2.preserveComments : i2, u2 = t2.syntacticPlaceholders, l2 = u2 === void 0 ? e2.syntacticPlaceholders : u2;
        return { parser: Object.assign({}, e2.parser, t2.parser), placeholderWhitelist: n2, placeholderPattern: a2, preserveComments: o2, syntacticPlaceholders: l2 };
      }
      function ng(e2) {
        if (e2 != null && typeof e2 != "object")
          throw new Error("Unknown template options.");
        var t2 = e2 || {}, r2 = t2.placeholderWhitelist, n2 = t2.placeholderPattern, s2 = t2.preserveComments, a2 = t2.syntacticPlaceholders, o2 = i(t2, tg);
        if (r2 != null && !(r2 instanceof Set))
          throw new Error("'.placeholderWhitelist' must be a Set, null, or undefined");
        if (n2 != null && !(n2 instanceof RegExp) && n2 !== false)
          throw new Error("'.placeholderPattern' must be a RegExp, false, null, or undefined");
        if (s2 != null && typeof s2 != "boolean")
          throw new Error("'.preserveComments' must be a boolean, null, or undefined");
        if (a2 != null && typeof a2 != "boolean")
          throw new Error("'.syntacticPlaceholders' must be a boolean, null, or undefined");
        if (a2 === true && (r2 != null || n2 != null))
          throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible with '.syntacticPlaceholders: true'");
        return { parser: o2, placeholderWhitelist: r2 || void 0, placeholderPattern: n2 == null ? void 0 : n2, preserveComments: s2 == null ? void 0 : s2, syntacticPlaceholders: a2 == null ? void 0 : a2 };
      }
      function sg(e2) {
        if (Array.isArray(e2))
          return e2.reduce(function(e3, t2, r2) {
            return e3["$" + r2] = t2, e3;
          }, {});
        if (typeof e2 == "object" || e2 == null)
          return e2 || void 0;
        throw new Error("Template replacements must be an array, object, null, or undefined");
      }
      var ag = /^[_$A-Z0-9]+$/;
      function ig(e2, t2, r2) {
        var n2 = r2.placeholderWhitelist, s2 = r2.placeholderPattern, a2 = r2.preserveComments, i2 = r2.syntacticPlaceholders, o2 = function(e3, t3, r3) {
          var n3 = (t3.plugins || []).slice();
          r3 !== false && n3.push("placeholders");
          t3 = Object.assign({ allowReturnOutsideFunction: true, allowSuperOutsideMethod: true, sourceType: "module" }, t3, { plugins: n3 });
          try {
            return _y(e3, t3);
          } catch (t4) {
            var s3 = t4.loc;
            throw s3 && (t4.message += "\n" + Zh(e3, { start: s3 }), t4.code = "BABEL_TEMPLATE_PARSE_ERROR"), t4;
          }
        }(t2, r2.parser, i2);
        uc(o2, { preserveComments: a2 }), e2.validate(o2);
        var u2 = { placeholders: [], placeholderNames: new Set() }, l2 = { placeholders: [], placeholderNames: new Set() }, c2 = { value: void 0 };
        return vc(o2, og, { syntactic: u2, legacy: l2, isLegacyRef: c2, placeholderWhitelist: n2, placeholderPattern: s2, syntacticPlaceholders: i2 }), Object.assign({ ast: o2 }, c2.value ? l2 : u2);
      }
      function og(e2, t2, r2) {
        var n2, s2;
        if (tt(e2)) {
          if (r2.syntacticPlaceholders === false)
            throw new Error("%%foo%%-style placeholders can't be used when '.syntacticPlaceholders' is false.");
          s2 = e2.name.name, r2.isLegacyRef.value = false;
        } else {
          if (r2.isLegacyRef.value === false || r2.syntacticPlaceholders)
            return;
          if (F(e2) || Je(e2))
            s2 = e2.name, r2.isLegacyRef.value = true;
          else {
            if (!R(e2))
              return;
            s2 = e2.value, r2.isLegacyRef.value = true;
          }
        }
        if (!r2.isLegacyRef.value && (r2.placeholderPattern != null || r2.placeholderWhitelist != null))
          throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible with '.syntacticPlaceholders: true'");
        if (!r2.isLegacyRef.value || r2.placeholderPattern !== false && (r2.placeholderPattern || ag).test(s2) || (n2 = r2.placeholderWhitelist) != null && n2.has(s2)) {
          var a2, i2 = (t2 = t2.slice())[t2.length - 1], o2 = i2.node, u2 = i2.key;
          R(e2) || tt(e2, { expectedNode: "StringLiteral" }) ? a2 = "string" : U(o2) && u2 === "arguments" || E(o2) && u2 === "arguments" || St(o2) && u2 === "params" ? a2 = "param" : C(o2) && !tt(e2) ? (a2 = "statement", t2 = t2.slice(0, -1)) : a2 = xt(e2) && tt(e2) ? "statement" : "other";
          var l2 = r2.isLegacyRef.value ? r2.legacy : r2.syntactic, c2 = l2.placeholders, p2 = l2.placeholderNames;
          c2.push({ name: s2, type: a2, resolve: function(e3) {
            return function(e4, t3) {
              for (var r3 = e4, n3 = 0; n3 < t3.length - 1; n3++) {
                var s3 = t3[n3], a3 = s3.key, i3 = s3.index;
                r3 = i3 === void 0 ? r3[a3] : r3[a3][i3];
              }
              var o3 = t3[t3.length - 1], u3 = o3.key, l3 = o3.index;
              return { parent: r3, key: u3, index: l3 };
            }(e3, t2);
          }, isDuplicate: p2.has(s2) }), p2.add(s2);
        }
      }
      function ug(e2, t2) {
        var r2 = Ju(e2.ast);
        return t2 && (e2.placeholders.forEach(function(e3) {
          if (!Object.prototype.hasOwnProperty.call(t2, e3.name)) {
            var r3 = e3.name;
            throw new Error('Error: No substitution given for "' + r3 + `". If this is not meant to be a
            placeholder you may want to consider passing one of the following options to @babel/template:
            - { placeholderPattern: false, placeholderWhitelist: new Set(['` + r3 + "'])}\n            - { placeholderPattern: /^" + r3 + "$/ }");
          }
        }), Object.keys(t2).forEach(function(t3) {
          if (!e2.placeholderNames.has(t3))
            throw new Error('Unknown substitution "' + t3 + '" given');
        })), e2.placeholders.slice().reverse().forEach(function(e3) {
          try {
            !function(e4, t3, r3) {
              e4.isDuplicate && (Array.isArray(r3) ? r3 = r3.map(function(e5) {
                return Ju(e5);
              }) : typeof r3 == "object" && (r3 = Ju(r3)));
              var n2 = e4.resolve(t3), s2 = n2.parent, a2 = n2.key, i2 = n2.index;
              if (e4.type === "string") {
                if (typeof r3 == "string" && (r3 = Cs(r3)), !r3 || !R(r3))
                  throw new Error("Expected string substitution");
              } else if (e4.type === "statement")
                i2 === void 0 ? r3 ? Array.isArray(r3) ? r3 = os(r3) : typeof r3 == "string" ? r3 = ys(Ds(r3)) : xt(r3) || (r3 = ys(r3)) : r3 = ms() : r3 && !Array.isArray(r3) && (typeof r3 == "string" && (r3 = Ds(r3)), xt(r3) || (r3 = ys(r3)));
              else if (e4.type === "param") {
                if (typeof r3 == "string" && (r3 = Ds(r3)), i2 === void 0)
                  throw new Error("Assertion failure.");
              } else if (typeof r3 == "string" && (r3 = Ds(r3)), Array.isArray(r3))
                throw new Error("Cannot replace single expression with an array.");
              if (i2 === void 0)
                zr(s2, a2, r3), s2[a2] = r3;
              else {
                var o2 = s2[a2].slice();
                e4.type === "statement" || e4.type === "param" ? r3 == null ? o2.splice(i2, 1) : Array.isArray(r3) ? o2.splice.apply(o2, [i2, 1].concat(c(r3))) : o2[i2] = r3 : o2[i2] = r3, zr(s2, a2, o2), s2[a2] = o2;
              }
            }(e3, r2, t2 && t2[e3.name] || null);
          } catch (t3) {
            throw t3.message = '@babel/template placeholder "' + e3.name + '": ' + t3.message, t3;
          }
        }), r2;
      }
      function lg(e2, t2, r2) {
        var n2;
        return t2 = e2.code(t2), function(s2) {
          var a2 = sg(s2);
          return n2 || (n2 = ig(e2, t2, r2)), e2.unwrap(ug(n2, a2));
        };
      }
      function cg(e2, t2, r2) {
        var n2 = function(e3, t3, r3) {
          var n3, s3, a3, i2 = "";
          do {
            var o2 = pg(t3, i2 += "$");
            n3 = o2.names, s3 = new Set(n3), a3 = ig(e3, e3.code(o2.code), { parser: r3.parser, placeholderWhitelist: new Set(o2.names.concat(r3.placeholderWhitelist ? Array.from(r3.placeholderWhitelist) : [])), placeholderPattern: r3.placeholderPattern, preserveComments: r3.preserveComments, syntacticPlaceholders: r3.syntacticPlaceholders });
          } while (a3.placeholders.some(function(e4) {
            return e4.isDuplicate && s3.has(e4.name);
          }));
          return { metadata: a3, names: n3 };
        }(e2, t2, r2), s2 = n2.metadata, a2 = n2.names;
        return function(t3) {
          var r3 = {};
          return t3.forEach(function(e3, t4) {
            r3[a2[t4]] = e3;
          }), function(t4) {
            var n3 = sg(t4);
            return n3 && Object.keys(n3).forEach(function(e3) {
              if (Object.prototype.hasOwnProperty.call(r3, e3))
                throw new Error("Unexpected replacement overlap.");
            }), e2.unwrap(ug(s2, n3 ? Object.assign(n3, r3) : r3));
          };
        };
      }
      function pg(e2, t2) {
        for (var r2 = [], n2 = e2[0], s2 = 1; s2 < e2.length; s2++) {
          var a2 = "" + t2 + (s2 - 1);
          r2.push(a2), n2 += a2 + e2[s2];
        }
        return { names: r2, code: n2 };
      }
      var dg = ng({ placeholderPattern: false });
      function fg(e2, t2) {
        var r2 = new WeakMap(), n2 = new WeakMap(), s2 = t2 || ng(null);
        return Object.assign(function(t3) {
          for (var n3 = arguments.length, a2 = new Array(n3 > 1 ? n3 - 1 : 0), i2 = 1; i2 < n3; i2++)
            a2[i2 - 1] = arguments[i2];
          if (typeof t3 == "string") {
            if (a2.length > 1)
              throw new Error("Unexpected extra params.");
            return hg(lg(e2, t3, rg(s2, ng(a2[0]))));
          }
          if (Array.isArray(t3)) {
            var o2 = r2.get(t3);
            return o2 || (o2 = cg(e2, t3, s2), r2.set(t3, o2)), hg(o2(a2));
          }
          if (typeof t3 == "object" && t3) {
            if (a2.length > 0)
              throw new Error("Unexpected extra params.");
            return fg(e2, rg(s2, ng(t3)));
          }
          throw new Error("Unexpected template param " + typeof t3);
        }, { ast: function(t3) {
          for (var r3 = arguments.length, a2 = new Array(r3 > 1 ? r3 - 1 : 0), i2 = 1; i2 < r3; i2++)
            a2[i2 - 1] = arguments[i2];
          if (typeof t3 == "string") {
            if (a2.length > 1)
              throw new Error("Unexpected extra params.");
            return lg(e2, t3, rg(rg(s2, ng(a2[0])), dg))();
          }
          if (Array.isArray(t3)) {
            var o2 = n2.get(t3);
            return o2 || (o2 = cg(e2, t3, rg(s2, dg)), n2.set(t3, o2)), o2(a2)();
          }
          throw new Error("Unexpected template param " + typeof t3);
        } });
      }
      function hg(e2) {
        var t2 = "";
        try {
          throw new Error();
        } catch (e3) {
          e3.stack && (t2 = e3.stack.split("\n").slice(3).join("\n"));
        }
        return function(r2) {
          try {
            return e2(r2);
          } catch (e3) {
            throw e3.stack += "\n    =============\n" + t2, e3;
          }
        };
      }
      var mg = fg(Yy), yg = fg(Zy), gg = fg(Qy), vg = fg(eg), bg = fg({ code: function(e2) {
        return e2;
      }, validate: function() {
      }, unwrap: function(e2) {
        return e2.program;
      } }), Eg = Object.assign(mg.bind(void 0), { smart: mg, statement: yg, statements: gg, expression: vg, program: bg, ast: mg.ast }), xg = Eg("\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"), Dg = Eg("\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"), Ag = { "ReferencedIdentifier|BindingIdentifier": function(e2, t2) {
        e2.node.name === t2.name && (e2.scope.getBindingIdentifier(t2.name) === t2.outerDeclar && (t2.selfReference = true, e2.stop()));
      } };
      function wg(e2, t2, r2, n2) {
        if (e2.selfReference) {
          if (!n2.hasBinding(r2.name) || n2.hasGlobal(r2.name)) {
            if (!St(t2))
              return;
            var s2 = xg;
            t2.generator && (s2 = Dg);
            for (var a2 = s2({ FUNCTION: t2, FUNCTION_ID: r2, FUNCTION_KEY: n2.generateUidIdentifier(r2.name) }).expression, i2 = a2.callee.body.body[0].params, o2 = 0, u2 = function(e3) {
              for (var t3 = e3.params, r3 = 0; r3 < t3.length; r3++) {
                var n3 = t3[r3];
                if (re(n3) || X(n3))
                  return r3;
              }
              return t3.length;
            }(t2); o2 < u2; o2++)
              i2.push(n2.generateUidIdentifier("x"));
            return a2;
          }
          n2.rename(r2.name);
        }
        t2.id = r2, n2.getProgramParent().references[r2.name] = true;
      }
      function Cg(e2, t2) {
        var r2 = e2.node, n2 = e2.parent, s2 = e2.scope, a2 = e2.id;
        if (t2 === void 0 && (t2 = false), !r2.id) {
          if (!H(n2) && !W(n2, { kind: "method" }) || n2.computed && !Pt(n2.key)) {
            if (ee(n2)) {
              if (F(a2 = n2.id) && !t2) {
                var i2 = s2.parent.getBinding(a2.name);
                if (i2 && i2.constant && s2.getBinding(a2.name) === i2)
                  return r2.id = Ju(a2), void (r2.id[Kr] = true);
              }
            } else if (y(n2, { operator: "=" }))
              a2 = n2.left;
            else if (!a2)
              return;
          } else
            a2 = n2.key;
          var o2;
          if (a2 && Pt(a2) ? o2 = function(e3) {
            return B(e3) ? "null" : _(e3) ? "_" + e3.pattern + "_" + e3.flags : De(e3) ? e3.quasis.map(function(e4) {
              return e4.value.raw;
            }).join("") : e3.value !== void 0 ? e3.value + "" : "";
          }(a2) : a2 && F(a2) && (o2 = a2.name), o2 !== void 0)
            return (a2 = Ds(o2 = tc(o2)))[Kr] = true, wg(function(e3, t3, r3) {
              var n3 = { selfAssignment: false, selfReference: false, outerDeclar: r3.getBindingIdentifier(t3), references: [], name: t3 }, s3 = r3.getOwnBinding(t3);
              return s3 ? s3.kind === "param" && (n3.selfReference = true) : (n3.outerDeclar || r3.hasGlobal(t3)) && r3.traverse(e3, Ag, n3), n3;
            }(r2, o2, s2), r2, a2, s2) || r2;
        }
      }
      function Sg(e2, t2, r2) {
        t2 === void 0 && (t2 = true), r2 === void 0 && (r2 = true);
        var n2 = e2.findParent(function(e3) {
          return e3.isFunction() && !e3.isArrowFunctionExpression() || e3.isProgram() || e3.isClassProperty({ static: false });
        }), s2 = (n2 == null ? void 0 : n2.node.kind) === "constructor";
        if (n2.isClassProperty())
          throw e2.buildCodeFrameError("Unable to transform arrow inside class property");
        var a2, i2 = function(e3) {
          var t3 = [], r3 = [], n3 = [], s3 = [], a3 = [];
          return e3.traverse({ ClassProperty: function(e4) {
            e4.skip();
          }, Function: function(e4) {
            e4.isArrowFunctionExpression() || e4.skip();
          }, ThisExpression: function(e4) {
            t3.push(e4);
          }, JSXIdentifier: function(e4) {
            e4.node.name === "this" && (e4.parentPath.isJSXMemberExpression({ object: e4.node }) || e4.parentPath.isJSXOpeningElement({ name: e4.node })) && t3.push(e4);
          }, CallExpression: function(e4) {
            e4.get("callee").isSuper() && a3.push(e4);
          }, MemberExpression: function(e4) {
            e4.get("object").isSuper() && s3.push(e4);
          }, ReferencedIdentifier: function(e4) {
            e4.node.name === "arguments" && r3.push(e4);
          }, MetaProperty: function(e4) {
            e4.get("meta").isIdentifier({ name: "new" }) && e4.get("property").isIdentifier({ name: "target" }) && n3.push(e4);
          } }), { thisPaths: t3, argumentsPaths: r3, newTargetPaths: n3, superProps: s3, superCalls: a3 };
        }(e2), o2 = i2.thisPaths, u2 = i2.argumentsPaths, l2 = i2.newTargetPaths, c2 = i2.superProps, p2 = i2.superCalls;
        if (s2 && p2.length > 0) {
          if (!r2)
            throw p2[0].buildCodeFrameError("Unable to handle nested super() usage in arrow");
          var d2 = [];
          n2.traverse({ Function: function(e3) {
            e3.isArrowFunctionExpression() || e3.skip();
          }, ClassProperty: function(e3) {
            e3.skip();
          }, CallExpression: function(e3) {
            e3.get("callee").isSuper() && d2.push(e3);
          } });
          var f2 = function(e3) {
            return jg(e3, "supercall", function() {
              var t3 = e3.scope.generateUidIdentifier("args");
              return ea([_s(t3)], ls(ga(), [ya(Ds(t3.name))]));
            });
          }(n2);
          d2.forEach(function(e3) {
            var t3 = Ds(f2);
            t3.loc = e3.node.callee.loc, e3.get("callee").replaceWith(t3);
          });
        }
        if (u2.length > 0) {
          var h2 = jg(n2, "arguments", function() {
            return Ds("arguments");
          });
          u2.forEach(function(e3) {
            var t3 = Ds(h2);
            t3.loc = e3.node.loc, e3.replaceWith(t3);
          });
        }
        if (l2.length > 0) {
          var m2 = jg(n2, "newtarget", function() {
            return fa(Ds("new"), Ds("target"));
          });
          l2.forEach(function(e3) {
            var t3 = Ds(m2);
            t3.loc = e3.node.loc, e3.replaceWith(t3);
          });
        }
        if (c2.length > 0) {
          if (!r2)
            throw c2[0].buildCodeFrameError("Unable to handle nested super.prop usage");
          c2.reduce(function(e3, t3) {
            return e3.concat(function(e4) {
              if (e4.parentPath.isAssignmentExpression() && e4.parentPath.node.operator !== "=") {
                var t4 = e4.parentPath, r3 = t4.node.operator.slice(0, -1), n3 = t4.node.right;
                if (t4.node.operator = "=", e4.node.computed) {
                  var s3 = e4.scope.generateDeclaredUidIdentifier("tmp");
                  t4.get("left").replaceWith(Fs2(e4.node.object, rs("=", s3, e4.node.property), true)), t4.get("right").replaceWith(ns(r3, Fs2(e4.node.object, Ds(s3.name), true), n3));
                } else
                  t4.get("left").replaceWith(Fs2(e4.node.object, e4.node.property)), t4.get("right").replaceWith(ns(r3, Fs2(e4.node.object, Ds(e4.node.property.name)), n3));
                return [t4.get("left"), t4.get("right").get("left")];
              }
              if (e4.parentPath.isUpdateExpression()) {
                var a3 = e4.parentPath, i3 = e4.scope.generateDeclaredUidIdentifier("tmp"), o3 = e4.node.computed ? e4.scope.generateDeclaredUidIdentifier("prop") : null, u3 = [rs("=", i3, Fs2(e4.node.object, o3 ? rs("=", o3, e4.node.property) : e4.node.property, e4.node.computed)), rs("=", Fs2(e4.node.object, o3 ? Ds(o3.name) : e4.node.property, e4.node.computed), ns("+", Ds(i3.name), Ss(1)))];
                return e4.parentPath.node.prefix || u3.push(Ds(i3.name)), a3.replaceWith(Ms(u3)), [a3.get("expressions.0.right"), a3.get("expressions.1.left")];
              }
              return [e4];
            }(t3));
          }, []).forEach(function(e3) {
            var t3 = e3.node.computed ? "" : e3.get("property").node.name, r3 = e3.parentPath.isAssignmentExpression({ left: e3.node }), s3 = e3.parentPath.isCallExpression({ callee: e3.node }), a3 = function(e4, t4, r4) {
              return jg(e4, "superprop_" + (t4 ? "set" : "get") + ":" + (r4 || ""), function() {
                var n3, s4 = [];
                if (r4)
                  n3 = Fs2(ga(), Ds(r4));
                else {
                  var a4 = e4.scope.generateUidIdentifier("prop");
                  s4.unshift(a4), n3 = Fs2(ga(), Ds(a4.name), true);
                }
                if (t4) {
                  var i4 = e4.scope.generateUidIdentifier("value");
                  s4.push(i4), n3 = rs("=", n3, Ds(i4.name));
                }
                return ea(s4, n3);
              });
            }(n2, r3, t3), i3 = [];
            if (e3.node.computed && i3.push(e3.get("property").node), r3) {
              var u3 = e3.parentPath.node.right;
              i3.push(u3);
            }
            var l3 = ls(Ds(a3), i3);
            s3 ? (e3.parentPath.unshiftContainer("arguments", Ws()), e3.replaceWith(Fs2(l3, Ds("call"))), o2.push(e3.parentPath.get("arguments.0"))) : r3 ? e3.parentPath.replaceWith(l3) : e3.replaceWith(l3);
          });
        }
        return (o2.length > 0 || !t2) && (a2 = function(e3, t3) {
          return jg(e3, "this", function(r3) {
            if (!t3 || !Tg(e3))
              return Ws();
            var n3 = new WeakSet();
            e3.traverse({ Function: function(e4) {
              e4.isArrowFunctionExpression() || e4.skip();
            }, ClassProperty: function(e4) {
              e4.skip();
            }, CallExpression: function(e4) {
              e4.get("callee").isSuper() && (n3.has(e4.node) || (n3.add(e4.node), e4.replaceWithMultiple([e4.node, rs("=", Ds(r3), Ds("this"))])));
            } });
          });
        }(n2, s2), (t2 || s2 && Tg(n2)) && (o2.forEach(function(e3) {
          var t3 = e3.isJSX() ? Xi(a2) : Ds(a2);
          t3.loc = e3.node.loc, e3.replaceWith(t3);
        }), t2 || (a2 = null))), a2;
      }
      function Tg(e2) {
        return e2.isClassMethod() && !!e2.parentPath.parentPath.node.superClass;
      }
      function jg(e2, t2, r2) {
        var n2 = "binding:" + t2, s2 = e2.getData(n2);
        if (!s2) {
          var a2 = e2.scope.generateUidIdentifier(t2);
          s2 = a2.name, e2.setData(n2, s2), e2.scope.push({ id: a2, init: r2(s2) });
        }
        return s2;
      }
      var Pg = Object.freeze({ __proto__: null, toComputedKey: function() {
        var e2;
        if (this.isMemberExpression())
          e2 = this.node.property;
        else {
          if (!this.isProperty() && !this.isMethod())
            throw new ReferenceError("todo");
          e2 = this.node.key;
        }
        return this.node.computed || F(e2) && (e2 = Cs(e2.name)), e2;
      }, ensureBlock: function() {
        var e2 = this.get("body"), t2 = e2.node;
        if (Array.isArray(e2))
          throw new Error("Can't convert array path to a block statement");
        if (!t2)
          throw new Error("Can't convert node without a body");
        if (e2.isBlockStatement())
          return t2;
        var r2, n2, s2 = [], a2 = "body";
        e2.isStatement() ? (n2 = "body", r2 = 0, s2.push(e2.node)) : (a2 += ".body.0", this.isFunction() ? (r2 = "argument", s2.push(Ls(e2.node))) : (r2 = "expression", s2.push(ys(e2.node)))), this.node.body = os(s2);
        var i2 = this.get(a2);
        return e2.setup(i2, n2 ? i2.node[n2] : i2.node, n2, r2), this.node;
      }, arrowFunctionToShadowed: function() {
        this.isArrowFunctionExpression() && this.arrowFunctionToExpression();
      }, unwrapFunctionEnvironment: function() {
        if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration())
          throw this.buildCodeFrameError("Can only unwrap the environment of a function.");
        Sg(this);
      }, arrowFunctionToExpression: function(e2) {
        var t2 = e2 === void 0 ? {} : e2, r2 = t2.allowInsertArrow, n2 = r2 === void 0 || r2, s2 = t2.specCompliant, a2 = s2 !== void 0 && s2, i2 = t2.noNewArrows, o2 = i2 === void 0 ? !a2 : i2;
        if (!this.isArrowFunctionExpression())
          throw this.buildCodeFrameError("Cannot convert non-arrow function to a function expression.");
        var u2 = Sg(this, o2, n2);
        if (this.ensureBlock(), this.node.type = "FunctionExpression", !o2) {
          var l2 = u2 ? null : this.parentPath.scope.generateUidIdentifier("arrowCheckId");
          l2 && this.parentPath.scope.push({ id: l2, init: Rs([]) }), this.get("body").unshiftContainer("body", ys(ls(this.hub.addHelper("newArrowCheck"), [Ws(), Ds(l2 ? l2.name : u2)]))), this.replaceWith(ls(Fs2(Cg(this, true) || this.node, Ds("bind")), [l2 ? Ds(l2.name) : Ws()]));
        }
      } });
      function Ig(e2) {
        var t2 = this.node && this.node[e2];
        return t2 && Array.isArray(t2) ? !!t2.length : !!t2;
      }
      var Fg = Ig;
      function kg(e2) {
        return (e2.scope.getFunctionParent() || e2.scope.getProgramParent()).path;
      }
      function Og(e2, t2) {
        switch (e2) {
          case "LogicalExpression":
            return t2 === "right";
          case "ConditionalExpression":
          case "IfStatement":
            return t2 === "consequent" || t2 === "alternate";
          case "WhileStatement":
          case "DoWhileStatement":
          case "ForInStatement":
          case "ForOfStatement":
            return t2 === "body";
          case "ForStatement":
            return t2 === "body" || t2 === "update";
          case "SwitchStatement":
            return t2 === "cases";
          case "TryStatement":
            return t2 === "handler";
          case "AssignmentPattern":
            return t2 === "right";
          case "OptionalMemberExpression":
            return t2 === "property";
          case "OptionalCallExpression":
            return t2 === "arguments";
          default:
            return false;
        }
      }
      function Rg(e2, t2) {
        for (var r2 = 0; r2 < t2; r2++) {
          var n2 = e2[r2];
          if (Og(n2.parent.type, n2.parentKey))
            return true;
        }
        return false;
      }
      var Ng = new WeakSet();
      var Bg = Object.freeze({ __proto__: null, matchesPattern: function(e2, t2) {
        return Gt(this.node, e2, t2);
      }, has: Ig, isStatic: function() {
        return this.scope.isStatic(this.node);
      }, is: Fg, isnt: function(e2) {
        return !this.has(e2);
      }, equals: function(e2, t2) {
        return this.node[e2] === t2;
      }, isNodeType: function(e2) {
        return ir(this.type, e2);
      }, canHaveVariableDeclarationOrExpression: function() {
        return (this.key === "init" || this.key === "left") && this.parentPath.isFor();
      }, canSwapBetweenExpressionAndStatement: function(e2) {
        return !(this.key !== "body" || !this.parentPath.isArrowFunctionExpression()) && (this.isExpression() ? v(e2) : !!this.isBlockStatement() && vt(e2));
      }, isCompletionRecord: function(e2) {
        var t2 = this, r2 = true;
        do {
          var n2 = t2.container;
          if (t2.isFunction() && !r2)
            return !!e2;
          if (r2 = false, Array.isArray(n2) && t2.key !== n2.length - 1)
            return false;
        } while ((t2 = t2.parentPath) && !t2.isProgram());
        return true;
      }, isStatementOrBlock: function() {
        return !this.parentPath.isLabeledStatement() && !v(this.container) && Ir.includes(this.key);
      }, referencesImport: function(e2, t2) {
        if (!this.isReferencedIdentifier()) {
          if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? R(this.node.property, { value: t2 }) : this.node.property.name === t2)) {
            var r2 = this.get("object");
            return r2.isReferencedIdentifier() && r2.referencesImport(e2, "*");
          }
          return false;
        }
        var n2 = this.scope.getBinding(this.node.name);
        if (!n2 || n2.kind !== "module")
          return false;
        var s2 = n2.path, a2 = s2.parentPath;
        return !!a2.isImportDeclaration() && (a2.node.source.value === e2 && (!t2 || (!(!s2.isImportDefaultSpecifier() || t2 !== "default") || (!(!s2.isImportNamespaceSpecifier() || t2 !== "*") || !(!s2.isImportSpecifier() || !F(s2.node.imported, { name: t2 }))))));
      }, getSource: function() {
        var e2 = this.node;
        if (e2.end) {
          var t2 = this.hub.getCode();
          if (t2)
            return t2.slice(e2.start, e2.end);
        }
        return "";
      }, willIMaybeExecuteBefore: function(e2) {
        return this._guessExecutionStatusRelativeTo(e2) !== "after";
      }, _guessExecutionStatusRelativeTo: function(e2) {
        var t2 = { this: kg(this), target: kg(e2) };
        if (t2.target.node !== t2.this.node)
          return this._guessExecutionStatusRelativeToDifferentFunctions(t2.target);
        var r2, n2 = { target: e2.getAncestry(), this: this.getAncestry() };
        if (n2.target.indexOf(this) >= 0)
          return "after";
        if (n2.this.indexOf(e2) >= 0)
          return "before";
        for (var s2 = { target: 0, this: 0 }; !r2 && s2.this < n2.this.length; ) {
          var a2 = n2.this[s2.this];
          s2.target = n2.target.indexOf(a2), s2.target >= 0 ? r2 = a2 : s2.this++;
        }
        if (!r2)
          throw new Error("Internal Babel error - The two compared nodes don't appear to belong to the same program.");
        if (Rg(n2.this, s2.this - 1) || Rg(n2.target, s2.target - 1))
          return "unknown";
        var i2 = { this: n2.this[s2.this - 1], target: n2.target[s2.target - 1] };
        if (i2.target.listKey && i2.this.listKey && i2.target.container === i2.this.container)
          return i2.target.key > i2.this.key ? "before" : "after";
        var o2 = Qr[r2.type], u2 = o2.indexOf(i2.this.parentKey);
        return o2.indexOf(i2.target.parentKey) > u2 ? "before" : "after";
      }, _guessExecutionStatusRelativeToDifferentFunctions: function(e2) {
        if (!e2.isFunctionDeclaration() || e2.parentPath.isExportDeclaration())
          return "unknown";
        var t2 = e2.scope.getBinding(e2.node.id.name);
        if (!t2.references)
          return "before";
        for (var r2, n2, s2 = f(t2.referencePaths); !(n2 = s2()).done; ) {
          var a2 = n2.value;
          if (!!!a2.find(function(t3) {
            return t3.node === e2.node;
          })) {
            if (a2.key !== "callee" || !a2.parentPath.isCallExpression())
              return "unknown";
            if (!Ng.has(a2.node)) {
              Ng.add(a2.node);
              var i2 = this._guessExecutionStatusRelativeTo(a2);
              if (Ng.delete(a2.node), r2 && r2 !== i2)
                return "unknown";
              r2 = i2;
            }
          }
        }
        return r2;
      }, resolve: function(e2, t2) {
        return this._resolve(e2, t2) || this;
      }, _resolve: function(e2, t2) {
        if (!(t2 && t2.indexOf(this) >= 0))
          if ((t2 = t2 || []).push(this), this.isVariableDeclarator()) {
            if (this.get("id").isIdentifier())
              return this.get("init").resolve(e2, t2);
          } else if (this.isReferencedIdentifier()) {
            var r2 = this.scope.getBinding(this.node.name);
            if (!r2)
              return;
            if (!r2.constant)
              return;
            if (r2.kind === "module")
              return;
            if (r2.path !== this) {
              var n2 = r2.path.resolve(e2, t2);
              if (this.find(function(e3) {
                return e3.node === n2.node;
              }))
                return;
              return n2;
            }
          } else {
            if (this.isTypeCastExpression())
              return this.get("expression").resolve(e2, t2);
            if (e2 && this.isMemberExpression()) {
              var s2 = this.toComputedKey();
              if (!Pt(s2))
                return;
              var a2 = s2.value, i2 = this.get("object").resolve(e2, t2);
              if (i2.isObjectExpression())
                for (var o2, u2 = f(i2.get("properties")); !(o2 = u2()).done; ) {
                  var l2 = o2.value;
                  if (l2.isProperty()) {
                    var c2 = l2.get("key"), p2 = l2.isnt("computed") && c2.isIdentifier({ name: a2 });
                    if (p2 = p2 || c2.isLiteral({ value: a2 }))
                      return l2.get("value").resolve(e2, t2);
                  }
                }
              else if (i2.isArrayExpression() && !isNaN(+a2)) {
                var d2 = i2.get("elements")[a2];
                if (d2)
                  return d2.resolve(e2, t2);
              }
            }
          }
      }, isConstantExpression: function() {
        if (this.isIdentifier()) {
          var e2 = this.scope.getBinding(this.node.name);
          return !!e2 && e2.constant;
        }
        return this.isLiteral() ? !this.isRegExpLiteral() && (!this.isTemplateLiteral() || this.get("expressions").every(function(e3) {
          return e3.isConstantExpression();
        })) : this.isUnaryExpression() ? this.node.operator === "void" && this.get("argument").isConstantExpression() : !!this.isBinaryExpression() && (this.get("left").isConstantExpression() && this.get("right").isConstantExpression());
      }, isInStrictMode: function() {
        return !!(this.isProgram() ? this : this.parentPath).find(function(e2) {
          if (e2.isProgram({ sourceType: "module" }))
            return true;
          if (e2.isClass())
            return true;
          if (!e2.isProgram() && !e2.isFunction())
            return false;
          if (e2.isArrowFunctionExpression() && !e2.get("body").isBlockStatement())
            return false;
          for (var t2, r2 = f((e2.isFunction() ? e2.node.body : e2.node).directives); !(t2 = r2()).done; ) {
            if (t2.value.value.value === "use strict")
              return true;
          }
        });
      } });
      function _g() {
        var e2, t2 = (e2 = this.opts.denylist) != null ? e2 : this.opts.blacklist;
        return t2 && t2.indexOf(this.node.type) > -1;
      }
      var Lg = Object.freeze({ __proto__: null, call: function(e2) {
        var t2 = this.opts;
        return this.debug(e2), !(!this.node || !this._call(t2[e2])) || !!this.node && this._call(t2[this.node.type] && t2[this.node.type][e2]);
      }, _call: function(e2) {
        if (!e2)
          return false;
        for (var t2, r2 = f(e2); !(t2 = r2()).done; ) {
          var n2 = t2.value;
          if (n2) {
            var s2 = this.node;
            if (!s2)
              return true;
            var a2 = n2.call(this.state, this, this.state);
            if (a2 && typeof a2 == "object" && typeof a2.then == "function")
              throw new Error("You appear to be using a plugin with an async traversal visitor, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");
            if (a2)
              throw new Error("Unexpected return value from visitor method " + n2);
            if (this.node !== s2)
              return true;
            if (this._traverseFlags > 0)
              return true;
          }
        }
        return false;
      }, isDenylisted: _g, isBlacklisted: _g, visit: function() {
        return !!this.node && (!this.isDenylisted() && ((!this.opts.shouldSkip || !this.opts.shouldSkip(this)) && (this.shouldSkip || this.call("enter") || this.shouldSkip ? (this.debug("Skip..."), this.shouldStop) : (this.debug("Recursing into..."), vv.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys), this.call("exit"), this.shouldStop))));
      }, skip: function() {
        this.shouldSkip = true;
      }, skipKey: function(e2) {
        this.skipKeys == null && (this.skipKeys = {}), this.skipKeys[e2] = true;
      }, stop: function() {
        this._traverseFlags |= ev | Zg;
      }, setScope: function() {
        if (!this.opts || !this.opts.noScope) {
          var e2, t2 = this.parentPath;
          for (this.key === "key" && t2.isMethod() && (t2 = t2.parentPath); t2 && !e2; ) {
            if (t2.opts && t2.opts.noScope)
              return;
            e2 = t2.scope, t2 = t2.parentPath;
          }
          this.scope = this.getScope(e2), this.scope && this.scope.init();
        }
      }, setContext: function(e2) {
        return this.skipKeys != null && (this.skipKeys = {}), this._traverseFlags = 0, e2 && (this.context = e2, this.state = e2.state, this.opts = e2.opts), this.setScope(), this;
      }, resync: function() {
        this.removed || (this._resyncParent(), this._resyncList(), this._resyncKey());
      }, _resyncParent: function() {
        this.parentPath && (this.parent = this.parentPath.node);
      }, _resyncKey: function() {
        if (this.container && this.node !== this.container[this.key]) {
          if (Array.isArray(this.container)) {
            for (var e2 = 0; e2 < this.container.length; e2++)
              if (this.container[e2] === this.node)
                return this.setKey(e2);
          } else
            for (var t2 = 0, r2 = Object.keys(this.container); t2 < r2.length; t2++) {
              var n2 = r2[t2];
              if (this.container[n2] === this.node)
                return this.setKey(n2);
            }
          this.key = null;
        }
      }, _resyncList: function() {
        if (this.parent && this.inList) {
          var e2 = this.parent[this.listKey];
          this.container !== e2 && (this.container = e2 || null);
        }
      }, _resyncRemoved: function() {
        this.key != null && this.container && this.container[this.key] === this.node || this._markRemoved();
      }, popContext: function() {
        this.contexts.pop(), this.contexts.length > 0 ? this.setContext(this.contexts[this.contexts.length - 1]) : this.setContext(void 0);
      }, pushContext: function(e2) {
        this.contexts.push(e2), this.setContext(e2);
      }, setup: function(e2, t2, r2, n2) {
        this.listKey = r2, this.container = t2, this.parentPath = e2 || this.parentPath, this.setKey(n2);
      }, setKey: function(e2) {
        var t2;
        this.key = e2, this.node = this.container[this.key], this.type = (t2 = this.node) == null ? void 0 : t2.type;
      }, requeue: function(e2) {
        if (e2 === void 0 && (e2 = this), !e2.removed)
          for (var t2, r2 = f(this.contexts); !(t2 = r2()).done; ) {
            t2.value.maybeQueue(e2);
          }
      }, _getQueueContexts: function() {
        for (var e2 = this, t2 = this.contexts; !t2.length && (e2 = e2.parentPath); )
          t2 = e2.contexts;
        return t2;
      } }), Mg = [function(e2, t2) {
        if (e2.key === "test" && (t2.isWhile() || t2.isSwitchCase()) || e2.key === "declaration" && t2.isExportDeclaration() || e2.key === "body" && t2.isLabeledStatement() || e2.listKey === "declarations" && t2.isVariableDeclaration() && t2.node.declarations.length === 1 || e2.key === "expression" && t2.isExpressionStatement())
          return t2.remove(), true;
      }, function(e2, t2) {
        if (t2.isSequenceExpression() && t2.node.expressions.length === 1)
          return t2.replaceWith(t2.node.expressions[0]), true;
      }, function(e2, t2) {
        if (t2.isBinary())
          return e2.key === "left" ? t2.replaceWith(t2.node.right) : t2.replaceWith(t2.node.left), true;
      }, function(e2, t2) {
        if (t2.isIfStatement() && (e2.key === "consequent" || e2.key === "alternate") || e2.key === "body" && (t2.isLoop() || t2.isArrowFunctionExpression()))
          return e2.replaceWith({ type: "BlockStatement", body: [] }), true;
      }];
      var Ug = Object.freeze({ __proto__: null, remove: function() {
        var e2;
        this._assertUnremoved(), this.resync(), (e2 = this.opts) != null && e2.noScope || this._removeFromScope(), this._callRemovalHooks() || (this.shareCommentsWithSiblings(), this._remove()), this._markRemoved();
      }, _removeFromScope: function() {
        var e2 = this, t2 = this.getBindingIdentifiers();
        Object.keys(t2).forEach(function(t3) {
          return e2.scope.removeBinding(t3);
        });
      }, _callRemovalHooks: function() {
        for (var e2, t2 = f(Mg); !(e2 = t2()).done; ) {
          if ((0, e2.value)(this, this.parentPath))
            return true;
        }
      }, _remove: function() {
        Array.isArray(this.container) ? (this.container.splice(this.key, 1), this.updateSiblingKeys(this.key, -1)) : this._replaceWith(null);
      }, _markRemoved: function() {
        this._traverseFlags |= ev | Qg, this.parent && rp.get(this.parent).delete(this.node), this.node = null;
      }, _assertUnremoved: function() {
        if (this.removed)
          throw this.buildCodeFrameError("NodePath has been removed so is read-only.");
      } }), Gg = { ReferencedIdentifier: function(e2, t2) {
        if (!e2.isJSXIdentifier() || !jc.isCompatTag(e2.node.name) || e2.parentPath.isJSXMemberExpression()) {
          if (e2.node.name === "this") {
            var r2 = e2.scope;
            do {
              if (r2.path.isFunction() && !r2.path.isArrowFunctionExpression())
                break;
            } while (r2 = r2.parent);
            r2 && t2.breakOnScopePaths.push(r2.path);
          }
          var n2 = e2.scope.getBinding(e2.node.name);
          if (n2) {
            for (var s2, a2 = f(n2.constantViolations); !(s2 = a2()).done; ) {
              if (s2.value.scope !== n2.path.scope)
                return t2.mutableBinding = true, void e2.stop();
            }
            n2 === t2.scope.getBinding(e2.node.name) && (t2.bindings[e2.node.name] = n2);
          }
        }
      } }, Vg = function() {
        function e2(e3, t3) {
          this.breakOnScopePaths = void 0, this.bindings = void 0, this.mutableBinding = void 0, this.scopes = void 0, this.scope = void 0, this.path = void 0, this.attachAfter = void 0, this.breakOnScopePaths = [], this.bindings = {}, this.mutableBinding = false, this.scopes = [], this.scope = t3, this.path = e3, this.attachAfter = false;
        }
        var t2 = e2.prototype;
        return t2.isCompatibleScope = function(e3) {
          for (var t3 = 0, r2 = Object.keys(this.bindings); t3 < r2.length; t3++) {
            var n2 = r2[t3], s2 = this.bindings[n2];
            if (!e3.bindingIdentifierEquals(n2, s2.identifier))
              return false;
          }
          return true;
        }, t2.getCompatibleScopes = function() {
          var e3 = this.path.scope;
          do {
            if (!this.isCompatibleScope(e3))
              break;
            if (this.scopes.push(e3), this.breakOnScopePaths.indexOf(e3.path) >= 0)
              break;
          } while (e3 = e3.parent);
        }, t2.getAttachmentPath = function() {
          var e3 = this._getAttachmentPath();
          if (e3) {
            var t3 = e3.scope;
            if (t3.path === e3 && (t3 = e3.scope.parent), t3.path.isProgram() || t3.path.isFunction())
              for (var r2 = 0, n2 = Object.keys(this.bindings); r2 < n2.length; r2++) {
                var s2 = n2[r2];
                if (t3.hasOwnBinding(s2)) {
                  var a2 = this.bindings[s2];
                  if (a2.kind !== "param" && a2.path.parentKey !== "params") {
                    if (this.getAttachmentParentForPath(a2.path).key >= e3.key) {
                      this.attachAfter = true, e3 = a2.path;
                      for (var i2, o2 = f(a2.constantViolations); !(i2 = o2()).done; ) {
                        var u2 = i2.value;
                        this.getAttachmentParentForPath(u2).key > e3.key && (e3 = u2);
                      }
                    }
                  }
                }
              }
            return e3;
          }
        }, t2._getAttachmentPath = function() {
          var e3 = this.scopes.pop();
          if (e3) {
            if (e3.path.isFunction()) {
              if (!this.hasOwnParamBindings(e3))
                return this.getNextScopeAttachmentParent();
              if (this.scope === e3)
                return;
              for (var t3 = e3.path.get("body").get("body"), r2 = 0; r2 < t3.length; r2++)
                if (!t3[r2].node._blockHoist)
                  return t3[r2];
            } else if (e3.path.isProgram())
              return this.getNextScopeAttachmentParent();
          }
        }, t2.getNextScopeAttachmentParent = function() {
          var e3 = this.scopes.pop();
          if (e3)
            return this.getAttachmentParentForPath(e3.path);
        }, t2.getAttachmentParentForPath = function(e3) {
          do {
            if (!e3.parentPath || Array.isArray(e3.container) && e3.isStatement())
              return e3;
          } while (e3 = e3.parentPath);
        }, t2.hasOwnParamBindings = function(e3) {
          for (var t3 = 0, r2 = Object.keys(this.bindings); t3 < r2.length; t3++) {
            var n2 = r2[t3];
            if (e3.hasOwnBinding(n2)) {
              var s2 = this.bindings[n2];
              if (s2.kind === "param" && s2.constant)
                return true;
            }
          }
          return false;
        }, t2.run = function() {
          if (this.path.traverse(Gg, this), !this.mutableBinding) {
            this.getCompatibleScopes();
            var e3 = this.getAttachmentPath();
            if (e3 && e3.getFunctionParent() !== this.path.getFunctionParent()) {
              var t3 = e3.scope.generateUidIdentifier("ref"), r2 = zs(t3, this.path.node), n2 = l(e3[this.attachAfter ? "insertAfter" : "insertBefore"]([e3.isVariableDeclarator() ? r2 : Ks("var", [r2])]), 1)[0], s2 = this.path.parentPath;
              return s2.isJSXElement() && this.path.container === s2.node.children && (t3 = Wi(t3)), this.path.replaceWith(Ju(t3)), e3.isVariableDeclarator() ? n2.get("init") : n2.get("declarations.0.init");
            }
          }
        }, e2;
      }();
      var Wg = Object.freeze({ __proto__: null, insertBefore: function(e2) {
        this._assertUnremoved();
        var t2 = this._verifyNodeList(e2), r2 = this.parentPath;
        if (r2.isExpressionStatement() || r2.isLabeledStatement() || r2.isExportNamedDeclaration() || r2.isExportDefaultDeclaration() && this.isDeclaration())
          return r2.insertBefore(t2);
        if (this.isNodeType("Expression") && !this.isJSXElement() || r2.isForStatement() && this.key === "init")
          return this.node && t2.push(this.node), this.replaceExpressionWithStatements(t2);
        if (Array.isArray(this.container))
          return this._containerInsertBefore(t2);
        if (this.isStatementOrBlock()) {
          var n2 = this.node, s2 = n2 && (!this.isExpressionStatement() || n2.expression != null);
          return this.replaceWith(os(s2 ? [n2] : [])), this.unshiftContainer("body", t2);
        }
        throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
      }, _containerInsert: function(e2, t2) {
        var r2;
        this.updateSiblingKeys(e2, t2.length);
        var n2 = [];
        (r2 = this.container).splice.apply(r2, [e2, 0].concat(c(t2)));
        for (var s2 = 0; s2 < t2.length; s2++) {
          var a2 = e2 + s2, i2 = this.getSibling(a2);
          n2.push(i2), this.context && this.context.queue && i2.pushContext(this.context);
        }
        for (var o2 = this._getQueueContexts(), u2 = 0, l2 = n2; u2 < l2.length; u2++) {
          var p2 = l2[u2];
          p2.setScope(), p2.debug("Inserted.");
          for (var d2, h2 = f(o2); !(d2 = h2()).done; ) {
            d2.value.maybeQueue(p2, true);
          }
        }
        return n2;
      }, _containerInsertBefore: function(e2) {
        return this._containerInsert(this.key, e2);
      }, _containerInsertAfter: function(e2) {
        return this._containerInsert(this.key + 1, e2);
      }, insertAfter: function(e2) {
        this._assertUnremoved();
        var t2 = this._verifyNodeList(e2), r2 = this.parentPath;
        if (r2.isExpressionStatement() || r2.isLabeledStatement() || r2.isExportNamedDeclaration() || r2.isExportDefaultDeclaration() && this.isDeclaration())
          return r2.insertAfter(t2.map(function(e3) {
            return vt(e3) ? ys(e3) : e3;
          }));
        if (this.isNodeType("Expression") && !this.isJSXElement() && !r2.isJSXElement() || r2.isForStatement() && this.key === "init") {
          if (this.node) {
            var n2 = this.node, s2 = this.scope;
            if (s2.path.isPattern())
              return Gu(n2), this.replaceWith(ls(ea([], n2), [])), this.get("callee.body").insertAfter(t2), [this];
            r2.isMethod({ computed: true, key: n2 }) && (s2 = s2.parent);
            var a2 = s2.generateDeclaredUidIdentifier();
            t2.unshift(ys(rs("=", Ju(a2), n2))), t2.push(ys(Ju(a2)));
          }
          return this.replaceExpressionWithStatements(t2);
        }
        if (Array.isArray(this.container))
          return this._containerInsertAfter(t2);
        if (this.isStatementOrBlock()) {
          var i2 = this.node, o2 = i2 && (!this.isExpressionStatement() || i2.expression != null);
          return this.replaceWith(os(o2 ? [i2] : [])), this.pushContainer("body", t2);
        }
        throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
      }, updateSiblingKeys: function(e2, t2) {
        if (this.parent)
          for (var r2, n2 = f(rp.get(this.parent)); !(r2 = n2()).done; ) {
            var s2 = l(r2.value, 2)[1];
            s2.key >= e2 && (s2.key += t2);
          }
      }, _verifyNodeList: function(e2) {
        if (!e2)
          return [];
        Array.isArray(e2) || (e2 = [e2]);
        for (var t2 = 0; t2 < e2.length; t2++) {
          var r2 = e2[t2], n2 = void 0;
          if (r2 ? typeof r2 != "object" ? n2 = "contains a non-object node" : r2.type ? r2 instanceof tv && (n2 = "has a NodePath when it expected a raw object") : n2 = "without a type" : n2 = "has falsy node", n2) {
            var s2 = Array.isArray(r2) ? "array" : typeof r2;
            throw new Error("Node list " + n2 + " with the index of " + t2 + " and type of " + s2);
          }
        }
        return e2;
      }, unshiftContainer: function(e2, t2) {
        return this._assertUnremoved(), t2 = this._verifyNodeList(t2), tv.get({ parentPath: this, parent: this.node, container: this.node[e2], listKey: e2, key: 0 }).setContext(this.context)._containerInsertBefore(t2);
      }, pushContainer: function(e2, t2) {
        this._assertUnremoved();
        var r2 = this._verifyNodeList(t2), n2 = this.node[e2];
        return tv.get({ parentPath: this, parent: this.node, container: n2, listKey: e2, key: n2.length }).setContext(this.context).replaceWithMultiple(r2);
      }, hoist: function(e2) {
        return e2 === void 0 && (e2 = this.scope), new Vg(this, e2).run();
      } });
      function Hg(e2, t2, r2) {
        return e2 ? t2.concat(Kg(e2, r2)) : t2;
      }
      function Xg(e2) {
        e2.forEach(function(e3) {
          e3.type = 1;
        });
      }
      function qg(e2, t2) {
        e2.forEach(function(e3) {
          e3.path.isBreakStatement({ label: null }) && (t2 ? e3.path.replaceWith(qs("void", Ss(0))) : e3.path.remove());
        });
      }
      function $g(e2, t2) {
        var r2 = [];
        if (t2.canHaveBreak)
          for (var n2 = [], s2 = 0; s2 < e2.length; s2++) {
            var a2 = e2[s2], i2 = Object.assign({}, t2, { inCaseClause: false });
            a2.isBlockStatement() && (t2.inCaseClause || t2.shouldPopulateBreak) ? i2.shouldPopulateBreak = true : i2.shouldPopulateBreak = false;
            var o2 = Kg(a2, i2);
            if (o2.length > 0 && o2.every(function(e3) {
              return e3.type === 1;
            })) {
              n2.length > 0 && o2.every(function(e3) {
                return e3.path.isBreakStatement({ label: null });
              }) ? (Xg(n2), r2 = r2.concat(n2), n2.some(function(e3) {
                return e3.path.isDeclaration();
              }) && (r2 = r2.concat(o2), qg(o2, true)), qg(o2, false)) : (r2 = r2.concat(o2), t2.shouldPopulateBreak || qg(o2, true));
              break;
            }
            s2 === e2.length - 1 ? r2 = r2.concat(o2) : (r2 = r2.concat(o2.filter(function(e3) {
              return e3.type === 1;
            })), n2 = o2.filter(function(e3) {
              return e3.type === 0;
            }));
          }
        else
          e2.length && (r2 = r2.concat(Kg(e2[e2.length - 1], t2)));
        return r2;
      }
      function Kg(e2, t2) {
        var r2 = [];
        if (e2.isIfStatement())
          r2 = Hg(e2.get("consequent"), r2, t2), r2 = Hg(e2.get("alternate"), r2, t2);
        else if (e2.isDoExpression() || e2.isFor() || e2.isWhile() || e2.isLabeledStatement())
          r2 = Hg(e2.get("body"), r2, t2);
        else if (e2.isProgram() || e2.isBlockStatement())
          r2 = r2.concat($g(e2.get("body"), t2));
        else {
          if (e2.isFunction())
            return Kg(e2.get("body"), t2);
          e2.isTryStatement() ? (r2 = Hg(e2.get("block"), r2, t2), r2 = Hg(e2.get("handler"), r2, t2)) : e2.isCatchClause() ? r2 = Hg(e2.get("body"), r2, t2) : e2.isSwitchStatement() ? r2 = function(e3, t3, r3) {
            for (var n2 = [], s2 = 0; s2 < e3.length; s2++) {
              for (var a2, i2 = [], o2 = [], u2 = f(Kg(e3[s2], r3)); !(a2 = u2()).done; ) {
                var l2 = a2.value;
                l2.type === 0 && i2.push(l2), l2.type === 1 && o2.push(l2);
              }
              i2.length && (n2 = i2), t3 = t3.concat(o2);
            }
            return t3.concat(n2);
          }(e2.get("cases"), r2, t2) : e2.isSwitchCase() ? r2 = r2.concat($g(e2.get("consequent"), { canHaveBreak: true, shouldPopulateBreak: false, inCaseClause: true })) : e2.isBreakStatement() ? r2.push(function(e3) {
            return { type: 1, path: e3 };
          }(e2)) : r2.push(function(e3) {
            return { type: 0, path: e3 };
          }(e2));
        }
        return r2;
      }
      var zg = Object.freeze({ __proto__: null, getOpposite: function() {
        return this.key === "left" ? this.getSibling("right") : this.key === "right" ? this.getSibling("left") : null;
      }, getCompletionRecords: function() {
        return Kg(this, { canHaveBreak: false, shouldPopulateBreak: false, inCaseClause: false }).map(function(e2) {
          return e2.path;
        });
      }, getSibling: function(e2) {
        return tv.get({ parentPath: this.parentPath, parent: this.parent, container: this.container, listKey: this.listKey, key: e2 }).setContext(this.context);
      }, getPrevSibling: function() {
        return this.getSibling(this.key - 1);
      }, getNextSibling: function() {
        return this.getSibling(this.key + 1);
      }, getAllNextSiblings: function() {
        for (var e2 = this.key, t2 = this.getSibling(++e2), r2 = []; t2.node; )
          r2.push(t2), t2 = this.getSibling(++e2);
        return r2;
      }, getAllPrevSiblings: function() {
        for (var e2 = this.key, t2 = this.getSibling(--e2), r2 = []; t2.node; )
          r2.push(t2), t2 = this.getSibling(--e2);
        return r2;
      }, get: function(e2, t2) {
        t2 === void 0 && (t2 = true), t2 === true && (t2 = this.context);
        var r2 = e2.split(".");
        return r2.length === 1 ? this._getKey(e2, t2) : this._getPattern(r2, t2);
      }, _getKey: function(e2, t2) {
        var r2 = this, n2 = this.node, s2 = n2[e2];
        return Array.isArray(s2) ? s2.map(function(a2, i2) {
          return tv.get({ listKey: e2, parentPath: r2, parent: n2, container: s2, key: i2 }).setContext(t2);
        }) : tv.get({ parentPath: this, parent: n2, container: n2, key: e2 }).setContext(t2);
      }, _getPattern: function(e2, t2) {
        for (var r2, n2 = this, s2 = f(e2); !(r2 = s2()).done; ) {
          var a2 = r2.value;
          n2 = a2 === "." ? n2.parentPath : Array.isArray(n2) ? n2[a2] : n2.get(a2, t2);
        }
        return n2;
      }, getBindingIdentifiers: function(e2) {
        return cc(this.node, e2);
      }, getOuterBindingIdentifiers: function(e2) {
        return gc(this.node, e2);
      }, getBindingIdentifierPaths: function(e2, t2) {
        e2 === void 0 && (e2 = false), t2 === void 0 && (t2 = false);
        for (var r2 = [].concat(this), n2 = Object.create(null); r2.length; ) {
          var s2 = r2.shift();
          if (s2 && s2.node) {
            var a2 = cc.keys[s2.node.type];
            if (s2.isIdentifier())
              e2 ? (n2[s2.node.name] = n2[s2.node.name] || []).push(s2) : n2[s2.node.name] = s2;
            else if (s2.isExportDeclaration()) {
              var i2 = s2.get("declaration");
              i2.isDeclaration() && r2.push(i2);
            } else {
              if (t2) {
                if (s2.isFunctionDeclaration()) {
                  r2.push(s2.get("id"));
                  continue;
                }
                if (s2.isFunctionExpression())
                  continue;
              }
              if (a2)
                for (var o2 = 0; o2 < a2.length; o2++) {
                  var u2 = a2[o2], l2 = s2.get(u2);
                  (Array.isArray(l2) || l2.node) && (r2 = r2.concat(l2));
                }
            }
          }
        }
        return n2;
      }, getOuterBindingIdentifierPaths: function(e2) {
        return this.getBindingIdentifierPaths(e2, true);
      } });
      var Jg = Object.freeze({ __proto__: null, shareCommentsWithSiblings: function() {
        if (typeof this.key != "string") {
          var e2 = this.node;
          if (e2) {
            var t2 = e2.trailingComments, r2 = e2.leadingComments;
            if (t2 || r2) {
              var n2 = this.getSibling(this.key - 1), s2 = this.getSibling(this.key + 1), a2 = Boolean(n2.node), i2 = Boolean(s2.node);
              a2 && !i2 ? n2.addComments("trailing", t2) : i2 && !a2 && s2.addComments("leading", r2);
            }
          }
        }
      }, addComment: function(e2, t2, r2) {
        el(this.node, e2, t2, r2);
      }, addComments: function(e2, t2) {
        Zu(this.node, e2, t2);
      } }), Yg = Jc("babel"), Qg = 1, Zg = 2, ev = 4, tv = function() {
        function e2(e3, t3) {
          this.contexts = [], this.state = null, this.opts = null, this._traverseFlags = 0, this.skipKeys = null, this.parentPath = null, this.container = null, this.listKey = null, this.key = null, this.node = null, this.type = null, this.parent = t3, this.hub = e3, this.data = null, this.context = null, this.scope = null;
        }
        e2.get = function(t3) {
          var r2 = t3.hub, n2 = t3.parentPath, s2 = t3.parent, a2 = t3.container, i2 = t3.listKey, o2 = t3.key;
          if (!r2 && n2 && (r2 = n2.hub), !s2)
            throw new Error("To get a node path the parent needs to exist");
          var u2 = a2[o2], l2 = rp.get(s2);
          l2 || (l2 = new Map(), rp.set(s2, l2));
          var c2 = l2.get(u2);
          return c2 || (c2 = new e2(r2, s2), u2 && l2.set(u2, c2)), c2.setup(n2, a2, i2, o2), c2;
        };
        var t2 = e2.prototype;
        return t2.getScope = function(e3) {
          return this.isScope() ? new cp(this) : e3;
        }, t2.setData = function(e3, t3) {
          return this.data == null && (this.data = Object.create(null)), this.data[e3] = t3;
        }, t2.getData = function(e3, t3) {
          this.data == null && (this.data = Object.create(null));
          var r2 = this.data[e3];
          return r2 === void 0 && t3 !== void 0 && (r2 = this.data[e3] = t3), r2;
        }, t2.buildCodeFrameError = function(e3, t3) {
          return t3 === void 0 && (t3 = SyntaxError), this.hub.buildError(this.node, e3, t3);
        }, t2.traverse = function(e3, t3) {
          vv(this.node, e3, this.scope, t3, this);
        }, t2.set = function(e3, t3) {
          zr(this.node, e3, t3), this.node[e3] = t3;
        }, t2.getPathLocation = function() {
          var e3 = [], t3 = this;
          do {
            var r2 = t3.key;
            t3.inList && (r2 = t3.listKey + "[" + r2 + "]"), e3.unshift(r2);
          } while (t3 = t3.parentPath);
          return e3.join(".");
        }, t2.debug = function(e3) {
          Yg.enabled && Yg(this.getPathLocation() + " " + this.type + ": " + e3);
        }, t2.toString = function() {
          return Bf(this.node).code;
        }, n(e2, [{ key: "inList", get: function() {
          return !!this.listKey;
        }, set: function(e3) {
          e3 || (this.listKey = null);
        } }, { key: "parentKey", get: function() {
          return this.listKey || this.key;
        } }, { key: "shouldSkip", get: function() {
          return !!(this._traverseFlags & ev);
        }, set: function(e3) {
          e3 ? this._traverseFlags |= ev : this._traverseFlags &= ~ev;
        } }, { key: "shouldStop", get: function() {
          return !!(this._traverseFlags & Zg);
        }, set: function(e3) {
          e3 ? this._traverseFlags |= Zg : this._traverseFlags &= ~Zg;
        } }, { key: "removed", get: function() {
          return !!(this._traverseFlags & Qg);
        }, set: function(e3) {
          e3 ? this._traverseFlags |= Qg : this._traverseFlags &= ~Qg;
        } }]), e2;
      }();
      Object.assign(tv.prototype, _f, vh, Vy, zy, Pg, Bg, Lg, Ug, Wg, zg, Jg);
      for (var rv, nv = function() {
        var e2 = rv.value, t2 = "is" + e2, r2 = Pc[t2];
        tv.prototype[t2] = function(e3) {
          return r2(this.node, e3);
        }, tv.prototype["assert" + e2] = function(t3) {
          if (!r2(this.node, t3))
            throw new TypeError("Expected node path of type " + e2);
        };
      }, sv = f(Zn); !(rv = sv()).done; )
        nv();
      for (var av = function() {
        var e2 = ov[iv];
        if (e2[0] === "_")
          return "continue";
        Zn.indexOf(e2) < 0 && Zn.push(e2);
        var t2 = Uc[e2];
        tv.prototype["is" + e2] = function(e3) {
          return t2.checkPath(this, e3);
        };
      }, iv = 0, ov = Object.keys(Uc); iv < ov.length; iv++)
        av();
      var uv = function() {
        function e2(e3, t3, r2, n2) {
          this.queue = null, this.priorityQueue = null, this.parentPath = n2, this.scope = e3, this.state = r2, this.opts = t3;
        }
        var t2 = e2.prototype;
        return t2.shouldVisit = function(e3) {
          var t3 = this.opts;
          if (t3.enter || t3.exit)
            return true;
          if (t3[e3.type])
            return true;
          var r2 = Qr[e3.type];
          if (r2 == null || !r2.length)
            return false;
          for (var n2, s2 = f(r2); !(n2 = s2()).done; ) {
            if (e3[n2.value])
              return true;
          }
          return false;
        }, t2.create = function(e3, t3, r2, n2) {
          return tv.get({ parentPath: this.parentPath, parent: e3, container: t3, key: r2, listKey: n2 });
        }, t2.maybeQueue = function(e3, t3) {
          this.queue && (t3 ? this.queue.push(e3) : this.priorityQueue.push(e3));
        }, t2.visitMultiple = function(e3, t3, r2) {
          if (e3.length === 0)
            return false;
          for (var n2 = [], s2 = 0; s2 < e3.length; s2++) {
            var a2 = e3[s2];
            a2 && this.shouldVisit(a2) && n2.push(this.create(t3, e3, s2, r2));
          }
          return this.visitQueue(n2);
        }, t2.visitSingle = function(e3, t3) {
          return !!this.shouldVisit(e3[t3]) && this.visitQueue([this.create(e3, e3, t3)]);
        }, t2.visitQueue = function(e3) {
          this.queue = e3, this.priorityQueue = [];
          for (var t3, r2 = new WeakSet(), n2 = false, s2 = f(e3); !(t3 = s2()).done; ) {
            var a2 = t3.value;
            if (a2.resync(), a2.contexts.length !== 0 && a2.contexts[a2.contexts.length - 1] === this || a2.pushContext(this), a2.key !== null) {
              var i2 = a2.node;
              if (!r2.has(i2)) {
                if (i2 && r2.add(i2), a2.visit()) {
                  n2 = true;
                  break;
                }
                if (this.priorityQueue.length && (n2 = this.visitQueue(this.priorityQueue), this.priorityQueue = [], this.queue = e3, n2))
                  break;
              }
            }
          }
          for (var o2, u2 = f(e3); !(o2 = u2()).done; ) {
            o2.value.popContext();
          }
          return this.queue = null, n2;
        }, t2.visit = function(e3, t3) {
          var r2 = e3[t3];
          return !!r2 && (Array.isArray(r2) ? this.visitMultiple(r2, e3, t3) : this.visitSingle(e3, t3));
        }, e2;
      }();
      function lv(e2) {
        if (e2._exploded)
          return e2;
        e2._exploded = true;
        for (var t2 = 0, r2 = Object.keys(e2); t2 < r2.length; t2++) {
          var n2 = r2[t2];
          if (!mv(n2)) {
            var s2 = n2.split("|");
            if (s2.length !== 1) {
              var a2 = e2[n2];
              delete e2[n2];
              for (var i2, o2 = f(s2); !(i2 = o2()).done; ) {
                e2[i2.value] = a2;
              }
            }
          }
        }
        cv(e2), delete e2.__esModule, function(e3) {
          for (var t3 = 0, r3 = Object.keys(e3); t3 < r3.length; t3++) {
            var n3 = r3[t3];
            if (!mv(n3)) {
              var s3 = e3[n3];
              typeof s3 == "function" && (e3[n3] = { enter: s3 });
            }
          }
        }(e2), fv(e2);
        for (var u2 = 0, l2 = Object.keys(e2); u2 < l2.length; u2++) {
          var c2 = l2[u2];
          if (!mv(c2)) {
            var p2 = Uc[c2];
            if (p2) {
              for (var d2 = e2[c2], h2 = 0, m2 = Object.keys(d2); h2 < m2.length; h2++) {
                var y2 = m2[h2];
                d2[y2] = hv(p2, d2[y2]);
              }
              if (delete e2[c2], p2.types)
                for (var g2, v2 = f(p2.types); !(g2 = v2()).done; ) {
                  var b2 = g2.value;
                  e2[b2] ? yv(e2[b2], d2) : e2[b2] = d2;
                }
              else
                yv(e2, d2);
            }
          }
        }
        for (var E2 = 0, x2 = Object.keys(e2); E2 < x2.length; E2++) {
          var D2 = x2[E2];
          if (!mv(D2)) {
            var A2 = e2[D2], w2 = en[D2], C2 = nn[D2];
            if (C2 && (console.trace("Visitor defined for " + D2 + " but it has been renamed to " + C2), w2 = [C2]), w2) {
              delete e2[D2];
              for (var S2, T2 = f(w2); !(S2 = T2()).done; ) {
                var j2 = S2.value, P2 = e2[j2];
                P2 ? yv(P2, A2) : e2[j2] = Object.assign({}, A2);
              }
            }
          }
        }
        for (var I2 = 0, F2 = Object.keys(e2); I2 < F2.length; I2++) {
          var k2 = F2[I2];
          mv(k2) || fv(e2[k2]);
        }
        return e2;
      }
      function cv(e2) {
        if (!e2._verified) {
          if (typeof e2 == "function")
            throw new Error("You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?");
          for (var t2 = 0, r2 = Object.keys(e2); t2 < r2.length; t2++) {
            var n2 = r2[t2];
            if (n2 !== "enter" && n2 !== "exit" || pv(n2, e2[n2]), !mv(n2)) {
              if (Zn.indexOf(n2) < 0)
                throw new Error("You gave us a visitor for the node type " + n2 + " but it's not a valid type");
              var s2 = e2[n2];
              if (typeof s2 == "object")
                for (var a2 = 0, i2 = Object.keys(s2); a2 < i2.length; a2++) {
                  var o2 = i2[a2];
                  if (o2 !== "enter" && o2 !== "exit")
                    throw new Error("You passed `traverse()` a visitor object with the property " + n2 + " that has the invalid property " + o2);
                  pv(n2 + "." + o2, s2[o2]);
                }
            }
          }
          e2._verified = true;
        }
      }
      function pv(e2, t2) {
        for (var r2, n2 = f([].concat(t2)); !(r2 = n2()).done; ) {
          var s2 = r2.value;
          if (typeof s2 != "function")
            throw new TypeError("Non-function found defined in " + e2 + " with type " + typeof s2);
        }
      }
      function dv(e2, t2, r2) {
        for (var n2 = {}, s2 = function() {
          var s3 = i2[a2], o2 = e2[s3];
          if (!Array.isArray(o2))
            return "continue";
          o2 = o2.map(function(e3) {
            var n3 = e3;
            return t2 && (n3 = function(r3) {
              return e3.call(t2, r3, t2);
            }), r2 && (n3 = r2(t2.key, s3, n3)), n3 !== e3 && (n3.toString = function() {
              return e3.toString();
            }), n3;
          }), n2[s3] = o2;
        }, a2 = 0, i2 = Object.keys(e2); a2 < i2.length; a2++)
          s2();
        return n2;
      }
      function fv(e2) {
        e2.enter && !Array.isArray(e2.enter) && (e2.enter = [e2.enter]), e2.exit && !Array.isArray(e2.exit) && (e2.exit = [e2.exit]);
      }
      function hv(e2, t2) {
        var r2 = function(r3) {
          if (e2.checkPath(r3))
            return t2.apply(this, arguments);
        };
        return r2.toString = function() {
          return t2.toString();
        }, r2;
      }
      function mv(e2) {
        return e2[0] === "_" || (e2 === "enter" || e2 === "exit" || e2 === "shouldSkip" || (e2 === "denylist" || e2 === "noScope" || e2 === "skipKeys" || e2 === "blacklist"));
      }
      function yv(e2, t2) {
        for (var r2 = 0, n2 = Object.keys(t2); r2 < n2.length; r2++) {
          var s2 = n2[r2];
          e2[s2] = [].concat(e2[s2] || [], t2[s2]);
        }
      }
      var gv = Object.freeze({ __proto__: null, explode: lv, verify: cv, merge: function(e2, t2, r2) {
        t2 === void 0 && (t2 = []);
        for (var n2 = {}, s2 = 0; s2 < e2.length; s2++) {
          var a2 = e2[s2], i2 = t2[s2];
          lv(a2);
          for (var o2 = 0, u2 = Object.keys(a2); o2 < u2.length; o2++) {
            var l2 = u2[o2], c2 = a2[l2];
            (i2 || r2) && (c2 = dv(c2, i2, r2)), yv(n2[l2] = n2[l2] || {}, c2);
          }
        }
        return n2;
      } });
      function vv(e2, t2, r2, n2, s2) {
        if (t2 === void 0 && (t2 = {}), e2) {
          if (!t2.noScope && !r2 && e2.type !== "Program" && e2.type !== "File")
            throw new Error("You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a " + e2.type + " node without passing scope and parentPath.");
          Qr[e2.type] && (lv(t2), vv.node(e2, t2, r2, n2, s2));
        }
      }
      function bv(e2, t2) {
        e2.node.type === t2.type && (t2.has = true, e2.stop());
      }
      vv.visitors = gv, vv.verify = cv, vv.explode = lv, vv.cheap = function(e2, t2) {
        return sc(e2, t2);
      }, vv.node = function(e2, t2, r2, n2, s2, a2) {
        var i2 = Qr[e2.type];
        if (i2)
          for (var o2, u2 = new uv(r2, t2, n2, s2), l2 = f(i2); !(o2 = l2()).done; ) {
            var c2 = o2.value;
            if ((!a2 || !a2[c2]) && u2.visit(e2, c2))
              return;
          }
      }, vv.clearNode = function(e2, t2) {
        oc(e2, t2), rp.delete(e2);
      }, vv.removeProperties = function(e2, t2) {
        return sc(e2, vv.clearNode, t2), e2;
      }, vv.hasType = function(e2, t2, r2) {
        if (r2 != null && r2.includes(e2.type))
          return false;
        if (e2.type === t2)
          return true;
        var n2 = { has: false, type: t2 };
        return vv(e2, { noScope: true, denylist: r2, enter: bv }, null, n2), n2.has;
      }, vv.cache = ip;
      var Ev, xv, Dv, Av, wv, Cv, Sv, Tv, jv, Pv, Iv, Fv, kv, Ov, Rv, Nv, Bv, _v, Lv, Mv, Uv, Gv, Vv, Wv, Hv, Xv, qv, $v, Kv, zv, Jv, Yv, Qv, Zv, eb, tb, rb, nb, sb, ab, ib, ob, ub, lb, cb, pb, db, fb, hb, mb, yb, gb, vb, bb, Eb, xb, Db, Ab, wb, Cb, Sb, Tb, jb, Pb, Ib, Fb, kb, Ob, Rb, Nb, Bb, _b, Lb, Mb, Ub, Gb, Vb, Wb, Hb, Xb, qb, $b, Kb, zb, Jb = { minVersion: "7.0.0-beta.0", ast: function() {
        return Eg.program.ast('\nvar REACT_ELEMENT_TYPE;\nexport default function _createRawReactElement(type, props, key, children) {\n  if (!REACT_ELEMENT_TYPE) {\n    REACT_ELEMENT_TYPE =\n      (typeof Symbol === "function" &&\n        \n        Symbol["for"] &&\n        Symbol["for"]("react.element")) ||\n      0xeac7;\n  }\n  var defaultProps = type && type.defaultProps;\n  var childrenLength = arguments.length - 3;\n  if (!props && childrenLength !== 0) {\n    \n    \n    props = { children: void 0 };\n  }\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = new Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 3];\n    }\n    props.children = childArray;\n  }\n  if (props && defaultProps) {\n    for (var propName in defaultProps) {\n      if (props[propName] === void 0) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  } else if (!props) {\n    props = defaultProps || {};\n  }\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key === undefined ? null : "" + key,\n    ref: null,\n    props: props,\n    _owner: null,\n  };\n}\n');
      } }, Yb = { minVersion: "7.5.0", ast: function() {
        return Eg.program.ast('\nimport defineProperty from "defineProperty";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(\n          target,\n          key,\n          Object.getOwnPropertyDescriptor(source, key)\n        );\n      });\n    }\n  }\n  return target;\n}\n');
      } }, Qb = { minVersion: "7.0.0-beta.0", ast: function() {
        return Eg.program.ast('\nexport default function _typeof(obj) {\n  "@babel/helpers - typeof";\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj &&\n        typeof Symbol === "function" &&\n        obj.constructor === Symbol &&\n        obj !== Symbol.prototype\n        ? "symbol"\n        : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\n');
      } }, Zb = { minVersion: "7.2.6", ast: function() {
        return Eg.program.ast('\nimport setPrototypeOf from "setPrototypeOf";\nimport inherits from "inherits";\nexport default function _wrapRegExp() {\n  _wrapRegExp = function (re, groups) {\n    return new BabelRegExp(re, undefined, groups);\n  };\n  var _super = RegExp.prototype;\n  var _groups = new WeakMap();\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n    \n    _groups.set(_this, groups || _groups.get(re));\n    return setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n  inherits(BabelRegExp, RegExp);\n  BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n    if (result) result.groups = buildGroups(result, this);\n    return result;\n  };\n  BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (typeof substitution === "string") {\n      var groups = _groups.get(this);\n      return _super[Symbol.replace].call(\n        this,\n        str,\n        substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n          return "$" + groups[name];\n        })\n      );\n    } else if (typeof substitution === "function") {\n      var _this = this;\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        \n        if (typeof args[args.length - 1] !== "object") {\n          args = [].slice.call(args);\n          args.push(buildGroups(args, _this));\n        }\n        return substitution.apply(this, args);\n      });\n    } else {\n      return _super[Symbol.replace].call(this, str, substitution);\n    }\n  };\n  function buildGroups(result, re) {\n    \n    \n    var g = _groups.get(re);\n    return Object.keys(g).reduce(function (groups, name) {\n      groups[name] = result[g[name]];\n      return groups;\n    }, Object.create(null));\n  }\n  return _wrapRegExp.apply(this, arguments);\n}\n');
      } }, eE = Object.freeze({ __proto__: null, jsx: Jb, objectSpread2: Yb, typeof: Qb, wrapRegExp: Zb }), tE = Object.assign({ __proto__: null }, eE), rE = function(e2) {
        return function(t2) {
          return { minVersion: e2, ast: function() {
            return Eg.program.ast(t2);
          } };
        };
      };
      function nE(e2) {
        for (var t2 = []; e2.parentPath; e2 = e2.parentPath)
          t2.push(e2.key), e2.inList && t2.push(e2.listKey);
        return t2.reverse().join(".");
      }
      tE.asyncIterator = rE("7.0.0-beta.0")(Ev || (Ev = u(['\n  export default function _asyncIterator(iterable) {\n    var method;\n    if (typeof Symbol !== "undefined") {\n      if (Symbol.asyncIterator) method = iterable[Symbol.asyncIterator];\n      if (method == null && Symbol.iterator) method = iterable[Symbol.iterator];\n    }\n    if (method == null) method = iterable["@@asyncIterator"];\n    if (method == null) method = iterable["@@iterator"]\n    if (method == null) throw new TypeError("Object is not async iterable");\n    return method.call(iterable);\n  }\n']))), tE.AwaitValue = rE("7.0.0-beta.0")(xv || (xv = u(["\n  export default function _AwaitValue(value) {\n    this.wrapped = value;\n  }\n"]))), tE.AsyncGenerator = rE("7.0.0-beta.0")(Dv || (Dv = u(['\n  import AwaitValue from "AwaitValue";\n\n  export default function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null,\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg)\n        var value = result.value;\n        var wrappedAwait = value instanceof AwaitValue;\n\n        Promise.resolve(wrappedAwait ? value.wrapped : value).then(\n          function (arg) {\n            if (wrappedAwait) {\n              resume(key === "return" ? "return" : "next", arg);\n              return\n            }\n\n            settle(result.done ? "return" : "normal", arg);\n          },\n          function (err) { resume("throw", err); });\n      } catch (err) {\n        settle("throw", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case "return":\n          front.resolve({ value: value, done: true });\n          break;\n        case "throw":\n          front.reject(value);\n          break;\n        default:\n          front.resolve({ value: value, done: false });\n          break;\n      }\n\n      front = front.next;\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    // Hide "return" method if generator return is not supported\n    if (typeof gen.return !== "function") {\n      this.return = undefined;\n    }\n  }\n\n  AsyncGenerator.prototype[typeof Symbol === "function" && Symbol.asyncIterator || "@@asyncIterator"] = function () { return this; };\n\n  AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };\n  AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };\n  AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };\n']))), tE.wrapAsyncGenerator = rE("7.0.0-beta.0")(Av || (Av = u(['\n  import AsyncGenerator from "AsyncGenerator";\n\n  export default function _wrapAsyncGenerator(fn) {\n    return function () {\n      return new AsyncGenerator(fn.apply(this, arguments));\n    };\n  }\n']))), tE.awaitAsyncGenerator = rE("7.0.0-beta.0")(wv || (wv = u(['\n  import AwaitValue from "AwaitValue";\n\n  export default function _awaitAsyncGenerator(value) {\n    return new AwaitValue(value);\n  }\n']))), tE.asyncGeneratorDelegate = rE("7.0.0-beta.0")(Cv || (Cv = u(['\n  export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n    var iter = {}, waiting = false;\n\n    function pump(key, value) {\n      waiting = true;\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\n      return { done: false, value: awaitWrap(value) };\n    };\n\n    iter[typeof Symbol !== "undefined" && Symbol.iterator || "@@iterator"] = function () { return this; };\n\n    iter.next = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n      return pump("next", value);\n    };\n\n    if (typeof inner.throw === "function") {\n      iter.throw = function (value) {\n        if (waiting) {\n          waiting = false;\n          throw value;\n        }\n        return pump("throw", value);\n      };\n    }\n\n    if (typeof inner.return === "function") {\n      iter.return = function (value) {\n        if (waiting) {\n          waiting = false;\n          return value;\n        }\n        return pump("return", value);\n      };\n    }\n\n    return iter;\n  }\n']))), tE.asyncToGenerator = rE("7.0.0-beta.0")(Sv || (Sv = u(['\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n      var info = gen[key](arg);\n      var value = info.value;\n    } catch (error) {\n      reject(error);\n      return;\n    }\n\n    if (info.done) {\n      resolve(value);\n    } else {\n      Promise.resolve(value).then(_next, _throw);\n    }\n  }\n\n  export default function _asyncToGenerator(fn) {\n    return function () {\n      var self = this, args = arguments;\n      return new Promise(function (resolve, reject) {\n        var gen = fn.apply(self, args);\n        function _next(value) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n        }\n        function _throw(err) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n        }\n\n        _next(undefined);\n      });\n    };\n  }\n']))), tE.classCallCheck = rE("7.0.0-beta.0")(Tv || (Tv = u(['\n  export default function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError("Cannot call a class as a function");\n    }\n  }\n']))), tE.createClass = rE("7.0.0-beta.0")(jv || (jv = u(['\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i ++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ("value" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  export default function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n']))), tE.defineEnumerableProperties = rE("7.0.0-beta.0")(Pv || (Pv = u([`
  export default function _defineEnumerableProperties(obj, descs) {
    for (var key in descs) {
      var desc = descs[key];
      desc.configurable = desc.enumerable = true;
      if ("value" in desc) desc.writable = true;
      Object.defineProperty(obj, key, desc);
    }

    // Symbols are not enumerated over by for-in loops. If native
    // Symbols are available, fetch all of the descs object's own
    // symbol properties and define them on our target object too.
    if (Object.getOwnPropertySymbols) {
      var objectSymbols = Object.getOwnPropertySymbols(descs);
      for (var i = 0; i < objectSymbols.length; i++) {
        var sym = objectSymbols[i];
        var desc = descs[sym];
        desc.configurable = desc.enumerable = true;
        if ("value" in desc) desc.writable = true;
        Object.defineProperty(obj, sym, desc);
      }
    }
    return obj;
  }
`]))), tE.defaults = rE("7.0.0-beta.0")(Iv || (Iv = u(["\n  export default function _defaults(obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n    return obj;\n  }\n"]))), tE.defineProperty = rE("7.0.0-beta.0")(Fv || (Fv = u(["\n  export default function _defineProperty(obj, key, value) {\n    // Shortcircuit the slow defineProperty path when possible.\n    // We are trying to avoid issues where setters defined on the\n    // prototype cause side effects under the fast path of simple\n    // assignment. By checking for existence of the property with\n    // the in operator, we can optimize most of this overhead away.\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n"]))), tE.extends = rE("7.0.0-beta.0")(kv || (kv = u(["\n  export default function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n"]))), tE.objectSpread = rE("7.0.0-beta.0")(Ov || (Ov = u([`
  import defineProperty from "defineProperty";

  export default function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = (arguments[i] != null) ? Object(arguments[i]) : {};
      var ownKeys = Object.keys(source);
      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }
      ownKeys.forEach(function(key) {
        defineProperty(target, key, source[key]);
      });
    }
    return target;
  }
`]))), tE.inherits = rE("7.0.0-beta.0")(Rv || (Rv = u(['\n  import setPrototypeOf from "setPrototypeOf";\n\n  export default function _inherits(subClass, superClass) {\n    if (typeof superClass !== "function" && superClass !== null) {\n      throw new TypeError("Super expression must either be null or a function");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) setPrototypeOf(subClass, superClass);\n  }\n']))), tE.inheritsLoose = rE("7.0.0-beta.0")(Nv || (Nv = u(['\n  import setPrototypeOf from "setPrototypeOf";\n\n  export default function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    setPrototypeOf(subClass, superClass);\n  }\n']))), tE.getPrototypeOf = rE("7.0.0-beta.0")(Bv || (Bv = u(["\n  export default function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf\n      ? Object.getPrototypeOf\n      : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n    return _getPrototypeOf(o);\n  }\n"]))), tE.setPrototypeOf = rE("7.0.0-beta.0")(_v || (_v = u(["\n  export default function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n    return _setPrototypeOf(o, p);\n  }\n"]))), tE.isNativeReflectConstruct = rE("7.9.0")(Lv || (Lv = u([`
  export default function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;

    // core-js@3
    if (Reflect.construct.sham) return false;

    // Proxy can't be polyfilled. Every browser implemented
    // proxies before or at the same time as Reflect.construct,
    // so if they support Proxy they also support Reflect.construct.
    if (typeof Proxy === "function") return true;

    // Since Reflect.construct can't be properly polyfilled, some
    // implementations (e.g. core-js@2) don't set the correct internal slots.
    // Those polyfills don't allow us to subclass built-ins, so we need to
    // use our fallback implementation.
    try {
      // If the internal slots aren't set, this throws an error similar to
      //   TypeError: this is not a Boolean object.

      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
      return true;
    } catch (e) {
      return false;
    }
  }
`]))), tE.construct = rE("7.0.0-beta.0")(Mv || (Mv = u([`
  import setPrototypeOf from "setPrototypeOf";
  import isNativeReflectConstruct from "isNativeReflectConstruct";

  export default function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      _construct = Reflect.construct;
    } else {
      // NOTE: If Parent !== Class, the correct __proto__ is set *after*
      //       calling the constructor.
      _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }
    // Avoid issues with Class being present but undefined when it wasn't
    // present in the original call.
    return _construct.apply(null, arguments);
  }
`]))), tE.isNativeFunction = rE("7.0.0-beta.0")(Uv || (Uv = u(['\n  export default function _isNativeFunction(fn) {\n    // Note: This function returns "true" for core-js functions.\n    return Function.toString.call(fn).indexOf("[native code]") !== -1;\n  }\n']))), tE.wrapNativeSuper = rE("7.0.0-beta.0")(Gv || (Gv = u(['\n  import getPrototypeOf from "getPrototypeOf";\n  import setPrototypeOf from "setPrototypeOf";\n  import isNativeFunction from "isNativeFunction";\n  import construct from "construct";\n\n  export default function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === "function" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !isNativeFunction(Class)) return Class;\n      if (typeof Class !== "function") {\n        throw new TypeError("Super expression must either be null or a function");\n      }\n      if (typeof _cache !== "undefined") {\n        if (_cache.has(Class)) return _cache.get(Class);\n        _cache.set(Class, Wrapper);\n      }\n      function Wrapper() {\n        return construct(Class, arguments, getPrototypeOf(this).constructor)\n      }\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true,\n        }\n      });\n\n      return setPrototypeOf(Wrapper, Class);\n    }\n\n    return _wrapNativeSuper(Class)\n  }\n']))), tE.instanceof = rE("7.0.0-beta.0")(Vv || (Vv = u(['\n  export default function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n      return !!right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n']))), tE.interopRequireDefault = rE("7.0.0-beta.0")(Wv || (Wv = u(["\n  export default function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  }\n"]))), tE.interopRequireWildcard = rE("7.14.0")(Hv || (Hv = u(['\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== "function") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function (nodeInterop) {\n      return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n\n  export default function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || (typeof obj !== "object" && typeof obj !== "function")) {\n      return { default: obj }\n    }\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor\n          ? Object.getOwnPropertyDescriptor(obj, key)\n          : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n']))), tE.newArrowCheck = rE("7.0.0-beta.0")(Xv || (Xv = u(['\n  export default function _newArrowCheck(innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError("Cannot instantiate an arrow function");\n    }\n  }\n']))), tE.objectDestructuringEmpty = rE("7.0.0-beta.0")(qv || (qv = u(['\n  export default function _objectDestructuringEmpty(obj) {\n    if (obj == null) throw new TypeError("Cannot destructure undefined");\n  }\n']))), tE.objectWithoutPropertiesLoose = rE("7.0.0-beta.0")($v || ($v = u(["\n  export default function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n"]))), tE.objectWithoutProperties = rE("7.0.0-beta.0")(Kv || (Kv = u(['\n  import objectWithoutPropertiesLoose from "objectWithoutPropertiesLoose";\n\n  export default function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n']))), tE.assertThisInitialized = rE("7.0.0-beta.0")(zv || (zv = u([`
  export default function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
`]))), tE.possibleConstructorReturn = rE("7.0.0-beta.0")(Jv || (Jv = u(['\n  import assertThisInitialized from "assertThisInitialized";\n\n  export default function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === "object" || typeof call === "function")) {\n      return call;\n    }\n    return assertThisInitialized(self);\n  }\n']))), tE.createSuper = rE("7.9.0")(Yv || (Yv = u([`
  import getPrototypeOf from "getPrototypeOf";
  import isNativeReflectConstruct from "isNativeReflectConstruct";
  import possibleConstructorReturn from "possibleConstructorReturn";

  export default function _createSuper(Derived) {
    var hasNativeReflectConstruct = isNativeReflectConstruct();

    return function _createSuperInternal() {
      var Super = getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        // NOTE: This doesn't work if this.__proto__.constructor has been modified.
        var NewTarget = getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return possibleConstructorReturn(this, result);
    }
  }
 `]))), tE.superPropBase = rE("7.0.0-beta.0")(Qv || (Qv = u([`
  import getPrototypeOf from "getPrototypeOf";

  export default function _superPropBase(object, property) {
    // Yes, this throws if object is null to being with, that's on purpose.
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }
    return object;
  }
`]))), tE.get = rE("7.0.0-beta.0")(Zv || (Zv = u(['\n  import superPropBase from "superPropBase";\n\n  export default function _get(target, property, receiver) {\n    if (typeof Reflect !== "undefined" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = superPropBase(target, property);\n\n        if (!base) return;\n\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n    return _get(target, property, receiver || target);\n  }\n']))), tE.set = rE("7.0.0-beta.0")(eb || (eb = u([`
  import superPropBase from "superPropBase";
  import defineProperty from "defineProperty";

  function set(target, property, value, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.set) {
      set = Reflect.set;
    } else {
      set = function set(target, property, value, receiver) {
        var base = superPropBase(target, property);
        var desc;

        if (base) {
          desc = Object.getOwnPropertyDescriptor(base, property);
          if (desc.set) {
            desc.set.call(receiver, value);
            return true;
          } else if (!desc.writable) {
            // Both getter and non-writable fall into this.
            return false;
          }
        }

        // Without a super that defines the property, spec boils down to
        // "define on receiver" for some reason.
        desc = Object.getOwnPropertyDescriptor(receiver, property);
        if (desc) {
          if (!desc.writable) {
            // Setter, getter, and non-writable fall into this.
            return false;
          }

          desc.value = value;
          Object.defineProperty(receiver, property, desc);
        } else {
          // Avoid setters that may be defined on Sub's prototype, but not on
          // the instance.
          defineProperty(receiver, property, value);
        }

        return true;
      };
    }

    return set(target, property, value, receiver);
  }

  export default function _set(target, property, value, receiver, isStrict) {
    var s = set(target, property, value, receiver || target);
    if (!s && isStrict) {
      throw new Error('failed to set property');
    }

    return value;
  }
`]))), tE.taggedTemplateLiteral = rE("7.0.0-beta.0")(tb || (tb = u(["\n  export default function _taggedTemplateLiteral(strings, raw) {\n    if (!raw) { raw = strings.slice(0); }\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: { value: Object.freeze(raw) }\n    }));\n  }\n"]))), tE.taggedTemplateLiteralLoose = rE("7.0.0-beta.0")(rb || (rb = u(["\n  export default function _taggedTemplateLiteralLoose(strings, raw) {\n    if (!raw) { raw = strings.slice(0); }\n    strings.raw = raw;\n    return strings;\n  }\n"]))), tE.readOnlyError = rE("7.0.0-beta.0")(nb || (nb = u(['\n  export default function _readOnlyError(name) {\n    throw new TypeError("\\"" + name + "\\" is read-only");\n  }\n'], ['\n  export default function _readOnlyError(name) {\n    throw new TypeError("\\\\"" + name + "\\\\" is read-only");\n  }\n']))), tE.writeOnlyError = rE("7.12.13")(sb || (sb = u(['\n  export default function _writeOnlyError(name) {\n    throw new TypeError("\\"" + name + "\\" is write-only");\n  }\n'], ['\n  export default function _writeOnlyError(name) {\n    throw new TypeError("\\\\"" + name + "\\\\" is write-only");\n  }\n']))), tE.classNameTDZError = rE("7.0.0-beta.0")(ab || (ab = u(['\n  export default function _classNameTDZError(name) {\n    throw new Error("Class \\"" + name + "\\" cannot be referenced in computed property keys.");\n  }\n'], ['\n  export default function _classNameTDZError(name) {\n    throw new Error("Class \\\\"" + name + "\\\\" cannot be referenced in computed property keys.");\n  }\n']))), tE.temporalUndefined = rE("7.0.0-beta.0")(ib || (ib = u(["\n  // This function isn't mean to be called, but to be used as a reference.\n  // We can't use a normal object because it isn't hoisted.\n  export default function _temporalUndefined() {}\n"]))), tE.tdz = rE("7.5.5")(ob || (ob = u(['\n  export default function _tdzError(name) {\n    throw new ReferenceError(name + " is not defined - temporal dead zone");\n  }\n']))), tE.temporalRef = rE("7.0.0-beta.0")(ub || (ub = u(['\n  import undef from "temporalUndefined";\n  import err from "tdz";\n\n  export default function _temporalRef(val, name) {\n    return val === undef ? err(name) : val;\n  }\n']))), tE.slicedToArray = rE("7.0.0-beta.0")(lb || (lb = u(['\n  import arrayWithHoles from "arrayWithHoles";\n  import iterableToArrayLimit from "iterableToArrayLimit";\n  import unsupportedIterableToArray from "unsupportedIterableToArray";\n  import nonIterableRest from "nonIterableRest";\n\n  export default function _slicedToArray(arr, i) {\n    return (\n      arrayWithHoles(arr) ||\n      iterableToArrayLimit(arr, i) ||\n      unsupportedIterableToArray(arr, i) ||\n      nonIterableRest()\n    );\n  }\n']))), tE.slicedToArrayLoose = rE("7.0.0-beta.0")(cb || (cb = u(['\n  import arrayWithHoles from "arrayWithHoles";\n  import iterableToArrayLimitLoose from "iterableToArrayLimitLoose";\n  import unsupportedIterableToArray from "unsupportedIterableToArray";\n  import nonIterableRest from "nonIterableRest";\n\n  export default function _slicedToArrayLoose(arr, i) {\n    return (\n      arrayWithHoles(arr) ||\n      iterableToArrayLimitLoose(arr, i) ||\n      unsupportedIterableToArray(arr, i) ||\n      nonIterableRest()\n    );\n  }\n']))), tE.toArray = rE("7.0.0-beta.0")(pb || (pb = u(['\n  import arrayWithHoles from "arrayWithHoles";\n  import iterableToArray from "iterableToArray";\n  import unsupportedIterableToArray from "unsupportedIterableToArray";\n  import nonIterableRest from "nonIterableRest";\n\n  export default function _toArray(arr) {\n    return (\n      arrayWithHoles(arr) ||\n      iterableToArray(arr) ||\n      unsupportedIterableToArray(arr) ||\n      nonIterableRest()\n    );\n  }\n']))), tE.toConsumableArray = rE("7.0.0-beta.0")(db || (db = u(['\n  import arrayWithoutHoles from "arrayWithoutHoles";\n  import iterableToArray from "iterableToArray";\n  import unsupportedIterableToArray from "unsupportedIterableToArray";\n  import nonIterableSpread from "nonIterableSpread";\n\n  export default function _toConsumableArray(arr) {\n    return (\n      arrayWithoutHoles(arr) ||\n      iterableToArray(arr) ||\n      unsupportedIterableToArray(arr) ||\n      nonIterableSpread()\n    );\n  }\n']))), tE.arrayWithoutHoles = rE("7.0.0-beta.0")(fb || (fb = u(['\n  import arrayLikeToArray from "arrayLikeToArray";\n\n  export default function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return arrayLikeToArray(arr);\n  }\n']))), tE.arrayWithHoles = rE("7.0.0-beta.0")(hb || (hb = u(["\n  export default function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n"]))), tE.maybeArrayLike = rE("7.9.0")(mb || (mb = u(['\n  import arrayLikeToArray from "arrayLikeToArray";\n\n  export default function _maybeArrayLike(next, arr, i) {\n    if (arr && !Array.isArray(arr) && typeof arr.length === "number") {\n      var len = arr.length;\n      return arrayLikeToArray(arr, i !== void 0 && i < len ? i : len);\n    }\n    return next(arr, i);\n  }\n']))), tE.iterableToArray = rE("7.0.0-beta.0")(yb || (yb = u(['\n  export default function _iterableToArray(iter) {\n    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n  }\n']))), tE.iterableToArrayLimit = rE("7.0.0-beta.0")(gb || (gb = u(['\n  export default function _iterableToArrayLimit(arr, i) {\n    // this is an expanded form of `for...of` that properly supports abrupt completions of\n    // iterators etc. variable names have been minimised to reduce the size of this massive\n    // helper. sometimes spec compliance is annoying :(\n    //\n    // _n = _iteratorNormalCompletion\n    // _d = _didIteratorError\n    // _e = _iteratorError\n    // _i = _iterator\n    // _s = _step\n\n    var _i = arr == null ? null : (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i["return"] != null) _i["return"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n'], ['\n  export default function _iterableToArrayLimit(arr, i) {\n    // this is an expanded form of \\`for...of\\` that properly supports abrupt completions of\n    // iterators etc. variable names have been minimised to reduce the size of this massive\n    // helper. sometimes spec compliance is annoying :(\n    //\n    // _n = _iteratorNormalCompletion\n    // _d = _didIteratorError\n    // _e = _iteratorError\n    // _i = _iterator\n    // _s = _step\n\n    var _i = arr == null ? null : (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i["return"] != null) _i["return"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n']))), tE.iterableToArrayLimitLoose = rE("7.0.0-beta.0")(vb || (vb = u(['\n  export default function _iterableToArrayLimitLoose(arr, i) {\n    var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);\n    if (_i == null) return;\n\n    var _arr = [];\n    for (_i = _i.call(arr), _step; !(_step = _i.next()).done;) {\n      _arr.push(_step.value);\n      if (i && _arr.length === i) break;\n    }\n    return _arr;\n  }\n']))), tE.unsupportedIterableToArray = rE("7.9.0")(bb || (bb = u(['\n  import arrayLikeToArray from "arrayLikeToArray";\n\n  export default function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === "string") return arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === "Object" && o.constructor) n = o.constructor.name;\n    if (n === "Map" || n === "Set") return Array.from(o);\n    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n      return arrayLikeToArray(o, minLen);\n  }\n']))), tE.arrayLikeToArray = rE("7.9.0")(Eb || (Eb = u(["\n  export default function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n"]))), tE.nonIterableSpread = rE("7.0.0-beta.0")(xb || (xb = u(['\n  export default function _nonIterableSpread() {\n    throw new TypeError(\n      "Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."\n    );\n  }\n'], ['\n  export default function _nonIterableSpread() {\n    throw new TypeError(\n      "Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."\n    );\n  }\n']))), tE.nonIterableRest = rE("7.0.0-beta.0")(Db || (Db = u(['\n  export default function _nonIterableRest() {\n    throw new TypeError(\n      "Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."\n    );\n  }\n'], ['\n  export default function _nonIterableRest() {\n    throw new TypeError(\n      "Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."\n    );\n  }\n']))), tE.createForOfIteratorHelper = rE("7.9.0")(Ab || (Ab = u(['\n  import unsupportedIterableToArray from "unsupportedIterableToArray";\n\n  // s: start (create the iterator)\n  // n: next\n  // e: error (called whenever something throws)\n  // f: finish (always called at the end)\n\n  export default function _createForOfIteratorHelper(o, allowArrayLike) {\n    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];\n\n    if (!it) {\n      // Fallback for engines without symbol support\n      if (\n        Array.isArray(o) ||\n        (it = unsupportedIterableToArray(o)) ||\n        (allowArrayLike && o && typeof o.length === "number")\n      ) {\n        if (it) o = it;\n        var i = 0;\n        var F = function(){};\n        return {\n          s: F,\n          n: function() {\n            if (i >= o.length) return { done: true };\n            return { done: false, value: o[i++] };\n          },\n          e: function(e) { throw e; },\n          f: F,\n        };\n      }\n\n      throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n    }\n\n    var normalCompletion = true, didErr = false, err;\n\n    return {\n      s: function() {\n        it = it.call(o);\n      },\n      n: function() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function(e) {\n        didErr = true;\n        err = e;\n      },\n      f: function() {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n'], ['\n  import unsupportedIterableToArray from "unsupportedIterableToArray";\n\n  // s: start (create the iterator)\n  // n: next\n  // e: error (called whenever something throws)\n  // f: finish (always called at the end)\n\n  export default function _createForOfIteratorHelper(o, allowArrayLike) {\n    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];\n\n    if (!it) {\n      // Fallback for engines without symbol support\n      if (\n        Array.isArray(o) ||\n        (it = unsupportedIterableToArray(o)) ||\n        (allowArrayLike && o && typeof o.length === "number")\n      ) {\n        if (it) o = it;\n        var i = 0;\n        var F = function(){};\n        return {\n          s: F,\n          n: function() {\n            if (i >= o.length) return { done: true };\n            return { done: false, value: o[i++] };\n          },\n          e: function(e) { throw e; },\n          f: F,\n        };\n      }\n\n      throw new TypeError("Invalid attempt to iterate non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n    }\n\n    var normalCompletion = true, didErr = false, err;\n\n    return {\n      s: function() {\n        it = it.call(o);\n      },\n      n: function() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function(e) {\n        didErr = true;\n        err = e;\n      },\n      f: function() {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n']))), tE.createForOfIteratorHelperLoose = rE("7.9.0")(wb || (wb = u(['\n  import unsupportedIterableToArray from "unsupportedIterableToArray";\n\n  export default function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];\n\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    // Fallback for engines without symbol support\n    if (\n      Array.isArray(o) ||\n      (it = unsupportedIterableToArray(o)) ||\n      (allowArrayLike && o && typeof o.length === "number")\n    ) {\n      if (it) o = it;\n      var i = 0;\n      return function() {\n        if (i >= o.length) return { done: true };\n        return { done: false, value: o[i++] };\n      }\n    }\n\n    throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }\n'], ['\n  import unsupportedIterableToArray from "unsupportedIterableToArray";\n\n  export default function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];\n\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    // Fallback for engines without symbol support\n    if (\n      Array.isArray(o) ||\n      (it = unsupportedIterableToArray(o)) ||\n      (allowArrayLike && o && typeof o.length === "number")\n    ) {\n      if (it) o = it;\n      var i = 0;\n      return function() {\n        if (i >= o.length) return { done: true };\n        return { done: false, value: o[i++] };\n      }\n    }\n\n    throw new TypeError("Invalid attempt to iterate non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n  }\n']))), tE.skipFirstGeneratorNext = rE("7.0.0-beta.0")(Cb || (Cb = u(["\n  export default function _skipFirstGeneratorNext(fn) {\n    return function () {\n      var it = fn.apply(this, arguments);\n      it.next();\n      return it;\n    }\n  }\n"]))), tE.toPrimitive = rE("7.1.5")(Sb || (Sb = u(['\n  export default function _toPrimitive(\n    input,\n    hint /*: "default" | "string" | "number" | void */\n  ) {\n    if (typeof input !== "object" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || "default");\n      if (typeof res !== "object") return res;\n      throw new TypeError("@@toPrimitive must return a primitive value.");\n    }\n    return (hint === "string" ? String : Number)(input);\n  }\n']))), tE.toPropertyKey = rE("7.1.5")(Tb || (Tb = u(['\n  import toPrimitive from "toPrimitive";\n\n  export default function _toPropertyKey(arg) {\n    var key = toPrimitive(arg, "string");\n    return typeof key === "symbol" ? key : String(key);\n  }\n']))), tE.initializerWarningHelper = rE("7.0.0-beta.0")(jb || (jb = u(["\n    export default function _initializerWarningHelper(descriptor, context){\n        throw new Error(\n          'Decorating class property failed. Please ensure that ' +\n          'proposal-class-properties is enabled and runs after the decorators transform.'\n        );\n    }\n"]))), tE.initializerDefineProperty = rE("7.0.0-beta.0")(Pb || (Pb = u(["\n    export default function _initializerDefineProperty(target, property, descriptor, context){\n        if (!descriptor) return;\n\n        Object.defineProperty(target, property, {\n            enumerable: descriptor.enumerable,\n            configurable: descriptor.configurable,\n            writable: descriptor.writable,\n            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0,\n        });\n    }\n"]))), tE.applyDecoratedDescriptor = rE("7.0.0-beta.0")(Ib || (Ib = u(["\n    export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context){\n        var desc = {};\n        Object.keys(descriptor).forEach(function(key){\n            desc[key] = descriptor[key];\n        });\n        desc.enumerable = !!desc.enumerable;\n        desc.configurable = !!desc.configurable;\n        if ('value' in desc || desc.initializer){\n            desc.writable = true;\n        }\n\n        desc = decorators.slice().reverse().reduce(function(desc, decorator){\n            return decorator(target, property, desc) || desc;\n        }, desc);\n\n        if (context && desc.initializer !== void 0){\n            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n            desc.initializer = undefined;\n        }\n\n        if (desc.initializer === void 0){\n            Object.defineProperty(target, property, desc);\n            desc = null;\n        }\n\n        return desc;\n    }\n"]))), tE.classPrivateFieldLooseKey = rE("7.0.0-beta.0")(Fb || (Fb = u(['\n  var id = 0;\n  export default function _classPrivateFieldKey(name) {\n    return "__private_" + (id++) + "_" + name;\n  }\n']))), tE.classPrivateFieldLooseBase = rE("7.0.0-beta.0")(kb || (kb = u(['\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError("attempted to use private field on non-instance");\n    }\n    return receiver;\n  }\n']))), tE.classPrivateFieldGet = rE("7.0.0-beta.0")(Ob || (Ob = u(['\n  import classApplyDescriptorGet from "classApplyDescriptorGet";\n  import classExtractFieldDescriptor from "classExtractFieldDescriptor";\n  export default function _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, "get");\n    return classApplyDescriptorGet(receiver, descriptor);\n  }\n']))), tE.classPrivateFieldSet = rE("7.0.0-beta.0")(Rb || (Rb = u(['\n  import classApplyDescriptorSet from "classApplyDescriptorSet";\n  import classExtractFieldDescriptor from "classExtractFieldDescriptor";\n  export default function _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, "set");\n    classApplyDescriptorSet(receiver, descriptor, value);\n    return value;\n  }\n']))), tE.classPrivateFieldDestructureSet = rE("7.4.4")(Nb || (Nb = u(['\n  import classApplyDescriptorDestructureSet from "classApplyDescriptorDestructureSet";\n  import classExtractFieldDescriptor from "classExtractFieldDescriptor";\n  export default function _classPrivateFieldDestructureSet(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, "set");\n    return classApplyDescriptorDestructureSet(receiver, descriptor);\n  }\n']))), tE.classExtractFieldDescriptor = rE("7.13.10")(Bb || (Bb = u(['\n  export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n      throw new TypeError("attempted to " + action + " private field on non-instance");\n    }\n    return privateMap.get(receiver);\n  }\n']))), tE.classStaticPrivateFieldSpecGet = rE("7.0.2")(_b || (_b = u(['\n  import classApplyDescriptorGet from "classApplyDescriptorGet";\n  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";\n  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";\n  export default function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {\n    classCheckPrivateStaticAccess(receiver, classConstructor);\n    classCheckPrivateStaticFieldDescriptor(descriptor, "get");\n    return classApplyDescriptorGet(receiver, descriptor);\n  }\n']))), tE.classStaticPrivateFieldSpecSet = rE("7.0.2")(Lb || (Lb = u(['\n  import classApplyDescriptorSet from "classApplyDescriptorSet";\n  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";\n  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";\n  export default function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {\n    classCheckPrivateStaticAccess(receiver, classConstructor);\n    classCheckPrivateStaticFieldDescriptor(descriptor, "set");\n    classApplyDescriptorSet(receiver, descriptor, value);\n    return value;\n  }\n']))), tE.classStaticPrivateMethodGet = rE("7.3.2")(Mb || (Mb = u(['\n  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";\n  export default function _classStaticPrivateMethodGet(receiver, classConstructor, method) {\n    classCheckPrivateStaticAccess(receiver, classConstructor);\n    return method;\n  }\n']))), tE.classStaticPrivateMethodSet = rE("7.3.2")(Ub || (Ub = u(['\n  export default function _classStaticPrivateMethodSet() {\n    throw new TypeError("attempted to set read only static private field");\n  }\n']))), tE.classApplyDescriptorGet = rE("7.13.10")(Gb || (Gb = u(["\n  export default function _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n      return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n  }\n"]))), tE.classApplyDescriptorSet = rE("7.13.10")(Vb || (Vb = u(['\n  export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n      descriptor.set.call(receiver, value);\n    } else {\n      if (!descriptor.writable) {\n        // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError("attempted to set read only private field");\n      }\n      descriptor.value = value;\n    }\n  }\n']))), tE.classApplyDescriptorDestructureSet = rE("7.13.10")(Wb || (Wb = u(['\n  export default function _classApplyDescriptorDestructureSet(receiver, descriptor) {\n    if (descriptor.set) {\n      if (!("__destrObj" in descriptor)) {\n        descriptor.__destrObj = {\n          set value(v) {\n            descriptor.set.call(receiver, v)\n          },\n        };\n      }\n      return descriptor.__destrObj;\n    } else {\n      if (!descriptor.writable) {\n        // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError("attempted to set read only private field");\n      }\n\n      return descriptor;\n    }\n  }\n']))), tE.classStaticPrivateFieldDestructureSet = rE("7.13.10")(Hb || (Hb = u(['\n  import classApplyDescriptorDestructureSet from "classApplyDescriptorDestructureSet";\n  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";\n  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";\n  export default function _classStaticPrivateFieldDestructureSet(receiver, classConstructor, descriptor) {\n    classCheckPrivateStaticAccess(receiver, classConstructor);\n    classCheckPrivateStaticFieldDescriptor(descriptor, "set");\n    return classApplyDescriptorDestructureSet(receiver, descriptor);\n  }\n']))), tE.classCheckPrivateStaticAccess = rE("7.13.10")(Xb || (Xb = u(['\n  export default function _classCheckPrivateStaticAccess(receiver, classConstructor) {\n    if (receiver !== classConstructor) {\n      throw new TypeError("Private static access of wrong provenance");\n    }\n  }\n']))), tE.classCheckPrivateStaticFieldDescriptor = rE("7.13.10")(qb || (qb = u(['\n  export default function _classCheckPrivateStaticFieldDescriptor(descriptor, action) {\n    if (descriptor === undefined) {\n      throw new TypeError("attempted to " + action + " private static field before its declaration");\n    }\n  }\n']))), tE.decorate = rE("7.1.5")($b || ($b = u([`
  import toArray from "toArray";
  import toPropertyKey from "toPropertyKey";

  // These comments are stripped by @babel/template
  /*::
  type PropertyDescriptor =
    | {
        value: any,
        writable: boolean,
        configurable: boolean,
        enumerable: boolean,
      }
    | {
        get?: () => any,
        set?: (v: any) => void,
        configurable: boolean,
        enumerable: boolean,
      };

  type FieldDescriptor ={
    writable: boolean,
    configurable: boolean,
    enumerable: boolean,
  };

  type Placement = "static" | "prototype" | "own";
  type Key = string | symbol; // PrivateName is not supported yet.

  type ElementDescriptor =
    | {
        kind: "method",
        key: Key,
        placement: Placement,
        descriptor: PropertyDescriptor
      }
    | {
        kind: "field",
        key: Key,
        placement: Placement,
        descriptor: FieldDescriptor,
        initializer?: () => any,
      };

  // This is exposed to the user code
  type ElementObjectInput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
  };

  // This is exposed to the user code
  type ElementObjectOutput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
    extras?: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  // This is exposed to the user code
  type ClassObject = {
    [@@toStringTag]?: "Descriptor",
    kind: "class",
    elements: ElementDescriptor[],
  };

  type ElementDecorator = (descriptor: ElementObjectInput) => ?ElementObjectOutput;
  type ClassDecorator = (descriptor: ClassObject) => ?ClassObject;
  type ClassFinisher = <A, B>(cl: Class<A>) => Class<B>;

  // Only used by Babel in the transform output, not part of the spec.
  type ElementDefinition =
    | {
        kind: "method",
        value: any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
      }
    | {
        kind: "field",
        value: () => any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
    };

  declare function ClassFactory<C>(initialize: (instance: C) => void): {
    F: Class<C>,
    d: ElementDefinition[]
  }

  */

  /*::
  // Various combinations with/without extras and with one or many finishers

  type ElementFinisherExtras = {
    element: ElementDescriptor,
    finisher?: ClassFinisher,
    extras?: ElementDescriptor[],
  };

  type ElementFinishersExtras = {
    element: ElementDescriptor,
    finishers: ClassFinisher[],
    extras: ElementDescriptor[],
  };

  type ElementsFinisher = {
    elements: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  type ElementsFinishers = {
    elements: ElementDescriptor[],
    finishers: ClassFinisher[],
  };

  */

  /*::

  type Placements = {
    static: Key[],
    prototype: Key[],
    own: Key[],
  };

  */

  // ClassDefinitionEvaluation (Steps 26-*)
  export default function _decorate(
    decorators /*: ClassDecorator[] */,
    factory /*: ClassFactory */,
    superClass /*: ?Class<*> */,
    mixins /*: ?Array<Function> */,
  ) /*: Class<*> */ {
    var api = _getDecoratorsApi();
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        api = mixins[i](api);
      }
    }

    var r = factory(function initialize(O) {
      api.initializeInstanceElements(O, decorated.elements);
    }, superClass);
    var decorated = api.decorateClass(
      _coalesceClassElements(r.d.map(_createElementDescriptor)),
      decorators,
    );

    api.initializeClassElements(r.F, decorated.elements);

    return api.runClassFinishers(r.F, decorated.finishers);
  }

  function _getDecoratorsApi() {
    _getDecoratorsApi = function() {
      return api;
    };

    var api = {
      elementsDefinitionOrder: [["method"], ["field"]],

      // InitializeInstanceElements
      initializeInstanceElements: function(
        /*::<C>*/ O /*: C */,
        elements /*: ElementDescriptor[] */,
      ) {
        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            if (element.kind === kind && element.placement === "own") {
              this.defineClassElement(O, element);
            }
          }, this);
        }, this);
      },

      // InitializeClassElements
      initializeClassElements: function(
        /*::<C>*/ F /*: Class<C> */,
        elements /*: ElementDescriptor[] */,
      ) {
        var proto = F.prototype;

        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            var placement = element.placement;
            if (
              element.kind === kind &&
              (placement === "static" || placement === "prototype")
            ) {
              var receiver = placement === "static" ? F : proto;
              this.defineClassElement(receiver, element);
            }
          }, this);
        }, this);
      },

      // DefineClassElement
      defineClassElement: function(
        /*::<C>*/ receiver /*: C | Class<C> */,
        element /*: ElementDescriptor */,
      ) {
        var descriptor /*: PropertyDescriptor */ = element.descriptor;
        if (element.kind === "field") {
          var initializer = element.initializer;
          descriptor = {
            enumerable: descriptor.enumerable,
            writable: descriptor.writable,
            configurable: descriptor.configurable,
            value: initializer === void 0 ? void 0 : initializer.call(receiver),
          };
        }
        Object.defineProperty(receiver, element.key, descriptor);
      },

      // DecorateClass
      decorateClass: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var newElements /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];
        var placements /*: Placements */ = {
          static: [],
          prototype: [],
          own: [],
        };

        elements.forEach(function(element /*: ElementDescriptor */) {
          this.addElementPlacement(element, placements);
        }, this);

        elements.forEach(function(element /*: ElementDescriptor */) {
          if (!_hasDecorators(element)) return newElements.push(element);

          var elementFinishersExtras /*: ElementFinishersExtras */ = this.decorateElement(
            element,
            placements,
          );
          newElements.push(elementFinishersExtras.element);
          newElements.push.apply(newElements, elementFinishersExtras.extras);
          finishers.push.apply(finishers, elementFinishersExtras.finishers);
        }, this);

        if (!decorators) {
          return { elements: newElements, finishers: finishers };
        }

        var result /*: ElementsFinishers */ = this.decorateConstructor(
          newElements,
          decorators,
        );
        finishers.push.apply(finishers, result.finishers);
        result.finishers = finishers;

        return result;
      },

      // AddElementPlacement
      addElementPlacement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
        silent /*: boolean */,
      ) {
        var keys = placements[element.placement];
        if (!silent && keys.indexOf(element.key) !== -1) {
          throw new TypeError("Duplicated element (" + element.key + ")");
        }
        keys.push(element.key);
      },

      // DecorateElement
      decorateElement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
      ) /*: ElementFinishersExtras */ {
        var extras /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];

        for (
          var decorators = element.decorators, i = decorators.length - 1;
          i >= 0;
          i--
        ) {
          // (inlined) RemoveElementPlacement
          var keys = placements[element.placement];
          keys.splice(keys.indexOf(element.key), 1);

          var elementObject /*: ElementObjectInput */ = this.fromElementDescriptor(
            element,
          );
          var elementFinisherExtras /*: ElementFinisherExtras */ = this.toElementFinisherExtras(
            (0, decorators[i])(elementObject) /*: ElementObjectOutput */ ||
              elementObject,
          );

          element = elementFinisherExtras.element;
          this.addElementPlacement(element, placements);

          if (elementFinisherExtras.finisher) {
            finishers.push(elementFinisherExtras.finisher);
          }

          var newExtras /*: ElementDescriptor[] | void */ =
            elementFinisherExtras.extras;
          if (newExtras) {
            for (var j = 0; j < newExtras.length; j++) {
              this.addElementPlacement(newExtras[j], placements);
            }
            extras.push.apply(extras, newExtras);
          }
        }

        return { element: element, finishers: finishers, extras: extras };
      },

      // DecorateConstructor
      decorateConstructor: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var finishers /*: ClassFinisher[] */ = [];

        for (var i = decorators.length - 1; i >= 0; i--) {
          var obj /*: ClassObject */ = this.fromClassDescriptor(elements);
          var elementsAndFinisher /*: ElementsFinisher */ = this.toClassDescriptor(
            (0, decorators[i])(obj) /*: ClassObject */ || obj,
          );

          if (elementsAndFinisher.finisher !== undefined) {
            finishers.push(elementsAndFinisher.finisher);
          }

          if (elementsAndFinisher.elements !== undefined) {
            elements = elementsAndFinisher.elements;

            for (var j = 0; j < elements.length - 1; j++) {
              for (var k = j + 1; k < elements.length; k++) {
                if (
                  elements[j].key === elements[k].key &&
                  elements[j].placement === elements[k].placement
                ) {
                  throw new TypeError(
                    "Duplicated element (" + elements[j].key + ")",
                  );
                }
              }
            }
          }
        }

        return { elements: elements, finishers: finishers };
      },

      // FromElementDescriptor
      fromElementDescriptor: function(
        element /*: ElementDescriptor */,
      ) /*: ElementObject */ {
        var obj /*: ElementObject */ = {
          kind: element.kind,
          key: element.key,
          placement: element.placement,
          descriptor: element.descriptor,
        };

        var desc = {
          value: "Descriptor",
          configurable: true,
        };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        if (element.kind === "field") obj.initializer = element.initializer;

        return obj;
      },

      // ToElementDescriptors
      toElementDescriptors: function(
        elementObjects /*: ElementObject[] */,
      ) /*: ElementDescriptor[] */ {
        if (elementObjects === undefined) return;
        return toArray(elementObjects).map(function(elementObject) {
          var element = this.toElementDescriptor(elementObject);
          this.disallowProperty(elementObject, "finisher", "An element descriptor");
          this.disallowProperty(elementObject, "extras", "An element descriptor");
          return element;
        }, this);
      },

      // ToElementDescriptor
      toElementDescriptor: function(
        elementObject /*: ElementObject */,
      ) /*: ElementDescriptor */ {
        var kind = String(elementObject.kind);
        if (kind !== "method" && kind !== "field") {
          throw new TypeError(
            'An element descriptor\\'s .kind property must be either "method" or' +
              ' "field", but a decorator created an element descriptor with' +
              ' .kind "' +
              kind +
              '"',
          );
        }

        var key = toPropertyKey(elementObject.key);

        var placement = String(elementObject.placement);
        if (
          placement !== "static" &&
          placement !== "prototype" &&
          placement !== "own"
        ) {
          throw new TypeError(
            'An element descriptor\\'s .placement property must be one of "static",' +
              ' "prototype" or "own", but a decorator created an element descriptor' +
              ' with .placement "' +
              placement +
              '"',
          );
        }

        var descriptor /*: PropertyDescriptor */ = elementObject.descriptor;

        this.disallowProperty(elementObject, "elements", "An element descriptor");

        var element /*: ElementDescriptor */ = {
          kind: kind,
          key: key,
          placement: placement,
          descriptor: Object.assign({}, descriptor),
        };

        if (kind !== "field") {
          this.disallowProperty(elementObject, "initializer", "A method descriptor");
        } else {
          this.disallowProperty(
            descriptor,
            "get",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "set",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "value",
            "The property descriptor of a field descriptor",
          );

          element.initializer = elementObject.initializer;
        }

        return element;
      },

      toElementFinisherExtras: function(
        elementObject /*: ElementObject */,
      ) /*: ElementFinisherExtras */ {
        var element /*: ElementDescriptor */ = this.toElementDescriptor(
          elementObject,
        );
        var finisher /*: ClassFinisher */ = _optionalCallableProperty(
          elementObject,
          "finisher",
        );
        var extras /*: ElementDescriptors[] */ = this.toElementDescriptors(
          elementObject.extras,
        );

        return { element: element, finisher: finisher, extras: extras };
      },

      // FromClassDescriptor
      fromClassDescriptor: function(
        elements /*: ElementDescriptor[] */,
      ) /*: ClassObject */ {
        var obj = {
          kind: "class",
          elements: elements.map(this.fromElementDescriptor, this),
        };

        var desc = { value: "Descriptor", configurable: true };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        return obj;
      },

      // ToClassDescriptor
      toClassDescriptor: function(
        obj /*: ClassObject */,
      ) /*: ElementsFinisher */ {
        var kind = String(obj.kind);
        if (kind !== "class") {
          throw new TypeError(
            'A class descriptor\\'s .kind property must be "class", but a decorator' +
              ' created a class descriptor with .kind "' +
              kind +
              '"',
          );
        }

        this.disallowProperty(obj, "key", "A class descriptor");
        this.disallowProperty(obj, "placement", "A class descriptor");
        this.disallowProperty(obj, "descriptor", "A class descriptor");
        this.disallowProperty(obj, "initializer", "A class descriptor");
        this.disallowProperty(obj, "extras", "A class descriptor");

        var finisher = _optionalCallableProperty(obj, "finisher");
        var elements = this.toElementDescriptors(obj.elements);

        return { elements: elements, finisher: finisher };
      },

      // RunClassFinishers
      runClassFinishers: function(
        constructor /*: Class<*> */,
        finishers /*: ClassFinisher[] */,
      ) /*: Class<*> */ {
        for (var i = 0; i < finishers.length; i++) {
          var newConstructor /*: ?Class<*> */ = (0, finishers[i])(constructor);
          if (newConstructor !== undefined) {
            // NOTE: This should check if IsConstructor(newConstructor) is false.
            if (typeof newConstructor !== "function") {
              throw new TypeError("Finishers must return a constructor.");
            }
            constructor = newConstructor;
          }
        }
        return constructor;
      },

      disallowProperty: function(obj, name, objectType) {
        if (obj[name] !== undefined) {
          throw new TypeError(objectType + " can't have a ." + name + " property.");
        }
      }
    };

    return api;
  }

  // ClassElementEvaluation
  function _createElementDescriptor(
    def /*: ElementDefinition */,
  ) /*: ElementDescriptor */ {
    var key = toPropertyKey(def.key);

    var descriptor /*: PropertyDescriptor */;
    if (def.kind === "method") {
      descriptor = {
        value: def.value,
        writable: true,
        configurable: true,
        enumerable: false,
      };
    } else if (def.kind === "get") {
      descriptor = { get: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "set") {
      descriptor = { set: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "field") {
      descriptor = { configurable: true, writable: true, enumerable: true };
    }

    var element /*: ElementDescriptor */ = {
      kind: def.kind === "field" ? "field" : "method",
      key: key,
      placement: def.static
        ? "static"
        : def.kind === "field"
        ? "own"
        : "prototype",
      descriptor: descriptor,
    };
    if (def.decorators) element.decorators = def.decorators;
    if (def.kind === "field") element.initializer = def.value;

    return element;
  }

  // CoalesceGetterSetter
  function _coalesceGetterSetter(
    element /*: ElementDescriptor */,
    other /*: ElementDescriptor */,
  ) {
    if (element.descriptor.get !== undefined) {
      other.descriptor.get = element.descriptor.get;
    } else {
      other.descriptor.set = element.descriptor.set;
    }
  }

  // CoalesceClassElements
  function _coalesceClassElements(
    elements /*: ElementDescriptor[] */,
  ) /*: ElementDescriptor[] */ {
    var newElements /*: ElementDescriptor[] */ = [];

    var isSameElement = function(
      other /*: ElementDescriptor */,
    ) /*: boolean */ {
      return (
        other.kind === "method" &&
        other.key === element.key &&
        other.placement === element.placement
      );
    };

    for (var i = 0; i < elements.length; i++) {
      var element /*: ElementDescriptor */ = elements[i];
      var other /*: ElementDescriptor */;

      if (
        element.kind === "method" &&
        (other = newElements.find(isSameElement))
      ) {
        if (
          _isDataDescriptor(element.descriptor) ||
          _isDataDescriptor(other.descriptor)
        ) {
          if (_hasDecorators(element) || _hasDecorators(other)) {
            throw new ReferenceError(
              "Duplicated methods (" + element.key + ") can't be decorated.",
            );
          }
          other.descriptor = element.descriptor;
        } else {
          if (_hasDecorators(element)) {
            if (_hasDecorators(other)) {
              throw new ReferenceError(
                "Decorators can't be placed on different accessors with for " +
                  "the same property (" +
                  element.key +
                  ").",
              );
            }
            other.decorators = element.decorators;
          }
          _coalesceGetterSetter(element, other);
        }
      } else {
        newElements.push(element);
      }
    }

    return newElements;
  }

  function _hasDecorators(element /*: ElementDescriptor */) /*: boolean */ {
    return element.decorators && element.decorators.length;
  }

  function _isDataDescriptor(desc /*: PropertyDescriptor */) /*: boolean */ {
    return (
      desc !== undefined &&
      !(desc.value === undefined && desc.writable === undefined)
    );
  }

  function _optionalCallableProperty /*::<T>*/(
    obj /*: T */,
    name /*: $Keys<T> */,
  ) /*: ?Function */ {
    var value = obj[name];
    if (value !== undefined && typeof value !== "function") {
      throw new TypeError("Expected '" + name + "' to be a function");
    }
    return value;
  }

`], [`
  import toArray from "toArray";
  import toPropertyKey from "toPropertyKey";

  // These comments are stripped by @babel/template
  /*::
  type PropertyDescriptor =
    | {
        value: any,
        writable: boolean,
        configurable: boolean,
        enumerable: boolean,
      }
    | {
        get?: () => any,
        set?: (v: any) => void,
        configurable: boolean,
        enumerable: boolean,
      };

  type FieldDescriptor ={
    writable: boolean,
    configurable: boolean,
    enumerable: boolean,
  };

  type Placement = "static" | "prototype" | "own";
  type Key = string | symbol; // PrivateName is not supported yet.

  type ElementDescriptor =
    | {
        kind: "method",
        key: Key,
        placement: Placement,
        descriptor: PropertyDescriptor
      }
    | {
        kind: "field",
        key: Key,
        placement: Placement,
        descriptor: FieldDescriptor,
        initializer?: () => any,
      };

  // This is exposed to the user code
  type ElementObjectInput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
  };

  // This is exposed to the user code
  type ElementObjectOutput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
    extras?: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  // This is exposed to the user code
  type ClassObject = {
    [@@toStringTag]?: "Descriptor",
    kind: "class",
    elements: ElementDescriptor[],
  };

  type ElementDecorator = (descriptor: ElementObjectInput) => ?ElementObjectOutput;
  type ClassDecorator = (descriptor: ClassObject) => ?ClassObject;
  type ClassFinisher = <A, B>(cl: Class<A>) => Class<B>;

  // Only used by Babel in the transform output, not part of the spec.
  type ElementDefinition =
    | {
        kind: "method",
        value: any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
      }
    | {
        kind: "field",
        value: () => any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
    };

  declare function ClassFactory<C>(initialize: (instance: C) => void): {
    F: Class<C>,
    d: ElementDefinition[]
  }

  */

  /*::
  // Various combinations with/without extras and with one or many finishers

  type ElementFinisherExtras = {
    element: ElementDescriptor,
    finisher?: ClassFinisher,
    extras?: ElementDescriptor[],
  };

  type ElementFinishersExtras = {
    element: ElementDescriptor,
    finishers: ClassFinisher[],
    extras: ElementDescriptor[],
  };

  type ElementsFinisher = {
    elements: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  type ElementsFinishers = {
    elements: ElementDescriptor[],
    finishers: ClassFinisher[],
  };

  */

  /*::

  type Placements = {
    static: Key[],
    prototype: Key[],
    own: Key[],
  };

  */

  // ClassDefinitionEvaluation (Steps 26-*)
  export default function _decorate(
    decorators /*: ClassDecorator[] */,
    factory /*: ClassFactory */,
    superClass /*: ?Class<*> */,
    mixins /*: ?Array<Function> */,
  ) /*: Class<*> */ {
    var api = _getDecoratorsApi();
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        api = mixins[i](api);
      }
    }

    var r = factory(function initialize(O) {
      api.initializeInstanceElements(O, decorated.elements);
    }, superClass);
    var decorated = api.decorateClass(
      _coalesceClassElements(r.d.map(_createElementDescriptor)),
      decorators,
    );

    api.initializeClassElements(r.F, decorated.elements);

    return api.runClassFinishers(r.F, decorated.finishers);
  }

  function _getDecoratorsApi() {
    _getDecoratorsApi = function() {
      return api;
    };

    var api = {
      elementsDefinitionOrder: [["method"], ["field"]],

      // InitializeInstanceElements
      initializeInstanceElements: function(
        /*::<C>*/ O /*: C */,
        elements /*: ElementDescriptor[] */,
      ) {
        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            if (element.kind === kind && element.placement === "own") {
              this.defineClassElement(O, element);
            }
          }, this);
        }, this);
      },

      // InitializeClassElements
      initializeClassElements: function(
        /*::<C>*/ F /*: Class<C> */,
        elements /*: ElementDescriptor[] */,
      ) {
        var proto = F.prototype;

        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            var placement = element.placement;
            if (
              element.kind === kind &&
              (placement === "static" || placement === "prototype")
            ) {
              var receiver = placement === "static" ? F : proto;
              this.defineClassElement(receiver, element);
            }
          }, this);
        }, this);
      },

      // DefineClassElement
      defineClassElement: function(
        /*::<C>*/ receiver /*: C | Class<C> */,
        element /*: ElementDescriptor */,
      ) {
        var descriptor /*: PropertyDescriptor */ = element.descriptor;
        if (element.kind === "field") {
          var initializer = element.initializer;
          descriptor = {
            enumerable: descriptor.enumerable,
            writable: descriptor.writable,
            configurable: descriptor.configurable,
            value: initializer === void 0 ? void 0 : initializer.call(receiver),
          };
        }
        Object.defineProperty(receiver, element.key, descriptor);
      },

      // DecorateClass
      decorateClass: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var newElements /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];
        var placements /*: Placements */ = {
          static: [],
          prototype: [],
          own: [],
        };

        elements.forEach(function(element /*: ElementDescriptor */) {
          this.addElementPlacement(element, placements);
        }, this);

        elements.forEach(function(element /*: ElementDescriptor */) {
          if (!_hasDecorators(element)) return newElements.push(element);

          var elementFinishersExtras /*: ElementFinishersExtras */ = this.decorateElement(
            element,
            placements,
          );
          newElements.push(elementFinishersExtras.element);
          newElements.push.apply(newElements, elementFinishersExtras.extras);
          finishers.push.apply(finishers, elementFinishersExtras.finishers);
        }, this);

        if (!decorators) {
          return { elements: newElements, finishers: finishers };
        }

        var result /*: ElementsFinishers */ = this.decorateConstructor(
          newElements,
          decorators,
        );
        finishers.push.apply(finishers, result.finishers);
        result.finishers = finishers;

        return result;
      },

      // AddElementPlacement
      addElementPlacement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
        silent /*: boolean */,
      ) {
        var keys = placements[element.placement];
        if (!silent && keys.indexOf(element.key) !== -1) {
          throw new TypeError("Duplicated element (" + element.key + ")");
        }
        keys.push(element.key);
      },

      // DecorateElement
      decorateElement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
      ) /*: ElementFinishersExtras */ {
        var extras /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];

        for (
          var decorators = element.decorators, i = decorators.length - 1;
          i >= 0;
          i--
        ) {
          // (inlined) RemoveElementPlacement
          var keys = placements[element.placement];
          keys.splice(keys.indexOf(element.key), 1);

          var elementObject /*: ElementObjectInput */ = this.fromElementDescriptor(
            element,
          );
          var elementFinisherExtras /*: ElementFinisherExtras */ = this.toElementFinisherExtras(
            (0, decorators[i])(elementObject) /*: ElementObjectOutput */ ||
              elementObject,
          );

          element = elementFinisherExtras.element;
          this.addElementPlacement(element, placements);

          if (elementFinisherExtras.finisher) {
            finishers.push(elementFinisherExtras.finisher);
          }

          var newExtras /*: ElementDescriptor[] | void */ =
            elementFinisherExtras.extras;
          if (newExtras) {
            for (var j = 0; j < newExtras.length; j++) {
              this.addElementPlacement(newExtras[j], placements);
            }
            extras.push.apply(extras, newExtras);
          }
        }

        return { element: element, finishers: finishers, extras: extras };
      },

      // DecorateConstructor
      decorateConstructor: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var finishers /*: ClassFinisher[] */ = [];

        for (var i = decorators.length - 1; i >= 0; i--) {
          var obj /*: ClassObject */ = this.fromClassDescriptor(elements);
          var elementsAndFinisher /*: ElementsFinisher */ = this.toClassDescriptor(
            (0, decorators[i])(obj) /*: ClassObject */ || obj,
          );

          if (elementsAndFinisher.finisher !== undefined) {
            finishers.push(elementsAndFinisher.finisher);
          }

          if (elementsAndFinisher.elements !== undefined) {
            elements = elementsAndFinisher.elements;

            for (var j = 0; j < elements.length - 1; j++) {
              for (var k = j + 1; k < elements.length; k++) {
                if (
                  elements[j].key === elements[k].key &&
                  elements[j].placement === elements[k].placement
                ) {
                  throw new TypeError(
                    "Duplicated element (" + elements[j].key + ")",
                  );
                }
              }
            }
          }
        }

        return { elements: elements, finishers: finishers };
      },

      // FromElementDescriptor
      fromElementDescriptor: function(
        element /*: ElementDescriptor */,
      ) /*: ElementObject */ {
        var obj /*: ElementObject */ = {
          kind: element.kind,
          key: element.key,
          placement: element.placement,
          descriptor: element.descriptor,
        };

        var desc = {
          value: "Descriptor",
          configurable: true,
        };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        if (element.kind === "field") obj.initializer = element.initializer;

        return obj;
      },

      // ToElementDescriptors
      toElementDescriptors: function(
        elementObjects /*: ElementObject[] */,
      ) /*: ElementDescriptor[] */ {
        if (elementObjects === undefined) return;
        return toArray(elementObjects).map(function(elementObject) {
          var element = this.toElementDescriptor(elementObject);
          this.disallowProperty(elementObject, "finisher", "An element descriptor");
          this.disallowProperty(elementObject, "extras", "An element descriptor");
          return element;
        }, this);
      },

      // ToElementDescriptor
      toElementDescriptor: function(
        elementObject /*: ElementObject */,
      ) /*: ElementDescriptor */ {
        var kind = String(elementObject.kind);
        if (kind !== "method" && kind !== "field") {
          throw new TypeError(
            'An element descriptor\\\\'s .kind property must be either "method" or' +
              ' "field", but a decorator created an element descriptor with' +
              ' .kind "' +
              kind +
              '"',
          );
        }

        var key = toPropertyKey(elementObject.key);

        var placement = String(elementObject.placement);
        if (
          placement !== "static" &&
          placement !== "prototype" &&
          placement !== "own"
        ) {
          throw new TypeError(
            'An element descriptor\\\\'s .placement property must be one of "static",' +
              ' "prototype" or "own", but a decorator created an element descriptor' +
              ' with .placement "' +
              placement +
              '"',
          );
        }

        var descriptor /*: PropertyDescriptor */ = elementObject.descriptor;

        this.disallowProperty(elementObject, "elements", "An element descriptor");

        var element /*: ElementDescriptor */ = {
          kind: kind,
          key: key,
          placement: placement,
          descriptor: Object.assign({}, descriptor),
        };

        if (kind !== "field") {
          this.disallowProperty(elementObject, "initializer", "A method descriptor");
        } else {
          this.disallowProperty(
            descriptor,
            "get",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "set",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "value",
            "The property descriptor of a field descriptor",
          );

          element.initializer = elementObject.initializer;
        }

        return element;
      },

      toElementFinisherExtras: function(
        elementObject /*: ElementObject */,
      ) /*: ElementFinisherExtras */ {
        var element /*: ElementDescriptor */ = this.toElementDescriptor(
          elementObject,
        );
        var finisher /*: ClassFinisher */ = _optionalCallableProperty(
          elementObject,
          "finisher",
        );
        var extras /*: ElementDescriptors[] */ = this.toElementDescriptors(
          elementObject.extras,
        );

        return { element: element, finisher: finisher, extras: extras };
      },

      // FromClassDescriptor
      fromClassDescriptor: function(
        elements /*: ElementDescriptor[] */,
      ) /*: ClassObject */ {
        var obj = {
          kind: "class",
          elements: elements.map(this.fromElementDescriptor, this),
        };

        var desc = { value: "Descriptor", configurable: true };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        return obj;
      },

      // ToClassDescriptor
      toClassDescriptor: function(
        obj /*: ClassObject */,
      ) /*: ElementsFinisher */ {
        var kind = String(obj.kind);
        if (kind !== "class") {
          throw new TypeError(
            'A class descriptor\\\\'s .kind property must be "class", but a decorator' +
              ' created a class descriptor with .kind "' +
              kind +
              '"',
          );
        }

        this.disallowProperty(obj, "key", "A class descriptor");
        this.disallowProperty(obj, "placement", "A class descriptor");
        this.disallowProperty(obj, "descriptor", "A class descriptor");
        this.disallowProperty(obj, "initializer", "A class descriptor");
        this.disallowProperty(obj, "extras", "A class descriptor");

        var finisher = _optionalCallableProperty(obj, "finisher");
        var elements = this.toElementDescriptors(obj.elements);

        return { elements: elements, finisher: finisher };
      },

      // RunClassFinishers
      runClassFinishers: function(
        constructor /*: Class<*> */,
        finishers /*: ClassFinisher[] */,
      ) /*: Class<*> */ {
        for (var i = 0; i < finishers.length; i++) {
          var newConstructor /*: ?Class<*> */ = (0, finishers[i])(constructor);
          if (newConstructor !== undefined) {
            // NOTE: This should check if IsConstructor(newConstructor) is false.
            if (typeof newConstructor !== "function") {
              throw new TypeError("Finishers must return a constructor.");
            }
            constructor = newConstructor;
          }
        }
        return constructor;
      },

      disallowProperty: function(obj, name, objectType) {
        if (obj[name] !== undefined) {
          throw new TypeError(objectType + " can't have a ." + name + " property.");
        }
      }
    };

    return api;
  }

  // ClassElementEvaluation
  function _createElementDescriptor(
    def /*: ElementDefinition */,
  ) /*: ElementDescriptor */ {
    var key = toPropertyKey(def.key);

    var descriptor /*: PropertyDescriptor */;
    if (def.kind === "method") {
      descriptor = {
        value: def.value,
        writable: true,
        configurable: true,
        enumerable: false,
      };
    } else if (def.kind === "get") {
      descriptor = { get: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "set") {
      descriptor = { set: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "field") {
      descriptor = { configurable: true, writable: true, enumerable: true };
    }

    var element /*: ElementDescriptor */ = {
      kind: def.kind === "field" ? "field" : "method",
      key: key,
      placement: def.static
        ? "static"
        : def.kind === "field"
        ? "own"
        : "prototype",
      descriptor: descriptor,
    };
    if (def.decorators) element.decorators = def.decorators;
    if (def.kind === "field") element.initializer = def.value;

    return element;
  }

  // CoalesceGetterSetter
  function _coalesceGetterSetter(
    element /*: ElementDescriptor */,
    other /*: ElementDescriptor */,
  ) {
    if (element.descriptor.get !== undefined) {
      other.descriptor.get = element.descriptor.get;
    } else {
      other.descriptor.set = element.descriptor.set;
    }
  }

  // CoalesceClassElements
  function _coalesceClassElements(
    elements /*: ElementDescriptor[] */,
  ) /*: ElementDescriptor[] */ {
    var newElements /*: ElementDescriptor[] */ = [];

    var isSameElement = function(
      other /*: ElementDescriptor */,
    ) /*: boolean */ {
      return (
        other.kind === "method" &&
        other.key === element.key &&
        other.placement === element.placement
      );
    };

    for (var i = 0; i < elements.length; i++) {
      var element /*: ElementDescriptor */ = elements[i];
      var other /*: ElementDescriptor */;

      if (
        element.kind === "method" &&
        (other = newElements.find(isSameElement))
      ) {
        if (
          _isDataDescriptor(element.descriptor) ||
          _isDataDescriptor(other.descriptor)
        ) {
          if (_hasDecorators(element) || _hasDecorators(other)) {
            throw new ReferenceError(
              "Duplicated methods (" + element.key + ") can't be decorated.",
            );
          }
          other.descriptor = element.descriptor;
        } else {
          if (_hasDecorators(element)) {
            if (_hasDecorators(other)) {
              throw new ReferenceError(
                "Decorators can't be placed on different accessors with for " +
                  "the same property (" +
                  element.key +
                  ").",
              );
            }
            other.decorators = element.decorators;
          }
          _coalesceGetterSetter(element, other);
        }
      } else {
        newElements.push(element);
      }
    }

    return newElements;
  }

  function _hasDecorators(element /*: ElementDescriptor */) /*: boolean */ {
    return element.decorators && element.decorators.length;
  }

  function _isDataDescriptor(desc /*: PropertyDescriptor */) /*: boolean */ {
    return (
      desc !== undefined &&
      !(desc.value === undefined && desc.writable === undefined)
    );
  }

  function _optionalCallableProperty /*::<T>*/(
    obj /*: T */,
    name /*: $Keys<T> */,
  ) /*: ?Function */ {
    var value = obj[name];
    if (value !== undefined && typeof value !== "function") {
      throw new TypeError("Expected '" + name + "' to be a function");
    }
    return value;
  }

`]))), tE.classPrivateMethodGet = rE("7.1.6")(Kb || (Kb = u(['\n  export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n      throw new TypeError("attempted to get private field on non-instance");\n    }\n    return fn;\n  }\n']))), tE.classPrivateMethodSet = rE("7.1.6")(zb || (zb = u(['\n    export default function _classPrivateMethodSet() {\n      throw new TypeError("attempted to reassign private method");\n    }\n  '])));
      var sE = void 0;
      var aE = Object.create(null);
      function iE(e2) {
        if (!aE[e2]) {
          var t2 = tE[e2];
          if (!t2)
            throw Object.assign(new ReferenceError("Unknown helper " + e2), { code: "BABEL_HELPER_UNKNOWN", helper: e2 });
          var r2 = function() {
            var r3 = { ast: gs(t2.ast()) };
            return sE ? new sE({ filename: "babel-helper://" + e2 }, r3) : r3;
          }, n2 = function(e3) {
            var t3, r3, n3 = new Set(), s2 = new Set(), a2 = new Map(), i2 = [], o2 = [], u2 = [], l2 = { ImportDeclaration: function(e4) {
              var t4 = e4.node.source.value;
              if (!tE[t4])
                throw e4.buildCodeFrameError("Unknown helper " + t4);
              if (e4.get("specifiers").length !== 1 || !e4.get("specifiers.0").isImportDefaultSpecifier())
                throw e4.buildCodeFrameError("Helpers can only import a default value");
              var r4 = e4.node.specifiers[0].local;
              a2.set(r4, t4), o2.push(nE(e4));
            }, ExportDefaultDeclaration: function(e4) {
              var n4 = e4.get("declaration");
              if (n4.isFunctionDeclaration()) {
                if (!n4.node.id)
                  throw n4.buildCodeFrameError("Helpers should give names to their exported func declaration");
                t3 = n4.node.id.name;
              }
              r3 = nE(e4);
            }, ExportAllDeclaration: function(e4) {
              throw e4.buildCodeFrameError("Helpers can only export default");
            }, ExportNamedDeclaration: function(e4) {
              throw e4.buildCodeFrameError("Helpers can only export default");
            }, Statement: function(e4) {
              e4.isModuleDeclaration() || e4.skip();
            } }, c2 = { Program: function(e4) {
              var r4 = e4.scope.getAllBindings();
              Object.keys(r4).forEach(function(e5) {
                e5 !== t3 && (a2.has(r4[e5].identifier) || s2.add(e5));
              });
            }, ReferencedIdentifier: function(e4) {
              var t4 = e4.node.name, r4 = e4.scope.getBinding(t4, true);
              r4 ? a2.has(r4.identifier) && u2.push(nE(e4)) : n3.add(t4);
            }, AssignmentExpression: function(e4) {
              var r4 = e4.get("left");
              if (t3 in r4.getBindingIdentifiers()) {
                if (!r4.isIdentifier())
                  throw r4.buildCodeFrameError("Only simple assignments to exports are allowed in helpers");
                var n4 = e4.scope.getBinding(t3);
                n4 != null && n4.scope.path.isProgram() && i2.push(nE(e4));
              }
            } };
            if (vv(e3.ast, l2, e3.scope), vv(e3.ast, c2, e3.scope), !r3)
              throw new Error("Helpers must default-export something.");
            return i2.reverse(), { globals: Array.from(n3), localBindingNames: Array.from(s2), dependencies: a2, exportBindingAssignments: i2, exportPath: r3, exportName: t3, importBindingsReferences: u2, importPaths: o2 };
          }(r2());
          aE[e2] = { build: function(e3, t3, s2) {
            var a2 = r2();
            return function(e4, t4, r3, n3, s3) {
              if (n3 && !r3)
                throw new Error("Unexpected local bindings for module-based helpers.");
              if (r3) {
                var a3 = t4.localBindingNames, i2 = t4.dependencies, o2 = t4.exportBindingAssignments, u2 = t4.exportPath, l2 = t4.exportName, c2 = t4.importBindingsReferences, p2 = t4.importPaths, d2 = {};
                i2.forEach(function(e5, t5) {
                  d2[t5.name] = typeof s3 == "function" && s3(e5) || t5;
                });
                var h2 = {}, m2 = new Set(n3 || []);
                a3.forEach(function(e5) {
                  for (var t5 = e5; m2.has(t5); )
                    t5 = "_" + t5;
                  t5 !== e5 && (h2[e5] = t5);
                }), r3.type === "Identifier" && l2 !== r3.name && (h2[l2] = r3.name);
                var y2 = { Program: function(e5) {
                  var t5 = e5.get(u2), n4 = p2.map(function(t6) {
                    return e5.get(t6);
                  }), s4 = c2.map(function(t6) {
                    return e5.get(t6);
                  }), a4 = t5.get("declaration");
                  if (r3.type === "Identifier")
                    a4.isFunctionDeclaration() ? t5.replaceWith(a4) : t5.replaceWith(Ks("var", [zs(r3, a4.node)]));
                  else {
                    if (r3.type !== "MemberExpression")
                      throw new Error("Unexpected helper format.");
                    a4.isFunctionDeclaration() ? (o2.forEach(function(t6) {
                      var n5 = e5.get(t6);
                      n5.replaceWith(rs("=", r3, n5.node));
                    }), t5.replaceWith(a4), e5.pushContainer("body", ys(rs("=", r3, Ds(l2))))) : t5.replaceWith(ys(rs("=", r3, a4.node)));
                  }
                  Object.keys(h2).forEach(function(t6) {
                    e5.scope.rename(t6, h2[t6]);
                  });
                  for (var i3, m3 = f(n4); !(i3 = m3()).done; )
                    i3.value.remove();
                  for (var y3, g2 = f(s4); !(y3 = g2()).done; ) {
                    var v2 = y3.value, b2 = Ju(d2[v2.node.name]);
                    v2.replaceWith(b2);
                  }
                  e5.stop();
                } };
                vv(e4.ast, y2, e4.scope);
              }
            }(a2, n2, t3, s2, e3), { nodes: a2.ast.program.body, globals: n2.globals };
          }, minVersion: function() {
            return t2.minVersion;
          }, dependencies: n2.dependencies };
        }
        return aE[e2];
      }
      function oE(e2, t2, r2, n2) {
        return iE(e2).build(t2, r2, n2);
      }
      function uE(e2, t2) {
        sE || (sE = t2), iE(e2);
      }
      var lE = Object.keys(tE).map(function(e2) {
        return e2.replace(/^_/, "");
      }).filter(function(e2) {
        return e2 !== "__esModule";
      }), cE = Object.getOwnPropertySymbols, pE = Object.prototype.hasOwnProperty, dE = Object.prototype.propertyIsEnumerable;
      function fE(e2) {
        if (e2 == null)
          throw new TypeError("Object.assign cannot be called with null or undefined");
        return Object(e2);
      }
      var hE = function() {
        try {
          if (!Object.assign)
            return false;
          var e2 = new String("abc");
          if (e2[5] = "de", Object.getOwnPropertyNames(e2)[0] === "5")
            return false;
          for (var t2 = {}, r2 = 0; r2 < 10; r2++)
            t2["_" + String.fromCharCode(r2)] = r2;
          if (Object.getOwnPropertyNames(t2).map(function(e3) {
            return t2[e3];
          }).join("") !== "0123456789")
            return false;
          var n2 = {};
          return "abcdefghijklmnopqrst".split("").forEach(function(e3) {
            n2[e3] = e3;
          }), Object.keys(Object.assign({}, n2)).join("") === "abcdefghijklmnopqrst";
        } catch (e3) {
          return false;
        }
      }() ? Object.assign : function(e2, t2) {
        for (var r2, n2, s2 = fE(e2), a2 = 1; a2 < arguments.length; a2++) {
          for (var i2 in r2 = Object(arguments[a2]))
            pE.call(r2, i2) && (s2[i2] = r2[i2]);
          if (cE) {
            n2 = cE(r2);
            for (var o2 = 0; o2 < n2.length; o2++)
              dE.call(r2, n2[o2]) && (s2[n2[o2]] = r2[n2[o2]]);
          }
        }
        return s2;
      }, mE = function(e2) {
        return e2 && typeof e2 == "object" && typeof e2.copy == "function" && typeof e2.fill == "function" && typeof e2.readUInt8 == "function";
      }, yE = zt(function(e2) {
        typeof Object.create == "function" ? e2.exports = function(e3, t2) {
          e3.super_ = t2, e3.prototype = Object.create(t2.prototype, { constructor: { value: e3, enumerable: false, writable: true, configurable: true } });
        } : e2.exports = function(e3, t2) {
          e3.super_ = t2;
          var r2 = function() {
          };
          r2.prototype = t2.prototype, e3.prototype = new r2(), e3.prototype.constructor = e3;
        };
      }, "/$$rollup_base$$/node_modules/util/node_modules/inherits"), gE = zt(function(e2, t2) {
        var r2 = /%[sdj%]/g;
        t2.format = function(e3) {
          if (!m2(e3)) {
            for (var t3 = [], n3 = 0; n3 < arguments.length; n3++)
              t3.push(a2(arguments[n3]));
            return t3.join(" ");
          }
          n3 = 1;
          for (var s3 = arguments, i3 = s3.length, o3 = String(e3).replace(r2, function(e4) {
            if (e4 === "%%")
              return "%";
            if (n3 >= i3)
              return e4;
            switch (e4) {
              case "%s":
                return String(s3[n3++]);
              case "%d":
                return Number(s3[n3++]);
              case "%j":
                try {
                  return JSON.stringify(s3[n3++]);
                } catch (e5) {
                  return "[Circular]";
                }
              default:
                return e4;
            }
          }), u3 = s3[n3]; n3 < i3; u3 = s3[++n3])
            f2(u3) || !v2(u3) ? o3 += " " + u3 : o3 += " " + a2(u3);
          return o3;
        }, t2.deprecate = function(e3, r3) {
          if (y2($t.process))
            return function() {
              return t2.deprecate(e3, r3).apply(this, arguments);
            };
          if (ar.noDeprecation === true)
            return e3;
          var n3 = false;
          return function() {
            if (!n3) {
              if (ar.throwDeprecation)
                throw new Error(r3);
              ar.traceDeprecation ? console.trace(r3) : console.error(r3), n3 = true;
            }
            return e3.apply(this, arguments);
          };
        };
        var n2, s2 = {};
        function a2(e3, r3) {
          var n3 = { seen: [], stylize: o2 };
          return arguments.length >= 3 && (n3.depth = arguments[2]), arguments.length >= 4 && (n3.colors = arguments[3]), d2(r3) ? n3.showHidden = r3 : r3 && t2._extend(n3, r3), y2(n3.showHidden) && (n3.showHidden = false), y2(n3.depth) && (n3.depth = 2), y2(n3.colors) && (n3.colors = false), y2(n3.customInspect) && (n3.customInspect = true), n3.colors && (n3.stylize = i2), u2(n3, e3, n3.depth);
        }
        function i2(e3, t3) {
          var r3 = a2.styles[t3];
          return r3 ? "[" + a2.colors[r3][0] + "m" + e3 + "[" + a2.colors[r3][1] + "m" : e3;
        }
        function o2(e3, t3) {
          return e3;
        }
        function u2(e3, r3, n3) {
          if (e3.customInspect && r3 && x2(r3.inspect) && r3.inspect !== t2.inspect && (!r3.constructor || r3.constructor.prototype !== r3)) {
            var s3 = r3.inspect(n3, e3);
            return m2(s3) || (s3 = u2(e3, s3, n3)), s3;
          }
          var a3 = function(e4, t3) {
            if (y2(t3))
              return e4.stylize("undefined", "undefined");
            if (m2(t3)) {
              var r4 = "'" + JSON.stringify(t3).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
              return e4.stylize(r4, "string");
            }
            if (h2(t3))
              return e4.stylize("" + t3, "number");
            if (d2(t3))
              return e4.stylize("" + t3, "boolean");
            if (f2(t3))
              return e4.stylize("null", "null");
          }(e3, r3);
          if (a3)
            return a3;
          var i3 = Object.keys(r3), o3 = function(e4) {
            var t3 = {};
            return e4.forEach(function(e5, r4) {
              t3[e5] = true;
            }), t3;
          }(i3);
          if (e3.showHidden && (i3 = Object.getOwnPropertyNames(r3)), E2(r3) && (i3.indexOf("message") >= 0 || i3.indexOf("description") >= 0))
            return l2(r3);
          if (i3.length === 0) {
            if (x2(r3)) {
              var v3 = r3.name ? ": " + r3.name : "";
              return e3.stylize("[Function" + v3 + "]", "special");
            }
            if (g2(r3))
              return e3.stylize(RegExp.prototype.toString.call(r3), "regexp");
            if (b2(r3))
              return e3.stylize(Date.prototype.toString.call(r3), "date");
            if (E2(r3))
              return l2(r3);
          }
          var D3, A3 = "", w3 = false, C3 = ["{", "}"];
          (p2(r3) && (w3 = true, C3 = ["[", "]"]), x2(r3)) && (A3 = " [Function" + (r3.name ? ": " + r3.name : "") + "]");
          return g2(r3) && (A3 = " " + RegExp.prototype.toString.call(r3)), b2(r3) && (A3 = " " + Date.prototype.toUTCString.call(r3)), E2(r3) && (A3 = " " + l2(r3)), i3.length !== 0 || w3 && r3.length != 0 ? n3 < 0 ? g2(r3) ? e3.stylize(RegExp.prototype.toString.call(r3), "regexp") : e3.stylize("[Object]", "special") : (e3.seen.push(r3), D3 = w3 ? function(e4, t3, r4, n4, s4) {
            for (var a4 = [], i4 = 0, o4 = t3.length; i4 < o4; ++i4)
              S2(t3, String(i4)) ? a4.push(c2(e4, t3, r4, n4, String(i4), true)) : a4.push("");
            return s4.forEach(function(s5) {
              s5.match(/^\d+$/) || a4.push(c2(e4, t3, r4, n4, s5, true));
            }), a4;
          }(e3, r3, n3, o3, i3) : i3.map(function(t3) {
            return c2(e3, r3, n3, o3, t3, w3);
          }), e3.seen.pop(), function(e4, t3, r4) {
            if (e4.reduce(function(e5, t4) {
              return t4.indexOf("\n"), e5 + t4.replace(/\u001b\[\d\d?m/g, "").length + 1;
            }, 0) > 60)
              return r4[0] + (t3 === "" ? "" : t3 + "\n ") + " " + e4.join(",\n  ") + " " + r4[1];
            return r4[0] + t3 + " " + e4.join(", ") + " " + r4[1];
          }(D3, A3, C3)) : C3[0] + A3 + C3[1];
        }
        function l2(e3) {
          return "[" + Error.prototype.toString.call(e3) + "]";
        }
        function c2(e3, t3, r3, n3, s3, a3) {
          var i3, o3, l3;
          if ((l3 = Object.getOwnPropertyDescriptor(t3, s3) || { value: t3[s3] }).get ? o3 = l3.set ? e3.stylize("[Getter/Setter]", "special") : e3.stylize("[Getter]", "special") : l3.set && (o3 = e3.stylize("[Setter]", "special")), S2(n3, s3) || (i3 = "[" + s3 + "]"), o3 || (e3.seen.indexOf(l3.value) < 0 ? (o3 = f2(r3) ? u2(e3, l3.value, null) : u2(e3, l3.value, r3 - 1)).indexOf("\n") > -1 && (o3 = a3 ? o3.split("\n").map(function(e4) {
            return "  " + e4;
          }).join("\n").substr(2) : "\n" + o3.split("\n").map(function(e4) {
            return "   " + e4;
          }).join("\n")) : o3 = e3.stylize("[Circular]", "special")), y2(i3)) {
            if (a3 && s3.match(/^\d+$/))
              return o3;
            (i3 = JSON.stringify("" + s3)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (i3 = i3.substr(1, i3.length - 2), i3 = e3.stylize(i3, "name")) : (i3 = i3.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), i3 = e3.stylize(i3, "string"));
          }
          return i3 + ": " + o3;
        }
        function p2(e3) {
          return Array.isArray(e3);
        }
        function d2(e3) {
          return typeof e3 == "boolean";
        }
        function f2(e3) {
          return e3 === null;
        }
        function h2(e3) {
          return typeof e3 == "number";
        }
        function m2(e3) {
          return typeof e3 == "string";
        }
        function y2(e3) {
          return e3 === void 0;
        }
        function g2(e3) {
          return v2(e3) && D2(e3) === "[object RegExp]";
        }
        function v2(e3) {
          return typeof e3 == "object" && e3 !== null;
        }
        function b2(e3) {
          return v2(e3) && D2(e3) === "[object Date]";
        }
        function E2(e3) {
          return v2(e3) && (D2(e3) === "[object Error]" || e3 instanceof Error);
        }
        function x2(e3) {
          return typeof e3 == "function";
        }
        function D2(e3) {
          return Object.prototype.toString.call(e3);
        }
        function A2(e3) {
          return e3 < 10 ? "0" + e3.toString(10) : e3.toString(10);
        }
        t2.debuglog = function(e3) {
          if (y2(n2) && (n2 = ar.env.NODE_DEBUG || ""), e3 = e3.toUpperCase(), !s2[e3])
            if (new RegExp("\\b" + e3 + "\\b", "i").test(n2)) {
              var r3 = ar.pid;
              s2[e3] = function() {
                var n3 = t2.format.apply(t2, arguments);
                console.error("%s %d: %s", e3, r3, n3);
              };
            } else
              s2[e3] = function() {
              };
          return s2[e3];
        }, t2.inspect = a2, a2.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, a2.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, t2.isArray = p2, t2.isBoolean = d2, t2.isNull = f2, t2.isNullOrUndefined = function(e3) {
          return e3 == null;
        }, t2.isNumber = h2, t2.isString = m2, t2.isSymbol = function(e3) {
          return typeof e3 == "symbol";
        }, t2.isUndefined = y2, t2.isRegExp = g2, t2.isObject = v2, t2.isDate = b2, t2.isError = E2, t2.isFunction = x2, t2.isPrimitive = function(e3) {
          return e3 === null || typeof e3 == "boolean" || typeof e3 == "number" || typeof e3 == "string" || typeof e3 == "symbol" || e3 === void 0;
        }, t2.isBuffer = mE;
        var w2 = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        function C2() {
          var e3 = new Date(), t3 = [A2(e3.getHours()), A2(e3.getMinutes()), A2(e3.getSeconds())].join(":");
          return [e3.getDate(), w2[e3.getMonth()], t3].join(" ");
        }
        function S2(e3, t3) {
          return Object.prototype.hasOwnProperty.call(e3, t3);
        }
        t2.log = function() {
          console.log("%s - %s", C2(), t2.format.apply(t2, arguments));
        }, t2.inherits = yE, t2._extend = function(e3, t3) {
          if (!t3 || !v2(t3))
            return e3;
          for (var r3 = Object.keys(t3), n3 = r3.length; n3--; )
            e3[r3[n3]] = t3[r3[n3]];
          return e3;
        };
      }, "/$$rollup_base$$/node_modules/util"), vE = zt(function(e2) {
        function t2(e3, t3) {
          if (e3 === t3)
            return 0;
          for (var r3 = e3.length, n3 = t3.length, s3 = 0, a3 = Math.min(r3, n3); s3 < a3; ++s3)
            if (e3[s3] !== t3[s3]) {
              r3 = e3[s3], n3 = t3[s3];
              break;
            }
          return r3 < n3 ? -1 : n3 < r3 ? 1 : 0;
        }
        function r2(e3) {
          return $t.Buffer && typeof $t.Buffer.isBuffer == "function" ? $t.Buffer.isBuffer(e3) : !(e3 == null || !e3._isBuffer);
        }
        var n2 = Object.prototype.hasOwnProperty, s2 = Array.prototype.slice, a2 = function() {
        }.name === "foo";
        function i2(e3) {
          return Object.prototype.toString.call(e3);
        }
        function o2(e3) {
          return !r2(e3) && (typeof $t.ArrayBuffer == "function" && (typeof ArrayBuffer.isView == "function" ? ArrayBuffer.isView(e3) : !!e3 && (e3 instanceof DataView || !!(e3.buffer && e3.buffer instanceof ArrayBuffer))));
        }
        var u2 = e2.exports = h2, l2 = /\s*function\s+([^\(\s]*)\s*/;
        function c2(e3) {
          if (gE.isFunction(e3)) {
            if (a2)
              return e3.name;
            var t3 = e3.toString().match(l2);
            return t3 && t3[1];
          }
        }
        function p2(e3, t3) {
          return typeof e3 == "string" ? e3.length < t3 ? e3 : e3.slice(0, t3) : e3;
        }
        function d2(e3) {
          if (a2 || !gE.isFunction(e3))
            return gE.inspect(e3);
          var t3 = c2(e3);
          return "[Function" + (t3 ? ": " + t3 : "") + "]";
        }
        function f2(e3, t3, r3, n3, s3) {
          throw new u2.AssertionError({ message: r3, actual: e3, expected: t3, operator: n3, stackStartFunction: s3 });
        }
        function h2(e3, t3) {
          e3 || f2(e3, true, t3, "==", u2.ok);
        }
        function m2(e3, n3, a3, u3) {
          if (e3 === n3)
            return true;
          if (r2(e3) && r2(n3))
            return t2(e3, n3) === 0;
          if (gE.isDate(e3) && gE.isDate(n3))
            return e3.getTime() === n3.getTime();
          if (gE.isRegExp(e3) && gE.isRegExp(n3))
            return e3.source === n3.source && e3.global === n3.global && e3.multiline === n3.multiline && e3.lastIndex === n3.lastIndex && e3.ignoreCase === n3.ignoreCase;
          if (e3 !== null && typeof e3 == "object" || n3 !== null && typeof n3 == "object") {
            if (o2(e3) && o2(n3) && i2(e3) === i2(n3) && !(e3 instanceof Float32Array || e3 instanceof Float64Array))
              return t2(new Uint8Array(e3.buffer), new Uint8Array(n3.buffer)) === 0;
            if (r2(e3) !== r2(n3))
              return false;
            var l3 = (u3 = u3 || { actual: [], expected: [] }).actual.indexOf(e3);
            return l3 !== -1 && l3 === u3.expected.indexOf(n3) || (u3.actual.push(e3), u3.expected.push(n3), function(e4, t3, r3, n4) {
              if (e4 == null || t3 == null)
                return false;
              if (gE.isPrimitive(e4) || gE.isPrimitive(t3))
                return e4 === t3;
              if (r3 && Object.getPrototypeOf(e4) !== Object.getPrototypeOf(t3))
                return false;
              var a4 = y2(e4), i3 = y2(t3);
              if (a4 && !i3 || !a4 && i3)
                return false;
              if (a4)
                return m2(e4 = s2.call(e4), t3 = s2.call(t3), r3);
              var o3, u4, l4 = b2(e4), c3 = b2(t3);
              if (l4.length !== c3.length)
                return false;
              for (l4.sort(), c3.sort(), u4 = l4.length - 1; u4 >= 0; u4--)
                if (l4[u4] !== c3[u4])
                  return false;
              for (u4 = l4.length - 1; u4 >= 0; u4--)
                if (!m2(e4[o3 = l4[u4]], t3[o3], r3, n4))
                  return false;
              return true;
            }(e3, n3, a3, u3));
          }
          return a3 ? e3 === n3 : e3 == n3;
        }
        function y2(e3) {
          return Object.prototype.toString.call(e3) == "[object Arguments]";
        }
        function g2(e3, t3) {
          if (!e3 || !t3)
            return false;
          if (Object.prototype.toString.call(t3) == "[object RegExp]")
            return t3.test(e3);
          try {
            if (e3 instanceof t3)
              return true;
          } catch (e4) {
          }
          return !Error.isPrototypeOf(t3) && t3.call({}, e3) === true;
        }
        function v2(e3, t3, r3, n3) {
          var s3;
          if (typeof t3 != "function")
            throw new TypeError('"block" argument must be a function');
          typeof r3 == "string" && (n3 = r3, r3 = null), s3 = function(e4) {
            var t4;
            try {
              e4();
            } catch (e5) {
              t4 = e5;
            }
            return t4;
          }(t3), n3 = (r3 && r3.name ? " (" + r3.name + ")." : ".") + (n3 ? " " + n3 : "."), e3 && !s3 && f2(s3, r3, "Missing expected exception" + n3);
          var a3 = typeof n3 == "string", i3 = !e3 && s3 && !r3;
          if ((!e3 && gE.isError(s3) && a3 && g2(s3, r3) || i3) && f2(s3, r3, "Got unwanted exception" + n3), e3 && s3 && r3 && !g2(s3, r3) || !e3 && s3)
            throw s3;
        }
        u2.AssertionError = function(e3) {
          this.name = "AssertionError", this.actual = e3.actual, this.expected = e3.expected, this.operator = e3.operator, e3.message ? (this.message = e3.message, this.generatedMessage = false) : (this.message = function(e4) {
            return p2(d2(e4.actual), 128) + " " + e4.operator + " " + p2(d2(e4.expected), 128);
          }(this), this.generatedMessage = true);
          var t3 = e3.stackStartFunction || f2;
          if (Error.captureStackTrace)
            Error.captureStackTrace(this, t3);
          else {
            var r3 = new Error();
            if (r3.stack) {
              var n3 = r3.stack, s3 = c2(t3), a3 = n3.indexOf("\n" + s3);
              if (a3 >= 0) {
                var i3 = n3.indexOf("\n", a3 + 1);
                n3 = n3.substring(i3 + 1);
              }
              this.stack = n3;
            }
          }
        }, gE.inherits(u2.AssertionError, Error), u2.fail = f2, u2.ok = h2, u2.equal = function(e3, t3, r3) {
          e3 != t3 && f2(e3, t3, r3, "==", u2.equal);
        }, u2.notEqual = function(e3, t3, r3) {
          e3 == t3 && f2(e3, t3, r3, "!=", u2.notEqual);
        }, u2.deepEqual = function(e3, t3, r3) {
          m2(e3, t3, false) || f2(e3, t3, r3, "deepEqual", u2.deepEqual);
        }, u2.deepStrictEqual = function(e3, t3, r3) {
          m2(e3, t3, true) || f2(e3, t3, r3, "deepStrictEqual", u2.deepStrictEqual);
        }, u2.notDeepEqual = function(e3, t3, r3) {
          m2(e3, t3, false) && f2(e3, t3, r3, "notDeepEqual", u2.notDeepEqual);
        }, u2.notDeepStrictEqual = function e3(t3, r3, n3) {
          m2(t3, r3, true) && f2(t3, r3, n3, "notDeepStrictEqual", e3);
        }, u2.strictEqual = function(e3, t3, r3) {
          e3 !== t3 && f2(e3, t3, r3, "===", u2.strictEqual);
        }, u2.notStrictEqual = function(e3, t3, r3) {
          e3 === t3 && f2(e3, t3, r3, "!==", u2.notStrictEqual);
        }, u2.throws = function(e3, t3, r3) {
          v2(true, e3, t3, r3);
        }, u2.doesNotThrow = function(e3, t3, r3) {
          v2(false, e3, t3, r3);
        }, u2.ifError = function(e3) {
          if (e3)
            throw e3;
        }, u2.strict = hE(function e3(t3, r3) {
          t3 || f2(t3, true, r3, "==", e3);
        }, u2, { equal: u2.strictEqual, deepEqual: u2.deepStrictEqual, notEqual: u2.notStrictEqual, notDeepEqual: u2.notDeepStrictEqual }), u2.strict.strict = u2.strict;
        var b2 = Object.keys || function(e3) {
          var t3 = [];
          for (var r3 in e3)
            n2.call(e3, r3) && t3.push(r3);
          return t3;
        };
      }, "/$$rollup_base$$/node_modules/assert"), bE = function() {
        function e2(e3, t3, r2) {
          this._statements = [], this._resultName = null, this._scope = null, this._hub = null, this._importedSource = void 0, this._scope = t3, this._hub = r2, this._importedSource = e3;
        }
        var t2 = e2.prototype;
        return t2.done = function() {
          return { statements: this._statements, resultName: this._resultName };
        }, t2.import = function() {
          return this._statements.push(la([], Cs(this._importedSource))), this;
        }, t2.require = function() {
          return this._statements.push(ys(ls(Ds("require"), [Cs(this._importedSource)]))), this;
        }, t2.namespace = function(e3) {
          e3 === void 0 && (e3 = "namespace");
          var t3 = this._scope.generateUidIdentifier(e3), r2 = this._statements[this._statements.length - 1];
          return vE(r2.type === "ImportDeclaration"), vE(r2.specifiers.length === 0), r2.specifiers = [pa(t3)], this._resultName = Ju(t3), this;
        }, t2.default = function(e3) {
          e3 = this._scope.generateUidIdentifier(e3);
          var t3 = this._statements[this._statements.length - 1];
          return vE(t3.type === "ImportDeclaration"), vE(t3.specifiers.length === 0), t3.specifiers = [ca(e3)], this._resultName = Ju(e3), this;
        }, t2.named = function(e3, t3) {
          if (t3 === "default")
            return this.default(e3);
          e3 = this._scope.generateUidIdentifier(e3);
          var r2 = this._statements[this._statements.length - 1];
          return vE(r2.type === "ImportDeclaration"), vE(r2.specifiers.length === 0), r2.specifiers = [da(e3, Ds(t3))], this._resultName = Ju(e3), this;
        }, t2.var = function(e3) {
          e3 = this._scope.generateUidIdentifier(e3);
          var t3 = this._statements[this._statements.length - 1];
          return t3.type !== "ExpressionStatement" && (vE(this._resultName), t3 = ys(this._resultName), this._statements.push(t3)), this._statements[this._statements.length - 1] = Ks("var", [zs(e3, t3.expression)]), this._resultName = Ju(e3), this;
        }, t2.defaultInterop = function() {
          return this._interop(this._hub.addHelper("interopRequireDefault"));
        }, t2.wildcardInterop = function() {
          return this._interop(this._hub.addHelper("interopRequireWildcard"));
        }, t2._interop = function(e3) {
          var t3 = this._statements[this._statements.length - 1];
          return t3.type === "ExpressionStatement" ? t3.expression = ls(e3, [t3.expression]) : t3.type === "VariableDeclaration" ? (vE(t3.declarations.length === 1), t3.declarations[0].init = ls(e3, [t3.declarations[0].init])) : vE.fail("Unexpected type."), this;
        }, t2.prop = function(e3) {
          var t3 = this._statements[this._statements.length - 1];
          return t3.type === "ExpressionStatement" ? t3.expression = Fs2(t3.expression, Ds(e3)) : t3.type === "VariableDeclaration" ? (vE(t3.declarations.length === 1), t3.declarations[0].init = Fs2(t3.declarations[0].init, Ds(e3))) : vE.fail("Unexpected type:" + t3.type), this;
        }, t2.read = function(e3) {
          this._resultName = Fs2(this._resultName, Ds(e3));
        }, e2;
      }();
      function EE(e2) {
        var t2 = e2.node.sourceType;
        if (t2 !== "module" && t2 !== "script")
          throw e2.buildCodeFrameError('Unknown sourceType "' + t2 + '", cannot transform.');
        return e2.node.sourceType === "module";
      }
      var xE = function() {
        function e2(e3, t3, r2) {
          this._defaultOpts = { importedSource: null, importedType: "commonjs", importedInterop: "babel", importingInterop: "babel", ensureLiveReference: false, ensureNoContext: false, importPosition: "before" };
          var n2 = e3.find(function(e4) {
            return e4.isProgram();
          });
          this._programPath = n2, this._programScope = n2.scope, this._hub = n2.hub, this._defaultOpts = this._applyDefaults(t3, r2, true);
        }
        var t2 = e2.prototype;
        return t2.addDefault = function(e3, t3) {
          return this.addNamed("default", e3, t3);
        }, t2.addNamed = function(e3, t3, r2) {
          return vE(typeof e3 == "string"), this._generateImport(this._applyDefaults(t3, r2), e3);
        }, t2.addNamespace = function(e3, t3) {
          return this._generateImport(this._applyDefaults(e3, t3), null);
        }, t2.addSideEffect = function(e3, t3) {
          return this._generateImport(this._applyDefaults(e3, t3), false);
        }, t2._applyDefaults = function(e3, t3, r2) {
          r2 === void 0 && (r2 = false);
          var n2 = [];
          typeof e3 == "string" ? (n2.push({ importedSource: e3 }), n2.push(t3)) : (vE(!t3, "Unexpected secondary arguments."), n2.push(e3));
          for (var s2 = Object.assign({}, this._defaultOpts), a2 = function() {
            var e4 = o2[i2];
            if (!e4)
              return "continue";
            Object.keys(s2).forEach(function(t4) {
              e4[t4] !== void 0 && (s2[t4] = e4[t4]);
            }), r2 || (e4.nameHint !== void 0 && (s2.nameHint = e4.nameHint), e4.blockHoist !== void 0 && (s2.blockHoist = e4.blockHoist));
          }, i2 = 0, o2 = n2; i2 < o2.length; i2++)
            a2();
          return s2;
        }, t2._generateImport = function(e3, t3) {
          var r2 = t3 === "default", n2 = !!t3 && !r2, s2 = t3 === null, a2 = e3.importedSource, i2 = e3.importedType, o2 = e3.importedInterop, u2 = e3.importingInterop, l2 = e3.ensureLiveReference, c2 = e3.ensureNoContext, p2 = e3.nameHint, d2 = e3.importPosition, f2 = e3.blockHoist, h2 = p2 || t3, m2 = EE(this._programPath), y2 = m2 && u2 === "node", g2 = m2 && u2 === "babel";
          if (d2 === "after" && !m2)
            throw new Error('"importPosition": "after" is only supported in modules');
          var v2 = new bE(a2, this._programScope, this._hub);
          if (i2 === "es6") {
            if (!y2 && !g2)
              throw new Error("Cannot import an ES6 module from CommonJS");
            v2.import(), s2 ? v2.namespace(p2 || a2) : (r2 || n2) && v2.named(h2, t3);
          } else {
            if (i2 !== "commonjs")
              throw new Error('Unexpected interopType "' + i2 + '"');
            if (o2 === "babel")
              if (y2) {
                h2 = h2 !== "default" ? h2 : a2;
                var b2 = a2 + "$es6Default";
                v2.import(), s2 ? v2.default(b2).var(h2 || a2).wildcardInterop() : r2 ? l2 ? v2.default(b2).var(h2 || a2).defaultInterop().read("default") : v2.default(b2).var(h2).defaultInterop().prop(t3) : n2 && v2.default(b2).read(t3);
              } else
                g2 ? (v2.import(), s2 ? v2.namespace(h2 || a2) : (r2 || n2) && v2.named(h2, t3)) : (v2.require(), s2 ? v2.var(h2 || a2).wildcardInterop() : (r2 || n2) && l2 ? r2 ? (h2 = h2 !== "default" ? h2 : a2, v2.var(h2).read(t3), v2.defaultInterop()) : v2.var(a2).read(t3) : r2 ? v2.var(h2).defaultInterop().prop(t3) : n2 && v2.var(h2).prop(t3));
            else if (o2 === "compiled")
              y2 ? (v2.import(), s2 ? v2.default(h2 || a2) : (r2 || n2) && v2.default(a2).read(h2)) : g2 ? (v2.import(), s2 ? v2.namespace(h2 || a2) : (r2 || n2) && v2.named(h2, t3)) : (v2.require(), s2 ? v2.var(h2 || a2) : (r2 || n2) && (l2 ? v2.var(a2).read(h2) : v2.prop(t3).var(h2)));
            else {
              if (o2 !== "uncompiled")
                throw new Error('Unknown importedInterop "' + o2 + '".');
              if (r2 && l2)
                throw new Error("No live reference for commonjs default");
              y2 ? (v2.import(), s2 ? v2.default(h2 || a2) : r2 ? v2.default(h2) : n2 && v2.default(a2).read(h2)) : g2 ? (v2.import(), s2 ? v2.default(h2 || a2) : r2 ? v2.default(h2) : n2 && v2.named(h2, t3)) : (v2.require(), s2 ? v2.var(h2 || a2) : r2 ? v2.var(h2) : n2 && (l2 ? v2.var(a2).read(h2) : v2.var(h2).prop(t3)));
            }
          }
          var E2 = v2.done(), x2 = E2.statements, D2 = E2.resultName;
          return this._insertStatements(x2, d2, f2), (r2 || n2) && c2 && D2.type !== "Identifier" ? Ms([Ss(0), D2]) : D2;
        }, t2._insertStatements = function(e3, t3, r2) {
          t3 === void 0 && (t3 = "before"), r2 === void 0 && (r2 = 3);
          var n2 = this._programPath.get("body");
          if (t3 === "after") {
            for (var s2 = n2.length - 1; s2 >= 0; s2--)
              if (n2[s2].isImportDeclaration())
                return void n2[s2].insertAfter(e3);
          } else {
            e3.forEach(function(e4) {
              e4._blockHoist = r2;
            });
            var a2 = n2.find(function(e4) {
              var t4 = e4.node._blockHoist;
              return Number.isFinite(t4) && t4 < 4;
            });
            if (a2)
              return void a2.insertBefore(e3);
          }
          this._programPath.unshiftContainer("body", e3);
        }, e2;
      }();
      function DE(e2, t2, r2, n2) {
        return new xE(e2).addNamed(t2, r2, n2);
      }
      function AE(e2) {
        var t2 = e2, r2 = t2.node, n2 = t2.parentPath;
        if (n2.isLogicalExpression()) {
          var s2 = n2.node, a2 = s2.operator, i2 = s2.right;
          if (a2 === "&&" || a2 === "||" || a2 === "??" && r2 === i2)
            return AE(n2);
        }
        if (n2.isSequenceExpression()) {
          var o2 = n2.node.expressions;
          return o2[o2.length - 1] !== r2 || AE(n2);
        }
        return n2.isConditional({ test: r2 }) || n2.isUnaryExpression({ operator: "!" }) || n2.isLoop({ test: r2 });
      }
      var wE = function() {
        function e2() {
          this._map = void 0, this._map = new WeakMap();
        }
        var t2 = e2.prototype;
        return t2.has = function(e3) {
          return this._map.has(e3);
        }, t2.get = function(e3) {
          if (this.has(e3)) {
            var t3 = this._map.get(e3), r2 = t3.value;
            return t3.count--, t3.count === 0 ? rs("=", r2, e3) : r2;
          }
        }, t2.set = function(e3, t3, r2) {
          return this._map.set(e3, { count: r2, value: t3 });
        }, e2;
      }();
      function CE(e2, t2) {
        var r2 = e2.node;
        if (e2.isOptionalMemberExpression())
          return Fs2(t2, r2.property, r2.computed);
        if (e2.isOptionalCallExpression()) {
          var n2 = e2.get("callee");
          if (e2.node.optional && n2.isOptionalMemberExpression()) {
            var s2 = n2.node.object, a2 = e2.scope.maybeGenerateMemoised(s2) || s2;
            return n2.get("object").replaceWith(rs("=", a2, s2)), ls(Fs2(t2, Ds("call")), [a2].concat(c(r2.arguments)));
          }
          return ls(t2, r2.arguments);
        }
        return e2.node;
      }
      var SE, TE = { memoise: function() {
      }, handle: function(e2, t2) {
        var r2 = e2.node, n2 = e2.parent, s2 = e2.parentPath, a2 = e2.scope;
        if (e2.isOptionalMemberExpression()) {
          if (function(e3) {
            for (; e3 && !e3.isProgram(); ) {
              var t3 = e3, r3 = t3.parentPath, n3 = t3.container, s3 = t3.listKey, a3 = r3.node;
              if (s3) {
                if (n3 !== a3[s3])
                  return true;
              } else if (n3 !== a3)
                return true;
              e3 = r3;
            }
            return false;
          }(e2))
            return;
          var i2 = e2.find(function(t3) {
            var r3 = t3.node, n3 = t3.parent, s3 = t3.parentPath;
            return s3.isOptionalMemberExpression() ? n3.optional || n3.object !== r3 : !s3.isOptionalCallExpression() || (r3 !== e2.node && n3.optional || n3.callee !== r3);
          });
          if (a2.path.isPattern())
            return void i2.replaceWith(ls(ea([], i2.node), []));
          var o2 = AE(i2), u2 = i2.parentPath;
          if (u2.isUpdateExpression({ argument: r2 }) || u2.isAssignmentExpression({ left: r2 }))
            throw e2.buildCodeFrameError("can't handle assignment");
          var l2 = u2.isUnaryExpression({ operator: "delete" });
          if (l2 && i2.isOptionalMemberExpression() && i2.get("property").isPrivateName())
            throw e2.buildCodeFrameError("can't delete a private class element");
          for (var p2 = e2; ; )
            if (p2.isOptionalMemberExpression()) {
              if (p2.node.optional)
                break;
              p2 = p2.get("object");
            } else {
              if (!p2.isOptionalCallExpression())
                throw new Error("Internal error: unexpected " + p2.node.type);
              if (p2.node.optional)
                break;
              p2 = p2.get("callee");
            }
          var d2 = p2.isOptionalMemberExpression() ? "object" : "callee", f2 = p2.node[d2], h2 = a2.maybeGenerateMemoised(f2), m2 = h2 != null ? h2 : f2, y2 = s2.isOptionalCallExpression({ callee: r2 }), g2 = s2.isCallExpression({ callee: r2 });
          p2.replaceWith(CE(p2, m2)), y2 ? n2.optional ? s2.replaceWith(this.optionalCall(e2, n2.arguments)) : s2.replaceWith(this.call(e2, n2.arguments)) : g2 ? e2.replaceWith(this.boundGet(e2)) : e2.replaceWith(this.get(e2));
          for (var v2, b2 = e2.node, E2 = e2; E2 !== i2; ) {
            var x2 = E2.parentPath;
            if (x2 === i2 && y2 && n2.optional) {
              b2 = x2.node;
              break;
            }
            b2 = CE(x2, b2), E2 = x2;
          }
          var D2 = i2.parentPath;
          if (M(b2) && D2.isOptionalCallExpression({ callee: i2.node, optional: true })) {
            var A2 = b2.object;
            (v2 = e2.scope.maybeGenerateMemoised(A2)) && (b2.object = rs("=", v2, A2));
          }
          var w2 = i2;
          l2 && (w2 = D2, b2 = D2.node);
          var C2, S2, T2 = h2 ? rs("=", Ju(m2), Ju(f2)) : Ju(m2);
          if (o2 ? (C2 = t2 ? ns("!=", T2, Ts()) : Is("&&", ns("!==", T2, Ts()), ns("!==", Ju(m2), a2.buildUndefinedNode())), w2.replaceWith(Is("&&", C2, b2))) : (S2 = t2 ? ns("==", T2, Ts()) : Is("||", ns("===", T2, Ts()), ns("===", Ju(m2), a2.buildUndefinedNode())), w2.replaceWith(ps(S2, l2 ? js(true) : a2.buildUndefinedNode(), b2))), v2) {
            var j2 = D2.node;
            D2.replaceWith(Ta(Sa(j2.callee, Ds("call"), false, true), [Ju(v2)].concat(c(j2.arguments)), false));
          }
        } else if (s2.isUpdateExpression({ argument: r2 })) {
          if (this.simpleSet)
            return void e2.replaceWith(this.simpleSet(e2));
          var P2 = n2.operator, I2 = n2.prefix;
          this.memoise(e2, 2);
          var F2 = ns(P2[0], qs("+", this.get(e2)), Ss(1));
          if (I2)
            s2.replaceWith(this.set(e2, F2));
          else {
            var k2 = e2.scope, O2 = k2.generateUidIdentifierBasedOnNode(r2);
            k2.push({ id: O2 }), F2.left = rs("=", Ju(O2), F2.left), s2.replaceWith(Ms([this.set(e2, F2), Ju(O2)]));
          }
        } else if (s2.isAssignmentExpression({ left: r2 })) {
          if (this.simpleSet)
            return void e2.replaceWith(this.simpleSet(e2));
          var R2 = n2.operator, N2 = n2.right;
          if (R2 === "=")
            s2.replaceWith(this.set(e2, N2));
          else {
            var B2 = R2.slice(0, -1);
            Or.includes(B2) ? (this.memoise(e2, 1), s2.replaceWith(Is(B2, this.get(e2), this.set(e2, N2)))) : (this.memoise(e2, 2), s2.replaceWith(this.set(e2, ns(B2, this.get(e2), N2))));
          }
        } else {
          if (!s2.isCallExpression({ callee: r2 }))
            return s2.isOptionalCallExpression({ callee: r2 }) ? a2.path.isPattern() ? void s2.replaceWith(ls(ea([], s2.node), [])) : void s2.replaceWith(this.optionalCall(e2, n2.arguments)) : void (s2.isForXStatement({ left: r2 }) || s2.isObjectProperty({ value: r2 }) && s2.parentPath.isObjectPattern() || s2.isAssignmentPattern({ left: r2 }) && s2.parentPath.isObjectProperty({ value: n2 }) && s2.parentPath.parentPath.isObjectPattern() || s2.isArrayPattern() || s2.isAssignmentPattern({ left: r2 }) && s2.parentPath.isArrayPattern() || s2.isRestElement() ? e2.replaceWith(this.destructureSet(e2)) : s2.isTaggedTemplateExpression() ? e2.replaceWith(this.boundGet(e2)) : e2.replaceWith(this.get(e2)));
          s2.replaceWith(this.call(e2, n2.arguments));
        }
      } };
      function jE(e2, t2, r2) {
        e2.traverse(t2, Object.assign({}, TE, r2, { memoiser: new wE() }));
      }
      function PE(e2, t2, r2, n2) {
        return r2.length === 1 && be(r2[0]) && F(r2[0].argument, { name: "arguments" }) ? n2 ? Ta(Sa(e2, Ds("apply"), false, true), [t2, r2[0].argument], false) : ls(Fs2(e2, Ds("apply")), [t2, r2[0].argument]) : n2 ? Ta(Sa(e2, Ds("call"), false, true), [t2].concat(c(r2)), false) : ls(Fs2(e2, Ds("call")), [t2].concat(c(r2)));
      }
      function IE(e2, t2, r2, n2) {
        e2 = Ju(e2);
        var s2 = t2 || n2 ? e2 : Fs2(e2, Ds("prototype"));
        return ls(r2.addHelper("getPrototypeOf"), [s2]);
      }
      var FE = ((SE = {})[(Eo ? "StaticBlock|" : "") + "ClassPrivateProperty|TypeAnnotation"] = function(e2) {
        e2.skip();
      }, SE.Function = function(e2) {
        e2.isMethod() || e2.isArrowFunctionExpression() || e2.skip();
      }, SE["Method|ClassProperty"] = function(e2) {
        !function(e3) {
          if (e3.node.computed)
            for (var t2, r2 = f(Qr[e3.type]); !(t2 = r2()).done; ) {
              var n2 = t2.value;
              n2 !== "key" && e3.skipKey(n2);
            }
          else
            e3.skip();
        }(e2);
      }, SE), kE = vv.visitors.merge([FE, { Super: function(e2, t2) {
        var r2 = e2.node, n2 = e2.parentPath;
        n2.isMemberExpression({ object: r2 }) && t2.handle(n2);
      } }]), OE = vv.visitors.merge([FE, { Scopable: function(e2, t2) {
        var r2 = t2.refName, n2 = e2.scope.getOwnBinding(r2);
        n2 && n2.identifier.name === r2 && e2.scope.rename(r2);
      } }]), RE = { memoise: function(e2, t2) {
        var r2 = e2.scope, n2 = e2.node, s2 = n2.computed, a2 = n2.property;
        if (s2) {
          var i2 = r2.maybeGenerateMemoised(a2);
          i2 && this.memoiser.set(a2, i2, t2);
        }
      }, prop: function(e2) {
        var t2 = e2.node, r2 = t2.computed, n2 = t2.property;
        return this.memoiser.has(n2) ? Ju(this.memoiser.get(n2)) : r2 ? Ju(n2) : Cs(n2.name);
      }, get: function(e2) {
        return this._get(e2, this._getThisRefs());
      }, _get: function(e2, t2) {
        var r2 = IE(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);
        return ls(this.file.addHelper("get"), [t2.memo ? Ms([t2.memo, r2]) : r2, this.prop(e2), t2.this]);
      }, _getThisRefs: function() {
        if (!this.isDerivedConstructor)
          return { this: Ws() };
        var e2 = this.scope.generateDeclaredUidIdentifier("thisSuper");
        return { memo: rs("=", e2, Ws()), this: Ju(e2) };
      }, set: function(e2, t2) {
        var r2 = this._getThisRefs(), n2 = IE(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);
        return ls(this.file.addHelper("set"), [r2.memo ? Ms([r2.memo, n2]) : n2, this.prop(e2), t2, r2.this, js(e2.isInStrictMode())]);
      }, destructureSet: function(e2) {
        throw e2.buildCodeFrameError("Destructuring to a super field is not supported yet.");
      }, call: function(e2, t2) {
        var r2 = this._getThisRefs();
        return PE(this._get(e2, r2), Ju(r2.this), t2, false);
      }, optionalCall: function(e2, t2) {
        var r2 = this._getThisRefs();
        return PE(this._get(e2, r2), Ju(r2.this), t2, true);
      } }, NE = Object.assign({}, RE, { prop: function(e2) {
        var t2 = e2.node.property;
        return this.memoiser.has(t2) ? Ju(this.memoiser.get(t2)) : Ju(t2);
      }, get: function(e2) {
        var t2, r2, n2, s2 = this.isStatic, a2 = this.getSuperRef, i2 = e2.node.computed, o2 = this.prop(e2);
        s2 ? t2 = (r2 = a2()) != null ? r2 : Fs2(Ds("Function"), Ds("prototype")) : t2 = Fs2((n2 = a2()) != null ? n2 : Ds("Object"), Ds("prototype"));
        return Fs2(t2, o2, i2);
      }, set: function(e2, t2) {
        var r2 = e2.node.computed, n2 = this.prop(e2);
        return rs("=", Fs2(Ws(), n2, r2), t2);
      }, destructureSet: function(e2) {
        var t2 = e2.node.computed, r2 = this.prop(e2);
        return Fs2(Ws(), r2, t2);
      }, call: function(e2, t2) {
        return PE(this.get(e2), Ws(), t2, false);
      }, optionalCall: function(e2, t2) {
        return PE(this.get(e2), Ws(), t2, true);
      } }), BE = function() {
        function e2(e3) {
          var t3, r2 = e3.methodPath;
          this.methodPath = r2, this.isDerivedConstructor = r2.isClassMethod({ kind: "constructor" }) && !!e3.superRef, this.isStatic = r2.isObjectMethod() || r2.node.static || (r2.isStaticBlock == null ? void 0 : r2.isStaticBlock()), this.isPrivateMethod = r2.isPrivate() && r2.isMethod(), this.file = e3.file, this.constantSuper = (t3 = e3.constantSuper) != null ? t3 : e3.isLoose, this.opts = e3;
        }
        var t2 = e2.prototype;
        return t2.getObjectRef = function() {
          return Ju(this.opts.objectRef || this.opts.getObjectRef());
        }, t2.getSuperRef = function() {
          return this.opts.superRef ? Ju(this.opts.superRef) : this.opts.getSuperRef ? Ju(this.opts.getSuperRef()) : void 0;
        }, t2.replace = function() {
          this.opts.refToPreserve && this.methodPath.traverse(OE, { refName: this.opts.refToPreserve.name });
          var e3 = this.constantSuper ? NE : RE;
          jE(this.methodPath, kE, Object.assign({ file: this.file, scope: this.methodPath.scope, isDerivedConstructor: this.isDerivedConstructor, isStatic: this.isStatic, isPrivateMethod: this.isPrivateMethod, getObjectRef: this.getObjectRef.bind(this), getSuperRef: this.getSuperRef.bind(this) }, e3));
        }, e2;
      }();
      function _E(e2) {
        vv(e2.node, Object.assign({}, LE, { noScope: true }));
      }
      var LE = vv.visitors.merge([FE, { ThisExpression: function(e2) {
        function t2(t3) {
          return e2.apply(this, arguments);
        }
        return t2.toString = function() {
          return e2.toString();
        }, t2;
      }(function(e2) {
        e2.replaceWith(qs("void", Ss(0), true));
      }) }]);
      function ME(e2, t2) {
        e2.traverse(GE, { scope: e2.scope, bindingNames: t2, seen: new WeakSet() });
      }
      var UE, GE = { UpdateExpression: { exit: function(e2) {
        var t2 = this.scope, r2 = this.bindingNames, n2 = e2.get("argument");
        if (n2.isIdentifier()) {
          var s2 = n2.node.name;
          if (r2.has(s2) && t2.getBinding(s2) === e2.scope.getBinding(s2))
            if (e2.parentPath.isExpressionStatement() && !e2.isCompletionRecord()) {
              var a2 = e2.node.operator == "++" ? "+=" : "-=";
              e2.replaceWith(rs(a2, n2.node, Ss(1)));
            } else if (e2.node.prefix)
              e2.replaceWith(rs("=", Ds(s2), ns(e2.node.operator[0], qs("+", n2.node), Ss(1))));
            else {
              var i2 = e2.scope.generateUidIdentifierBasedOnNode(n2.node, "old"), o2 = i2.name;
              e2.scope.push({ id: i2 });
              var u2 = ns(e2.node.operator[0], Ds(o2), Ss(1));
              e2.replaceWith(Ms([rs("=", Ds(o2), qs("+", n2.node)), rs("=", Ju(n2.node), u2), Ds(o2)]));
            }
        }
      } }, AssignmentExpression: { exit: function(e2) {
        var t2 = this.scope, r2 = this.seen, n2 = this.bindingNames;
        if (e2.node.operator !== "=" && !r2.has(e2.node)) {
          r2.add(e2.node);
          var s2 = e2.get("left");
          if (s2.isIdentifier()) {
            var a2 = s2.node.name;
            n2.has(a2) && t2.getBinding(a2) === e2.scope.getBinding(a2) && (e2.node.right = ns(e2.node.operator.slice(0, -1), Ju(e2.node.left), e2.node.right), e2.node.operator = "=");
          }
        }
      } } };
      var VE = { Scope: function(e2) {
        e2.skip();
      }, ClassDeclaration: function(e2) {
        var t2 = this.requeueInParent, r2 = this.exported, n2 = this.metadata, s2 = e2.node.id;
        if (!s2)
          throw new Error("Expected class to have a name");
        var a2 = s2.name, i2 = r2.get(a2) || [];
        if (i2.length > 0) {
          var o2 = ys(WE(n2, i2, Ds(a2)));
          o2._blockHoist = e2.node._blockHoist, t2(e2.insertAfter(o2)[0]);
        }
      }, VariableDeclaration: function(e2) {
        var t2 = this.requeueInParent, r2 = this.exported, n2 = this.metadata;
        Object.keys(e2.getOuterBindingIdentifiers()).forEach(function(s2) {
          var a2 = r2.get(s2) || [];
          if (a2.length > 0) {
            var i2 = ys(WE(n2, a2, Ds(s2)));
            i2._blockHoist = e2.node._blockHoist, t2(e2.insertAfter(i2)[0]);
          }
        });
      } }, WE = function(e2, t2, r2) {
        return (t2 || []).reduce(function(t3, r3) {
          var n2 = e2.stringSpecifiers.has(r3);
          return rs("=", Fs2(Ds(e2.exportName), n2 ? Cs(r3) : Ds(r3), n2), t3);
        }, r2);
      }, HE = function(e2) {
        return Eg.expression.ast(UE || (UE = u([`
    (function() {
      throw new Error('"' + '`, `' + '" is read-only.');
    })()
  `])), e2);
      }, XE = { ReferencedIdentifier: function(e2) {
        var t2 = this.seen, r2 = this.buildImportReference, n2 = this.scope, s2 = this.imported, a2 = this.requeueInParent;
        if (!t2.has(e2.node)) {
          t2.add(e2.node);
          var i2 = e2.node.name, o2 = s2.get(i2);
          if (o2) {
            var u2 = e2.scope.getBinding(i2);
            if (n2.getBinding(i2) !== u2)
              return;
            var l2 = r2(o2, e2.node);
            if (l2.loc = e2.node.loc, (e2.parentPath.isCallExpression({ callee: e2.node }) || e2.parentPath.isOptionalCallExpression({ callee: e2.node }) || e2.parentPath.isTaggedTemplateExpression({ tag: e2.node })) && M(l2))
              e2.replaceWith(Ms([Ss(0), l2]));
            else if (e2.isJSXIdentifier() && M(l2)) {
              var c2 = l2.object, p2 = l2.property;
              e2.replaceWith(qi(Xi(c2.name), Xi(p2.name)));
            } else
              e2.replaceWith(l2);
            a2(e2), e2.skip();
          }
        }
      }, AssignmentExpression: { exit: function(e2) {
        var t2 = this, r2 = this.scope, n2 = this.seen, s2 = this.imported, a2 = this.exported, i2 = this.requeueInParent, o2 = this.buildImportReference;
        if (!n2.has(e2.node)) {
          n2.add(e2.node);
          var u2 = e2.get("left");
          if (!u2.isMemberExpression())
            if (u2.isIdentifier()) {
              var l2 = u2.node.name;
              if (r2.getBinding(l2) !== e2.scope.getBinding(l2))
                return;
              var c2 = a2.get(l2), p2 = s2.get(l2);
              if ((c2 == null ? void 0 : c2.length) > 0 || p2) {
                vE(e2.node.operator === "=", "Path was not simplified");
                var d2 = e2.node;
                p2 && (d2.left = o2(p2, d2.left), d2.right = Ms([d2.right, HE(l2)])), e2.replaceWith(WE(this.metadata, c2, d2)), i2(e2);
              }
            } else {
              var f2 = u2.getOuterBindingIdentifiers(), h2 = Object.keys(f2).filter(function(t3) {
                return r2.getBinding(t3) === e2.scope.getBinding(t3);
              }), m2 = h2.find(function(e3) {
                return s2.has(e3);
              });
              m2 && (e2.node.right = Ms([e2.node.right, HE(m2)]));
              var y2 = [];
              if (h2.forEach(function(e3) {
                var r3 = a2.get(e3) || [];
                r3.length > 0 && y2.push(WE(t2.metadata, r3, Ds(e3)));
              }), y2.length > 0) {
                var g2 = Ms(y2);
                e2.parentPath.isExpressionStatement() && ((g2 = ys(g2))._blockHoist = e2.parentPath.node._blockHoist), i2(e2.insertAfter(g2)[0]);
              }
            }
        }
      } }, "ForOfStatement|ForInStatement": function(e2) {
        var t2 = e2.scope, r2 = e2.node.left, n2 = this.exported, s2 = this.scope;
        if (!Z(r2)) {
          for (var a2 = false, i2 = e2.get("body"), o2 = i2.scope, u2 = 0, l2 = Object.keys(gc(r2)); u2 < l2.length; u2++) {
            var c2 = l2[u2];
            n2.get(c2) && s2.getBinding(c2) === t2.getBinding(c2) && (a2 = true, o2.hasOwnBinding(c2) && o2.rename(c2));
          }
          if (!a2)
            return;
          var p2 = t2.generateUidIdentifierBasedOnNode(r2);
          i2.unshiftContainer("body", ys(rs("=", r2, p2))), e2.get("left").replaceWith(Ks("let", [zs(Ju(p2))])), t2.registerDeclaration(e2.get("left"));
        }
      } };
      function qE(e2, t2) {
        for (var r2 = 0, n2 = e2.length - 1; n2 >= 0; n2--) {
          var s2 = e2[n2];
          s2 === "." ? e2.splice(n2, 1) : s2 === ".." ? (e2.splice(n2, 1), r2++) : r2 && (e2.splice(n2, 1), r2--);
        }
        if (t2)
          for (; r2--; r2)
            e2.unshift("..");
        return e2;
      }
      var $E = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/, KE = function(e2) {
        return $E.exec(e2).slice(1);
      };
      function zE() {
        for (var e2 = "", t2 = false, r2 = arguments.length - 1; r2 >= -1 && !t2; r2--) {
          var n2 = r2 >= 0 ? arguments[r2] : "/";
          if (typeof n2 != "string")
            throw new TypeError("Arguments to path.resolve must be strings");
          n2 && (e2 = n2 + "/" + e2, t2 = n2.charAt(0) === "/");
        }
        return (t2 ? "/" : "") + (e2 = qE(sx(e2.split("/"), function(e3) {
          return !!e3;
        }), !t2).join("/")) || ".";
      }
      function JE(e2) {
        var t2 = YE(e2), r2 = ax(e2, -1) === "/";
        return (e2 = qE(sx(e2.split("/"), function(e3) {
          return !!e3;
        }), !t2).join("/")) || t2 || (e2 = "."), e2 && r2 && (e2 += "/"), (t2 ? "/" : "") + e2;
      }
      function YE(e2) {
        return e2.charAt(0) === "/";
      }
      function QE() {
        var e2 = Array.prototype.slice.call(arguments, 0);
        return JE(sx(e2, function(e3, t2) {
          if (typeof e3 != "string")
            throw new TypeError("Arguments to path.join must be strings");
          return e3;
        }).join("/"));
      }
      function ZE(e2, t2) {
        function r2(e3) {
          for (var t3 = 0; t3 < e3.length && e3[t3] === ""; t3++)
            ;
          for (var r3 = e3.length - 1; r3 >= 0 && e3[r3] === ""; r3--)
            ;
          return t3 > r3 ? [] : e3.slice(t3, r3 - t3 + 1);
        }
        e2 = zE(e2).substr(1), t2 = zE(t2).substr(1);
        for (var n2 = r2(e2.split("/")), s2 = r2(t2.split("/")), a2 = Math.min(n2.length, s2.length), i2 = a2, o2 = 0; o2 < a2; o2++)
          if (n2[o2] !== s2[o2]) {
            i2 = o2;
            break;
          }
        var u2 = [];
        for (o2 = i2; o2 < n2.length; o2++)
          u2.push("..");
        return (u2 = u2.concat(s2.slice(i2))).join("/");
      }
      function ex(e2) {
        var t2 = KE(e2), r2 = t2[0], n2 = t2[1];
        return r2 || n2 ? (n2 && (n2 = n2.substr(0, n2.length - 1)), r2 + n2) : ".";
      }
      function tx(e2, t2) {
        var r2 = KE(e2)[2];
        return t2 && r2.substr(-1 * t2.length) === t2 && (r2 = r2.substr(0, r2.length - t2.length)), r2;
      }
      function rx(e2) {
        return KE(e2)[3];
      }
      var nx = { extname: rx, basename: tx, dirname: ex, sep: "/", delimiter: ":", relative: ZE, join: QE, isAbsolute: YE, normalize: JE, resolve: zE };
      function sx(e2, t2) {
        if (e2.filter)
          return e2.filter(t2);
        for (var r2 = [], n2 = 0; n2 < e2.length; n2++)
          t2(e2[n2], n2, e2) && r2.push(e2[n2]);
        return r2;
      }
      var ax = "ab".substr(-1) === "b" ? function(e2, t2, r2) {
        return e2.substr(t2, r2);
      } : function(e2, t2, r2) {
        return t2 < 0 && (t2 = e2.length + t2), e2.substr(t2, r2);
      }, ix = Object.freeze({ __proto__: null, resolve: zE, normalize: JE, isAbsolute: YE, join: QE, relative: ZE, sep: "/", delimiter: ":", dirname: ex, basename: tx, extname: rx, default: nx });
      function ox(e2) {
        return e2.hasExports;
      }
      function ux(e2) {
        return e2.imports.size === 0 && e2.importsNamespace.size === 0 && e2.reexports.size === 0 && e2.reexportNamespace.size === 0 && !e2.reexportAll;
      }
      function lx(e2) {
        if (typeof e2 != "function" && e2 !== "none" && e2 !== "babel" && e2 !== "node")
          throw new Error('.importInterop must be one of "none", "babel", "node", or a function returning one of those values (received ' + e2 + ").");
        return e2;
      }
      function cx(e2, t2) {
        return typeof e2 == "function" ? lx(e2(t2)) : e2;
      }
      function px(e2, t2, r2) {
        var n2 = r2.importInterop, s2 = r2.initializeReexports, a2 = s2 !== void 0 && s2, i2 = r2.lazy, o2 = i2 !== void 0 && i2, u2 = r2.esNamespaceOnly, c2 = u2 !== void 0 && u2;
        t2 || (t2 = e2.scope.generateUidIdentifier("exports").name);
        var p2 = new Set();
        !function(e3) {
          e3.get("body").forEach(function(e4) {
            e4.isExportDefaultDeclaration() && Qc(e4);
          });
        }(e2);
        var d2 = function(e3, t3, r3) {
          var n3 = t3.lazy, s3 = t3.initializeReexports, a3 = function(e4, t4, r4) {
            var n4 = new Map();
            e4.get("body").forEach(function(e5) {
              var r5;
              if (e5.isImportDeclaration())
                r5 = "import";
              else {
                if (e5.isExportDefaultDeclaration() && (e5 = e5.get("declaration")), e5.isExportNamedDeclaration()) {
                  if (e5.node.declaration)
                    e5 = e5.get("declaration");
                  else if (t4 && e5.node.source && e5.get("source").isStringLiteral())
                    return void e5.get("specifiers").forEach(function(e6) {
                      fx(e6), n4.set(e6.get("local").node.name, "block");
                    });
                }
                if (e5.isFunctionDeclaration())
                  r5 = "hoisted";
                else if (e5.isClassDeclaration())
                  r5 = "block";
                else if (e5.isVariableDeclaration({ kind: "var" }))
                  r5 = "var";
                else {
                  if (!e5.isVariableDeclaration())
                    return;
                  r5 = "block";
                }
              }
              Object.keys(e5.getOuterBindingIdentifiers()).forEach(function(e6) {
                n4.set(e6, r5);
              });
            });
            var s4 = new Map(), a4 = function(e5) {
              var t5 = e5.node.name, r5 = s4.get(t5);
              if (!r5) {
                var a5 = n4.get(t5);
                if (a5 === void 0)
                  throw e5.buildCodeFrameError('Exporting local "' + t5 + '", which is not declared.');
                r5 = { names: [], kind: a5 }, s4.set(t5, r5);
              }
              return r5;
            };
            return e4.get("body").forEach(function(e5) {
              if (!e5.isExportNamedDeclaration() || !t4 && e5.node.source) {
                if (e5.isExportDefaultDeclaration()) {
                  var n5 = e5.get("declaration");
                  if (!n5.isFunctionDeclaration() && !n5.isClassDeclaration())
                    throw n5.buildCodeFrameError("Unexpected default expression export.");
                  a4(n5.get("id")).names.push("default");
                }
              } else if (e5.node.declaration) {
                var s5 = e5.get("declaration"), i4 = s5.getOuterBindingIdentifierPaths();
                Object.keys(i4).forEach(function(e6) {
                  if (e6 === "__esModule")
                    throw s5.buildCodeFrameError('Illegal export "__esModule".');
                  a4(i4[e6]).names.push(e6);
                });
              } else
                e5.get("specifiers").forEach(function(e6) {
                  var t5 = e6.get("local"), n6 = e6.get("exported"), s6 = a4(t5), i5 = dx(n6, r4);
                  if (i5 === "__esModule")
                    throw n6.buildCodeFrameError('Illegal export "__esModule".');
                  s6.names.push(i5);
                });
            }), s4;
          }(e3, s3, r3), i3 = new Map(), o3 = function(t4) {
            var r4 = t4.value, n4 = i3.get(r4);
            return n4 || (n4 = { name: e3.scope.generateUidIdentifier(tx(r4, rx(r4))).name, interop: "none", loc: null, imports: new Map(), importsNamespace: new Set(), reexports: new Map(), reexportNamespace: new Set(), reexportAll: null, lazy: false, source: r4 }, i3.set(r4, n4)), n4;
          }, u3 = false;
          e3.get("body").forEach(function(e4) {
            if (e4.isImportDeclaration()) {
              var t4 = o3(e4.node.source);
              t4.loc || (t4.loc = e4.node.loc), e4.get("specifiers").forEach(function(e5) {
                if (e5.isImportDefaultSpecifier()) {
                  var n5 = e5.get("local").node.name;
                  t4.imports.set(n5, "default");
                  var s5 = a3.get(n5);
                  s5 && (a3.delete(n5), s5.names.forEach(function(e6) {
                    t4.reexports.set(e6, "default");
                  }));
                } else if (e5.isImportNamespaceSpecifier()) {
                  var i4 = e5.get("local").node.name;
                  t4.importsNamespace.add(i4);
                  var o4 = a3.get(i4);
                  o4 && (a3.delete(i4), o4.names.forEach(function(e6) {
                    t4.reexportNamespace.add(e6);
                  }));
                } else if (e5.isImportSpecifier()) {
                  var u4 = dx(e5.get("imported"), r3), l2 = e5.get("local").node.name;
                  t4.imports.set(l2, u4);
                  var c4 = a3.get(l2);
                  c4 && (a3.delete(l2), c4.names.forEach(function(e6) {
                    t4.reexports.set(e6, u4);
                  }));
                }
              });
            } else if (e4.isExportAllDeclaration()) {
              u3 = true;
              var n4 = o3(e4.node.source);
              n4.loc || (n4.loc = e4.node.loc), n4.reexportAll = { loc: e4.node.loc };
            } else if (e4.isExportNamedDeclaration() && e4.node.source) {
              u3 = true;
              var s4 = o3(e4.node.source);
              s4.loc || (s4.loc = e4.node.loc), e4.get("specifiers").forEach(function(e5) {
                fx(e5);
                var t5 = dx(e5.get("local"), r3), n5 = dx(e5.get("exported"), r3);
                if (s4.reexports.set(n5, t5), n5 === "__esModule")
                  throw e5.get("exported").buildCodeFrameError('Illegal export "__esModule".');
              });
            } else
              (e4.isExportNamedDeclaration() || e4.isExportDefaultDeclaration()) && (u3 = true);
          });
          for (var c3, p3 = f(i3.values()); !(c3 = p3()).done; ) {
            var d3 = c3.value, h3 = false, m3 = false;
            d3.importsNamespace.size > 0 && (h3 = true, m3 = true), d3.reexportAll && (m3 = true);
            for (var y3, g3 = f(d3.imports.values()); !(y3 = g3()).done; ) {
              y3.value === "default" ? h3 = true : m3 = true;
            }
            for (var v3, b3 = f(d3.reexports.values()); !(v3 = b3()).done; ) {
              v3.value === "default" ? h3 = true : m3 = true;
            }
            h3 && m3 ? d3.interop = "namespace" : h3 && (d3.interop = "default");
          }
          for (var E3, x2 = f(i3); !(E3 = x2()).done; ) {
            var D2 = l(E3.value, 2), A2 = D2[0], w2 = D2[1];
            if (n3 !== false && !ux(w2) && !w2.reexportAll)
              if (n3 === true)
                w2.lazy = !/\./.test(A2);
              else if (Array.isArray(n3))
                w2.lazy = n3.indexOf(A2) !== -1;
              else {
                if (typeof n3 != "function")
                  throw new Error(".lazy must be a boolean, string array, or function");
                w2.lazy = n3(A2);
              }
          }
          return { hasExports: u3, local: a3, source: i3 };
        }(e2, { initializeReexports: a2, lazy: o2 }, p2), h2 = d2.local, m2 = d2.source, y2 = d2.hasExports;
        !function(e3) {
          e3.get("body").forEach(function(e4) {
            if (e4.isImportDeclaration())
              e4.remove();
            else if (e4.isExportNamedDeclaration())
              e4.node.declaration ? (e4.node.declaration._blockHoist = e4.node._blockHoist, e4.replaceWith(e4.node.declaration)) : e4.remove();
            else if (e4.isExportDefaultDeclaration()) {
              var t3 = e4.get("declaration");
              if (!t3.isFunctionDeclaration() && !t3.isClassDeclaration())
                throw t3.buildCodeFrameError("Unexpected default expression export.");
              t3._blockHoist = e4.node._blockHoist, e4.replaceWith(t3);
            } else
              e4.isExportAllDeclaration() && e4.remove();
          });
        }(e2);
        for (var g2, v2 = f(m2); !(g2 = v2()).done; ) {
          var b2 = l(g2.value, 2)[1];
          b2.importsNamespace.size > 0 && (b2.name = b2.importsNamespace.values().next().value);
          var E2 = cx(n2, b2.source);
          E2 === "none" ? b2.interop = "none" : E2 === "node" && b2.interop === "namespace" ? b2.interop = "node-namespace" : E2 === "node" && b2.interop === "default" ? b2.interop = "node-default" : c2 && b2.interop === "namespace" && (b2.interop = "default");
        }
        return { exportName: t2, exportNameListName: null, hasExports: y2, local: h2, source: m2, stringSpecifiers: p2 };
      }
      function dx(e2, t2) {
        if (e2.isIdentifier())
          return e2.node.name;
        if (e2.isStringLiteral()) {
          var r2 = e2.node.value;
          return vr(r2) || t2.add(r2), r2;
        }
        throw new Error("Expected export specifier to be either Identifier or StringLiteral, got " + e2.node.type);
      }
      function fx(e2) {
        if (!e2.isExportSpecifier())
          throw e2.isExportNamespaceSpecifier() ? e2.buildCodeFrameError("Export namespace should be first transformed by `@babel/plugin-proposal-export-namespace-from`.") : e2.buildCodeFrameError("Unexpected export specifier type");
      }
      var hx, mx, yx, gx, vx, bx, Ex, xx, Dx, Ax, wx, Cx, Sx, Tx = jx;
      function jx(e2, t2) {
        var r2 = e2.filename, n2 = e2.filenameRelative, s2 = n2 === void 0 ? r2 : n2, a2 = e2.sourceRoot, i2 = a2 === void 0 ? t2.moduleRoot : a2, o2 = t2.moduleId, u2 = t2.moduleIds, l2 = u2 === void 0 ? !!o2 : u2, c2 = t2.getModuleId, p2 = t2.moduleRoot, d2 = p2 === void 0 ? i2 : p2;
        if (!l2)
          return null;
        if (o2 != null && !c2)
          return o2;
        var f2 = d2 != null ? d2 + "/" : "";
        if (s2) {
          var h2 = i2 != null ? new RegExp("^" + i2 + "/?") : "";
          f2 += s2.replace(h2, "").replace(/\.(\w*?)$/, "");
        }
        return f2 = f2.replace(/\\/g, "/"), c2 && c2(f2) || f2;
      }
      function Px(e2, t2) {
        var r2 = t2.loose, n2 = t2.exportName, s2 = t2.strict, a2 = t2.allowTopLevelThis, i2 = t2.strictMode, o2 = t2.noInterop, p2 = t2.importInterop, d2 = p2 === void 0 ? o2 ? "none" : "babel" : p2, h2 = t2.lazy, m2 = t2.esNamespaceOnly, y2 = t2.constantReexports, g2 = y2 === void 0 ? r2 : y2, v2 = t2.enumerableModuleMeta, b2 = v2 === void 0 ? r2 : v2;
        lx(d2), vE(EE(e2), "Cannot process module statements in a script"), e2.node.sourceType = "script";
        var E2 = px(e2, n2, { importInterop: d2, initializeReexports: g2, lazy: h2, esNamespaceOnly: m2 });
        (a2 || _E(e2), function(e3, t3) {
          for (var r3, n3 = new Map(), s3 = new Map(), a3 = function(t4) {
            e3.requeue(t4);
          }, i3 = f(t3.source); !(r3 = i3()).done; ) {
            for (var o3, u2 = l(r3.value, 2), p3 = u2[0], d3 = u2[1], h3 = f(d3.imports); !(o3 = h3()).done; ) {
              var m3 = l(o3.value, 2), y3 = m3[0], g3 = m3[1];
              n3.set(y3, [p3, g3, null]);
            }
            for (var v3, b3 = f(d3.importsNamespace); !(v3 = b3()).done; ) {
              var E3 = v3.value;
              n3.set(E3, [p3, null, E3]);
            }
          }
          for (var x3, D3 = f(t3.local); !(x3 = D3()).done; ) {
            var A2, w2 = l(x3.value, 2), C2 = w2[0], S2 = w2[1], T2 = s3.get(C2);
            T2 || (T2 = [], s3.set(C2, T2)), (A2 = T2).push.apply(A2, c(S2.names));
          }
          var j2 = { metadata: t3, requeueInParent: a3, scope: e3.scope, exported: s3 };
          e3.traverse(VE, j2), ME(e3, new Set([].concat(c(Array.from(n3.keys())), c(Array.from(s3.keys())))));
          var P2 = { seen: new WeakSet(), metadata: t3, requeueInParent: a3, scope: e3.scope, imported: n3, exported: s3, buildImportReference: function(e4, r4) {
            var n4 = l(e4, 3), s4 = n4[0], a4 = n4[1], i4 = n4[2], o4 = t3.source.get(s4);
            if (i4)
              return o4.lazy && (r4 = ls(r4, [])), r4;
            var u3 = Ds(o4.name);
            if (o4.lazy && (u3 = ls(u3, [])), a4 === "default" && o4.interop === "node-default")
              return u3;
            var c2 = t3.stringSpecifiers.has(a4);
            return Fs2(u3, c2 ? Cs(a4) : Ds(a4), c2);
          } };
          e3.traverse(XE, P2);
        }(e2, E2), i2 !== false) && (e2.node.directives.some(function(e3) {
          return e3.value.value === "use strict";
        }) || e2.unshiftContainer("directives", as(is("use strict"))));
        var x2 = [];
        ox(E2) && !s2 && x2.push(function(e3, t3) {
          t3 === void 0 && (t3 = false);
          return (t3 ? Eg.statement(Ex || (Ex = u(["\n        EXPORTS.__esModule = true;\n      "]))) : Eg.statement(xx || (xx = u(['\n        Object.defineProperty(EXPORTS, "__esModule", {\n          value: true,\n        });\n      ']))))({ EXPORTS: e3.exportName });
        }(E2, b2));
        var D2 = function(e3, t3) {
          for (var r3, n3 = Object.create(null), s3 = f(t3.local.values()); !(r3 = s3()).done; )
            for (var a3, i3 = f(r3.value.names); !(a3 = i3()).done; ) {
              n3[a3.value] = true;
            }
          for (var o3, u2 = false, l2 = f(t3.source.values()); !(o3 = l2()).done; ) {
            for (var c2, p3 = o3.value, d3 = f(p3.reexports.keys()); !(c2 = d3()).done; ) {
              n3[c2.value] = true;
            }
            for (var h3, m3 = f(p3.reexportNamespace); !(h3 = m3()).done; ) {
              n3[h3.value] = true;
            }
            u2 = u2 || !!p3.reexportAll;
          }
          if (!u2 || Object.keys(n3).length === 0)
            return null;
          var y3 = e3.scope.generateUidIdentifier("exportNames");
          return delete n3.default, { name: y3.name, statement: Ks("var", [zs(y3, mc(n3))]) };
        }(e2, E2);
        return D2 && (E2.exportNameListName = D2.name, x2.push(D2.statement)), x2.push.apply(x2, c(function(e3, t3, r3) {
          r3 === void 0 && (r3 = false);
          for (var n3, s3 = [], a3 = [], i3 = f(t3.local); !(n3 = i3()).done; ) {
            var o3 = l(n3.value, 2), u2 = o3[0], p3 = o3[1];
            p3.kind === "import" || (p3.kind === "hoisted" ? s3.push(Bx(t3, p3.names, Ds(u2))) : a3.push.apply(a3, c(p3.names)));
          }
          for (var d3, h3 = f(t3.source.values()); !(d3 = h3()).done; ) {
            var m3 = d3.value;
            r3 || s3.push.apply(s3, c(Rx(t3, m3, false)));
            for (var y3, g3 = f(m3.reexportNamespace); !(y3 = g3()).done; ) {
              var v3 = y3.value;
              a3.push(v3);
            }
          }
          return s3.push.apply(s3, c(function(e4, t4) {
            for (var r4 = [], n4 = 0; n4 < e4.length; n4 += t4)
              r4.push(e4.slice(n4, n4 + t4));
            return r4;
          }(a3, 100).map(function(r4) {
            return Bx(t3, r4, e3.scope.buildUndefinedNode());
          }))), s3;
        }(e2, E2, g2))), { meta: E2, headers: x2 };
      }
      function Ix(e2) {
        e2.forEach(function(e3) {
          e3._blockHoist = 3;
        });
      }
      function Fx(e2, t2, r2) {
        if (r2 === "none")
          return null;
        if (r2 === "node-namespace")
          return ls(e2.hub.addHelper("interopRequireWildcard"), [t2, js(true)]);
        if (r2 === "node-default")
          return null;
        var n2;
        if (r2 === "default")
          n2 = "interopRequireDefault";
        else {
          if (r2 !== "namespace")
            throw new Error("Unknown interop: " + r2);
          n2 = "interopRequireWildcard";
        }
        return ls(e2.hub.addHelper(n2), [t2]);
      }
      function kx(e2, t2, r2) {
        r2 === void 0 && (r2 = false);
        var n2 = [], s2 = Ds(t2.name);
        t2.lazy && (s2 = ls(s2, []));
        for (var a2, i2 = f(t2.importsNamespace); !(a2 = i2()).done; ) {
          var o2 = a2.value;
          o2 !== t2.name && n2.push(Eg.statement(hx || (hx = u(["var NAME = SOURCE;"])))({ NAME: o2, SOURCE: Ju(s2) }));
        }
        r2 && n2.push.apply(n2, c(Rx(e2, t2, true)));
        for (var l2, p2 = f(t2.reexportNamespace); !(l2 = p2()).done; ) {
          var d2 = l2.value;
          n2.push((t2.lazy ? Eg.statement(mx || (mx = u(['\n            Object.defineProperty(EXPORTS, "NAME", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ']))) : Eg.statement(yx || (yx = u(["EXPORTS.NAME = NAMESPACE;"]))))({ EXPORTS: e2.exportName, NAME: d2, NAMESPACE: Ju(s2) }));
        }
        if (t2.reexportAll) {
          var h2 = function(e3, t3, r3) {
            return (r3 ? Eg.statement(Dx || (Dx = u(['\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === "default" || key === "__esModule") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ']))) : Eg.statement(Ax || (Ax = u(['\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === "default" || key === "__esModule") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    ']))))({ NAMESPACE: t3, EXPORTS: e3.exportName, VERIFY_NAME_LIST: e3.exportNameListName ? Eg(wx || (wx = u(["\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          "])))({ EXPORTS_LIST: e3.exportNameListName }) : null });
          }(e2, Ju(s2), r2);
          h2.loc = t2.reexportAll.loc, n2.push(h2);
        }
        return n2;
      }
      jx = function(e2, t2) {
        var r2, n2, s2, a2;
        return Tx(e2, { moduleId: (r2 = t2.moduleId) != null ? r2 : e2.moduleId, moduleIds: (n2 = t2.moduleIds) != null ? n2 : e2.moduleIds, getModuleId: (s2 = t2.getModuleId) != null ? s2 : e2.getModuleId, moduleRoot: (a2 = t2.moduleRoot) != null ? a2 : e2.moduleRoot });
      };
      var Ox = { constant: Eg.statement(gx || (gx = u(["EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;"]))), constantComputed: Eg.statement(vx || (vx = u(['EXPORTS["EXPORT_NAME"] = NAMESPACE_IMPORT;']))), spec: Eg(bx || (bx = u(['\n    Object.defineProperty(EXPORTS, "EXPORT_NAME", {\n      enumerable: true,\n      get: function() {\n        return NAMESPACE_IMPORT;\n      },\n    });\n    ']))) }, Rx = function(e2, t2, r2) {
        var n2 = t2.lazy ? ls(Ds(t2.name), []) : Ds(t2.name), s2 = e2.stringSpecifiers;
        return Array.from(t2.reexports, function(a2) {
          var i2 = l(a2, 2), o2 = i2[0], u2 = i2[1], c2 = Ju(n2);
          u2 === "default" && t2.interop === "node-default" || (c2 = s2.has(u2) ? Fs2(c2, Cs(u2), true) : Fs2(c2, Ds(u2)));
          var p2 = { EXPORTS: e2.exportName, EXPORT_NAME: o2, NAMESPACE_IMPORT: c2 };
          return r2 || F(c2) ? s2.has(o2) ? Ox.constantComputed(p2) : Ox.constant(p2) : Ox.spec(p2);
        });
      };
      var Nx = { computed: Eg.expression(Cx || (Cx = u(['EXPORTS["NAME"] = VALUE']))), default: Eg.expression(Sx || (Sx = u(["EXPORTS.NAME = VALUE"]))) };
      function Bx(e2, t2, r2) {
        var n2 = e2.stringSpecifiers, s2 = e2.exportName;
        return ys(t2.reduce(function(e3, t3) {
          var r3 = { EXPORTS: s2, NAME: t3, VALUE: e3 };
          return n2.has(t3) ? Nx.computed(r3) : Nx.default(r3);
        }, r2));
      }
      var _x = { SEMVER_SPEC_VERSION: "2.0.0", MAX_LENGTH: 256, MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991, MAX_SAFE_COMPONENT_LENGTH: 16 }, Lx = typeof ar == "object" && ar.env && ar.env.NODE_DEBUG && /\bsemver\b/i.test(ar.env.NODE_DEBUG) ? function() {
        for (var e2, t2 = arguments.length, r2 = new Array(t2), n2 = 0; n2 < t2; n2++)
          r2[n2] = arguments[n2];
        return (e2 = console).error.apply(e2, ["SEMVER"].concat(r2));
      } : function() {
      }, Mx = zt(function(e2, t2) {
        var r2 = _x.MAX_SAFE_COMPONENT_LENGTH, n2 = (t2 = e2.exports = {}).re = [], s2 = t2.src = [], a2 = t2.t = {}, i2 = 0, o2 = function(e3, t3, r3) {
          var o3 = i2++;
          Lx(o3, t3), a2[e3] = o3, s2[o3] = t3, n2[o3] = new RegExp(t3, r3 ? "g" : void 0);
        };
        o2("NUMERICIDENTIFIER", "0|[1-9]\\d*"), o2("NUMERICIDENTIFIERLOOSE", "[0-9]+"), o2("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*"), o2("MAINVERSION", "(" + s2[a2.NUMERICIDENTIFIER] + ")\\.(" + s2[a2.NUMERICIDENTIFIER] + ")\\.(" + s2[a2.NUMERICIDENTIFIER] + ")"), o2("MAINVERSIONLOOSE", "(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")"), o2("PRERELEASEIDENTIFIER", "(?:" + s2[a2.NUMERICIDENTIFIER] + "|" + s2[a2.NONNUMERICIDENTIFIER] + ")"), o2("PRERELEASEIDENTIFIERLOOSE", "(?:" + s2[a2.NUMERICIDENTIFIERLOOSE] + "|" + s2[a2.NONNUMERICIDENTIFIER] + ")"), o2("PRERELEASE", "(?:-(" + s2[a2.PRERELEASEIDENTIFIER] + "(?:\\." + s2[a2.PRERELEASEIDENTIFIER] + ")*))"), o2("PRERELEASELOOSE", "(?:-?(" + s2[a2.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + s2[a2.PRERELEASEIDENTIFIERLOOSE] + ")*))"), o2("BUILDIDENTIFIER", "[0-9A-Za-z-]+"), o2("BUILD", "(?:\\+(" + s2[a2.BUILDIDENTIFIER] + "(?:\\." + s2[a2.BUILDIDENTIFIER] + ")*))"), o2("FULLPLAIN", "v?" + s2[a2.MAINVERSION] + s2[a2.PRERELEASE] + "?" + s2[a2.BUILD] + "?"), o2("FULL", "^" + s2[a2.FULLPLAIN] + "$"), o2("LOOSEPLAIN", "[v=\\s]*" + s2[a2.MAINVERSIONLOOSE] + s2[a2.PRERELEASELOOSE] + "?" + s2[a2.BUILD] + "?"), o2("LOOSE", "^" + s2[a2.LOOSEPLAIN] + "$"), o2("GTLT", "((?:<|>)?=?)"), o2("XRANGEIDENTIFIERLOOSE", s2[a2.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*"), o2("XRANGEIDENTIFIER", s2[a2.NUMERICIDENTIFIER] + "|x|X|\\*"), o2("XRANGEPLAIN", "[v=\\s]*(" + s2[a2.XRANGEIDENTIFIER] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIER] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIER] + ")(?:" + s2[a2.PRERELEASE] + ")?" + s2[a2.BUILD] + "?)?)?"), o2("XRANGEPLAINLOOSE", "[v=\\s]*(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:" + s2[a2.PRERELEASELOOSE] + ")?" + s2[a2.BUILD] + "?)?)?"), o2("XRANGE", "^" + s2[a2.GTLT] + "\\s*" + s2[a2.XRANGEPLAIN] + "$"), o2("XRANGELOOSE", "^" + s2[a2.GTLT] + "\\s*" + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("COERCE", "(^|[^\\d])(\\d{1," + r2 + "})(?:\\.(\\d{1," + r2 + "}))?(?:\\.(\\d{1," + r2 + "}))?(?:$|[^\\d])"), o2("COERCERTL", s2[a2.COERCE], true), o2("LONETILDE", "(?:~>?)"), o2("TILDETRIM", "(\\s*)" + s2[a2.LONETILDE] + "\\s+", true), t2.tildeTrimReplace = "$1~", o2("TILDE", "^" + s2[a2.LONETILDE] + s2[a2.XRANGEPLAIN] + "$"), o2("TILDELOOSE", "^" + s2[a2.LONETILDE] + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("LONECARET", "(?:\\^)"), o2("CARETTRIM", "(\\s*)" + s2[a2.LONECARET] + "\\s+", true), t2.caretTrimReplace = "$1^", o2("CARET", "^" + s2[a2.LONECARET] + s2[a2.XRANGEPLAIN] + "$"), o2("CARETLOOSE", "^" + s2[a2.LONECARET] + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("COMPARATORLOOSE", "^" + s2[a2.GTLT] + "\\s*(" + s2[a2.LOOSEPLAIN] + ")$|^$"), o2("COMPARATOR", "^" + s2[a2.GTLT] + "\\s*(" + s2[a2.FULLPLAIN] + ")$|^$"), o2("COMPARATORTRIM", "(\\s*)" + s2[a2.GTLT] + "\\s*(" + s2[a2.LOOSEPLAIN] + "|" + s2[a2.XRANGEPLAIN] + ")", true), t2.comparatorTrimReplace = "$1$2$3", o2("HYPHENRANGE", "^\\s*(" + s2[a2.XRANGEPLAIN] + ")\\s+-\\s+(" + s2[a2.XRANGEPLAIN] + ")\\s*$"), o2("HYPHENRANGELOOSE", "^\\s*(" + s2[a2.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + s2[a2.XRANGEPLAINLOOSE] + ")\\s*$"), o2("STAR", "(<|>)?=?\\s*\\*"), o2("GTE0", "^\\s*>=\\s*0.0.0\\s*$"), o2("GTE0PRE", "^\\s*>=\\s*0.0.0-0\\s*$");
      }, "/$$rollup_base$$/packages/babel-core/node_modules/semver/node_modules/semver-BABEL_8_BREAKING-true/internal"), Ux = ["includePrerelease", "loose", "rtl"], Gx = function(e2) {
        return e2 ? typeof e2 != "object" ? { loose: true } : Ux.filter(function(t2) {
          return e2[t2];
        }).reduce(function(e3, t2) {
          return e3[t2] = true, e3;
        }, {}) : {};
      }, Vx = /^[0-9]+$/, Wx = function(e2, t2) {
        var r2 = Vx.test(e2), n2 = Vx.test(t2);
        return r2 && n2 && (e2 = +e2, t2 = +t2), e2 === t2 ? 0 : r2 && !n2 ? -1 : n2 && !r2 ? 1 : e2 < t2 ? -1 : 1;
      }, Hx = Wx, Xx = _x.MAX_LENGTH, qx = _x.MAX_SAFE_INTEGER, $x = Mx.re, Kx = Mx.t, zx = Hx, Jx = function() {
        function e2(t3, r2) {
          if (r2 = Gx(r2), t3 instanceof e2) {
            if (t3.loose === !!r2.loose && t3.includePrerelease === !!r2.includePrerelease)
              return t3;
            t3 = t3.version;
          } else if (typeof t3 != "string")
            throw new TypeError("Invalid Version: " + t3);
          if (t3.length > Xx)
            throw new TypeError("version is longer than " + Xx + " characters");
          Lx("SemVer", t3, r2), this.options = r2, this.loose = !!r2.loose, this.includePrerelease = !!r2.includePrerelease;
          var n2 = t3.trim().match(r2.loose ? $x[Kx.LOOSE] : $x[Kx.FULL]);
          if (!n2)
            throw new TypeError("Invalid Version: " + t3);
          if (this.raw = t3, this.major = +n2[1], this.minor = +n2[2], this.patch = +n2[3], this.major > qx || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > qx || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > qx || this.patch < 0)
            throw new TypeError("Invalid patch version");
          n2[4] ? this.prerelease = n2[4].split(".").map(function(e3) {
            if (/^[0-9]+$/.test(e3)) {
              var t4 = +e3;
              if (t4 >= 0 && t4 < qx)
                return t4;
            }
            return e3;
          }) : this.prerelease = [], this.build = n2[5] ? n2[5].split(".") : [], this.format();
        }
        var t2 = e2.prototype;
        return t2.format = function() {
          return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version;
        }, t2.toString = function() {
          return this.version;
        }, t2.compare = function(t3) {
          if (Lx("SemVer.compare", this.version, this.options, t3), !(t3 instanceof e2)) {
            if (typeof t3 == "string" && t3 === this.version)
              return 0;
            t3 = new e2(t3, this.options);
          }
          return t3.version === this.version ? 0 : this.compareMain(t3) || this.comparePre(t3);
        }, t2.compareMain = function(t3) {
          return t3 instanceof e2 || (t3 = new e2(t3, this.options)), zx(this.major, t3.major) || zx(this.minor, t3.minor) || zx(this.patch, t3.patch);
        }, t2.comparePre = function(t3) {
          if (t3 instanceof e2 || (t3 = new e2(t3, this.options)), this.prerelease.length && !t3.prerelease.length)
            return -1;
          if (!this.prerelease.length && t3.prerelease.length)
            return 1;
          if (!this.prerelease.length && !t3.prerelease.length)
            return 0;
          var r2 = 0;
          do {
            var n2 = this.prerelease[r2], s2 = t3.prerelease[r2];
            if (Lx("prerelease compare", r2, n2, s2), n2 === void 0 && s2 === void 0)
              return 0;
            if (s2 === void 0)
              return 1;
            if (n2 === void 0)
              return -1;
            if (n2 !== s2)
              return zx(n2, s2);
          } while (++r2);
        }, t2.compareBuild = function(t3) {
          t3 instanceof e2 || (t3 = new e2(t3, this.options));
          var r2 = 0;
          do {
            var n2 = this.build[r2], s2 = t3.build[r2];
            if (Lx("prerelease compare", r2, n2, s2), n2 === void 0 && s2 === void 0)
              return 0;
            if (s2 === void 0)
              return 1;
            if (n2 === void 0)
              return -1;
            if (n2 !== s2)
              return zx(n2, s2);
          } while (++r2);
        }, t2.inc = function(e3, t3) {
          switch (e3) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t3);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t3);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "prerelease":
              this.prerelease.length === 0 && this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "major":
              this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              this.prerelease.length === 0 && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (this.prerelease.length === 0)
                this.prerelease = [0];
              else {
                for (var r2 = this.prerelease.length; --r2 >= 0; )
                  typeof this.prerelease[r2] == "number" && (this.prerelease[r2]++, r2 = -2);
                r2 === -1 && this.prerelease.push(0);
              }
              t3 && (this.prerelease[0] === t3 ? isNaN(this.prerelease[1]) && (this.prerelease = [t3, 0]) : this.prerelease = [t3, 0]);
              break;
            default:
              throw new Error("invalid increment argument: " + e3);
          }
          return this.format(), this.raw = this.version, this;
        }, e2;
      }(), Yx = (Mx.re, Mx.t, function(e2, t2, r2) {
        return new Jx(e2, r2).compare(new Jx(t2, r2));
      }), Qx = function(e2, t2, r2) {
        return Yx(e2, t2, r2) === 0;
      }, Zx = function(e2, t2, r2) {
        return Yx(e2, t2, r2) > 0;
      }, eD = function(e2, t2, r2) {
        return Yx(e2, t2, r2) < 0;
      }, tD = function(e2, t2, r2) {
        return Yx(e2, t2, r2) !== 0;
      }, rD = function(e2, t2, r2) {
        return Yx(e2, t2, r2) >= 0;
      }, nD = function(e2, t2, r2) {
        return Yx(e2, t2, r2) <= 0;
      }, sD = function(e2, t2, r2, n2) {
        switch (t2) {
          case "===":
            return typeof e2 == "object" && (e2 = e2.version), typeof r2 == "object" && (r2 = r2.version), e2 === r2;
          case "!==":
            return typeof e2 == "object" && (e2 = e2.version), typeof r2 == "object" && (r2 = r2.version), e2 !== r2;
          case "":
          case "=":
          case "==":
            return Qx(e2, r2, n2);
          case "!=":
            return tD(e2, r2, n2);
          case ">":
            return Zx(e2, r2, n2);
          case ">=":
            return rD(e2, r2, n2);
          case "<":
            return eD(e2, r2, n2);
          case "<=":
            return nD(e2, r2, n2);
          default:
            throw new TypeError("Invalid operator: " + t2);
        }
      }, aD = (Mx.re, Mx.t, iD);
      function iD(e2) {
        var t2 = this;
        if (t2 instanceof iD || (t2 = new iD()), t2.tail = null, t2.head = null, t2.length = 0, e2 && typeof e2.forEach == "function")
          e2.forEach(function(e3) {
            t2.push(e3);
          });
        else if (arguments.length > 0)
          for (var r2 = 0, n2 = arguments.length; r2 < n2; r2++)
            t2.push(arguments[r2]);
        return t2;
      }
      function oD(e2, t2, r2) {
        var n2 = t2 === e2.head ? new cD(r2, null, t2, e2) : new cD(r2, t2, t2.next, e2);
        return n2.next === null && (e2.tail = n2), n2.prev === null && (e2.head = n2), e2.length++, n2;
      }
      function uD(e2, t2) {
        e2.tail = new cD(t2, e2.tail, null, e2), e2.head || (e2.head = e2.tail), e2.length++;
      }
      function lD(e2, t2) {
        e2.head = new cD(t2, null, e2.head, e2), e2.tail || (e2.tail = e2.head), e2.length++;
      }
      function cD(e2, t2, r2, n2) {
        if (!(this instanceof cD))
          return new cD(e2, t2, r2, n2);
        this.list = n2, this.value = e2, t2 ? (t2.next = this, this.prev = t2) : this.prev = null, r2 ? (r2.prev = this, this.next = r2) : this.next = null;
      }
      iD.Node = cD, iD.create = iD, iD.prototype.removeNode = function(e2) {
        if (e2.list !== this)
          throw new Error("removing node which does not belong to this list");
        var t2 = e2.next, r2 = e2.prev;
        return t2 && (t2.prev = r2), r2 && (r2.next = t2), e2 === this.head && (this.head = t2), e2 === this.tail && (this.tail = r2), e2.list.length--, e2.next = null, e2.prev = null, e2.list = null, t2;
      }, iD.prototype.unshiftNode = function(e2) {
        if (e2 !== this.head) {
          e2.list && e2.list.removeNode(e2);
          var t2 = this.head;
          e2.list = this, e2.next = t2, t2 && (t2.prev = e2), this.head = e2, this.tail || (this.tail = e2), this.length++;
        }
      }, iD.prototype.pushNode = function(e2) {
        if (e2 !== this.tail) {
          e2.list && e2.list.removeNode(e2);
          var t2 = this.tail;
          e2.list = this, e2.prev = t2, t2 && (t2.next = e2), this.tail = e2, this.head || (this.head = e2), this.length++;
        }
      }, iD.prototype.push = function() {
        for (var e2 = 0, t2 = arguments.length; e2 < t2; e2++)
          uD(this, arguments[e2]);
        return this.length;
      }, iD.prototype.unshift = function() {
        for (var e2 = 0, t2 = arguments.length; e2 < t2; e2++)
          lD(this, arguments[e2]);
        return this.length;
      }, iD.prototype.pop = function() {
        if (this.tail) {
          var e2 = this.tail.value;
          return this.tail = this.tail.prev, this.tail ? this.tail.next = null : this.head = null, this.length--, e2;
        }
      }, iD.prototype.shift = function() {
        if (this.head) {
          var e2 = this.head.value;
          return this.head = this.head.next, this.head ? this.head.prev = null : this.tail = null, this.length--, e2;
        }
      }, iD.prototype.forEach = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = this.head, n2 = 0; r2 !== null; n2++)
          e2.call(t2, r2.value, n2, this), r2 = r2.next;
      }, iD.prototype.forEachReverse = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = this.tail, n2 = this.length - 1; r2 !== null; n2--)
          e2.call(t2, r2.value, n2, this), r2 = r2.prev;
      }, iD.prototype.get = function(e2) {
        for (var t2 = 0, r2 = this.head; r2 !== null && t2 < e2; t2++)
          r2 = r2.next;
        if (t2 === e2 && r2 !== null)
          return r2.value;
      }, iD.prototype.getReverse = function(e2) {
        for (var t2 = 0, r2 = this.tail; r2 !== null && t2 < e2; t2++)
          r2 = r2.prev;
        if (t2 === e2 && r2 !== null)
          return r2.value;
      }, iD.prototype.map = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = new iD(), n2 = this.head; n2 !== null; )
          r2.push(e2.call(t2, n2.value, this)), n2 = n2.next;
        return r2;
      }, iD.prototype.mapReverse = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = new iD(), n2 = this.tail; n2 !== null; )
          r2.push(e2.call(t2, n2.value, this)), n2 = n2.prev;
        return r2;
      }, iD.prototype.reduce = function(e2, t2) {
        var r2, n2 = this.head;
        if (arguments.length > 1)
          r2 = t2;
        else {
          if (!this.head)
            throw new TypeError("Reduce of empty list with no initial value");
          n2 = this.head.next, r2 = this.head.value;
        }
        for (var s2 = 0; n2 !== null; s2++)
          r2 = e2(r2, n2.value, s2), n2 = n2.next;
        return r2;
      }, iD.prototype.reduceReverse = function(e2, t2) {
        var r2, n2 = this.tail;
        if (arguments.length > 1)
          r2 = t2;
        else {
          if (!this.tail)
            throw new TypeError("Reduce of empty list with no initial value");
          n2 = this.tail.prev, r2 = this.tail.value;
        }
        for (var s2 = this.length - 1; n2 !== null; s2--)
          r2 = e2(r2, n2.value, s2), n2 = n2.prev;
        return r2;
      }, iD.prototype.toArray = function() {
        for (var e2 = new Array(this.length), t2 = 0, r2 = this.head; r2 !== null; t2++)
          e2[t2] = r2.value, r2 = r2.next;
        return e2;
      }, iD.prototype.toArrayReverse = function() {
        for (var e2 = new Array(this.length), t2 = 0, r2 = this.tail; r2 !== null; t2++)
          e2[t2] = r2.value, r2 = r2.prev;
        return e2;
      }, iD.prototype.slice = function(e2, t2) {
        (t2 = t2 || this.length) < 0 && (t2 += this.length), (e2 = e2 || 0) < 0 && (e2 += this.length);
        var r2 = new iD();
        if (t2 < e2 || t2 < 0)
          return r2;
        e2 < 0 && (e2 = 0), t2 > this.length && (t2 = this.length);
        for (var n2 = 0, s2 = this.head; s2 !== null && n2 < e2; n2++)
          s2 = s2.next;
        for (; s2 !== null && n2 < t2; n2++, s2 = s2.next)
          r2.push(s2.value);
        return r2;
      }, iD.prototype.sliceReverse = function(e2, t2) {
        (t2 = t2 || this.length) < 0 && (t2 += this.length), (e2 = e2 || 0) < 0 && (e2 += this.length);
        var r2 = new iD();
        if (t2 < e2 || t2 < 0)
          return r2;
        e2 < 0 && (e2 = 0), t2 > this.length && (t2 = this.length);
        for (var n2 = this.length, s2 = this.tail; s2 !== null && n2 > t2; n2--)
          s2 = s2.prev;
        for (; s2 !== null && n2 > e2; n2--, s2 = s2.prev)
          r2.push(s2.value);
        return r2;
      }, iD.prototype.splice = function(e2, t2) {
        e2 > this.length && (e2 = this.length - 1), e2 < 0 && (e2 = this.length + e2);
        for (var r2 = 0, n2 = this.head; n2 !== null && r2 < e2; r2++)
          n2 = n2.next;
        var s2 = [];
        for (r2 = 0; n2 && r2 < t2; r2++)
          s2.push(n2.value), n2 = this.removeNode(n2);
        n2 === null && (n2 = this.tail), n2 !== this.head && n2 !== this.tail && (n2 = n2.prev);
        for (r2 = 0; r2 < (arguments.length <= 2 ? 0 : arguments.length - 2); r2++)
          n2 = oD(this, n2, r2 + 2 < 2 || arguments.length <= r2 + 2 ? void 0 : arguments[r2 + 2]);
        return s2;
      }, iD.prototype.reverse = function() {
        for (var e2 = this.head, t2 = this.tail, r2 = e2; r2 !== null; r2 = r2.prev) {
          var n2 = r2.prev;
          r2.prev = r2.next, r2.next = n2;
        }
        return this.head = t2, this.tail = e2, this;
      };
      try {
        !function(e2) {
          e2.prototype[Symbol.iterator] = bh.mark(function e3() {
            var t2;
            return bh.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    t2 = this.head;
                  case 1:
                    if (!t2) {
                      e4.next = 7;
                      break;
                    }
                    return e4.next = 4, t2.value;
                  case 4:
                    t2 = t2.next, e4.next = 1;
                    break;
                  case 7:
                  case "end":
                    return e4.stop();
                }
            }, e3, this);
          });
        }(iD);
      } catch (e2) {
      }
      var pD = Symbol("max"), dD = Symbol("length"), fD = Symbol("lengthCalculator"), hD = Symbol("allowStale"), mD = Symbol("maxAge"), yD = Symbol("dispose"), gD = Symbol("noDisposeOnSet"), vD = Symbol("lruList"), bD = Symbol("cache"), ED = Symbol("updateAgeOnGet"), xD = function() {
        return 1;
      }, DD = function() {
        function e2(e3) {
          if (typeof e3 == "number" && (e3 = { max: e3 }), e3 || (e3 = {}), e3.max && (typeof e3.max != "number" || e3.max < 0))
            throw new TypeError("max must be a non-negative number");
          this[pD] = e3.max || 1 / 0;
          var t3 = e3.length || xD;
          if (this[fD] = typeof t3 != "function" ? xD : t3, this[hD] = e3.stale || false, e3.maxAge && typeof e3.maxAge != "number")
            throw new TypeError("maxAge must be a number");
          this[mD] = e3.maxAge || 0, this[yD] = e3.dispose, this[gD] = e3.noDisposeOnSet || false, this[ED] = e3.updateAgeOnGet || false, this.reset();
        }
        var t2 = e2.prototype;
        return t2.rforEach = function(e3, t3) {
          t3 = t3 || this;
          for (var r2 = this[vD].tail; r2 !== null; ) {
            var n2 = r2.prev;
            jD(this, e3, r2, t3), r2 = n2;
          }
        }, t2.forEach = function(e3, t3) {
          t3 = t3 || this;
          for (var r2 = this[vD].head; r2 !== null; ) {
            var n2 = r2.next;
            jD(this, e3, r2, t3), r2 = n2;
          }
        }, t2.keys = function() {
          return this[vD].toArray().map(function(e3) {
            return e3.key;
          });
        }, t2.values = function() {
          return this[vD].toArray().map(function(e3) {
            return e3.value;
          });
        }, t2.reset = function() {
          var e3 = this;
          this[yD] && this[vD] && this[vD].length && this[vD].forEach(function(t3) {
            return e3[yD](t3.key, t3.value);
          }), this[bD] = new Map(), this[vD] = new aD(), this[dD] = 0;
        }, t2.dump = function() {
          var e3 = this;
          return this[vD].map(function(t3) {
            return !wD(e3, t3) && { k: t3.key, v: t3.value, e: t3.now + (t3.maxAge || 0) };
          }).toArray().filter(function(e4) {
            return e4;
          });
        }, t2.dumpLru = function() {
          return this[vD];
        }, t2.set = function(e3, t3, r2) {
          if ((r2 = r2 || this[mD]) && typeof r2 != "number")
            throw new TypeError("maxAge must be a number");
          var n2 = r2 ? Date.now() : 0, s2 = this[fD](t3, e3);
          if (this[bD].has(e3)) {
            if (s2 > this[pD])
              return SD(this, this[bD].get(e3)), false;
            var a2 = this[bD].get(e3).value;
            return this[yD] && (this[gD] || this[yD](e3, a2.value)), a2.now = n2, a2.maxAge = r2, a2.value = t3, this[dD] += s2 - a2.length, a2.length = s2, this.get(e3), CD(this), true;
          }
          var i2 = new TD(e3, t3, s2, n2, r2);
          return i2.length > this[pD] ? (this[yD] && this[yD](e3, t3), false) : (this[dD] += i2.length, this[vD].unshift(i2), this[bD].set(e3, this[vD].head), CD(this), true);
        }, t2.has = function(e3) {
          if (!this[bD].has(e3))
            return false;
          var t3 = this[bD].get(e3).value;
          return !wD(this, t3);
        }, t2.get = function(e3) {
          return AD(this, e3, true);
        }, t2.peek = function(e3) {
          return AD(this, e3, false);
        }, t2.pop = function() {
          var e3 = this[vD].tail;
          return e3 ? (SD(this, e3), e3.value) : null;
        }, t2.del = function(e3) {
          SD(this, this[bD].get(e3));
        }, t2.load = function(e3) {
          this.reset();
          for (var t3 = Date.now(), r2 = e3.length - 1; r2 >= 0; r2--) {
            var n2 = e3[r2], s2 = n2.e || 0;
            if (s2 === 0)
              this.set(n2.k, n2.v);
            else {
              var a2 = s2 - t3;
              a2 > 0 && this.set(n2.k, n2.v, a2);
            }
          }
        }, t2.prune = function() {
          var e3 = this;
          this[bD].forEach(function(t3, r2) {
            return AD(e3, r2, false);
          });
        }, n(e2, [{ key: "max", get: function() {
          return this[pD];
        }, set: function(e3) {
          if (typeof e3 != "number" || e3 < 0)
            throw new TypeError("max must be a non-negative number");
          this[pD] = e3 || 1 / 0, CD(this);
        } }, { key: "allowStale", get: function() {
          return this[hD];
        }, set: function(e3) {
          this[hD] = !!e3;
        } }, { key: "maxAge", get: function() {
          return this[mD];
        }, set: function(e3) {
          if (typeof e3 != "number")
            throw new TypeError("maxAge must be a non-negative number");
          this[mD] = e3, CD(this);
        } }, { key: "lengthCalculator", get: function() {
          return this[fD];
        }, set: function(e3) {
          var t3 = this;
          typeof e3 != "function" && (e3 = xD), e3 !== this[fD] && (this[fD] = e3, this[dD] = 0, this[vD].forEach(function(e4) {
            e4.length = t3[fD](e4.value, e4.key), t3[dD] += e4.length;
          })), CD(this);
        } }, { key: "length", get: function() {
          return this[dD];
        } }, { key: "itemCount", get: function() {
          return this[vD].length;
        } }]), e2;
      }(), AD = function(e2, t2, r2) {
        var n2 = e2[bD].get(t2);
        if (n2) {
          var s2 = n2.value;
          if (wD(e2, s2)) {
            if (SD(e2, n2), !e2[hD])
              return;
          } else
            r2 && (e2[ED] && (n2.value.now = Date.now()), e2[vD].unshiftNode(n2));
          return s2.value;
        }
      }, wD = function(e2, t2) {
        if (!t2 || !t2.maxAge && !e2[mD])
          return false;
        var r2 = Date.now() - t2.now;
        return t2.maxAge ? r2 > t2.maxAge : e2[mD] && r2 > e2[mD];
      }, CD = function(e2) {
        if (e2[dD] > e2[pD])
          for (var t2 = e2[vD].tail; e2[dD] > e2[pD] && t2 !== null; ) {
            var r2 = t2.prev;
            SD(e2, t2), t2 = r2;
          }
      }, SD = function(e2, t2) {
        if (t2) {
          var r2 = t2.value;
          e2[yD] && e2[yD](r2.key, r2.value), e2[dD] -= r2.length, e2[bD].delete(r2.key), e2[vD].removeNode(t2);
        }
      }, TD = function(e2, t2, r2, n2, s2) {
        this.key = e2, this.value = t2, this.length = r2, this.now = n2, this.maxAge = s2 || 0;
      }, jD = function(e2, t2, r2, n2) {
        var s2 = r2.value;
        wD(e2, s2) && (SD(e2, r2), e2[hD] || (s2 = void 0)), s2 && t2.call(n2, s2.value, s2.key, e2);
      }, PD = DD, ID = function() {
        function e2(t3, r2) {
          var n2 = this;
          if (r2 = Gx(r2), t3 instanceof e2)
            return t3.loose === !!r2.loose && t3.includePrerelease === !!r2.includePrerelease ? t3 : new e2(t3.raw, r2);
          if (t3 instanceof ZD)
            return this.raw = t3.value, this.set = [[t3]], this.format(), this;
          if (this.options = r2, this.loose = !!r2.loose, this.includePrerelease = !!r2.includePrerelease, this.raw = t3, this.set = t3.split(/\s*\|\|\s*/).map(function(e3) {
            return n2.parseRange(e3.trim());
          }).filter(function(e3) {
            return e3.length;
          }), !this.set.length)
            throw new TypeError("Invalid SemVer Range: " + t3);
          if (this.set.length > 1) {
            var s2 = this.set[0];
            if (this.set = this.set.filter(function(e3) {
              return !_D(e3[0]);
            }), this.set.length === 0)
              this.set = [s2];
            else if (this.set.length > 1)
              for (var a2, i2 = f(this.set); !(a2 = i2()).done; ) {
                var o2 = a2.value;
                if (o2.length === 1 && LD(o2[0])) {
                  this.set = [o2];
                  break;
                }
              }
          }
          this.format();
        }
        var t2 = e2.prototype;
        return t2.format = function() {
          return this.range = this.set.map(function(e3) {
            return e3.join(" ").trim();
          }).join("||").trim(), this.range;
        }, t2.toString = function() {
          return this.range;
        }, t2.parseRange = function(e3) {
          var t3 = this;
          e3 = e3.trim();
          var r2 = "parseRange:" + Object.keys(this.options).join(",") + ":" + e3, n2 = FD.get(r2);
          if (n2)
            return n2;
          var s2 = this.options.loose, a2 = s2 ? kD[OD.HYPHENRANGELOOSE] : kD[OD.HYPHENRANGE];
          e3 = e3.replace(a2, JD(this.options.includePrerelease)), Lx("hyphen replace", e3), e3 = e3.replace(kD[OD.COMPARATORTRIM], RD), Lx("comparator trim", e3, kD[OD.COMPARATORTRIM]), e3 = (e3 = (e3 = e3.replace(kD[OD.TILDETRIM], ND)).replace(kD[OD.CARETTRIM], BD)).split(/\s+/).join(" ");
          var i2 = s2 ? kD[OD.COMPARATORLOOSE] : kD[OD.COMPARATOR], o2 = e3.split(" ").map(function(e4) {
            return UD(e4, t3.options);
          }).join(" ").split(/\s+/).map(function(e4) {
            return zD(e4, t3.options);
          }).filter(this.options.loose ? function(e4) {
            return !!e4.match(i2);
          } : function() {
            return true;
          }).map(function(e4) {
            return new ZD(e4, t3.options);
          });
          o2.length;
          for (var u2, l2 = new Map(), p2 = f(o2); !(u2 = p2()).done; ) {
            var d2 = u2.value;
            if (_D(d2))
              return [d2];
            l2.set(d2.value, d2);
          }
          l2.size > 1 && l2.has("") && l2.delete("");
          var h2 = c(l2.values());
          return FD.set(r2, h2), h2;
        }, t2.intersects = function(t3, r2) {
          if (!(t3 instanceof e2))
            throw new TypeError("a Range is required");
          return this.set.some(function(e3) {
            return MD(e3, r2) && t3.set.some(function(t4) {
              return MD(t4, r2) && e3.every(function(e4) {
                return t4.every(function(t5) {
                  return e4.intersects(t5, r2);
                });
              });
            });
          });
        }, t2.test = function(e3) {
          if (!e3)
            return false;
          if (typeof e3 == "string")
            try {
              e3 = new Jx(e3, this.options);
            } catch (e4) {
              return false;
            }
          for (var t3 = 0; t3 < this.set.length; t3++)
            if (YD(this.set[t3], e3, this.options))
              return true;
          return false;
        }, e2;
      }(), FD = new PD({ max: 1e3 }), kD = Mx.re, OD = Mx.t, RD = Mx.comparatorTrimReplace, ND = Mx.tildeTrimReplace, BD = Mx.caretTrimReplace, _D = function(e2) {
        return e2.value === "<0.0.0-0";
      }, LD = function(e2) {
        return e2.value === "";
      }, MD = function(e2, t2) {
        for (var r2 = true, n2 = e2.slice(), s2 = n2.pop(); r2 && n2.length; )
          r2 = n2.every(function(e3) {
            return s2.intersects(e3, t2);
          }), s2 = n2.pop();
        return r2;
      }, UD = function(e2, t2) {
        return Lx("comp", e2, t2), e2 = HD(e2, t2), Lx("caret", e2), e2 = VD(e2, t2), Lx("tildes", e2), e2 = qD(e2, t2), Lx("xrange", e2), e2 = KD(e2, t2), Lx("stars", e2), e2;
      }, GD = function(e2) {
        return !e2 || e2.toLowerCase() === "x" || e2 === "*";
      }, VD = function(e2, t2) {
        return e2.trim().split(/\s+/).map(function(e3) {
          return WD(e3, t2);
        }).join(" ");
      }, WD = function(e2, t2) {
        var r2 = t2.loose ? kD[OD.TILDELOOSE] : kD[OD.TILDE];
        return e2.replace(r2, function(t3, r3, n2, s2, a2) {
          var i2;
          return Lx("tilde", e2, t3, r3, n2, s2, a2), GD(r3) ? i2 = "" : GD(n2) ? i2 = ">=" + r3 + ".0.0 <" + (+r3 + 1) + ".0.0-0" : GD(s2) ? i2 = ">=" + r3 + "." + n2 + ".0 <" + r3 + "." + (+n2 + 1) + ".0-0" : a2 ? (Lx("replaceTilde pr", a2), i2 = ">=" + r3 + "." + n2 + "." + s2 + "-" + a2 + " <" + r3 + "." + (+n2 + 1) + ".0-0") : i2 = ">=" + r3 + "." + n2 + "." + s2 + " <" + r3 + "." + (+n2 + 1) + ".0-0", Lx("tilde return", i2), i2;
        });
      }, HD = function(e2, t2) {
        return e2.trim().split(/\s+/).map(function(e3) {
          return XD(e3, t2);
        }).join(" ");
      }, XD = function(e2, t2) {
        Lx("caret", e2, t2);
        var r2 = t2.loose ? kD[OD.CARETLOOSE] : kD[OD.CARET], n2 = t2.includePrerelease ? "-0" : "";
        return e2.replace(r2, function(t3, r3, s2, a2, i2) {
          var o2;
          return Lx("caret", e2, t3, r3, s2, a2, i2), GD(r3) ? o2 = "" : GD(s2) ? o2 = ">=" + r3 + ".0.0" + n2 + " <" + (+r3 + 1) + ".0.0-0" : GD(a2) ? o2 = r3 === "0" ? ">=" + r3 + "." + s2 + ".0" + n2 + " <" + r3 + "." + (+s2 + 1) + ".0-0" : ">=" + r3 + "." + s2 + ".0" + n2 + " <" + (+r3 + 1) + ".0.0-0" : i2 ? (Lx("replaceCaret pr", i2), o2 = r3 === "0" ? s2 === "0" ? ">=" + r3 + "." + s2 + "." + a2 + "-" + i2 + " <" + r3 + "." + s2 + "." + (+a2 + 1) + "-0" : ">=" + r3 + "." + s2 + "." + a2 + "-" + i2 + " <" + r3 + "." + (+s2 + 1) + ".0-0" : ">=" + r3 + "." + s2 + "." + a2 + "-" + i2 + " <" + (+r3 + 1) + ".0.0-0") : (Lx("no pr"), o2 = r3 === "0" ? s2 === "0" ? ">=" + r3 + "." + s2 + "." + a2 + n2 + " <" + r3 + "." + s2 + "." + (+a2 + 1) + "-0" : ">=" + r3 + "." + s2 + "." + a2 + n2 + " <" + r3 + "." + (+s2 + 1) + ".0-0" : ">=" + r3 + "." + s2 + "." + a2 + " <" + (+r3 + 1) + ".0.0-0"), Lx("caret return", o2), o2;
        });
      }, qD = function(e2, t2) {
        return Lx("replaceXRanges", e2, t2), e2.split(/\s+/).map(function(e3) {
          return $D(e3, t2);
        }).join(" ");
      }, $D = function(e2, t2) {
        e2 = e2.trim();
        var r2 = t2.loose ? kD[OD.XRANGELOOSE] : kD[OD.XRANGE];
        return e2.replace(r2, function(r3, n2, s2, a2, i2, o2) {
          Lx("xRange", e2, r3, n2, s2, a2, i2, o2);
          var u2 = GD(s2), l2 = u2 || GD(a2), c2 = l2 || GD(i2), p2 = c2;
          return n2 === "=" && p2 && (n2 = ""), o2 = t2.includePrerelease ? "-0" : "", u2 ? r3 = n2 === ">" || n2 === "<" ? "<0.0.0-0" : "*" : n2 && p2 ? (l2 && (a2 = 0), i2 = 0, n2 === ">" ? (n2 = ">=", l2 ? (s2 = +s2 + 1, a2 = 0, i2 = 0) : (a2 = +a2 + 1, i2 = 0)) : n2 === "<=" && (n2 = "<", l2 ? s2 = +s2 + 1 : a2 = +a2 + 1), n2 === "<" && (o2 = "-0"), r3 = n2 + s2 + "." + a2 + "." + i2 + o2) : l2 ? r3 = ">=" + s2 + ".0.0" + o2 + " <" + (+s2 + 1) + ".0.0-0" : c2 && (r3 = ">=" + s2 + "." + a2 + ".0" + o2 + " <" + s2 + "." + (+a2 + 1) + ".0-0"), Lx("xRange return", r3), r3;
        });
      }, KD = function(e2, t2) {
        return Lx("replaceStars", e2, t2), e2.trim().replace(kD[OD.STAR], "");
      }, zD = function(e2, t2) {
        return Lx("replaceGTE0", e2, t2), e2.trim().replace(kD[t2.includePrerelease ? OD.GTE0PRE : OD.GTE0], "");
      }, JD = function(e2) {
        return function(t2, r2, n2, s2, a2, i2, o2, u2, l2, c2, p2, d2, f2) {
          return ((r2 = GD(n2) ? "" : GD(s2) ? ">=" + n2 + ".0.0" + (e2 ? "-0" : "") : GD(a2) ? ">=" + n2 + "." + s2 + ".0" + (e2 ? "-0" : "") : i2 ? ">=" + r2 : ">=" + r2 + (e2 ? "-0" : "")) + " " + (u2 = GD(l2) ? "" : GD(c2) ? "<" + (+l2 + 1) + ".0.0-0" : GD(p2) ? "<" + l2 + "." + (+c2 + 1) + ".0-0" : d2 ? "<=" + l2 + "." + c2 + "." + p2 + "-" + d2 : e2 ? "<" + l2 + "." + c2 + "." + (+p2 + 1) + "-0" : "<=" + u2)).trim();
        };
      }, YD = function(e2, t2, r2) {
        for (var n2 = 0; n2 < e2.length; n2++)
          if (!e2[n2].test(t2))
            return false;
        if (t2.prerelease.length && !r2.includePrerelease) {
          for (var s2 = 0; s2 < e2.length; s2++)
            if (Lx(e2[s2].semver), e2[s2].semver !== ZD.ANY && e2[s2].semver.prerelease.length > 0) {
              var a2 = e2[s2].semver;
              if (a2.major === t2.major && a2.minor === t2.minor && a2.patch === t2.patch)
                return true;
            }
          return false;
        }
        return true;
      }, QD = Symbol("SemVer ANY"), ZD = function() {
        function e2(t3, r2) {
          if (r2 = Gx(r2), t3 instanceof e2) {
            if (t3.loose === !!r2.loose)
              return t3;
            t3 = t3.value;
          }
          Lx("comparator", t3, r2), this.options = r2, this.loose = !!r2.loose, this.parse(t3), this.semver === QD ? this.value = "" : this.value = this.operator + this.semver.version, Lx("comp", this);
        }
        var t2 = e2.prototype;
        return t2.parse = function(e3) {
          var t3 = this.options.loose ? eA[tA.COMPARATORLOOSE] : eA[tA.COMPARATOR], r2 = e3.match(t3);
          if (!r2)
            throw new TypeError("Invalid comparator: " + e3);
          this.operator = r2[1] !== void 0 ? r2[1] : "", this.operator === "=" && (this.operator = ""), r2[2] ? this.semver = new Jx(r2[2], this.options.loose) : this.semver = QD;
        }, t2.toString = function() {
          return this.value;
        }, t2.test = function(e3) {
          if (Lx("Comparator.test", e3, this.options.loose), this.semver === QD || e3 === QD)
            return true;
          if (typeof e3 == "string")
            try {
              e3 = new Jx(e3, this.options);
            } catch (e4) {
              return false;
            }
          return sD(e3, this.operator, this.semver, this.options);
        }, t2.intersects = function(t3, r2) {
          if (!(t3 instanceof e2))
            throw new TypeError("a Comparator is required");
          if (r2 && typeof r2 == "object" || (r2 = { loose: !!r2, includePrerelease: false }), this.operator === "")
            return this.value === "" || new ID(t3.value, r2).test(this.value);
          if (t3.operator === "")
            return t3.value === "" || new ID(this.value, r2).test(t3.semver);
          var n2 = !(this.operator !== ">=" && this.operator !== ">" || t3.operator !== ">=" && t3.operator !== ">"), s2 = !(this.operator !== "<=" && this.operator !== "<" || t3.operator !== "<=" && t3.operator !== "<"), a2 = this.semver.version === t3.semver.version, i2 = !(this.operator !== ">=" && this.operator !== "<=" || t3.operator !== ">=" && t3.operator !== "<="), o2 = sD(this.semver, "<", t3.semver, r2) && (this.operator === ">=" || this.operator === ">") && (t3.operator === "<=" || t3.operator === "<"), u2 = sD(this.semver, ">", t3.semver, r2) && (this.operator === "<=" || this.operator === "<") && (t3.operator === ">=" || t3.operator === ">");
          return n2 || s2 || a2 && i2 || o2 || u2;
        }, n(e2, null, [{ key: "ANY", get: function() {
          return QD;
        } }]), e2;
      }(), eA = Mx.re, tA = Mx.t;
      ZD.ANY, ZD.ANY;
      Mx.re, Mx.src, Mx.t;
      var rA, nA = zt(function(e2, t2) {
        var r2;
        t2 = e2.exports = p2, r2 = typeof ar == "object" && ar.env && ar.env.NODE_DEBUG && /\bsemver\b/i.test(ar.env.NODE_DEBUG) ? function() {
          var e3 = Array.prototype.slice.call(arguments, 0);
          e3.unshift("SEMVER"), console.log.apply(console, e3);
        } : function() {
        }, t2.SEMVER_SPEC_VERSION = "2.0.0";
        var n2 = Number.MAX_SAFE_INTEGER || 9007199254740991, s2 = t2.re = [], a2 = t2.src = [], i2 = t2.tokens = {}, o2 = 0;
        function u2(e3) {
          i2[e3] = o2++;
        }
        u2("NUMERICIDENTIFIER"), a2[i2.NUMERICIDENTIFIER] = "0|[1-9]\\d*", u2("NUMERICIDENTIFIERLOOSE"), a2[i2.NUMERICIDENTIFIERLOOSE] = "[0-9]+", u2("NONNUMERICIDENTIFIER"), a2[i2.NONNUMERICIDENTIFIER] = "\\d*[a-zA-Z-][a-zA-Z0-9-]*", u2("MAINVERSION"), a2[i2.MAINVERSION] = "(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")", u2("MAINVERSIONLOOSE"), a2[i2.MAINVERSIONLOOSE] = "(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")", u2("PRERELEASEIDENTIFIER"), a2[i2.PRERELEASEIDENTIFIER] = "(?:" + a2[i2.NUMERICIDENTIFIER] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASEIDENTIFIERLOOSE"), a2[i2.PRERELEASEIDENTIFIERLOOSE] = "(?:" + a2[i2.NUMERICIDENTIFIERLOOSE] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASE"), a2[i2.PRERELEASE] = "(?:-(" + a2[i2.PRERELEASEIDENTIFIER] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIER] + ")*))", u2("PRERELEASELOOSE"), a2[i2.PRERELEASELOOSE] = "(?:-?(" + a2[i2.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIERLOOSE] + ")*))", u2("BUILDIDENTIFIER"), a2[i2.BUILDIDENTIFIER] = "[0-9A-Za-z-]+", u2("BUILD"), a2[i2.BUILD] = "(?:\\+(" + a2[i2.BUILDIDENTIFIER] + "(?:\\." + a2[i2.BUILDIDENTIFIER] + ")*))", u2("FULL"), u2("FULLPLAIN"), a2[i2.FULLPLAIN] = "v?" + a2[i2.MAINVERSION] + a2[i2.PRERELEASE] + "?" + a2[i2.BUILD] + "?", a2[i2.FULL] = "^" + a2[i2.FULLPLAIN] + "$", u2("LOOSEPLAIN"), a2[i2.LOOSEPLAIN] = "[v=\\s]*" + a2[i2.MAINVERSIONLOOSE] + a2[i2.PRERELEASELOOSE] + "?" + a2[i2.BUILD] + "?", u2("LOOSE"), a2[i2.LOOSE] = "^" + a2[i2.LOOSEPLAIN] + "$", u2("GTLT"), a2[i2.GTLT] = "((?:<|>)?=?)", u2("XRANGEIDENTIFIERLOOSE"), a2[i2.XRANGEIDENTIFIERLOOSE] = a2[i2.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*", u2("XRANGEIDENTIFIER"), a2[i2.XRANGEIDENTIFIER] = a2[i2.NUMERICIDENTIFIER] + "|x|X|\\*", u2("XRANGEPLAIN"), a2[i2.XRANGEPLAIN] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:" + a2[i2.PRERELEASE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGEPLAINLOOSE"), a2[i2.XRANGEPLAINLOOSE] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:" + a2[i2.PRERELEASELOOSE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGE"), a2[i2.XRANGE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAIN] + "$", u2("XRANGELOOSE"), a2[i2.XRANGELOOSE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COERCE"), a2[i2.COERCE] = "(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])", u2("COERCERTL"), s2[i2.COERCERTL] = new RegExp(a2[i2.COERCE], "g"), u2("LONETILDE"), a2[i2.LONETILDE] = "(?:~>?)", u2("TILDETRIM"), a2[i2.TILDETRIM] = "(\\s*)" + a2[i2.LONETILDE] + "\\s+", s2[i2.TILDETRIM] = new RegExp(a2[i2.TILDETRIM], "g");
        u2("TILDE"), a2[i2.TILDE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAIN] + "$", u2("TILDELOOSE"), a2[i2.TILDELOOSE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("LONECARET"), a2[i2.LONECARET] = "(?:\\^)", u2("CARETTRIM"), a2[i2.CARETTRIM] = "(\\s*)" + a2[i2.LONECARET] + "\\s+", s2[i2.CARETTRIM] = new RegExp(a2[i2.CARETTRIM], "g");
        u2("CARET"), a2[i2.CARET] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAIN] + "$", u2("CARETLOOSE"), a2[i2.CARETLOOSE] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COMPARATORLOOSE"), a2[i2.COMPARATORLOOSE] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + ")$|^$", u2("COMPARATOR"), a2[i2.COMPARATOR] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.FULLPLAIN] + ")$|^$", u2("COMPARATORTRIM"), a2[i2.COMPARATORTRIM] = "(\\s*)" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + "|" + a2[i2.XRANGEPLAIN] + ")", s2[i2.COMPARATORTRIM] = new RegExp(a2[i2.COMPARATORTRIM], "g");
        u2("HYPHENRANGE"), a2[i2.HYPHENRANGE] = "^\\s*(" + a2[i2.XRANGEPLAIN] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAIN] + ")\\s*$", u2("HYPHENRANGELOOSE"), a2[i2.HYPHENRANGELOOSE] = "^\\s*(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s*$", u2("STAR"), a2[i2.STAR] = "(<|>)?=?\\s*\\*";
        for (var l2 = 0; l2 < o2; l2++)
          r2(l2, a2[l2]), s2[l2] || (s2[l2] = new RegExp(a2[l2]));
        function c2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2)
            return e3;
          if (typeof e3 != "string")
            return null;
          if (e3.length > 256)
            return null;
          if (!(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]).test(e3))
            return null;
          try {
            return new p2(e3, t3);
          } catch (e4) {
            return null;
          }
        }
        function p2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2) {
            if (e3.loose === t3.loose)
              return e3;
            e3 = e3.version;
          } else if (typeof e3 != "string")
            throw new TypeError("Invalid Version: " + e3);
          if (e3.length > 256)
            throw new TypeError("version is longer than 256 characters");
          if (!(this instanceof p2))
            return new p2(e3, t3);
          r2("SemVer", e3, t3), this.options = t3, this.loose = !!t3.loose;
          var a3 = e3.trim().match(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]);
          if (!a3)
            throw new TypeError("Invalid Version: " + e3);
          if (this.raw = e3, this.major = +a3[1], this.minor = +a3[2], this.patch = +a3[3], this.major > n2 || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > n2 || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > n2 || this.patch < 0)
            throw new TypeError("Invalid patch version");
          a3[4] ? this.prerelease = a3[4].split(".").map(function(e4) {
            if (/^[0-9]+$/.test(e4)) {
              var t4 = +e4;
              if (t4 >= 0 && t4 < n2)
                return t4;
            }
            return e4;
          }) : this.prerelease = [], this.build = a3[5] ? a3[5].split(".") : [], this.format();
        }
        t2.parse = c2, t2.valid = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 ? r3.version : null;
        }, t2.clean = function(e3, t3) {
          var r3 = c2(e3.trim().replace(/^[=v]+/, ""), t3);
          return r3 ? r3.version : null;
        }, t2.SemVer = p2, p2.prototype.format = function() {
          return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version;
        }, p2.prototype.toString = function() {
          return this.version;
        }, p2.prototype.compare = function(e3) {
          return r2("SemVer.compare", this.version, this.options, e3), e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.compareMain(e3) || this.comparePre(e3);
        }, p2.prototype.compareMain = function(e3) {
          return e3 instanceof p2 || (e3 = new p2(e3, this.options)), f2(this.major, e3.major) || f2(this.minor, e3.minor) || f2(this.patch, e3.patch);
        }, p2.prototype.comparePre = function(e3) {
          if (e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.prerelease.length && !e3.prerelease.length)
            return -1;
          if (!this.prerelease.length && e3.prerelease.length)
            return 1;
          if (!this.prerelease.length && !e3.prerelease.length)
            return 0;
          var t3 = 0;
          do {
            var n3 = this.prerelease[t3], s3 = e3.prerelease[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.compareBuild = function(e3) {
          e3 instanceof p2 || (e3 = new p2(e3, this.options));
          var t3 = 0;
          do {
            var n3 = this.build[t3], s3 = e3.build[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.inc = function(e3, t3) {
          switch (e3) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t3);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t3);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "prerelease":
              this.prerelease.length === 0 && this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "major":
              this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              this.prerelease.length === 0 && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (this.prerelease.length === 0)
                this.prerelease = [0];
              else {
                for (var r3 = this.prerelease.length; --r3 >= 0; )
                  typeof this.prerelease[r3] == "number" && (this.prerelease[r3]++, r3 = -2);
                r3 === -1 && this.prerelease.push(0);
              }
              t3 && (this.prerelease[0] === t3 ? isNaN(this.prerelease[1]) && (this.prerelease = [t3, 0]) : this.prerelease = [t3, 0]);
              break;
            default:
              throw new Error("invalid increment argument: " + e3);
          }
          return this.format(), this.raw = this.version, this;
        }, t2.inc = function(e3, t3, r3, n3) {
          typeof r3 == "string" && (n3 = r3, r3 = void 0);
          try {
            return new p2(e3, r3).inc(t3, n3).version;
          } catch (e4) {
            return null;
          }
        }, t2.diff = function(e3, t3) {
          if (g2(e3, t3))
            return null;
          var r3 = c2(e3), n3 = c2(t3), s3 = "";
          if (r3.prerelease.length || n3.prerelease.length) {
            s3 = "pre";
            var a3 = "prerelease";
          }
          for (var i3 in r3)
            if ((i3 === "major" || i3 === "minor" || i3 === "patch") && r3[i3] !== n3[i3])
              return s3 + i3;
          return a3;
        }, t2.compareIdentifiers = f2;
        var d2 = /^[0-9]+$/;
        function f2(e3, t3) {
          var r3 = d2.test(e3), n3 = d2.test(t3);
          return r3 && n3 && (e3 = +e3, t3 = +t3), e3 === t3 ? 0 : r3 && !n3 ? -1 : n3 && !r3 ? 1 : e3 < t3 ? -1 : 1;
        }
        function h2(e3, t3, r3) {
          return new p2(e3, r3).compare(new p2(t3, r3));
        }
        function m2(e3, t3, r3) {
          return h2(e3, t3, r3) > 0;
        }
        function y2(e3, t3, r3) {
          return h2(e3, t3, r3) < 0;
        }
        function g2(e3, t3, r3) {
          return h2(e3, t3, r3) === 0;
        }
        function v2(e3, t3, r3) {
          return h2(e3, t3, r3) !== 0;
        }
        function b2(e3, t3, r3) {
          return h2(e3, t3, r3) >= 0;
        }
        function E2(e3, t3, r3) {
          return h2(e3, t3, r3) <= 0;
        }
        function x2(e3, t3, r3, n3) {
          switch (t3) {
            case "===":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 === r3;
            case "!==":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 !== r3;
            case "":
            case "=":
            case "==":
              return g2(e3, r3, n3);
            case "!=":
              return v2(e3, r3, n3);
            case ">":
              return m2(e3, r3, n3);
            case ">=":
              return b2(e3, r3, n3);
            case "<":
              return y2(e3, r3, n3);
            case "<=":
              return E2(e3, r3, n3);
            default:
              throw new TypeError("Invalid operator: " + t3);
          }
        }
        function D2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof D2) {
            if (e3.loose === !!t3.loose)
              return e3;
            e3 = e3.value;
          }
          if (!(this instanceof D2))
            return new D2(e3, t3);
          r2("comparator", e3, t3), this.options = t3, this.loose = !!t3.loose, this.parse(e3), this.semver === A2 ? this.value = "" : this.value = this.operator + this.semver.version, r2("comp", this);
        }
        t2.rcompareIdentifiers = function(e3, t3) {
          return f2(t3, e3);
        }, t2.major = function(e3, t3) {
          return new p2(e3, t3).major;
        }, t2.minor = function(e3, t3) {
          return new p2(e3, t3).minor;
        }, t2.patch = function(e3, t3) {
          return new p2(e3, t3).patch;
        }, t2.compare = h2, t2.compareLoose = function(e3, t3) {
          return h2(e3, t3, true);
        }, t2.compareBuild = function(e3, t3, r3) {
          var n3 = new p2(e3, r3), s3 = new p2(t3, r3);
          return n3.compare(s3) || n3.compareBuild(s3);
        }, t2.rcompare = function(e3, t3, r3) {
          return h2(t3, e3, r3);
        }, t2.sort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(e4, n3, r3);
          });
        }, t2.rsort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(n3, e4, r3);
          });
        }, t2.gt = m2, t2.lt = y2, t2.eq = g2, t2.neq = v2, t2.gte = b2, t2.lte = E2, t2.cmp = x2, t2.Comparator = D2;
        var A2 = {};
        function w2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof w2)
            return e3.loose === !!t3.loose && e3.includePrerelease === !!t3.includePrerelease ? e3 : new w2(e3.raw, t3);
          if (e3 instanceof D2)
            return new w2(e3.value, t3);
          if (!(this instanceof w2))
            return new w2(e3, t3);
          if (this.options = t3, this.loose = !!t3.loose, this.includePrerelease = !!t3.includePrerelease, this.raw = e3, this.set = e3.split(/\s*\|\|\s*/).map(function(e4) {
            return this.parseRange(e4.trim());
          }, this).filter(function(e4) {
            return e4.length;
          }), !this.set.length)
            throw new TypeError("Invalid SemVer Range: " + e3);
          this.format();
        }
        function C2(e3, t3) {
          for (var r3 = true, n3 = e3.slice(), s3 = n3.pop(); r3 && n3.length; )
            r3 = n3.every(function(e4) {
              return s3.intersects(e4, t3);
            }), s3 = n3.pop();
          return r3;
        }
        function S2(e3) {
          return !e3 || e3.toLowerCase() === "x" || e3 === "*";
        }
        function T2(e3, t3, r3, n3, s3, a3, i3, o3, u3, l3, c3, p3, d3) {
          return ((t3 = S2(r3) ? "" : S2(n3) ? ">=" + r3 + ".0.0" : S2(s3) ? ">=" + r3 + "." + n3 + ".0" : ">=" + t3) + " " + (o3 = S2(u3) ? "" : S2(l3) ? "<" + (+u3 + 1) + ".0.0" : S2(c3) ? "<" + u3 + "." + (+l3 + 1) + ".0" : p3 ? "<=" + u3 + "." + l3 + "." + c3 + "-" + p3 : "<=" + o3)).trim();
        }
        function j2(e3, t3, n3) {
          for (var s3 = 0; s3 < e3.length; s3++)
            if (!e3[s3].test(t3))
              return false;
          if (t3.prerelease.length && !n3.includePrerelease) {
            for (s3 = 0; s3 < e3.length; s3++)
              if (r2(e3[s3].semver), e3[s3].semver !== A2 && e3[s3].semver.prerelease.length > 0) {
                var a3 = e3[s3].semver;
                if (a3.major === t3.major && a3.minor === t3.minor && a3.patch === t3.patch)
                  return true;
              }
            return false;
          }
          return true;
        }
        function P2(e3, t3, r3) {
          try {
            t3 = new w2(t3, r3);
          } catch (e4) {
            return false;
          }
          return t3.test(e3);
        }
        function I2(e3, t3, r3, n3) {
          var s3, a3, i3, o3, u3;
          switch (e3 = new p2(e3, n3), t3 = new w2(t3, n3), r3) {
            case ">":
              s3 = m2, a3 = E2, i3 = y2, o3 = ">", u3 = ">=";
              break;
            case "<":
              s3 = y2, a3 = b2, i3 = m2, o3 = "<", u3 = "<=";
              break;
            default:
              throw new TypeError('Must provide a hilo val of "<" or ">"');
          }
          if (P2(e3, t3, n3))
            return false;
          for (var l3 = 0; l3 < t3.set.length; ++l3) {
            var c3 = t3.set[l3], d3 = null, f3 = null;
            if (c3.forEach(function(e4) {
              e4.semver === A2 && (e4 = new D2(">=0.0.0")), d3 = d3 || e4, f3 = f3 || e4, s3(e4.semver, d3.semver, n3) ? d3 = e4 : i3(e4.semver, f3.semver, n3) && (f3 = e4);
            }), d3.operator === o3 || d3.operator === u3)
              return false;
            if ((!f3.operator || f3.operator === o3) && a3(e3, f3.semver))
              return false;
            if (f3.operator === u3 && i3(e3, f3.semver))
              return false;
          }
          return true;
        }
        D2.prototype.parse = function(e3) {
          var t3 = this.options.loose ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], r3 = e3.match(t3);
          if (!r3)
            throw new TypeError("Invalid comparator: " + e3);
          this.operator = r3[1] !== void 0 ? r3[1] : "", this.operator === "=" && (this.operator = ""), r3[2] ? this.semver = new p2(r3[2], this.options.loose) : this.semver = A2;
        }, D2.prototype.toString = function() {
          return this.value;
        }, D2.prototype.test = function(e3) {
          if (r2("Comparator.test", e3, this.options.loose), this.semver === A2 || e3 === A2)
            return true;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          return x2(e3, this.operator, this.semver, this.options);
        }, D2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof D2))
            throw new TypeError("a Comparator is required");
          var r3;
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), this.operator === "")
            return this.value === "" || (r3 = new w2(e3.value, t3), P2(this.value, r3, t3));
          if (e3.operator === "")
            return e3.value === "" || (r3 = new w2(this.value, t3), P2(e3.semver, r3, t3));
          var n3 = !(this.operator !== ">=" && this.operator !== ">" || e3.operator !== ">=" && e3.operator !== ">"), s3 = !(this.operator !== "<=" && this.operator !== "<" || e3.operator !== "<=" && e3.operator !== "<"), a3 = this.semver.version === e3.semver.version, i3 = !(this.operator !== ">=" && this.operator !== "<=" || e3.operator !== ">=" && e3.operator !== "<="), o3 = x2(this.semver, "<", e3.semver, t3) && (this.operator === ">=" || this.operator === ">") && (e3.operator === "<=" || e3.operator === "<"), u3 = x2(this.semver, ">", e3.semver, t3) && (this.operator === "<=" || this.operator === "<") && (e3.operator === ">=" || e3.operator === ">");
          return n3 || s3 || a3 && i3 || o3 || u3;
        }, t2.Range = w2, w2.prototype.format = function() {
          return this.range = this.set.map(function(e3) {
            return e3.join(" ").trim();
          }).join("||").trim(), this.range;
        }, w2.prototype.toString = function() {
          return this.range;
        }, w2.prototype.parseRange = function(e3) {
          var t3 = this.options.loose;
          e3 = e3.trim();
          var n3 = t3 ? s2[i2.HYPHENRANGELOOSE] : s2[i2.HYPHENRANGE];
          e3 = e3.replace(n3, T2), r2("hyphen replace", e3), e3 = e3.replace(s2[i2.COMPARATORTRIM], "$1$2$3"), r2("comparator trim", e3, s2[i2.COMPARATORTRIM]), e3 = (e3 = (e3 = e3.replace(s2[i2.TILDETRIM], "$1~")).replace(s2[i2.CARETTRIM], "$1^")).split(/\s+/).join(" ");
          var a3 = t3 ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], o3 = e3.split(" ").map(function(e4) {
            return function(e5, t4) {
              return r2("comp", e5, t4), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    r2("caret", e8, t6);
                    var n4 = t6.loose ? s2[i2.CARETLOOSE] : s2[i2.CARET];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("caret", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = n5 === "0" ? ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + ".0 <" + (+n5 + 1) + ".0.0" : i3 ? (r2("replaceCaret pr", i3), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + (+n5 + 1) + ".0.0") : (r2("no pr"), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + " <" + (+n5 + 1) + ".0.0"), r2("caret return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("caret", e5), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    var n4 = t6.loose ? s2[i2.TILDELOOSE] : s2[i2.TILDE];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("tilde", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : i3 ? (r2("replaceTilde pr", i3), o4 = ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0") : o4 = ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0", r2("tilde return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("tildes", e5), e5 = function(e6, t5) {
                return r2("replaceXRanges", e6, t5), e6.split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    e8 = e8.trim();
                    var n4 = t6.loose ? s2[i2.XRANGELOOSE] : s2[i2.XRANGE];
                    return e8.replace(n4, function(n5, s3, a4, i3, o4, u3) {
                      r2("xRange", e8, n5, s3, a4, i3, o4, u3);
                      var l3 = S2(a4), c3 = l3 || S2(i3), p3 = c3 || S2(o4), d3 = p3;
                      return s3 === "=" && d3 && (s3 = ""), u3 = t6.includePrerelease ? "-0" : "", l3 ? n5 = s3 === ">" || s3 === "<" ? "<0.0.0-0" : "*" : s3 && d3 ? (c3 && (i3 = 0), o4 = 0, s3 === ">" ? (s3 = ">=", c3 ? (a4 = +a4 + 1, i3 = 0, o4 = 0) : (i3 = +i3 + 1, o4 = 0)) : s3 === "<=" && (s3 = "<", c3 ? a4 = +a4 + 1 : i3 = +i3 + 1), n5 = s3 + a4 + "." + i3 + "." + o4 + u3) : c3 ? n5 = ">=" + a4 + ".0.0" + u3 + " <" + (+a4 + 1) + ".0.0" + u3 : p3 && (n5 = ">=" + a4 + "." + i3 + ".0" + u3 + " <" + a4 + "." + (+i3 + 1) + ".0" + u3), r2("xRange return", n5), n5;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("xrange", e5), e5 = function(e6, t5) {
                return r2("replaceStars", e6, t5), e6.trim().replace(s2[i2.STAR], "");
              }(e5, t4), r2("stars", e5), e5;
            }(e4, this.options);
          }, this).join(" ").split(/\s+/);
          return this.options.loose && (o3 = o3.filter(function(e4) {
            return !!e4.match(a3);
          })), o3 = o3.map(function(e4) {
            return new D2(e4, this.options);
          }, this);
        }, w2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof w2))
            throw new TypeError("a Range is required");
          return this.set.some(function(r3) {
            return C2(r3, t3) && e3.set.some(function(e4) {
              return C2(e4, t3) && r3.every(function(r4) {
                return e4.every(function(e5) {
                  return r4.intersects(e5, t3);
                });
              });
            });
          });
        }, t2.toComparators = function(e3, t3) {
          return new w2(e3, t3).set.map(function(e4) {
            return e4.map(function(e5) {
              return e5.value;
            }).join(" ").trim().split(" ");
          });
        }, w2.prototype.test = function(e3) {
          if (!e3)
            return false;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          for (var t3 = 0; t3 < this.set.length; t3++)
            if (j2(this.set[t3], e3, this.options))
              return true;
          return false;
        }, t2.satisfies = P2, t2.maxSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== -1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== 1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minVersion = function(e3, t3) {
          e3 = new w2(e3, t3);
          var r3 = new p2("0.0.0");
          if (e3.test(r3))
            return r3;
          if (r3 = new p2("0.0.0-0"), e3.test(r3))
            return r3;
          r3 = null;
          for (var n3 = 0; n3 < e3.set.length; ++n3) {
            e3.set[n3].forEach(function(e4) {
              var t4 = new p2(e4.semver.version);
              switch (e4.operator) {
                case ">":
                  t4.prerelease.length === 0 ? t4.patch++ : t4.prerelease.push(0), t4.raw = t4.format();
                case "":
                case ">=":
                  r3 && !m2(r3, t4) || (r3 = t4);
                  break;
                case "<":
                case "<=":
                  break;
                default:
                  throw new Error("Unexpected operation: " + e4.operator);
              }
            });
          }
          if (r3 && e3.test(r3))
            return r3;
          return null;
        }, t2.validRange = function(e3, t3) {
          try {
            return new w2(e3, t3).range || "*";
          } catch (e4) {
            return null;
          }
        }, t2.ltr = function(e3, t3, r3) {
          return I2(e3, t3, "<", r3);
        }, t2.gtr = function(e3, t3, r3) {
          return I2(e3, t3, ">", r3);
        }, t2.outside = I2, t2.prerelease = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 && r3.prerelease.length ? r3.prerelease : null;
        }, t2.intersects = function(e3, t3, r3) {
          return e3 = new w2(e3, r3), t3 = new w2(t3, r3), e3.intersects(t3);
        }, t2.coerce = function(e3, t3) {
          if (e3 instanceof p2)
            return e3;
          typeof e3 == "number" && (e3 = String(e3));
          if (typeof e3 != "string")
            return null;
          var r3 = null;
          if ((t3 = t3 || {}).rtl) {
            for (var n3; (n3 = s2[i2.COERCERTL].exec(e3)) && (!r3 || r3.index + r3[0].length !== e3.length); )
              r3 && n3.index + n3[0].length === r3.index + r3[0].length || (r3 = n3), s2[i2.COERCERTL].lastIndex = n3.index + n3[1].length + n3[2].length;
            s2[i2.COERCERTL].lastIndex = -1;
          } else
            r3 = e3.match(s2[i2.COERCE]);
          if (r3 === null)
            return null;
          return c2(r3[2] + "." + (r3[3] || "0") + "." + (r3[4] || "0"), t3);
        };
      }, "/$$rollup_base$$/packages/babel-core/node_modules/semver/node_modules/semver-BABEL_8_BREAKING-false"), sA = { enter: function(e2, t2) {
        var r2 = e2.node.loc;
        r2 && (t2.loc = r2, e2.stop());
      } }, aA = function() {
        function e2(e3, t3) {
          var r2 = this, n2 = t3.code, s2 = t3.ast, a2 = t3.inputMap;
          this._map = new Map(), this.opts = void 0, this.declarations = {}, this.path = null, this.ast = {}, this.scope = void 0, this.metadata = {}, this.code = "", this.inputMap = null, this.hub = { file: this, getCode: function() {
            return r2.code;
          }, getScope: function() {
            return r2.scope;
          }, addHelper: this.addHelper.bind(this), buildError: this.buildCodeFrameError.bind(this) }, this.opts = e3, this.code = n2, this.ast = s2, this.inputMap = a2, this.path = tv.get({ hub: this.hub, parentPath: null, parent: this.ast, container: this.ast, key: "program" }).setContext(), this.scope = this.path.scope;
        }
        var t2 = e2.prototype;
        return t2.set = function(e3, t3) {
          if (e3 === "helpersNamespace")
            throw new Error("Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own implementation, you'll want to explore using 'helperGenerator' alongside 'file.availableHelper()'.");
          this._map.set(e3, t3);
        }, t2.get = function(e3) {
          return this._map.get(e3);
        }, t2.has = function(e3) {
          return this._map.has(e3);
        }, t2.getModuleName = function() {
          return jx(this.opts, this.opts);
        }, t2.addImport = function() {
          throw new Error("This API has been removed. If you're looking for this functionality in Babel 7, you should import the '@babel/helper-module-imports' module and use the functions exposed  from that module, such as 'addNamed' or 'addDefault'.");
        }, t2.availableHelper = function(e3, t3) {
          var r2;
          try {
            r2 = function(e4) {
              return iE(e4).minVersion();
            }(e3);
          } catch (e4) {
            if (e4.code !== "BABEL_HELPER_UNKNOWN")
              throw e4;
            return false;
          }
          return typeof t3 != "string" || (nA.valid(t3) && (t3 = "^" + t3), !nA.intersects("<" + r2, t3) && !nA.intersects(">=8.0.0", t3));
        }, t2.addHelper = function(t3) {
          var r2 = this, n2 = this.declarations[t3];
          if (n2)
            return Ju(n2);
          var s2 = this.get("helperGenerator");
          if (s2) {
            var a2 = s2(t3);
            if (a2)
              return a2;
          }
          uE(t3, e2);
          for (var i2, o2 = this.declarations[t3] = this.scope.generateUidIdentifier(t3), u2 = {}, l2 = f(function(e3) {
            return Array.from(iE(e3).dependencies.values());
          }(t3)); !(i2 = l2()).done; ) {
            var c2 = i2.value;
            u2[c2] = this.addHelper(c2);
          }
          var p2 = oE(t3, function(e3) {
            return u2[e3];
          }, o2, Object.keys(this.scope.getAllBindings())), d2 = p2.nodes;
          return p2.globals.forEach(function(e3) {
            r2.path.scope.hasBinding(e3, true) && r2.path.scope.rename(e3);
          }), d2.forEach(function(e3) {
            e3._compact = true;
          }), this.path.unshiftContainer("body", d2), this.path.get("body").forEach(function(e3) {
            d2.indexOf(e3.node) !== -1 && e3.isVariableDeclaration() && r2.scope.registerDeclaration(e3);
          }), o2;
        }, t2.addTemplateObject = function() {
          throw new Error("This function has been moved into the template literal transform itself.");
        }, t2.buildCodeFrameError = function(e3, t3, r2) {
          r2 === void 0 && (r2 = SyntaxError);
          var n2 = e3 && (e3.loc || e3._loc);
          if (!n2 && e3) {
            var s2 = { loc: null };
            vv(e3, sA, this.scope, s2);
            var a2 = "This is an error on an internal node. Probably an internal error.";
            (n2 = s2.loc) && (a2 += " Location has been estimated."), t3 += " (" + a2 + ")";
          }
          if (n2) {
            var i2 = this.opts.highlightCode, o2 = i2 === void 0 || i2;
            t3 += "\n" + Zh(this.code, { start: { line: n2.start.line, column: n2.start.column + 1 }, end: n2.end && n2.start.line === n2.end.line ? { line: n2.end.line, column: n2.end.column + 1 } : void 0 }, { highlightCode: o2 });
          }
          return new r2(t3);
        }, n(e2, [{ key: "shebang", get: function() {
          var e3 = this.path.node.interpreter;
          return e3 ? e3.value : "";
        }, set: function(e3) {
          e3 ? this.path.get("interpreter").replaceWith(ss(e3)) : this.path.get("interpreter").remove();
        } }]), e2;
      }();
      function iA(e2) {
        var t2 = Ds("babelHelpers"), r2 = [], n2 = Os2([ys(ls(xs(null, [Ds("global")], os(r2)), [ps(ns("===", qs("typeof", Ds("global")), Cs("undefined")), Ds("self"), Ds("global"))]))]);
        return r2.push(Ks("var", [zs(t2, rs("=", Fs2(Ds("global"), t2), Rs([])))])), cA(r2, t2, e2), n2;
      }
      function oA(e2) {
        var t2 = [], r2 = cA(t2, null, e2);
        return t2.unshift(ia(null, Object.keys(r2).map(function(e3) {
          return oa(Ju(r2[e3]), Ds(e3));
        }))), Os2(t2, [], "module");
      }
      function uA(e2) {
        var t2, r2 = Ds("babelHelpers"), n2 = [];
        return n2.push(Ks("var", [zs(r2, Ds("global"))])), cA(n2, r2, e2), Os2([(t2 = { FACTORY_PARAMETERS: Ds("global"), BROWSER_ARGUMENTS: rs("=", Fs2(Ds("root"), r2), Rs([])), COMMON_ARGUMENTS: Ds("exports"), AMD_ARGUMENTS: ts([Cs("exports")]), FACTORY_BODY: n2, UMD_ROOT: Ds("this") }, Eg(rA || (rA = u(['\n    (function (root, factory) {\n      if (typeof define === "function" && define.amd) {\n        define(AMD_ARGUMENTS, factory);\n      } else if (typeof exports === "object") {\n        factory(COMMON_ARGUMENTS);\n      } else {\n        factory(BROWSER_ARGUMENTS);\n      }\n    })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n      FACTORY_BODY\n    });\n  '])))(t2))]);
      }
      function lA(e2) {
        var t2 = Ds("babelHelpers"), r2 = [];
        r2.push(Ks("var", [zs(t2, Rs([]))]));
        var n2 = Os2(r2);
        return cA(r2, t2, e2), r2.push(ys(t2)), n2;
      }
      function cA(e2, t2, r2) {
        var n2 = function(e3) {
          return t2 ? Fs2(t2, Ds(e3)) : Ds("_" + e3);
        }, s2 = {};
        return lE.forEach(function(t3) {
          if (!(r2 && r2.indexOf(t3) < 0)) {
            var a2 = s2[t3] = n2(t3);
            uE(t3, aA);
            var i2 = oE(t3, n2, a2).nodes;
            e2.push.apply(e2, c(i2));
          }
        }), s2;
      }
      function pA(e2, t2) {
        t2 === void 0 && (t2 = "global");
        var r2 = { global: iA, module: oA, umd: uA, var: lA }[t2];
        if (!r2)
          throw new Error("Unsupported output type " + t2);
        return Bf(r2(e2)).code;
      }
      var dA = bh.mark(gA), fA = bh.mark(vA), hA = bh.mark(bA), mA = bh.mark(EA), yA = bh.mark(xA);
      function gA(e2) {
        return bh.wrap(function(t2) {
          for (; ; )
            switch (t2.prev = t2.next) {
              case 0:
                return t2.abrupt("return", { filepath: e2, directories: [], pkg: null, isPackage: false });
              case 1:
              case "end":
                return t2.stop();
            }
        }, dA);
      }
      function vA(e2, t2, r2) {
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return e3.abrupt("return", { config: null, ignore: null });
              case 1:
              case "end":
                return e3.stop();
            }
        }, fA);
      }
      function bA(e2, t2, r2) {
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return e3.abrupt("return", null);
              case 1:
              case "end":
                return e3.stop();
            }
        }, hA);
      }
      function EA(e2, t2, r2, n2) {
        return bh.wrap(function(r3) {
          for (; ; )
            switch (r3.prev = r3.next) {
              case 0:
                throw new Error("Cannot load " + e2 + " relative to " + t2 + " in a browser");
              case 1:
              case "end":
                return r3.stop();
            }
        }, mA);
      }
      function xA(e2) {
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return e3.abrupt("return", null);
              case 1:
              case "end":
                return e3.stop();
            }
        }, yA);
      }
      var DA = [];
      function AA(e2, t2) {
        return null;
      }
      function wA(e2, t2) {
        return null;
      }
      function CA(e2, t2) {
        throw new Error("Cannot load plugin " + e2 + " relative to " + t2 + " in a browser");
      }
      function SA(e2, t2) {
        throw new Error("Cannot load preset " + e2 + " relative to " + t2 + " in a browser");
      }
      function TA(e2) {
        return e2 === void 0 && (e2 = "development"), ar.env.BABEL_ENV || e2;
      }
      var jA = Symbol.for("gensync:v1:start"), PA = Symbol.for("gensync:v1:suspend"), IA = "GENSYNC_EXPECTED_SUSPEND", FA = "GENSYNC_OPTIONS_ERROR", kA = "GENSYNC_RACE_NONEMPTY", OA = "GENSYNC_ERRBACK_NO_CALLBACK", RA = Object.assign(function(e2) {
        var t2 = e2;
        return t2 = typeof e2 != "function" ? function(e3) {
          var t3 = e3.name, r2 = e3.arity, n2 = e3.sync, s2 = e3.async, a2 = e3.errback;
          if (NA("string", "name", t3, true), NA("number", "arity", r2, true), NA("function", "sync", n2), NA("function", "async", s2, true), NA("function", "errback", a2, true), s2 && a2)
            throw BA("Expected one of either opts.async or opts.errback, but got _both_.", FA);
          if (typeof t3 != "string") {
            var i2;
            a2 && a2.name && a2.name !== "errback" && (i2 = a2.name), s2 && s2.name && s2.name !== "async" && (i2 = s2.name.replace(/Async$/, "")), n2 && n2.name && n2.name !== "sync" && (i2 = n2.name.replace(/Sync$/, "")), typeof i2 == "string" && (t3 = i2);
          }
          typeof r2 != "number" && (r2 = n2.length);
          return _A({ name: t3, arity: r2, sync: function(e4) {
            return n2.apply(this, e4);
          }, async: function(e4, t4, r3) {
            s2 ? s2.apply(this, e4).then(t4, r3) : a2 ? a2.call.apply(a2, [this].concat(c(e4), [function(e5, n3) {
              e5 == null ? t4(n3) : r3(e5);
            }])) : t4(n2.apply(this, e4));
          } });
        }(e2) : function(e3) {
          return VA(e3.name, e3.length, function() {
            for (var t3 = arguments.length, r2 = new Array(t3), n2 = 0; n2 < t3; n2++)
              r2[n2] = arguments[n2];
            return e3.apply(this, r2);
          });
        }(e2), Object.assign(t2, function(e3) {
          return { sync: function() {
            for (var t3 = arguments.length, r2 = new Array(t3), n2 = 0; n2 < t3; n2++)
              r2[n2] = arguments[n2];
            return LA(e3.apply(this, r2));
          }, async: function() {
            for (var t3 = this, r2 = arguments.length, n2 = new Array(r2), s2 = 0; s2 < r2; s2++)
              n2[s2] = arguments[s2];
            return new Promise(function(r3, s3) {
              MA(e3.apply(t3, n2), r3, s3);
            });
          }, errback: function() {
            for (var t3 = arguments.length, r2 = new Array(t3), n2 = 0; n2 < t3; n2++)
              r2[n2] = arguments[n2];
            var s2, a2 = r2.pop();
            if (typeof a2 != "function")
              throw BA("Asynchronous function called without callback", OA);
            try {
              s2 = e3.apply(this, r2);
            } catch (e4) {
              return void a2(e4);
            }
            MA(s2, function(e4) {
              return a2(void 0, e4);
            }, function(e4) {
              return a2(e4);
            });
          } };
        }(t2));
      }, { all: _A({ name: "all", arity: 1, sync: function(e2) {
        return Array.from(e2[0]).map(function(e3) {
          return LA(e3);
        });
      }, async: function(e2, t2, r2) {
        var n2 = Array.from(e2[0]);
        if (n2.length !== 0) {
          var s2 = 0, a2 = n2.map(function() {
          });
          n2.forEach(function(e3, n3) {
            MA(e3, function(e4) {
              a2[n3] = e4, (s2 += 1) === a2.length && t2(a2);
            }, r2);
          });
        } else
          Promise.resolve().then(function() {
            return t2([]);
          });
      } }), race: _A({ name: "race", arity: 1, sync: function(e2) {
        var t2 = Array.from(e2[0]);
        if (t2.length === 0)
          throw BA("Must race at least 1 item", kA);
        return LA(t2[0]);
      }, async: function(e2, t2, r2) {
        var n2 = Array.from(e2[0]);
        if (n2.length === 0)
          throw BA("Must race at least 1 item", kA);
        for (var s2 = 0, a2 = n2; s2 < a2.length; s2++) {
          MA(a2[s2], t2, r2);
        }
      } }) });
      function NA(e2, t2, r2, n2) {
        if (!(typeof r2 === e2 || n2 && r2 === void 0))
          throw BA(n2 ? "Expected opts." + t2 + " to be either a " + e2 + ", or undefined." : "Expected opts." + t2 + " to be a " + e2 + ".", FA);
      }
      function BA(e2, t2) {
        return Object.assign(new Error(e2), { code: t2 });
      }
      function _A(e2) {
        var t2 = e2.name, r2 = e2.arity, n2 = e2.sync, s2 = e2.async;
        return VA(t2, r2, bh.mark(function e3() {
          var t3, r3, a2, i2, o2, u2, l2 = arguments;
          return bh.wrap(function(e4) {
            for (; ; )
              switch (e4.prev = e4.next) {
                case 0:
                  return e4.next = 2, jA;
                case 2:
                  for (t3 = e4.sent, r3 = l2.length, a2 = new Array(r3), i2 = 0; i2 < r3; i2++)
                    a2[i2] = l2[i2];
                  if (t3) {
                    e4.next = 7;
                    break;
                  }
                  return o2 = n2.call(this, a2), e4.abrupt("return", o2);
                case 7:
                  try {
                    s2.call(this, a2, function(e5) {
                      u2 || (u2 = { value: e5 }, t3());
                    }, function(e5) {
                      u2 || (u2 = { err: e5 }, t3());
                    });
                  } catch (e5) {
                    u2 = { err: e5 }, t3();
                  }
                  return e4.next = 10, PA;
                case 10:
                  if (!u2.hasOwnProperty("err")) {
                    e4.next = 12;
                    break;
                  }
                  throw u2.err;
                case 12:
                  return e4.abrupt("return", u2.value);
                case 13:
                case "end":
                  return e4.stop();
              }
          }, e3, this);
        }));
      }
      function LA(e2) {
        for (var t2; !(r2 = e2.next(), t2 = r2.value, r2).done; ) {
          var r2;
          UA(t2, e2);
        }
        return t2;
      }
      function MA(e2, t2, r2) {
        !function n2() {
          try {
            for (var s2, a2 = function() {
              UA(s2, e2);
              var t3 = true, r3 = false, a3 = e2.next(function() {
                t3 ? r3 = true : n2();
              });
              if (t3 = false, function(e3, t4) {
                var r4 = e3.value, n3 = e3.done;
                if (!n3 && r4 === PA)
                  return;
                GA(t4, BA(n3 ? "Unexpected generator completion. If you get this, it is probably a gensync bug." : "Expected GENSYNC_SUSPEND, got " + JSON.stringify(r4) + ". If you get this, it is probably a gensync bug.", IA));
              }(a3, e2), !r3)
                return { v: void 0 };
            }; !(i2 = e2.next(), s2 = i2.value, i2).done; ) {
              var i2, o2 = a2();
              if (typeof o2 == "object")
                return o2.v;
            }
            return t2(s2);
          } catch (e3) {
            return r2(e3);
          }
        }();
      }
      function UA(e2, t2) {
        e2 !== jA && GA(t2, BA("Got unexpected yielded value in gensync generator: " + JSON.stringify(e2) + ". Did you perhaps mean to use 'yield*' instead of 'yield'?", "GENSYNC_EXPECTED_START"));
      }
      function GA(e2, t2) {
        throw e2.throw && e2.throw(t2), t2;
      }
      function VA(e2, t2, r2) {
        if (typeof e2 == "string") {
          var n2 = Object.getOwnPropertyDescriptor(r2, "name");
          n2 && !n2.configurable || Object.defineProperty(r2, "name", Object.assign(n2 || {}, { configurable: true, value: e2 }));
        }
        if (typeof t2 == "number") {
          var s2 = Object.getOwnPropertyDescriptor(r2, "length");
          s2 && !s2.configurable || Object.defineProperty(r2, "length", Object.assign(s2 || {}, { configurable: true, value: t2 }));
        }
        return r2;
      }
      var WA = function(e2) {
        return e2;
      }, HA = RA(bh.mark(function e2(t2) {
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return e3.delegateYield(t2, "t0", 1);
              case 1:
                return e3.abrupt("return", e3.t0);
              case 2:
              case "end":
                return e3.stop();
            }
        }, e2);
      })), XA = RA({ sync: function() {
        return false;
      }, errback: function(e2) {
        return e2(null, true);
      } });
      function qA(e2, t2) {
        return RA({ sync: function() {
          for (var r2 = arguments.length, n2 = new Array(r2), s2 = 0; s2 < r2; s2++)
            n2[s2] = arguments[s2];
          var a2 = e2.apply(this, n2);
          if (YA(a2))
            throw new Error(t2);
          return a2;
        }, async: function() {
          for (var t3 = arguments.length, r2 = new Array(t3), n2 = 0; n2 < t3; n2++)
            r2[n2] = arguments[n2];
          return Promise.resolve(e2.apply(this, r2));
        } });
      }
      var $A = RA({ sync: function(e2) {
        return e2("sync");
      }, async: function(e2) {
        return e2("async");
      } });
      function KA(e2, t2) {
        var r2 = RA(e2);
        return $A(function(e3) {
          var n2 = r2[e3];
          return t2(n2);
        });
      }
      var zA = RA({ name: "onFirstPause", arity: 2, sync: function(e2) {
        return HA.sync(e2);
      }, errback: function(e2, t2, r2) {
        var n2 = false;
        HA.errback(e2, function(e3, t3) {
          n2 = true, r2(e3, t3);
        }), n2 || t2();
      } }), JA = RA({ sync: WA, async: WA });
      function YA(e2) {
        return !(!e2 || typeof e2 != "object" && typeof e2 != "function" || !e2.then || typeof e2.then != "function");
      }
      function QA(e2, t2) {
        for (var r2 = 0, n2 = Object.keys(t2); r2 < n2.length; r2++) {
          var s2 = n2[r2];
          if (s2 !== "parserOpts" && s2 !== "generatorOpts" && s2 !== "assumptions" || !t2[s2]) {
            var a2 = t2[s2];
            a2 !== void 0 && (e2[s2] = a2);
          } else {
            var i2 = t2[s2];
            ZA(e2[s2] || (e2[s2] = {}), i2);
          }
        }
      }
      function ZA(e2, t2) {
        for (var r2 = 0, n2 = Object.keys(t2); r2 < n2.length; r2++) {
          var s2 = n2[r2], a2 = t2[s2];
          a2 !== void 0 && (e2[s2] = a2);
        }
      }
      function ew(e2) {
        return !!e2 && typeof e2.next == "function" && typeof e2[Symbol.iterator] == "function";
      }
      var tw = function(e2, t2, r2) {
        this.key = void 0, this.manipulateOptions = void 0, this.post = void 0, this.pre = void 0, this.visitor = void 0, this.parserOverride = void 0, this.generatorOverride = void 0, this.options = void 0, this.key = e2.name || r2, this.manipulateOptions = e2.manipulateOptions, this.post = e2.post, this.pre = e2.pre, this.visitor = e2.visitor || {}, this.parserOverride = e2.parserOverride, this.generatorOverride = e2.generatorOverride, this.options = t2;
      }, rw = bh.mark(iw), nw = bh.mark(dw), sw = bh.mark(fw), aw = function(e2) {
        return RA(e2).sync;
      };
      function iw() {
        return bh.wrap(function(e2) {
          for (; ; )
            switch (e2.prev = e2.next) {
              case 0:
                return e2.abrupt("return", true);
              case 1:
              case "end":
                return e2.stop();
            }
        }, rw);
      }
      function ow(e2) {
        return pw(WeakMap, e2);
      }
      function uw(e2) {
        return aw(ow(e2));
      }
      function lw(e2) {
        return pw(Map, e2);
      }
      function cw(e2) {
        return aw(lw(e2));
      }
      function pw(e2, t2) {
        var r2 = new e2(), n2 = new e2(), s2 = new e2();
        return bh.mark(function e3(a2, i2) {
          var o2, u2, l2, c2, p2, d2, f2, h2;
          return bh.wrap(function(e4) {
            for (; ; )
              switch (e4.prev = e4.next) {
                case 0:
                  return e4.delegateYield(XA(), "t0", 1);
                case 1:
                  return o2 = e4.t0, u2 = o2 ? n2 : r2, e4.delegateYield(fw(o2, u2, s2, a2, i2), "t1", 4);
                case 4:
                  if (!(l2 = e4.t1).valid) {
                    e4.next = 7;
                    break;
                  }
                  return e4.abrupt("return", l2.value);
                case 7:
                  if (c2 = new yw(i2), !ew(p2 = t2(a2, c2))) {
                    e4.next = 15;
                    break;
                  }
                  return h2 = p2, e4.delegateYield(zA(h2, function() {
                    d2 = hw(c2, s2, a2);
                  }), "t2", 12);
                case 12:
                  f2 = e4.t2, e4.next = 16;
                  break;
                case 15:
                  f2 = p2;
                case 16:
                  return mw(u2, c2, a2, f2), d2 && (s2.delete(a2), d2.release(f2)), e4.abrupt("return", f2);
                case 19:
                case "end":
                  return e4.stop();
              }
          }, e3);
        });
      }
      function dw(e2, t2, r2) {
        var n2, s2, a2, i2, o2, u2;
        return bh.wrap(function(l2) {
          for (; ; )
            switch (l2.prev = l2.next) {
              case 0:
                if (!(n2 = e2.get(t2))) {
                  l2.next = 10;
                  break;
                }
                s2 = f(n2);
              case 3:
                if ((a2 = s2()).done) {
                  l2.next = 10;
                  break;
                }
                return i2 = a2.value, o2 = i2.value, u2 = i2.valid, l2.delegateYield(u2(r2), "t0", 6);
              case 6:
                if (!l2.t0) {
                  l2.next = 8;
                  break;
                }
                return l2.abrupt("return", { valid: true, value: o2 });
              case 8:
                l2.next = 3;
                break;
              case 10:
                return l2.abrupt("return", { valid: false, value: null });
              case 11:
              case "end":
                return l2.stop();
            }
        }, nw);
      }
      function fw(e2, t2, r2, n2, s2) {
        var a2, i2, o2;
        return bh.wrap(function(u2) {
          for (; ; )
            switch (u2.prev = u2.next) {
              case 0:
                return u2.delegateYield(dw(t2, n2, s2), "t0", 1);
              case 1:
                if (!(a2 = u2.t0).valid) {
                  u2.next = 4;
                  break;
                }
                return u2.abrupt("return", a2);
              case 4:
                if (!e2) {
                  u2.next = 11;
                  break;
                }
                return u2.delegateYield(dw(r2, n2, s2), "t1", 6);
              case 6:
                if (!(i2 = u2.t1).valid) {
                  u2.next = 11;
                  break;
                }
                return u2.delegateYield(JA(i2.value.promise), "t2", 9);
              case 9:
                return o2 = u2.t2, u2.abrupt("return", { valid: true, value: o2 });
              case 11:
                return u2.abrupt("return", { valid: false, value: null });
              case 12:
              case "end":
                return u2.stop();
            }
        }, sw);
      }
      function hw(e2, t2, r2) {
        var n2 = new vw();
        return mw(t2, e2, r2, n2), n2;
      }
      function mw(e2, t2, r2, n2) {
        t2.configured() || t2.forever();
        var s2 = e2.get(r2);
        switch (t2.deactivate(), t2.mode()) {
          case "forever":
            s2 = [{ value: n2, valid: iw }], e2.set(r2, s2);
            break;
          case "invalidate":
            s2 = [{ value: n2, valid: t2.validator() }], e2.set(r2, s2);
            break;
          case "valid":
            s2 ? s2.push({ value: n2, valid: t2.validator() }) : (s2 = [{ value: n2, valid: t2.validator() }], e2.set(r2, s2));
        }
      }
      var yw = function() {
        function e2(e3) {
          this._active = true, this._never = false, this._forever = false, this._invalidate = false, this._configured = false, this._pairs = [], this._data = void 0, this._data = e3;
        }
        var t2 = e2.prototype;
        return t2.simple = function() {
          return function(e3) {
            function t3(t4) {
              if (typeof t4 != "boolean")
                return e3.using(function() {
                  return gw(t4());
                });
              t4 ? e3.forever() : e3.never();
            }
            return t3.forever = function() {
              return e3.forever();
            }, t3.never = function() {
              return e3.never();
            }, t3.using = function(t4) {
              return e3.using(function() {
                return gw(t4());
              });
            }, t3.invalidate = function(t4) {
              return e3.invalidate(function() {
                return gw(t4());
              });
            }, t3;
          }(this);
        }, t2.mode = function() {
          return this._never ? "never" : this._forever ? "forever" : this._invalidate ? "invalidate" : "valid";
        }, t2.forever = function() {
          if (!this._active)
            throw new Error("Cannot change caching after evaluation has completed.");
          if (this._never)
            throw new Error("Caching has already been configured with .never()");
          this._forever = true, this._configured = true;
        }, t2.never = function() {
          if (!this._active)
            throw new Error("Cannot change caching after evaluation has completed.");
          if (this._forever)
            throw new Error("Caching has already been configured with .forever()");
          this._never = true, this._configured = true;
        }, t2.using = function(e3) {
          var t3 = this;
          if (!this._active)
            throw new Error("Cannot change caching after evaluation has completed.");
          if (this._never || this._forever)
            throw new Error("Caching has already been configured with .never or .forever()");
          this._configured = true;
          var r2 = e3(this._data), n2 = qA(e3, "You appear to be using an async cache handler, but Babel has been called synchronously");
          return YA(r2) ? r2.then(function(e4) {
            return t3._pairs.push([e4, n2]), e4;
          }) : (this._pairs.push([r2, n2]), r2);
        }, t2.invalidate = function(e3) {
          return this._invalidate = true, this.using(e3);
        }, t2.validator = function() {
          var e3 = this._pairs;
          return bh.mark(function t3(r2) {
            var n2, s2, a2, i2, o2;
            return bh.wrap(function(t4) {
              for (; ; )
                switch (t4.prev = t4.next) {
                  case 0:
                    n2 = f(e3);
                  case 1:
                    if ((s2 = n2()).done) {
                      t4.next = 10;
                      break;
                    }
                    return a2 = l(s2.value, 2), i2 = a2[0], o2 = a2[1], t4.t0 = i2, t4.delegateYield(o2(r2), "t1", 5);
                  case 5:
                    if (t4.t2 = t4.t1, t4.t0 === t4.t2) {
                      t4.next = 8;
                      break;
                    }
                    return t4.abrupt("return", false);
                  case 8:
                    t4.next = 1;
                    break;
                  case 10:
                    return t4.abrupt("return", true);
                  case 11:
                  case "end":
                    return t4.stop();
                }
            }, t3);
          });
        }, t2.deactivate = function() {
          this._active = false;
        }, t2.configured = function() {
          return this._configured;
        }, e2;
      }();
      function gw(e2) {
        if (YA(e2))
          throw new Error("You appear to be using an async cache handler, which your current version of Babel does not support. We may add support for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchronously handle your caching logic.");
        if (e2 != null && typeof e2 != "string" && typeof e2 != "boolean" && typeof e2 != "number")
          throw new Error("Cache keys must be either string, boolean, number, null, or undefined.");
        return e2;
      }
      var vw = function() {
        function e2() {
          var e3 = this;
          this.released = false, this.promise = void 0, this._resolve = void 0, this.promise = new Promise(function(t2) {
            e3._resolve = t2;
          });
        }
        return e2.prototype.release = function(e3) {
          this.released = true, this._resolve(e3);
        }, e2;
      }(), bw = [{ name: "nodejs", version: "0.2.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.3.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.4.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.5.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.6.0", date: "2011-11-04", lts: false, security: false }, { name: "nodejs", version: "0.7.0", date: "2012-01-17", lts: false, security: false }, { name: "nodejs", version: "0.8.0", date: "2012-06-22", lts: false, security: false }, { name: "nodejs", version: "0.9.0", date: "2012-07-20", lts: false, security: false }, { name: "nodejs", version: "0.10.0", date: "2013-03-11", lts: false, security: false }, { name: "nodejs", version: "0.11.0", date: "2013-03-28", lts: false, security: false }, { name: "nodejs", version: "0.12.0", date: "2015-02-06", lts: false, security: false }, { name: "iojs", version: "1.0.0", date: "2015-01-14" }, { name: "iojs", version: "1.1.0", date: "2015-02-03" }, { name: "iojs", version: "1.2.0", date: "2015-02-11" }, { name: "iojs", version: "1.3.0", date: "2015-02-20" }, { name: "iojs", version: "1.5.0", date: "2015-03-06" }, { name: "iojs", version: "1.6.0", date: "2015-03-20" }, { name: "iojs", version: "2.0.0", date: "2015-05-04" }, { name: "iojs", version: "2.1.0", date: "2015-05-24" }, { name: "iojs", version: "2.2.0", date: "2015-06-01" }, { name: "iojs", version: "2.3.0", date: "2015-06-13" }, { name: "iojs", version: "2.4.0", date: "2015-07-17" }, { name: "iojs", version: "2.5.0", date: "2015-07-28" }, { name: "iojs", version: "3.0.0", date: "2015-08-04" }, { name: "iojs", version: "3.1.0", date: "2015-08-19" }, { name: "iojs", version: "3.2.0", date: "2015-08-25" }, { name: "iojs", version: "3.3.0", date: "2015-09-02" }, { name: "nodejs", version: "4.0.0", date: "2015-09-08", lts: false, security: false }, { name: "nodejs", version: "4.1.0", date: "2015-09-17", lts: false, security: false }, { name: "nodejs", version: "4.2.0", date: "2015-10-12", lts: "Argon", security: false }, { name: "nodejs", version: "4.3.0", date: "2016-02-09", lts: "Argon", security: false }, { name: "nodejs", version: "4.4.0", date: "2016-03-08", lts: "Argon", security: false }, { name: "nodejs", version: "4.5.0", date: "2016-08-16", lts: "Argon", security: false }, { name: "nodejs", version: "4.6.0", date: "2016-09-27", lts: "Argon", security: true }, { name: "nodejs", version: "4.7.0", date: "2016-12-06", lts: "Argon", security: false }, { name: "nodejs", version: "4.8.0", date: "2017-02-21", lts: "Argon", security: false }, { name: "nodejs", version: "4.9.0", date: "2018-03-28", lts: "Argon", security: true }, { name: "nodejs", version: "5.0.0", date: "2015-10-29", lts: false, security: false }, { name: "nodejs", version: "5.1.0", date: "2015-11-17", lts: false, security: false }, { name: "nodejs", version: "5.2.0", date: "2015-12-09", lts: false, security: false }, { name: "nodejs", version: "5.3.0", date: "2015-12-15", lts: false, security: false }, { name: "nodejs", version: "5.4.0", date: "2016-01-06", lts: false, security: false }, { name: "nodejs", version: "5.5.0", date: "2016-01-21", lts: false, security: false }, { name: "nodejs", version: "5.6.0", date: "2016-02-09", lts: false, security: false }, { name: "nodejs", version: "5.7.0", date: "2016-02-23", lts: false, security: false }, { name: "nodejs", version: "5.8.0", date: "2016-03-09", lts: false, security: false }, { name: "nodejs", version: "5.9.0", date: "2016-03-16", lts: false, security: false }, { name: "nodejs", version: "5.10.0", date: "2016-04-01", lts: false, security: false }, { name: "nodejs", version: "5.11.0", date: "2016-04-21", lts: false, security: false }, { name: "nodejs", version: "5.12.0", date: "2016-06-23", lts: false, security: false }, { name: "nodejs", version: "6.0.0", date: "2016-04-26", lts: false, security: false }, { name: "nodejs", version: "6.1.0", date: "2016-05-05", lts: false, security: false }, { name: "nodejs", version: "6.2.0", date: "2016-05-17", lts: false, security: false }, { name: "nodejs", version: "6.3.0", date: "2016-07-06", lts: false, security: false }, { name: "nodejs", version: "6.4.0", date: "2016-08-12", lts: false, security: false }, { name: "nodejs", version: "6.5.0", date: "2016-08-26", lts: false, security: false }, { name: "nodejs", version: "6.6.0", date: "2016-09-14", lts: false, security: false }, { name: "nodejs", version: "6.7.0", date: "2016-09-27", lts: false, security: true }, { name: "nodejs", version: "6.8.0", date: "2016-10-12", lts: false, security: false }, { name: "nodejs", version: "6.9.0", date: "2016-10-18", lts: "Boron", security: false }, { name: "nodejs", version: "6.10.0", date: "2017-02-21", lts: "Boron", security: false }, { name: "nodejs", version: "6.11.0", date: "2017-06-06", lts: "Boron", security: false }, { name: "nodejs", version: "6.12.0", date: "2017-11-06", lts: "Boron", security: false }, { name: "nodejs", version: "6.13.0", date: "2018-02-10", lts: "Boron", security: false }, { name: "nodejs", version: "6.14.0", date: "2018-03-28", lts: "Boron", security: true }, { name: "nodejs", version: "6.15.0", date: "2018-11-27", lts: "Boron", security: true }, { name: "nodejs", version: "6.16.0", date: "2018-12-26", lts: "Boron", security: false }, { name: "nodejs", version: "6.17.0", date: "2019-02-28", lts: "Boron", security: true }, { name: "nodejs", version: "7.0.0", date: "2016-10-25", lts: false, security: false }, { name: "nodejs", version: "7.1.0", date: "2016-11-08", lts: false, security: false }, { name: "nodejs", version: "7.2.0", date: "2016-11-22", lts: false, security: false }, { name: "nodejs", version: "7.3.0", date: "2016-12-20", lts: false, security: false }, { name: "nodejs", version: "7.4.0", date: "2017-01-04", lts: false, security: false }, { name: "nodejs", version: "7.5.0", date: "2017-01-31", lts: false, security: false }, { name: "nodejs", version: "7.6.0", date: "2017-02-21", lts: false, security: false }, { name: "nodejs", version: "7.7.0", date: "2017-02-28", lts: false, security: false }, { name: "nodejs", version: "7.8.0", date: "2017-03-29", lts: false, security: false }, { name: "nodejs", version: "7.9.0", date: "2017-04-11", lts: false, security: false }, { name: "nodejs", version: "7.10.0", date: "2017-05-02", lts: false, security: false }, { name: "nodejs", version: "8.0.0", date: "2017-05-30", lts: false, security: false }, { name: "nodejs", version: "8.1.0", date: "2017-06-08", lts: false, security: false }, { name: "nodejs", version: "8.2.0", date: "2017-07-19", lts: false, security: false }, { name: "nodejs", version: "8.3.0", date: "2017-08-08", lts: false, security: false }, { name: "nodejs", version: "8.4.0", date: "2017-08-15", lts: false, security: false }, { name: "nodejs", version: "8.5.0", date: "2017-09-12", lts: false, security: false }, { name: "nodejs", version: "8.6.0", date: "2017-09-26", lts: false, security: false }, { name: "nodejs", version: "8.7.0", date: "2017-10-11", lts: false, security: false }, { name: "nodejs", version: "8.8.0", date: "2017-10-24", lts: false, security: false }, { name: "nodejs", version: "8.9.0", date: "2017-10-31", lts: "Carbon", security: false }, { name: "nodejs", version: "8.10.0", date: "2018-03-06", lts: "Carbon", security: false }, { name: "nodejs", version: "8.11.0", date: "2018-03-28", lts: "Carbon", security: true }, { name: "nodejs", version: "8.12.0", date: "2018-09-10", lts: "Carbon", security: false }, { name: "nodejs", version: "8.13.0", date: "2018-11-20", lts: "Carbon", security: false }, { name: "nodejs", version: "8.14.0", date: "2018-11-27", lts: "Carbon", security: true }, { name: "nodejs", version: "8.15.0", date: "2018-12-26", lts: "Carbon", security: false }, { name: "nodejs", version: "8.16.0", date: "2019-04-16", lts: "Carbon", security: false }, { name: "nodejs", version: "8.17.0", date: "2019-12-17", lts: "Carbon", security: true }, { name: "nodejs", version: "9.0.0", date: "2017-10-31", lts: false, security: false }, { name: "nodejs", version: "9.1.0", date: "2017-11-07", lts: false, security: false }, { name: "nodejs", version: "9.2.0", date: "2017-11-14", lts: false, security: false }, { name: "nodejs", version: "9.3.0", date: "2017-12-12", lts: false, security: false }, { name: "nodejs", version: "9.4.0", date: "2018-01-10", lts: false, security: false }, { name: "nodejs", version: "9.5.0", date: "2018-01-31", lts: false, security: false }, { name: "nodejs", version: "9.6.0", date: "2018-02-21", lts: false, security: false }, { name: "nodejs", version: "9.7.0", date: "2018-03-01", lts: false, security: false }, { name: "nodejs", version: "9.8.0", date: "2018-03-07", lts: false, security: false }, { name: "nodejs", version: "9.9.0", date: "2018-03-21", lts: false, security: false }, { name: "nodejs", version: "9.10.0", date: "2018-03-28", lts: false, security: true }, { name: "nodejs", version: "9.11.0", date: "2018-04-04", lts: false, security: false }, { name: "nodejs", version: "10.0.0", date: "2018-04-24", lts: false, security: false }, { name: "nodejs", version: "10.1.0", date: "2018-05-08", lts: false, security: false }, { name: "nodejs", version: "10.2.0", date: "2018-05-23", lts: false, security: false }, { name: "nodejs", version: "10.3.0", date: "2018-05-29", lts: false, security: false }, { name: "nodejs", version: "10.4.0", date: "2018-06-06", lts: false, security: false }, { name: "nodejs", version: "10.5.0", date: "2018-06-20", lts: false, security: false }, { name: "nodejs", version: "10.6.0", date: "2018-07-04", lts: false, security: false }, { name: "nodejs", version: "10.7.0", date: "2018-07-18", lts: false, security: false }, { name: "nodejs", version: "10.8.0", date: "2018-08-01", lts: false, security: false }, { name: "nodejs", version: "10.9.0", date: "2018-08-15", lts: false, security: false }, { name: "nodejs", version: "10.10.0", date: "2018-09-06", lts: false, security: false }, { name: "nodejs", version: "10.11.0", date: "2018-09-19", lts: false, security: false }, { name: "nodejs", version: "10.12.0", date: "2018-10-10", lts: false, security: false }, { name: "nodejs", version: "10.13.0", date: "2018-10-30", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.14.0", date: "2018-11-27", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.15.0", date: "2018-12-26", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.16.0", date: "2019-05-28", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.17.0", date: "2019-10-22", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.18.0", date: "2019-12-17", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.19.0", date: "2020-02-05", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.20.0", date: "2020-03-26", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.21.0", date: "2020-06-02", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.22.0", date: "2020-07-21", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.23.0", date: "2020-10-27", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.24.0", date: "2021-02-23", lts: "Dubnium", security: true }, { name: "nodejs", version: "11.0.0", date: "2018-10-23", lts: false, security: false }, { name: "nodejs", version: "11.1.0", date: "2018-10-30", lts: false, security: false }, { name: "nodejs", version: "11.2.0", date: "2018-11-15", lts: false, security: false }, { name: "nodejs", version: "11.3.0", date: "2018-11-27", lts: false, security: true }, { name: "nodejs", version: "11.4.0", date: "2018-12-07", lts: false, security: false }, { name: "nodejs", version: "11.5.0", date: "2018-12-18", lts: false, security: false }, { name: "nodejs", version: "11.6.0", date: "2018-12-26", lts: false, security: false }, { name: "nodejs", version: "11.7.0", date: "2019-01-17", lts: false, security: false }, { name: "nodejs", version: "11.8.0", date: "2019-01-24", lts: false, security: false }, { name: "nodejs", version: "11.9.0", date: "2019-01-30", lts: false, security: false }, { name: "nodejs", version: "11.10.0", date: "2019-02-14", lts: false, security: false }, { name: "nodejs", version: "11.11.0", date: "2019-03-05", lts: false, security: false }, { name: "nodejs", version: "11.12.0", date: "2019-03-14", lts: false, security: false }, { name: "nodejs", version: "11.13.0", date: "2019-03-28", lts: false, security: false }, { name: "nodejs", version: "11.14.0", date: "2019-04-10", lts: false, security: false }, { name: "nodejs", version: "11.15.0", date: "2019-04-30", lts: false, security: false }, { name: "nodejs", version: "12.0.0", date: "2019-04-23", lts: false, security: false }, { name: "nodejs", version: "12.1.0", date: "2019-04-29", lts: false, security: false }, { name: "nodejs", version: "12.2.0", date: "2019-05-07", lts: false, security: false }, { name: "nodejs", version: "12.3.0", date: "2019-05-21", lts: false, security: false }, { name: "nodejs", version: "12.4.0", date: "2019-06-04", lts: false, security: false }, { name: "nodejs", version: "12.5.0", date: "2019-06-26", lts: false, security: false }, { name: "nodejs", version: "12.6.0", date: "2019-07-03", lts: false, security: false }, { name: "nodejs", version: "12.7.0", date: "2019-07-23", lts: false, security: false }, { name: "nodejs", version: "12.8.0", date: "2019-08-06", lts: false, security: false }, { name: "nodejs", version: "12.9.0", date: "2019-08-20", lts: false, security: false }, { name: "nodejs", version: "12.10.0", date: "2019-09-04", lts: false, security: false }, { name: "nodejs", version: "12.11.0", date: "2019-09-25", lts: false, security: false }, { name: "nodejs", version: "12.12.0", date: "2019-10-11", lts: false, security: false }, { name: "nodejs", version: "12.13.0", date: "2019-10-21", lts: "Erbium", security: false }, { name: "nodejs", version: "12.14.0", date: "2019-12-17", lts: "Erbium", security: true }, { name: "nodejs", version: "12.15.0", date: "2020-02-05", lts: "Erbium", security: true }, { name: "nodejs", version: "12.16.0", date: "2020-02-11", lts: "Erbium", security: false }, { name: "nodejs", version: "12.17.0", date: "2020-05-26", lts: "Erbium", security: false }, { name: "nodejs", version: "12.18.0", date: "2020-06-02", lts: "Erbium", security: true }, { name: "nodejs", version: "12.19.0", date: "2020-10-06", lts: "Erbium", security: false }, { name: "nodejs", version: "12.20.0", date: "2020-11-24", lts: "Erbium", security: false }, { name: "nodejs", version: "12.21.0", date: "2021-02-23", lts: "Erbium", security: true }, { name: "nodejs", version: "13.0.0", date: "2019-10-22", lts: false, security: false }, { name: "nodejs", version: "13.1.0", date: "2019-11-05", lts: false, security: false }, { name: "nodejs", version: "13.2.0", date: "2019-11-21", lts: false, security: false }, { name: "nodejs", version: "13.3.0", date: "2019-12-03", lts: false, security: false }, { name: "nodejs", version: "13.4.0", date: "2019-12-17", lts: false, security: true }, { name: "nodejs", version: "13.5.0", date: "2019-12-18", lts: false, security: false }, { name: "nodejs", version: "13.6.0", date: "2020-01-07", lts: false, security: false }, { name: "nodejs", version: "13.7.0", date: "2020-01-21", lts: false, security: false }, { name: "nodejs", version: "13.8.0", date: "2020-02-05", lts: false, security: true }, { name: "nodejs", version: "13.9.0", date: "2020-02-18", lts: false, security: false }, { name: "nodejs", version: "13.10.0", date: "2020-03-04", lts: false, security: false }, { name: "nodejs", version: "13.11.0", date: "2020-03-12", lts: false, security: false }, { name: "nodejs", version: "13.12.0", date: "2020-03-26", lts: false, security: false }, { name: "nodejs", version: "13.13.0", date: "2020-04-14", lts: false, security: false }, { name: "nodejs", version: "13.14.0", date: "2020-04-29", lts: false, security: false }, { name: "nodejs", version: "14.0.0", date: "2020-04-21", lts: false, security: false }, { name: "nodejs", version: "14.1.0", date: "2020-04-29", lts: false, security: false }, { name: "nodejs", version: "14.2.0", date: "2020-05-05", lts: false, security: false }, { name: "nodejs", version: "14.3.0", date: "2020-05-19", lts: false, security: false }, { name: "nodejs", version: "14.4.0", date: "2020-06-02", lts: false, security: true }, { name: "nodejs", version: "14.5.0", date: "2020-06-30", lts: false, security: false }, { name: "nodejs", version: "14.6.0", date: "2020-07-20", lts: false, security: false }, { name: "nodejs", version: "14.7.0", date: "2020-07-29", lts: false, security: false }, { name: "nodejs", version: "14.8.0", date: "2020-08-11", lts: false, security: false }, { name: "nodejs", version: "14.9.0", date: "2020-08-27", lts: false, security: false }, { name: "nodejs", version: "14.10.0", date: "2020-09-08", lts: false, security: false }, { name: "nodejs", version: "14.11.0", date: "2020-09-15", lts: false, security: true }, { name: "nodejs", version: "14.12.0", date: "2020-09-22", lts: false, security: false }, { name: "nodejs", version: "14.13.0", date: "2020-09-29", lts: false, security: false }, { name: "nodejs", version: "14.14.0", date: "2020-10-15", lts: false, security: false }, { name: "nodejs", version: "14.15.0", date: "2020-10-27", lts: "Fermium", security: false }, { name: "nodejs", version: "14.16.0", date: "2021-02-23", lts: "Fermium", security: true }, { name: "nodejs", version: "15.0.0", date: "2020-10-20", lts: false, security: false }, { name: "nodejs", version: "15.1.0", date: "2020-11-04", lts: false, security: false }, { name: "nodejs", version: "15.2.0", date: "2020-11-10", lts: false, security: false }, { name: "nodejs", version: "15.3.0", date: "2020-11-24", lts: false, security: false }, { name: "nodejs", version: "15.4.0", date: "2020-12-09", lts: false, security: false }, { name: "nodejs", version: "15.5.0", date: "2020-12-22", lts: false, security: false }, { name: "nodejs", version: "15.6.0", date: "2021-01-14", lts: false, security: false }, { name: "nodejs", version: "15.7.0", date: "2021-01-25", lts: false, security: false }, { name: "nodejs", version: "15.8.0", date: "2021-02-02", lts: false, security: false }, { name: "nodejs", version: "15.9.0", date: "2021-02-18", lts: false, security: false }, { name: "nodejs", version: "15.10.0", date: "2021-02-23", lts: false, security: true }], Ew = { A: { A: { I: 0.0131217, D: 621152e-8, E: 0.0199047, F: 0.0928884, A: 0.0132698, B: 0.849265, gB: 9298e-6 }, B: "ms", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "gB", "I", "D", "E", "F", "A", "B", "", "", ""], E: "IE", F: { gB: 962323200, I: 998870400, D: 1161129600, E: 1237420800, F: 1300060800, A: 1346716800, B: 1381968e3 } }, B: { A: { C: 8408e-6, J: 4267e-6, K: 4204e-6, L: 4204e-6, M: 8408e-6, N: 0.033632, O: 0.092488, R: 0, S: 4298e-6, T: 944e-5, U: 415e-5, V: 8408e-6, W: 8408e-6, X: 0.012612, P: 0.012612, Y: 0.016816, Z: 0.079876, G: 3.01006, a: 0.2102 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "C", "J", "K", "L", "M", "N", "O", "R", "S", "T", "U", "V", "W", "X", "P", "Y", "Z", "G", "a", "", "", ""], E: "Edge", F: { C: 1438128e3, J: 1447286400, K: 1470096e3, L: 1491868800, M: 1508198400, N: 1525046400, O: 1542067200, R: 1579046400, S: 1581033600, T: 1586736e3, U: 1590019200, V: 1594857600, W: 1598486400, X: 1602201600, P: 1605830400, Y: 161136e4, Z: 1614816e3, G: 1618358400, a: 1622073600 }, D: { C: "ms", J: "ms", K: "ms", L: "ms", M: "ms", N: "ms", O: "ms" } }, C: { A: { 0: 0.058856, 1: 4204e-6, 2: 4204e-6, 3: 4525e-6, 4: 4271e-6, 5: 8408e-6, 6: 4538e-6, 7: 4267e-6, 8: 4204e-6, 9: 0.071468, hB: 0.012813, XB: 4271e-6, H: 0.02102, b: 4879e-6, I: 0.020136, D: 5725e-6, E: 4525e-6, F: 533e-5, A: 4283e-6, B: 8408e-6, C: 4471e-6, J: 4486e-6, K: 453e-5, L: 8542e-6, M: 4417e-6, N: 4425e-6, O: 8542e-6, c: 4443e-6, d: 4283e-6, e: 8542e-6, f: 0.013698, g: 8542e-6, h: 8786e-6, i: 0.017084, j: 4317e-6, k: 4393e-6, l: 4418e-6, m: 8834e-6, n: 8542e-6, o: 8928e-6, p: 4471e-6, q: 9284e-6, r: 4707e-6, s: 9076e-6, t: 4425e-6, u: 4783e-6, v: 4271e-6, w: 4783e-6, x: 487e-5, y: 5029e-6, z: 47e-4, AB: 4335e-6, BB: 4204e-6, CB: 4204e-6, DB: 0.012612, EB: 4425e-6, FB: 4204e-6, YB: 4204e-6, GB: 8408e-6, ZB: 472e-5, Q: 4425e-6, HB: 0.02102, IB: 415e-5, JB: 4267e-6, KB: 8408e-6, LB: 4267e-6, MB: 0.012612, NB: 415e-5, OB: 4204e-6, PB: 4425e-6, QB: 8408e-6, RB: 415e-5, SB: 415e-5, TB: 8542e-6, UB: 4298e-6, aB: 4204e-6, bB: 0.14714, R: 8408e-6, S: 8408e-6, T: 0.012612, iB: 0.016816, U: 0.012612, V: 0.025224, W: 0.02102, X: 0.033632, P: 0.071468, Y: 2.3122, Z: 0.029428, G: 0, a: 0, jB: 8786e-6, kB: 487e-5 }, B: "moz", C: ["hB", "XB", "jB", "kB", "H", "b", "I", "D", "E", "F", "A", "B", "C", "J", "K", "L", "M", "N", "O", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "YB", "GB", "ZB", "Q", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "aB", "bB", "R", "S", "T", "iB", "U", "V", "W", "X", "P", "Y", "Z", "G", "a", ""], E: "Firefox", F: { 0: 1450137600, 1: 1453852800, 2: 1457395200, 3: 1461628800, 4: 1465257600, 5: 1470096e3, 6: 1474329600, 7: 1479168e3, 8: 1485216e3, 9: 1488844800, hB: 1161648e3, XB: 1213660800, jB: 124632e4, kB: 1264032e3, H: 1300752e3, b: 1308614400, I: 1313452800, D: 1317081600, E: 1317081600, F: 1320710400, A: 1324339200, B: 1327968e3, C: 1331596800, J: 1335225600, K: 1338854400, L: 1342483200, M: 1346112e3, N: 1349740800, O: 1353628800, c: 1357603200, d: 1361232e3, e: 1364860800, f: 1368489600, g: 1372118400, h: 1375747200, i: 1379376e3, j: 1386633600, k: 1391472e3, l: 1395100800, m: 1398729600, n: 1402358400, o: 1405987200, p: 1409616e3, q: 1413244800, r: 1417392e3, s: 1421107200, t: 1424736e3, u: 1428278400, v: 1431475200, w: 1435881600, x: 1439251200, y: 144288e4, z: 1446508800, AB: 149256e4, BB: 1497312e3, CB: 1502150400, DB: 1506556800, EB: 1510617600, FB: 1516665600, YB: 1520985600, GB: 1525824e3, ZB: 1529971200, Q: 1536105600, HB: 1540252800, IB: 1544486400, JB: 154872e4, KB: 1552953600, LB: 1558396800, MB: 1562630400, NB: 1567468800, OB: 1571788800, PB: 1575331200, QB: 1578355200, RB: 1581379200, SB: 1583798400, TB: 1586304e3, UB: 1588636800, aB: 1591056e3, bB: 1593475200, R: 1595894400, S: 1598313600, T: 1600732800, iB: 1603152e3, U: 1605571200, V: 1607990400, W: 1611619200, X: 1614038400, P: 1616457600, Y: 1618790400, Z: 1622505600, G: null, a: null } }, D: { A: { 0: 8408e-6, 1: 4465e-6, 2: 4642e-6, 3: 4891e-6, 4: 8408e-6, 5: 0.02102, 6: 0.214404, 7: 4204e-6, 8: 0.016816, 9: 4204e-6, H: 4706e-6, b: 4879e-6, I: 4879e-6, D: 5591e-6, E: 5591e-6, F: 5591e-6, A: 4534e-6, B: 4464e-6, C: 0.010424, J: 83e-4, K: 4706e-6, L: 0.015087, M: 4393e-6, N: 4393e-6, O: 8652e-6, c: 8542e-6, d: 4393e-6, e: 4317e-6, f: 0.012612, g: 8786e-6, h: 8408e-6, i: 4461e-6, j: 4298e-6, k: 4326e-6, l: 47e-4, m: 4538e-6, n: 8542e-6, o: 8596e-6, p: 4566e-6, q: 4204e-6, r: 8408e-6, s: 0.012612, t: 4335e-6, u: 4464e-6, v: 0.025224, w: 4464e-6, x: 0.012612, y: 0.0236, z: 4403e-6, AB: 0.058856, BB: 8408e-6, CB: 0.012612, DB: 0.04204, EB: 8408e-6, FB: 8408e-6, YB: 8408e-6, GB: 0.016816, ZB: 0.121916, Q: 8408e-6, HB: 0.02102, IB: 0.025224, JB: 0.02102, KB: 0.02102, LB: 0.033632, MB: 0.029428, NB: 0.067264, OB: 0.071468, PB: 0.025224, QB: 0.058856, RB: 0.02102, SB: 0.113508, TB: 0.092488, UB: 0.067264, aB: 0.029428, bB: 0.075672, R: 0.18918, S: 0.1051, T: 0.079876, U: 0.130324, V: 0.100896, W: 0.243832, X: 0.16816, P: 0.311096, Y: 0.344728, Z: 1.0468, G: 21.4866, a: 0.790352, lB: 0.025224, mB: 4204e-6, nB: 0 }, B: "webkit", C: ["", "", "", "H", "b", "I", "D", "E", "F", "A", "B", "C", "J", "K", "L", "M", "N", "O", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "YB", "GB", "ZB", "Q", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "aB", "bB", "R", "S", "T", "U", "V", "W", "X", "P", "Y", "Z", "G", "a", "lB", "mB", "nB"], E: "Chrome", F: { 0: 143208e4, 1: 1437523200, 2: 1441152e3, 3: 1444780800, 4: 1449014400, 5: 1453248e3, 6: 1456963200, 7: 1460592e3, 8: 1464134400, 9: 1469059200, H: 1264377600, b: 1274745600, I: 1283385600, D: 1287619200, E: 1291248e3, F: 1296777600, A: 1299542400, B: 1303862400, C: 1307404800, J: 1312243200, K: 1316131200, L: 1316131200, M: 1319500800, N: 1323734400, O: 1328659200, c: 1332892800, d: 133704e4, e: 1340668800, f: 1343692800, g: 1348531200, h: 1352246400, i: 1357862400, j: 1361404800, k: 1364428800, l: 1369094400, m: 1374105600, n: 1376956800, o: 1384214400, p: 1389657600, q: 1392940800, r: 1397001600, s: 1400544e3, t: 1405468800, u: 1409011200, v: 141264e4, w: 1416268800, x: 1421798400, y: 1425513600, z: 1429401600, AB: 1472601600, BB: 1476230400, CB: 1480550400, DB: 1485302400, EB: 1489017600, FB: 149256e4, YB: 1496707200, GB: 1500940800, ZB: 1504569600, Q: 1508198400, HB: 1512518400, IB: 1516752e3, JB: 1520294400, KB: 1523923200, LB: 1527552e3, MB: 1532390400, NB: 1536019200, OB: 1539648e3, PB: 1543968e3, QB: 154872e4, RB: 1552348800, SB: 1555977600, TB: 1559606400, UB: 1564444800, aB: 1568073600, bB: 1571702400, R: 1575936e3, S: 1580860800, T: 1586304e3, U: 1589846400, V: 1594684800, W: 1598313600, X: 1601942400, P: 1605571200, Y: 1611014400, Z: 1614556800, G: 1618272e3, a: 1621987200, lB: null, mB: null, nB: null } }, E: { A: { H: 0, b: 8542e-6, I: 4656e-6, D: 4465e-6, E: 0.218608, F: 4891e-6, A: 4425e-6, B: 8408e-6, C: 0.012612, J: 0.088284, K: 2.26175, oB: 0, cB: 8692e-6, pB: 0.109304, qB: 456e-5, rB: 4283e-6, sB: 0.02102, dB: 0.02102, VB: 0.058856, WB: 0.088284, tB: 0.395176, uB: 0.748312, vB: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "oB", "cB", "H", "b", "pB", "I", "qB", "D", "rB", "E", "F", "sB", "A", "dB", "B", "VB", "C", "WB", "J", "tB", "K", "uB", "vB", "", ""], E: "Safari", F: { oB: 1205798400, cB: 1226534400, H: 1244419200, b: 1275868800, pB: 131112e4, I: 1343174400, qB: 13824e5, D: 13824e5, rB: 1410998400, E: 1413417600, F: 1443657600, sB: 1458518400, A: 1474329600, dB: 1490572800, B: 1505779200, VB: 1522281600, C: 1537142400, WB: 1553472e3, J: 1568851200, tB: 1585008e3, K: 1600214400, uB: 1619395200, vB: null } }, F: { A: { 0: 8542e-6, 1: 4227e-6, 2: 4725e-6, 3: 8408e-6, 4: 8942e-6, 5: 4707e-6, 6: 4827e-6, 7: 4707e-6, 8: 4707e-6, 9: 4326e-6, F: 82e-4, B: 0.016581, C: 4317e-6, L: 685e-5, M: 685e-5, N: 685e-5, O: 5014e-6, c: 6015e-6, d: 4879e-6, e: 6597e-6, f: 6597e-6, g: 0.013434, h: 6702e-6, i: 6015e-6, j: 5595e-6, k: 4393e-6, l: 8652e-6, m: 4879e-6, n: 4879e-6, o: 4711e-6, p: 5152e-6, q: 5014e-6, r: 9758e-6, s: 4879e-6, t: 8408e-6, u: 4283e-6, v: 4367e-6, w: 4534e-6, x: 8408e-6, y: 4227e-6, z: 4418e-6, AB: 8922e-6, BB: 0.014349, CB: 4425e-6, DB: 472e-5, EB: 4425e-6, FB: 4425e-6, GB: 472e-5, Q: 4532e-6, HB: 4566e-6, IB: 0.02283, JB: 867e-5, KB: 4656e-6, LB: 4642e-6, MB: 4298e-6, NB: 944e-5, OB: 415e-5, PB: 4271e-6, QB: 4298e-6, RB: 0.096692, SB: 8408e-6, TB: 0.433012, UB: 0.437216, wB: 685e-5, xB: 0, yB: 8392e-6, zB: 4706e-6, VB: 6229e-6, eB: 4879e-6, "0B": 8786e-6, WB: 472e-5 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "F", "wB", "xB", "yB", "zB", "B", "VB", "eB", "0B", "C", "WB", "L", "M", "N", "O", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "Q", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "", "", ""], E: "Opera", F: { 0: 1486425600, 1: 1490054400, 2: 1494374400, 3: 1498003200, 4: 1502236800, 5: 1506470400, 6: 1510099200, 7: 1515024e3, 8: 1517961600, 9: 1521676800, F: 1150761600, wB: 1223424e3, xB: 1251763200, yB: 1267488e3, zB: 1277942400, B: 1292457600, VB: 1302566400, eB: 1309219200, "0B": 1323129600, C: 1323129600, WB: 1352073600, L: 1372723200, M: 1377561600, N: 1381104e3, O: 1386288e3, c: 1390867200, d: 1393891200, e: 1399334400, f: 1401753600, g: 1405987200, h: 1409616e3, i: 1413331200, j: 1417132800, k: 1422316800, l: 1425945600, m: 1430179200, n: 1433808e3, o: 1438646400, p: 1442448e3, q: 1445904e3, r: 1449100800, s: 1454371200, t: 1457308800, u: 146232e4, v: 1465344e3, w: 1470096e3, x: 1474329600, y: 1477267200, z: 1481587200, AB: 1525910400, BB: 1530144e3, CB: 1534982400, DB: 1537833600, EB: 1543363200, FB: 1548201600, GB: 1554768e3, Q: 1561593600, HB: 1566259200, IB: 1570406400, JB: 1573689600, KB: 1578441600, LB: 1583971200, MB: 1587513600, NB: 1592956800, OB: 1595894400, PB: 1600128e3, QB: 1603238400, RB: 161352e4, SB: 1612224e3, TB: 1616544e3, UB: 1619568e3 }, D: { F: "o", B: "o", C: "o", wB: "o", xB: "o", yB: "o", zB: "o", VB: "o", eB: "o", "0B": "o", WB: "o" } }, G: { A: { E: 144955e-8, cB: 0, "1B": 0, fB: 289911e-8, "2B": 869732e-8, "3B": 0.0449361, "4B": 0.0304406, "5B": 0.0202937, "6B": 0.0217433, "7B": 0.147854, "8B": 0.0347893, "9B": 0.149304, AC: 0.0855236, BC: 0.0739272, CC: 0.0768263, DC: 0.246424, EC: 0.0666794, FC: 0.0333397, GC: 0.172497, HC: 0.572573, IC: 10.1498, JC: 1.93225 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "cB", "1B", "fB", "2B", "3B", "4B", "E", "5B", "6B", "7B", "8B", "9B", "AC", "BC", "CC", "DC", "EC", "FC", "GC", "HC", "IC", "JC", "", "", ""], E: "Safari on iOS", F: { cB: 1270252800, "1B": 1283904e3, fB: 1299628800, "2B": 1331078400, "3B": 1359331200, "4B": 1394409600, E: 1410912e3, "5B": 1413763200, "6B": 1442361600, "7B": 1458518400, "8B": 1473724800, "9B": 1490572800, AC: 1505779200, BC: 1522281600, CC: 1537142400, DC: 1553472e3, EC: 1568851200, FC: 1572220800, GC: 1580169600, HC: 1585008e3, IC: 1600214400, JC: 1619395200 } }, H: { A: { KC: 1.18546 }, B: "o", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "KC", "", "", ""], E: "Opera Mini", F: { KC: 1426464e3 } }, I: { A: { XB: 0, H: 0.0263634, G: 0, LC: 0, MC: 0, NC: 0, OC: 0.0301296, fB: 0.0979213, PC: 0, QC: 0.43688 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "LC", "MC", "NC", "XB", "H", "OC", "fB", "PC", "QC", "G", "", "", ""], E: "Android Browser", F: { LC: 1256515200, MC: 1274313600, NC: 1291593600, XB: 1298332800, H: 1318896e3, OC: 1341792e3, fB: 1374624e3, PC: 1386547200, QC: 1401667200, G: 1618704e3 } }, J: { A: { D: 0, A: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "D", "A", "", "", ""], E: "Blackberry Browser", F: { D: 1325376e3, A: 1359504e3 } }, K: { A: { A: 0, B: 0, C: 0, Q: 0.0111391, VB: 0, eB: 0, WB: 0 }, B: "o", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "A", "B", "VB", "eB", "C", "WB", "Q", "", "", ""], E: "Opera Mobile", F: { A: 1287100800, B: 1300752e3, VB: 1314835200, eB: 1318291200, C: 1330300800, WB: 1349740800, Q: 1613433600 }, D: { Q: "webkit" } }, L: { A: { G: 38.7167 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "G", "", "", ""], E: "Chrome for Android", F: { G: 1618704e3 } }, M: { A: { P: 0.278256 }, B: "moz", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "P", "", "", ""], E: "Firefox for Android", F: { P: 1616457600 } }, N: { A: { A: 0.0115934, B: 0.022664 }, B: "ms", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "A", "B", "", "", ""], E: "IE Mobile", F: { A: 1340150400, B: 1353456e3 } }, O: { A: { RC: 1.36809 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "RC", "", "", ""], E: "UC Browser for Android", F: { RC: 1471392e3 }, D: { RC: "webkit" } }, P: { A: { H: 0.309232, SC: 0.0103543, TC: 0.010304, UC: 0.0824619, VC: 0.0103584, WC: 0.0721541, dB: 0.0412309, XC: 0.164924, YC: 0.113385, ZC: 0.412309, aC: 2.19555 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "H", "SC", "TC", "UC", "VC", "WC", "dB", "XC", "YC", "ZC", "aC", "", "", ""], E: "Samsung Internet", F: { H: 1461024e3, SC: 1481846400, TC: 1509408e3, UC: 1528329600, VC: 1546128e3, WC: 1554163200, dB: 1567900800, XC: 1582588800, YC: 1593475200, ZC: 1605657600, aC: 1618531200 } }, Q: { A: { bC: 0.185504 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "bC", "", "", ""], E: "QQ Browser", F: { bC: 1589846400 } }, R: { A: { cC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "cC", "", "", ""], E: "Baidu Browser", F: { cC: 1491004800 } }, S: { A: { dC: 0.098549 }, B: "moz", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "dC", "", "", ""], E: "KaiOS Browser", F: { dC: 1527811200 } } }, xw = { browsers: { A: "ie", B: "edge", C: "firefox", D: "chrome", E: "safari", F: "opera", G: "ios_saf", H: "op_mini", I: "android", J: "bb", K: "op_mob", L: "and_chr", M: "and_ff", N: "ie_mob", O: "and_uc", P: "samsung", Q: "and_qq", R: "baidu", S: "kaios" } }.browsers, Dw = { browserVersions: { 0: "43", 1: "44", 2: "45", 3: "46", 4: "47", 5: "48", 6: "49", 7: "50", 8: "51", 9: "52", A: "10", B: "11", C: "12", D: "7", E: "8", F: "9", G: "90", H: "4", I: "6", J: "13", K: "14", L: "15", M: "16", N: "17", O: "18", P: "87", Q: "62", R: "79", S: "80", T: "81", U: "83", V: "84", W: "85", X: "86", Y: "88", Z: "89", a: "91", b: "5", c: "19", d: "20", e: "21", f: "22", g: "23", h: "24", i: "25", j: "26", k: "27", l: "28", m: "29", n: "30", o: "31", p: "32", q: "33", r: "34", s: "35", t: "36", u: "37", v: "38", w: "39", x: "40", y: "41", z: "42", AB: "53", BB: "54", CB: "55", DB: "56", EB: "57", FB: "58", GB: "60", HB: "63", IB: "64", JB: "65", KB: "66", LB: "67", MB: "68", NB: "69", OB: "70", PB: "71", QB: "72", RB: "73", SB: "74", TB: "75", UB: "76", VB: "11.1", WB: "12.1", XB: "3", YB: "59", ZB: "61", aB: "77", bB: "78", cB: "3.2", dB: "10.1", eB: "11.5", fB: "4.2-4.3", gB: "5.5", hB: "2", iB: "82", jB: "3.5", kB: "3.6", lB: "92", mB: "93", nB: "94", oB: "3.1", pB: "5.1", qB: "6.1", rB: "7.1", sB: "9.1", tB: "13.1", uB: "14.1", vB: "TP", wB: "9.5-9.6", xB: "10.0-10.1", yB: "10.5", zB: "10.6", "0B": "11.6", "1B": "4.0-4.1", "2B": "5.0-5.1", "3B": "6.0-6.1", "4B": "7.0-7.1", "5B": "8.1-8.4", "6B": "9.0-9.2", "7B": "9.3", "8B": "10.0-10.2", "9B": "10.3", AC: "11.0-11.2", BC: "11.3-11.4", CC: "12.0-12.1", DC: "12.2-12.4", EC: "13.0-13.1", FC: "13.2", GC: "13.3", HC: "13.4-13.7", IC: "14.0-14.4", JC: "14.5-14.6", KC: "all", LC: "2.1", MC: "2.2", NC: "2.3", OC: "4.1", PC: "4.4", QC: "4.4.3-4.4.4", RC: "12.12", SC: "5.0-5.4", TC: "6.2-6.4", UC: "7.2-7.4", VC: "8.2", WC: "9.2", XC: "11.1-11.2", YC: "12.0", ZC: "13.0", aC: "14.0", bC: "10.4", cC: "7.12", dC: "2.5" } }.browserVersions;
      function Aw(e2) {
        return Object.keys(e2).reduce(function(t2, r2) {
          return t2[Dw[r2]] = e2[r2], t2;
        }, {});
      }
      var ww = { agents: Object.keys(Ew).reduce(function(e2, t2) {
        var r2 = Ew[t2];
        return e2[xw[t2]] = Object.keys(r2).reduce(function(e3, t3) {
          return t3 === "A" ? e3.usage_global = Aw(r2[t3]) : t3 === "C" ? e3.versions = r2[t3].reduce(function(e4, t4) {
            return t4 === "" ? e4.push(null) : e4.push(Dw[t4]), e4;
          }, []) : t3 === "D" ? e3.prefix_exceptions = Aw(r2[t3]) : t3 === "E" ? e3.browser = r2[t3] : t3 === "F" ? e3.release_date = Object.keys(r2[t3]).reduce(function(e4, n2) {
            return e4[Dw[n2]] = r2[t3][n2], e4;
          }, {}) : e3.prefix = r2[t3], e3;
        }, {}), e2;
      }, {}) }, Cw = { "v0.8": { start: "2012-06-25", end: "2014-07-31" }, "v0.10": { start: "2013-03-11", end: "2016-10-31" }, "v0.12": { start: "2015-02-06", end: "2016-12-31" }, v4: { start: "2015-09-08", lts: "2015-10-12", maintenance: "2017-04-01", end: "2018-04-30", codename: "Argon" }, v5: { start: "2015-10-29", maintenance: "2016-04-30", end: "2016-06-30" }, v6: { start: "2016-04-26", lts: "2016-10-18", maintenance: "2018-04-30", end: "2019-04-30", codename: "Boron" }, v7: { start: "2016-10-25", maintenance: "2017-04-30", end: "2017-06-30" }, v8: { start: "2017-05-30", lts: "2017-10-31", maintenance: "2019-01-01", end: "2019-12-31", codename: "Carbon" }, v9: { start: "2017-10-01", maintenance: "2018-04-01", end: "2018-06-30" }, v10: { start: "2018-04-24", lts: "2018-10-30", maintenance: "2020-05-19", end: "2021-04-30", codename: "Dubnium" }, v11: { start: "2018-10-23", maintenance: "2019-04-22", end: "2019-06-01" }, v12: { start: "2019-04-23", lts: "2019-10-21", maintenance: "2020-11-30", end: "2022-04-30", codename: "Erbium" }, v13: { start: "2019-10-22", maintenance: "2020-04-01", end: "2020-06-01" }, v14: { start: "2020-04-21", lts: "2020-10-27", maintenance: "2021-10-19", end: "2023-04-30", codename: "Fermium" }, v15: { start: "2020-10-20", maintenance: "2021-04-01", end: "2021-06-01" }, v16: { start: "2021-04-20", lts: "2021-10-26", maintenance: "2022-10-18", end: "2024-04-30", codename: "" } }, Sw = Object.freeze({ __proto__: null, default: {} }), Tw = { "0.20": "39", 0.21: "41", 0.22: "41", 0.23: "41", 0.24: "41", 0.25: "42", 0.26: "42", 0.27: "43", 0.28: "43", 0.29: "43", "0.30": "44", 0.31: "45", 0.32: "45", 0.33: "45", 0.34: "45", 0.35: "45", 0.36: "47", 0.37: "49", "1.0": "49", 1.1: "50", 1.2: "51", 1.3: "52", 1.4: "53", 1.5: "54", 1.6: "56", 1.7: "58", 1.8: "59", "2.0": "61", 2.1: "61", "3.0": "66", 3.1: "66", "4.0": "69", 4.1: "69", 4.2: "69", "5.0": "73", "6.0": "76", 6.1: "76", "7.0": "78", 7.1: "78", 7.2: "78", 7.3: "78", "8.0": "80", 8.1: "80", 8.2: "80", 8.3: "80", 8.4: "80", 8.5: "80", "9.0": "83", 9.1: "83", 9.2: "83", 9.3: "83", 9.4: "83", "10.0": "85", 10.1: "85", 10.2: "85", 10.3: "85", 10.4: "85", "11.0": "87", 11.1: "87", 11.2: "87", 11.3: "87", 11.4: "87", "12.0": "89", "13.0": "91", 13.1: "91", "14.0": "92" };
      function jw(e2) {
        this.name = "BrowserslistError", this.message = e2, this.browserslist = true, Error.captureStackTrace && Error.captureStackTrace(this, jw);
      }
      jw.prototype = Error.prototype;
      var Pw = jw;
      function Iw() {
      }
      var Fw = { loadQueries: function() {
        throw new Pw("Sharable configs are not supported in client-side build of Browserslist");
      }, getStat: function(e2) {
        return e2.stats;
      }, loadConfig: function(e2) {
        if (e2.config)
          throw new Pw("Browserslist config are not supported in client-side build");
      }, loadCountry: function() {
        throw new Pw("Country statistics are not supported in client-side build of Browserslist");
      }, loadFeature: function() {
        throw new Pw("Supports queries are not available in client-side build of Browserslist");
      }, currentNode: function(e2, t2) {
        return e2(["maintained node versions"], t2)[0];
      }, parseConfig: Iw, readConfig: Iw, findConfig: Iw, clearCaches: Iw, oldDataWarning: Iw }, kw = Kt(Sw), Ow = ww.agents;
      function Rw(e2, t2) {
        return (e2 + ".").indexOf(t2 + ".") === 0;
      }
      function Nw(e2) {
        return e2.filter(function(e3) {
          return typeof e3 == "string";
        });
      }
      function Bw(e2) {
        var t2 = e2;
        return e2.split(".").length === 3 && (t2 = e2.split(".").slice(0, -1).join(".")), t2;
      }
      function _w(e2) {
        return function(t2) {
          return e2 + " " + t2;
        };
      }
      function Lw(e2) {
        return parseInt(e2.split(".")[0]);
      }
      function Mw(e2, t2) {
        if (e2.length === 0)
          return [];
        var r2 = Uw(e2.map(Lw)), n2 = r2[r2.length - t2];
        if (!n2)
          return e2;
        for (var s2 = [], a2 = e2.length - 1; a2 >= 0 && !(n2 > Lw(e2[a2])); a2--)
          s2.unshift(e2[a2]);
        return s2;
      }
      function Uw(e2) {
        for (var t2 = [], r2 = 0; r2 < e2.length; r2++)
          t2.indexOf(e2[r2]) === -1 && t2.push(e2[r2]);
        return t2;
      }
      function Gw(e2, t2, r2) {
        for (var n2 in r2)
          e2[t2 + " " + n2] = r2[n2];
      }
      function Vw(e2, t2) {
        return t2 = parseFloat(t2), e2 === ">" ? function(e3) {
          return parseFloat(e3) > t2;
        } : e2 === ">=" ? function(e3) {
          return parseFloat(e3) >= t2;
        } : e2 === "<" ? function(e3) {
          return parseFloat(e3) < t2;
        } : function(e3) {
          return parseFloat(e3) <= t2;
        };
      }
      function Ww(e2) {
        return parseInt(e2);
      }
      function Hw(e2, t2) {
        return e2 < t2 ? -1 : e2 > t2 ? 1 : 0;
      }
      function Xw(e2, t2) {
        return Hw(parseInt(e2[0]), parseInt(t2[0])) || Hw(parseInt(e2[1] || "0"), parseInt(t2[1] || "0")) || Hw(parseInt(e2[2] || "0"), parseInt(t2[2] || "0"));
      }
      function qw(e2, t2) {
        switch ((t2 = t2.split(".").map(Ww))[1] === void 0 && (t2[1] = "x"), e2) {
          case "<=":
            return function(e3) {
              return $w(e3 = e3.split(".").map(Ww), t2) <= 0;
            };
          default:
          case ">=":
            return function(e3) {
              return $w(e3 = e3.split(".").map(Ww), t2) >= 0;
            };
        }
      }
      function $w(e2, t2) {
        return e2[0] !== t2[0] ? e2[0] < t2[0] ? -1 : 1 : t2[1] === "x" ? 0 : e2[1] !== t2[1] ? e2[1] < t2[1] ? -1 : 1 : 0;
      }
      function Kw(e2, t2) {
        var r2 = function(e3, t3) {
          return e3.versions.indexOf(t3) !== -1 ? t3 : !!sC.versionAliases[e3.name][t3] && sC.versionAliases[e3.name][t3];
        }(e2, t2);
        return r2 || e2.versions.length === 1 && e2.versions[0];
      }
      function zw(e2, t2) {
        return e2 /= 1e3, Object.keys(Ow).reduce(function(r2, n2) {
          var s2 = Yw(n2, t2);
          if (!s2)
            return r2;
          var a2 = Object.keys(s2.releaseDate).filter(function(t3) {
            return s2.releaseDate[t3] >= e2;
          });
          return r2.concat(a2.map(_w(s2.name)));
        }, []);
      }
      function Jw(e2) {
        return { name: e2.name, versions: e2.versions, released: e2.released, releaseDate: e2.releaseDate };
      }
      function Yw(e2, t2) {
        if (e2 = e2.toLowerCase(), e2 = sC.aliases[e2] || e2, t2.mobileToDesktop && sC.desktopNames[e2]) {
          var r2 = sC.data[sC.desktopNames[e2]];
          if (e2 === "android")
            return s2 = Jw(sC.data[e2]), a2 = r2, s2.released = Qw(s2.released, a2.released), s2.versions = Qw(s2.versions, a2.versions), s2;
          var n2 = Jw(r2);
          return n2.name = e2, e2 === "op_mob" && (n2 = function(e3, t3) {
            e3.versions = e3.versions.map(function(e4) {
              return t3[e4] || e4;
            }), e3.released = e3.versions.map(function(e4) {
              return t3[e4] || e4;
            });
            var r3 = {};
            for (var n3 in e3.releaseDate)
              r3[t3[n3] || n3] = e3.releaseDate[n3];
            return e3.releaseDate = r3, e3;
          }(n2, { "10.0-10.1": "10" })), n2;
        }
        var s2, a2;
        return sC.data[e2];
      }
      function Qw(e2, t2) {
        var r2 = t2[t2.length - 1];
        return e2.filter(function(e3) {
          return /^(?:[2-4]\.|[34]$)/.test(e3);
        }).concat(t2.slice(37 - r2 - 1));
      }
      function Zw(e2, t2) {
        var r2 = Yw(e2, t2);
        if (!r2)
          throw new Pw("Unknown browser " + e2);
        return r2;
      }
      function eC(e2) {
        return new Pw("Unknown browser query `" + e2 + "`. Maybe you are using old Browserslist or made typo in query.");
      }
      function tC(e2, t2, r2) {
        if (r2.mobileToDesktop)
          return e2;
        var n2 = sC.data.android.released, s2 = n2[n2.length - 1] - 37 - t2;
        return s2 > 0 ? e2.slice(-1) : e2.slice(s2 - 1);
      }
      function rC(e2, t2) {
        return (e2 = Array.isArray(e2) ? oC(e2.map(aC)) : aC(e2)).reduce(function(e3, r2, n2) {
          var s2 = r2.queryString, a2 = s2.indexOf("not ") === 0;
          if (a2) {
            if (n2 === 0)
              throw new Pw("Write any browsers query (for instance, `defaults`) before `" + s2 + "`");
            s2 = s2.slice(4);
          }
          for (var i2 = 0; i2 < pC.length; i2++) {
            var o2 = pC[i2], u2 = s2.match(o2.regexp);
            if (u2) {
              var l2 = [t2].concat(u2.slice(1)), c2 = o2.select.apply(sC, l2).map(function(e4) {
                var r3 = e4.split(" ");
                return r3[1] === "0" ? r3[0] + " " + Yw(r3[0], t2).versions[0] : e4;
              });
              switch (r2.type) {
                case 2:
                  return a2 ? e3.filter(function(e4) {
                    return c2.indexOf(e4) === -1;
                  }) : e3.filter(function(e4) {
                    return c2.indexOf(e4) !== -1;
                  });
                case 1:
                default:
                  if (a2) {
                    var p2 = {};
                    return c2.forEach(function(e4) {
                      p2[e4] = true;
                    }), e3.filter(function(e4) {
                      return !p2[e4];
                    });
                  }
                  return e3.concat(c2);
              }
            }
          }
          throw eC(s2);
        }, []);
      }
      var nC = {};
      function sC(e2, t2) {
        if (t2 === void 0 && (t2 = {}), t2.path === void 0 && (t2.path = kw.resolve ? kw.resolve(".") : "."), e2 == null) {
          var r2 = sC.loadConfig(t2);
          e2 = r2 || sC.defaults;
        }
        if (typeof e2 != "string" && !Array.isArray(e2))
          throw new Pw("Browser queries must be an array or string. Got " + typeof e2 + ".");
        var n2 = { ignoreUnknownVersions: t2.ignoreUnknownVersions, dangerousExtend: t2.dangerousExtend, mobileToDesktop: t2.mobileToDesktop, path: t2.path, env: t2.env };
        Fw.oldDataWarning(sC.data);
        var s2 = Fw.getStat(t2, sC.data);
        if (s2)
          for (var a2 in n2.customUsage = {}, s2)
            Gw(n2.customUsage, a2, s2[a2]);
        var i2 = JSON.stringify([e2, n2]);
        if (nC[i2])
          return nC[i2];
        var o2 = Uw(rC(e2, n2)).sort(function(e3, t3) {
          if (e3 = e3.split(" "), t3 = t3.split(" "), e3[0] === t3[0]) {
            var r3 = e3[1].split("-")[0];
            return Xw(t3[1].split("-")[0].split("."), r3.split("."));
          }
          return Hw(e3[0], t3[0]);
        });
        return ar.env.BROWSERSLIST_DISABLE_CACHE || (nC[i2] = o2), o2;
      }
      function aC(e2) {
        var t2 = [];
        do {
          e2 = iC(e2, t2);
        } while (e2);
        return t2;
      }
      function iC(e2, t2) {
        var r2 = /^(?:,\s*|\s+or\s+)(.*)/i, n2 = /^\s+and\s+(.*)/i;
        return function(e3, t3) {
          for (var r3 = 1, n3 = e3.length; r3 <= n3; r3++) {
            if (t3(e3.substr(-r3, r3), r3, n3))
              return e3.slice(0, -r3);
          }
          return "";
        }(e2, function(e3, s2, a2) {
          return n2.test(e3) ? (t2.unshift({ type: 2, queryString: e3.match(n2)[1] }), true) : r2.test(e3) ? (t2.unshift({ type: 1, queryString: e3.match(r2)[1] }), true) : s2 === a2 && (t2.unshift({ type: 1, queryString: e3.trim() }), true);
        });
      }
      function oC(e2) {
        return Array.isArray(e2) ? e2.reduce(function(e3, t2) {
          return e3.concat(oC(t2));
        }, []) : [e2];
      }
      function uC(e2, t2) {
        var r2 = bw.filter(function(e3) {
          return e3.name === "nodejs";
        }).filter(function(e3) {
          return Rw(e3.version, t2);
        });
        if (r2.length === 0) {
          if (e2.ignoreUnknownVersions)
            return [];
          throw new Pw("Unknown version " + t2 + " of Node.js");
        }
        return ["node " + r2[r2.length - 1].version];
      }
      function lC(e2, t2, r2, n2) {
        return t2 = parseInt(t2), r2 = parseInt(r2 || "01") - 1, n2 = parseInt(n2 || "01"), zw(Date.UTC(t2, r2, n2, 0, 0, 0), e2);
      }
      function cC(e2, t2, r2) {
        t2 = parseFloat(t2);
        var n2 = sC.usage.global;
        if (r2)
          if (r2.match(/^my\s+stats$/)) {
            if (!e2.customUsage)
              throw new Pw("Custom usage statistics was not provided");
            n2 = e2.customUsage;
          } else {
            var s2;
            s2 = r2.length === 2 ? r2.toUpperCase() : r2.toLowerCase(), Fw.loadCountry(sC.usage, s2, sC.data), n2 = sC.usage[s2];
          }
        for (var a2, i2 = Object.keys(n2).sort(function(e3, t3) {
          return n2[t3] - n2[e3];
        }), o2 = 0, u2 = [], l2 = 0; l2 <= i2.length && (a2 = i2[l2], n2[a2] !== 0) && (o2 += n2[a2], u2.push(a2), !(o2 >= t2)); l2++)
          ;
        return u2;
      }
      sC.cache = {}, sC.data = {}, sC.usage = { global: {}, custom: null }, sC.defaults = ["> 0.5%", "last 2 versions", "Firefox ESR", "not dead"], sC.aliases = { fx: "firefox", ff: "firefox", ios: "ios_saf", explorer: "ie", blackberry: "bb", explorermobile: "ie_mob", operamini: "op_mini", operamobile: "op_mob", chromeandroid: "and_chr", firefoxandroid: "and_ff", ucandroid: "and_uc", qqandroid: "and_qq" }, sC.desktopNames = { and_chr: "chrome", and_ff: "firefox", ie_mob: "ie", op_mob: "opera", android: "chrome" }, sC.versionAliases = {}, sC.clearCaches = Fw.clearCaches, sC.parseConfig = Fw.parseConfig, sC.readConfig = Fw.readConfig, sC.findConfig = Fw.findConfig, sC.loadConfig = Fw.loadConfig, sC.coverage = function(e2, t2) {
        var r2;
        if (t2 === void 0)
          r2 = sC.usage.global;
        else if (t2 === "my stats") {
          var n2 = {};
          n2.path = kw.resolve ? kw.resolve(".") : ".";
          var s2 = Fw.getStat(n2);
          if (!s2)
            throw new Pw("Custom usage statistics was not provided");
          for (var a2 in r2 = {}, s2)
            Gw(r2, a2, s2[a2]);
        } else if (typeof t2 == "string")
          t2 = t2.length > 2 ? t2.toLowerCase() : t2.toUpperCase(), Fw.loadCountry(sC.usage, t2, sC.data), r2 = sC.usage[t2];
        else
          for (var i2 in "dataByBrowser" in t2 && (t2 = t2.dataByBrowser), r2 = {}, t2)
            for (var o2 in t2[i2])
              r2[i2 + " " + o2] = t2[i2][o2];
        return e2.reduce(function(e3, t3) {
          var n3 = r2[t3];
          return n3 === void 0 && (n3 = r2[t3.replace(/ \S+$/, " 0")]), e3 + (n3 || 0);
        }, 0);
      };
      var pC = [{ regexp: /^last\s+(\d+)\s+major\s+versions?$/i, select: function(e2, t2) {
        return Object.keys(Ow).reduce(function(r2, n2) {
          var s2 = Yw(n2, e2);
          if (!s2)
            return r2;
          var a2 = Mw(s2.released, t2);
          return a2 = a2.map(_w(s2.name)), s2.name === "android" && (a2 = tC(a2, t2, e2)), r2.concat(a2);
        }, []);
      } }, { regexp: /^last\s+(\d+)\s+versions?$/i, select: function(e2, t2) {
        return Object.keys(Ow).reduce(function(r2, n2) {
          var s2 = Yw(n2, e2);
          if (!s2)
            return r2;
          var a2 = s2.released.slice(-t2);
          return a2 = a2.map(_w(s2.name)), s2.name === "android" && (a2 = tC(a2, t2, e2)), r2.concat(a2);
        }, []);
      } }, { regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i, select: function(e2, t2) {
        return Mw(Object.keys(Tw), t2).map(function(e3) {
          return "chrome " + Tw[e3];
        });
      } }, { regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i, select: function(e2, t2, r2) {
        var n2 = Zw(r2, e2), s2 = Mw(n2.released, t2).map(_w(n2.name));
        return n2.name === "android" && (s2 = tC(s2, t2, e2)), s2;
      } }, { regexp: /^last\s+(\d+)\s+electron\s+versions?$/i, select: function(e2, t2) {
        return Object.keys(Tw).slice(-t2).map(function(e3) {
          return "chrome " + Tw[e3];
        });
      } }, { regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i, select: function(e2, t2, r2) {
        var n2 = Zw(r2, e2), s2 = n2.released.slice(-t2).map(_w(n2.name));
        return n2.name === "android" && (s2 = tC(s2, t2, e2)), s2;
      } }, { regexp: /^unreleased\s+versions$/i, select: function(e2) {
        return Object.keys(Ow).reduce(function(t2, r2) {
          var n2 = Yw(r2, e2);
          if (!n2)
            return t2;
          var s2 = n2.versions.filter(function(e3) {
            return n2.released.indexOf(e3) === -1;
          });
          return s2 = s2.map(_w(n2.name)), t2.concat(s2);
        }, []);
      } }, { regexp: /^unreleased\s+electron\s+versions?$/i, select: function() {
        return [];
      } }, { regexp: /^unreleased\s+(\w+)\s+versions?$/i, select: function(e2, t2) {
        var r2 = Zw(t2, e2);
        return r2.versions.filter(function(e3) {
          return r2.released.indexOf(e3) === -1;
        }).map(_w(r2.name));
      } }, { regexp: /^last\s+(\d*.?\d+)\s+years?$/i, select: function(e2, t2) {
        return zw(Date.now() - 315584329824e-1 * t2, e2);
      } }, { regexp: /^since (\d+)$/i, select: lC }, { regexp: /^since (\d+)-(\d+)$/i, select: lC }, { regexp: /^since (\d+)-(\d+)-(\d+)$/i, select: lC }, { regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/, select: function(e2, t2, r2) {
        r2 = parseFloat(r2);
        var n2 = sC.usage.global;
        return Object.keys(n2).reduce(function(e3, s2) {
          return t2 === ">" ? n2[s2] > r2 && e3.push(s2) : t2 === "<" ? n2[s2] < r2 && e3.push(s2) : t2 === "<=" ? n2[s2] <= r2 && e3.push(s2) : n2[s2] >= r2 && e3.push(s2), e3;
        }, []);
      } }, { regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/, select: function(e2, t2, r2) {
        if (r2 = parseFloat(r2), !e2.customUsage)
          throw new Pw("Custom usage statistics was not provided");
        var n2 = e2.customUsage;
        return Object.keys(n2).reduce(function(e3, s2) {
          return t2 === ">" ? n2[s2] > r2 && e3.push(s2) : t2 === "<" ? n2[s2] < r2 && e3.push(s2) : t2 === "<=" ? n2[s2] <= r2 && e3.push(s2) : n2[s2] >= r2 && e3.push(s2), e3;
        }, []);
      } }, { regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/, select: function(e2, t2, r2, n2) {
        r2 = parseFloat(r2);
        var s2 = Fw.loadStat(e2, n2, sC.data);
        if (s2)
          for (var a2 in e2.customUsage = {}, s2)
            Gw(e2.customUsage, a2, s2[a2]);
        if (!e2.customUsage)
          throw new Pw("Custom usage statistics was not provided");
        var i2 = e2.customUsage;
        return Object.keys(i2).reduce(function(e3, n3) {
          return t2 === ">" ? i2[n3] > r2 && e3.push(n3) : t2 === "<" ? i2[n3] < r2 && e3.push(n3) : t2 === "<=" ? i2[n3] <= r2 && e3.push(n3) : i2[n3] >= r2 && e3.push(n3), e3;
        }, []);
      } }, { regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/, select: function(e2, t2, r2, n2) {
        r2 = parseFloat(r2), n2 = n2.length === 2 ? n2.toUpperCase() : n2.toLowerCase(), Fw.loadCountry(sC.usage, n2, sC.data);
        var s2 = sC.usage[n2];
        return Object.keys(s2).reduce(function(e3, n3) {
          return t2 === ">" ? s2[n3] > r2 && e3.push(n3) : t2 === "<" ? s2[n3] < r2 && e3.push(n3) : t2 === "<=" ? s2[n3] <= r2 && e3.push(n3) : s2[n3] >= r2 && e3.push(n3), e3;
        }, []);
      } }, { regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%$/, select: cC }, { regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/, select: cC }, { regexp: /^supports\s+([\w-]+)$/, select: function(e2, t2) {
        Fw.loadFeature(sC.cache, t2);
        var r2 = sC.cache[t2];
        return Object.keys(r2).reduce(function(e3, t3) {
          var n2 = r2[t3];
          return (n2.indexOf("y") >= 0 || n2.indexOf("a") >= 0) && e3.push(t3), e3;
        }, []);
      } }, { regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i, select: function(e2, t2, r2) {
        var n2 = Bw(t2), s2 = Bw(r2);
        if (!Tw[n2])
          throw new Pw("Unknown version " + t2 + " of electron");
        if (!Tw[s2])
          throw new Pw("Unknown version " + r2 + " of electron");
        return t2 = parseFloat(t2), r2 = parseFloat(r2), Object.keys(Tw).filter(function(e3) {
          var n3 = parseFloat(e3);
          return n3 >= t2 && n3 <= r2;
        }).map(function(e3) {
          return "chrome " + Tw[e3];
        });
      } }, { regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i, select: function(e2, t2, r2) {
        return bw.filter(function(e3) {
          return e3.name === "nodejs";
        }).map(function(e3) {
          return e3.version;
        }).filter(qw(">=", t2)).filter(qw("<=", r2)).map(function(e3) {
          return "node " + e3;
        });
      } }, { regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i, select: function(e2, t2, r2, n2) {
        var s2 = Zw(t2, e2);
        return r2 = parseFloat(Kw(s2, r2) || r2), n2 = parseFloat(Kw(s2, n2) || n2), s2.released.filter(function(e3) {
          var t3 = parseFloat(e3);
          return t3 >= r2 && t3 <= n2;
        }).map(_w(s2.name));
      } }, { regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i, select: function(e2, t2, r2) {
        var n2 = Bw(r2);
        return Object.keys(Tw).filter(Vw(t2, n2)).map(function(e3) {
          return "chrome " + Tw[e3];
        });
      } }, { regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i, select: function(e2, t2, r2) {
        return bw.filter(function(e3) {
          return e3.name === "nodejs";
        }).map(function(e3) {
          return e3.version;
        }).filter(function(e3, t3) {
          return (t3 = t3.split(".").map(Ww))[1] = t3[1] || 0, t3[2] = t3[2] || 0, e3 === ">" ? function(e4) {
            return Xw(e4 = e4.split(".").map(Ww), t3) > 0;
          } : e3 === ">=" ? function(e4) {
            return Xw(e4 = e4.split(".").map(Ww), t3) >= 0;
          } : e3 === "<" ? function(e4) {
            return e4 = e4.split(".").map(Ww), Xw(t3, e4) > 0;
          } : function(e4) {
            return e4 = e4.split(".").map(Ww), Xw(t3, e4) >= 0;
          };
        }(t2, r2)).map(function(e3) {
          return "node " + e3;
        });
      } }, { regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/, select: function(e2, t2, r2, n2) {
        var s2 = Zw(t2, e2), a2 = sC.versionAliases[s2.name][n2];
        return a2 && (n2 = a2), s2.released.filter(Vw(r2, n2)).map(function(e3) {
          return s2.name + " " + e3;
        });
      } }, { regexp: /^(firefox|ff|fx)\s+esr$/i, select: function() {
        return ["firefox 78"];
      } }, { regexp: /(operamini|op_mini)\s+all/i, select: function() {
        return ["op_mini all"];
      } }, { regexp: /^electron\s+([\d.]+)$/i, select: function(e2, t2) {
        var r2 = Bw(t2), n2 = Tw[r2];
        if (!n2)
          throw new Pw("Unknown version " + t2 + " of electron");
        return ["chrome " + n2];
      } }, { regexp: /^node\s+(\d+)$/i, select: uC }, { regexp: /^node\s+(\d+\.\d+)$/i, select: uC }, { regexp: /^node\s+(\d+\.\d+\.\d+)$/i, select: uC }, { regexp: /^current\s+node$/i, select: function(e2) {
        return [Fw.currentNode(rC, e2)];
      } }, { regexp: /^maintained\s+node\s+versions$/i, select: function(e2) {
        var t2 = Date.now();
        return rC(Object.keys(Cw).filter(function(e3) {
          return t2 < Date.parse(Cw[e3].end) && t2 > Date.parse(Cw[e3].start) && function(e4) {
            var t3 = e4.slice(1);
            return bw.some(function(e5) {
              return Rw(e5.version, t3);
            });
          }(e3);
        }).map(function(e3) {
          return "node " + e3.slice(1);
        }), e2);
      } }, { regexp: /^phantomjs\s+1.9$/i, select: function() {
        return ["safari 5"];
      } }, { regexp: /^phantomjs\s+2.1$/i, select: function() {
        return ["safari 6"];
      } }, { regexp: /^(\w+)\s+(tp|[\d.]+)$/i, select: function(e2, t2, r2) {
        /^tp$/i.test(r2) && (r2 = "TP");
        var n2 = Zw(t2, e2), s2 = Kw(n2, r2);
        if (s2)
          r2 = s2;
        else {
          if (!(s2 = Kw(n2, s2 = r2.indexOf(".") === -1 ? r2 + ".0" : r2.replace(/\.0$/, "")))) {
            if (e2.ignoreUnknownVersions)
              return [];
            throw new Pw("Unknown version " + r2 + " of " + t2);
          }
          r2 = s2;
        }
        return [n2.name + " " + r2];
      } }, { regexp: /^browserslist config$/i, select: function(e2) {
        return sC(void 0, e2);
      } }, { regexp: /^extends (.+)$/i, select: function(e2, t2) {
        return rC(Fw.loadQueries(e2, t2), e2);
      } }, { regexp: /^defaults$/i, select: function(e2) {
        return rC(sC.defaults, e2);
      } }, { regexp: /^dead$/i, select: function(e2) {
        return rC(["ie <= 10", "ie_mob <= 11", "bb <= 10", "op_mob <= 12.1", "samsung 4"], e2);
      } }, { regexp: /^(\w+)$/i, select: function(e2, t2) {
        throw Yw(t2, e2) ? new Pw("Specify versions in Browserslist query for browser " + t2) : eC(t2);
      } }];
      !function() {
        for (var e2 in Ow) {
          var t2 = Ow[e2];
          sC.data[e2] = { name: e2, versions: Nw(Ow[e2].versions), released: Nw(Ow[e2].versions.slice(0, -3)), releaseDate: Ow[e2].release_date }, Gw(sC.usage.global, e2, t2.usage_global), sC.versionAliases[e2] = {};
          for (var r2 = 0; r2 < t2.versions.length; r2++) {
            var n2 = t2.versions[r2];
            if (n2 && n2.indexOf("-") !== -1)
              for (var s2 = n2.split("-"), a2 = 0; a2 < s2.length; a2++)
                sC.versionAliases[e2][s2[a2]] = n2;
          }
        }
        sC.versionAliases.op_mob[59] = "58";
      }();
      var dC = sC, fC = Math.min;
      function hC(e2, t2) {
        var r2 = t2.map(function(t3) {
          return function(e3, t4) {
            var r3, n2, s2 = [], a2 = [], i2 = e3.length, o2 = t4.length;
            if (!i2)
              return o2;
            if (!o2)
              return i2;
            for (n2 = 0; n2 <= o2; n2++)
              s2[n2] = n2;
            for (r3 = 1; r3 <= i2; r3++) {
              for (a2 = [r3], n2 = 1; n2 <= o2; n2++)
                a2[n2] = e3[r3 - 1] === t4[n2 - 1] ? s2[n2 - 1] : fC(s2[n2 - 1], s2[n2], a2[n2 - 1]) + 1;
              s2 = a2;
            }
            return a2[o2];
          }(t3, e2);
        });
        return t2[r2.indexOf(fC.apply(void 0, c(r2)))];
      }
      var mC = function() {
        function e2(e3) {
          this.descriptor = e3;
        }
        var t2 = e2.prototype;
        return t2.validateTopLevelOptions = function(e3, t3) {
          for (var r2 = Object.keys(t3), n2 = 0, s2 = Object.keys(e3); n2 < s2.length; n2++) {
            var a2 = s2[n2];
            if (!r2.includes(a2))
              throw new Error(this.formatMessage("'" + a2 + "' is not a valid top-level option.\n- Did you mean '" + hC(a2, r2) + "'?"));
          }
        }, t2.validateBooleanOption = function(e3, t3, r2) {
          return t3 === void 0 ? r2 : (this.invariant(typeof t3 == "boolean", "'" + e3 + "' option must be a boolean."), t3);
        }, t2.validateStringOption = function(e3, t3, r2) {
          return t3 === void 0 ? r2 : (this.invariant(typeof t3 == "string", "'" + e3 + "' option must be a string."), t3);
        }, t2.invariant = function(e3, t3) {
          if (!e3)
            throw new Error(this.formatMessage(t3));
        }, t2.formatMessage = function(e3) {
          return this.descriptor + ": " + e3;
        }, e2;
      }(), yC = { "es6.module": { chrome: "61", and_chr: "61", edge: "16", firefox: "60", and_ff: "60", node: "13.2.0", opera: "48", op_mob: "48", safari: "10.1", ios: "10.3", samsung: "8.2", android: "61", electron: "2.0", ios_saf: "10.3" } }, gC = { SEMVER_SPEC_VERSION: "2.0.0", MAX_LENGTH: 256, MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991, MAX_SAFE_COMPONENT_LENGTH: 16 }, vC = typeof ar == "object" && ar.env && ar.env.NODE_DEBUG && /\bsemver\b/i.test(ar.env.NODE_DEBUG) ? function() {
        for (var e2, t2 = arguments.length, r2 = new Array(t2), n2 = 0; n2 < t2; n2++)
          r2[n2] = arguments[n2];
        return (e2 = console).error.apply(e2, ["SEMVER"].concat(r2));
      } : function() {
      }, bC = zt(function(e2, t2) {
        var r2 = gC.MAX_SAFE_COMPONENT_LENGTH, n2 = (t2 = e2.exports = {}).re = [], s2 = t2.src = [], a2 = t2.t = {}, i2 = 0, o2 = function(e3, t3, r3) {
          var o3 = i2++;
          vC(o3, t3), a2[e3] = o3, s2[o3] = t3, n2[o3] = new RegExp(t3, r3 ? "g" : void 0);
        };
        o2("NUMERICIDENTIFIER", "0|[1-9]\\d*"), o2("NUMERICIDENTIFIERLOOSE", "[0-9]+"), o2("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*"), o2("MAINVERSION", "(" + s2[a2.NUMERICIDENTIFIER] + ")\\.(" + s2[a2.NUMERICIDENTIFIER] + ")\\.(" + s2[a2.NUMERICIDENTIFIER] + ")"), o2("MAINVERSIONLOOSE", "(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")"), o2("PRERELEASEIDENTIFIER", "(?:" + s2[a2.NUMERICIDENTIFIER] + "|" + s2[a2.NONNUMERICIDENTIFIER] + ")"), o2("PRERELEASEIDENTIFIERLOOSE", "(?:" + s2[a2.NUMERICIDENTIFIERLOOSE] + "|" + s2[a2.NONNUMERICIDENTIFIER] + ")"), o2("PRERELEASE", "(?:-(" + s2[a2.PRERELEASEIDENTIFIER] + "(?:\\." + s2[a2.PRERELEASEIDENTIFIER] + ")*))"), o2("PRERELEASELOOSE", "(?:-?(" + s2[a2.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + s2[a2.PRERELEASEIDENTIFIERLOOSE] + ")*))"), o2("BUILDIDENTIFIER", "[0-9A-Za-z-]+"), o2("BUILD", "(?:\\+(" + s2[a2.BUILDIDENTIFIER] + "(?:\\." + s2[a2.BUILDIDENTIFIER] + ")*))"), o2("FULLPLAIN", "v?" + s2[a2.MAINVERSION] + s2[a2.PRERELEASE] + "?" + s2[a2.BUILD] + "?"), o2("FULL", "^" + s2[a2.FULLPLAIN] + "$"), o2("LOOSEPLAIN", "[v=\\s]*" + s2[a2.MAINVERSIONLOOSE] + s2[a2.PRERELEASELOOSE] + "?" + s2[a2.BUILD] + "?"), o2("LOOSE", "^" + s2[a2.LOOSEPLAIN] + "$"), o2("GTLT", "((?:<|>)?=?)"), o2("XRANGEIDENTIFIERLOOSE", s2[a2.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*"), o2("XRANGEIDENTIFIER", s2[a2.NUMERICIDENTIFIER] + "|x|X|\\*"), o2("XRANGEPLAIN", "[v=\\s]*(" + s2[a2.XRANGEIDENTIFIER] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIER] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIER] + ")(?:" + s2[a2.PRERELEASE] + ")?" + s2[a2.BUILD] + "?)?)?"), o2("XRANGEPLAINLOOSE", "[v=\\s]*(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:" + s2[a2.PRERELEASELOOSE] + ")?" + s2[a2.BUILD] + "?)?)?"), o2("XRANGE", "^" + s2[a2.GTLT] + "\\s*" + s2[a2.XRANGEPLAIN] + "$"), o2("XRANGELOOSE", "^" + s2[a2.GTLT] + "\\s*" + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("COERCE", "(^|[^\\d])(\\d{1," + r2 + "})(?:\\.(\\d{1," + r2 + "}))?(?:\\.(\\d{1," + r2 + "}))?(?:$|[^\\d])"), o2("COERCERTL", s2[a2.COERCE], true), o2("LONETILDE", "(?:~>?)"), o2("TILDETRIM", "(\\s*)" + s2[a2.LONETILDE] + "\\s+", true), t2.tildeTrimReplace = "$1~", o2("TILDE", "^" + s2[a2.LONETILDE] + s2[a2.XRANGEPLAIN] + "$"), o2("TILDELOOSE", "^" + s2[a2.LONETILDE] + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("LONECARET", "(?:\\^)"), o2("CARETTRIM", "(\\s*)" + s2[a2.LONECARET] + "\\s+", true), t2.caretTrimReplace = "$1^", o2("CARET", "^" + s2[a2.LONECARET] + s2[a2.XRANGEPLAIN] + "$"), o2("CARETLOOSE", "^" + s2[a2.LONECARET] + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("COMPARATORLOOSE", "^" + s2[a2.GTLT] + "\\s*(" + s2[a2.LOOSEPLAIN] + ")$|^$"), o2("COMPARATOR", "^" + s2[a2.GTLT] + "\\s*(" + s2[a2.FULLPLAIN] + ")$|^$"), o2("COMPARATORTRIM", "(\\s*)" + s2[a2.GTLT] + "\\s*(" + s2[a2.LOOSEPLAIN] + "|" + s2[a2.XRANGEPLAIN] + ")", true), t2.comparatorTrimReplace = "$1$2$3", o2("HYPHENRANGE", "^\\s*(" + s2[a2.XRANGEPLAIN] + ")\\s+-\\s+(" + s2[a2.XRANGEPLAIN] + ")\\s*$"), o2("HYPHENRANGELOOSE", "^\\s*(" + s2[a2.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + s2[a2.XRANGEPLAINLOOSE] + ")\\s*$"), o2("STAR", "(<|>)?=?\\s*\\*"), o2("GTE0", "^\\s*>=\\s*0.0.0\\s*$"), o2("GTE0PRE", "^\\s*>=\\s*0.0.0-0\\s*$");
      }, "/$$rollup_base$$/packages/babel-helper-compilation-targets/node_modules/semver/node_modules/semver-BABEL_8_BREAKING-true/internal"), EC = ["includePrerelease", "loose", "rtl"], xC = function(e2) {
        return e2 ? typeof e2 != "object" ? { loose: true } : EC.filter(function(t2) {
          return e2[t2];
        }).reduce(function(e3, t2) {
          return e3[t2] = true, e3;
        }, {}) : {};
      }, DC = /^[0-9]+$/, AC = function(e2, t2) {
        var r2 = DC.test(e2), n2 = DC.test(t2);
        return r2 && n2 && (e2 = +e2, t2 = +t2), e2 === t2 ? 0 : r2 && !n2 ? -1 : n2 && !r2 ? 1 : e2 < t2 ? -1 : 1;
      }, wC = AC, CC = gC.MAX_LENGTH, SC = gC.MAX_SAFE_INTEGER, TC = bC.re, jC = bC.t, PC = wC, IC = function() {
        function e2(t3, r2) {
          if (r2 = xC(r2), t3 instanceof e2) {
            if (t3.loose === !!r2.loose && t3.includePrerelease === !!r2.includePrerelease)
              return t3;
            t3 = t3.version;
          } else if (typeof t3 != "string")
            throw new TypeError("Invalid Version: " + t3);
          if (t3.length > CC)
            throw new TypeError("version is longer than " + CC + " characters");
          vC("SemVer", t3, r2), this.options = r2, this.loose = !!r2.loose, this.includePrerelease = !!r2.includePrerelease;
          var n2 = t3.trim().match(r2.loose ? TC[jC.LOOSE] : TC[jC.FULL]);
          if (!n2)
            throw new TypeError("Invalid Version: " + t3);
          if (this.raw = t3, this.major = +n2[1], this.minor = +n2[2], this.patch = +n2[3], this.major > SC || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > SC || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > SC || this.patch < 0)
            throw new TypeError("Invalid patch version");
          n2[4] ? this.prerelease = n2[4].split(".").map(function(e3) {
            if (/^[0-9]+$/.test(e3)) {
              var t4 = +e3;
              if (t4 >= 0 && t4 < SC)
                return t4;
            }
            return e3;
          }) : this.prerelease = [], this.build = n2[5] ? n2[5].split(".") : [], this.format();
        }
        var t2 = e2.prototype;
        return t2.format = function() {
          return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version;
        }, t2.toString = function() {
          return this.version;
        }, t2.compare = function(t3) {
          if (vC("SemVer.compare", this.version, this.options, t3), !(t3 instanceof e2)) {
            if (typeof t3 == "string" && t3 === this.version)
              return 0;
            t3 = new e2(t3, this.options);
          }
          return t3.version === this.version ? 0 : this.compareMain(t3) || this.comparePre(t3);
        }, t2.compareMain = function(t3) {
          return t3 instanceof e2 || (t3 = new e2(t3, this.options)), PC(this.major, t3.major) || PC(this.minor, t3.minor) || PC(this.patch, t3.patch);
        }, t2.comparePre = function(t3) {
          if (t3 instanceof e2 || (t3 = new e2(t3, this.options)), this.prerelease.length && !t3.prerelease.length)
            return -1;
          if (!this.prerelease.length && t3.prerelease.length)
            return 1;
          if (!this.prerelease.length && !t3.prerelease.length)
            return 0;
          var r2 = 0;
          do {
            var n2 = this.prerelease[r2], s2 = t3.prerelease[r2];
            if (vC("prerelease compare", r2, n2, s2), n2 === void 0 && s2 === void 0)
              return 0;
            if (s2 === void 0)
              return 1;
            if (n2 === void 0)
              return -1;
            if (n2 !== s2)
              return PC(n2, s2);
          } while (++r2);
        }, t2.compareBuild = function(t3) {
          t3 instanceof e2 || (t3 = new e2(t3, this.options));
          var r2 = 0;
          do {
            var n2 = this.build[r2], s2 = t3.build[r2];
            if (vC("prerelease compare", r2, n2, s2), n2 === void 0 && s2 === void 0)
              return 0;
            if (s2 === void 0)
              return 1;
            if (n2 === void 0)
              return -1;
            if (n2 !== s2)
              return PC(n2, s2);
          } while (++r2);
        }, t2.inc = function(e3, t3) {
          switch (e3) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t3);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t3);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "prerelease":
              this.prerelease.length === 0 && this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "major":
              this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              this.prerelease.length === 0 && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (this.prerelease.length === 0)
                this.prerelease = [0];
              else {
                for (var r2 = this.prerelease.length; --r2 >= 0; )
                  typeof this.prerelease[r2] == "number" && (this.prerelease[r2]++, r2 = -2);
                r2 === -1 && this.prerelease.push(0);
              }
              t3 && (this.prerelease[0] === t3 ? isNaN(this.prerelease[1]) && (this.prerelease = [t3, 0]) : this.prerelease = [t3, 0]);
              break;
            default:
              throw new Error("invalid increment argument: " + e3);
          }
          return this.format(), this.raw = this.version, this;
        }, e2;
      }(), FC = (bC.re, bC.t, function(e2, t2, r2) {
        return new IC(e2, r2).compare(new IC(t2, r2));
      }), kC = function(e2, t2, r2) {
        return FC(e2, t2, r2) === 0;
      }, OC = function(e2, t2, r2) {
        return FC(e2, t2, r2) > 0;
      }, RC = function(e2, t2, r2) {
        return FC(e2, t2, r2) < 0;
      }, NC = function(e2, t2, r2) {
        return FC(e2, t2, r2) !== 0;
      }, BC = function(e2, t2, r2) {
        return FC(e2, t2, r2) >= 0;
      }, _C = function(e2, t2, r2) {
        return FC(e2, t2, r2) <= 0;
      }, LC = function(e2, t2, r2, n2) {
        switch (t2) {
          case "===":
            return typeof e2 == "object" && (e2 = e2.version), typeof r2 == "object" && (r2 = r2.version), e2 === r2;
          case "!==":
            return typeof e2 == "object" && (e2 = e2.version), typeof r2 == "object" && (r2 = r2.version), e2 !== r2;
          case "":
          case "=":
          case "==":
            return kC(e2, r2, n2);
          case "!=":
            return NC(e2, r2, n2);
          case ">":
            return OC(e2, r2, n2);
          case ">=":
            return BC(e2, r2, n2);
          case "<":
            return RC(e2, r2, n2);
          case "<=":
            return _C(e2, r2, n2);
          default:
            throw new TypeError("Invalid operator: " + t2);
        }
      }, MC = (bC.re, bC.t, UC);
      function UC(e2) {
        var t2 = this;
        if (t2 instanceof UC || (t2 = new UC()), t2.tail = null, t2.head = null, t2.length = 0, e2 && typeof e2.forEach == "function")
          e2.forEach(function(e3) {
            t2.push(e3);
          });
        else if (arguments.length > 0)
          for (var r2 = 0, n2 = arguments.length; r2 < n2; r2++)
            t2.push(arguments[r2]);
        return t2;
      }
      function GC(e2, t2, r2) {
        var n2 = t2 === e2.head ? new HC(r2, null, t2, e2) : new HC(r2, t2, t2.next, e2);
        return n2.next === null && (e2.tail = n2), n2.prev === null && (e2.head = n2), e2.length++, n2;
      }
      function VC(e2, t2) {
        e2.tail = new HC(t2, e2.tail, null, e2), e2.head || (e2.head = e2.tail), e2.length++;
      }
      function WC(e2, t2) {
        e2.head = new HC(t2, null, e2.head, e2), e2.tail || (e2.tail = e2.head), e2.length++;
      }
      function HC(e2, t2, r2, n2) {
        if (!(this instanceof HC))
          return new HC(e2, t2, r2, n2);
        this.list = n2, this.value = e2, t2 ? (t2.next = this, this.prev = t2) : this.prev = null, r2 ? (r2.prev = this, this.next = r2) : this.next = null;
      }
      UC.Node = HC, UC.create = UC, UC.prototype.removeNode = function(e2) {
        if (e2.list !== this)
          throw new Error("removing node which does not belong to this list");
        var t2 = e2.next, r2 = e2.prev;
        return t2 && (t2.prev = r2), r2 && (r2.next = t2), e2 === this.head && (this.head = t2), e2 === this.tail && (this.tail = r2), e2.list.length--, e2.next = null, e2.prev = null, e2.list = null, t2;
      }, UC.prototype.unshiftNode = function(e2) {
        if (e2 !== this.head) {
          e2.list && e2.list.removeNode(e2);
          var t2 = this.head;
          e2.list = this, e2.next = t2, t2 && (t2.prev = e2), this.head = e2, this.tail || (this.tail = e2), this.length++;
        }
      }, UC.prototype.pushNode = function(e2) {
        if (e2 !== this.tail) {
          e2.list && e2.list.removeNode(e2);
          var t2 = this.tail;
          e2.list = this, e2.prev = t2, t2 && (t2.next = e2), this.tail = e2, this.head || (this.head = e2), this.length++;
        }
      }, UC.prototype.push = function() {
        for (var e2 = 0, t2 = arguments.length; e2 < t2; e2++)
          VC(this, arguments[e2]);
        return this.length;
      }, UC.prototype.unshift = function() {
        for (var e2 = 0, t2 = arguments.length; e2 < t2; e2++)
          WC(this, arguments[e2]);
        return this.length;
      }, UC.prototype.pop = function() {
        if (this.tail) {
          var e2 = this.tail.value;
          return this.tail = this.tail.prev, this.tail ? this.tail.next = null : this.head = null, this.length--, e2;
        }
      }, UC.prototype.shift = function() {
        if (this.head) {
          var e2 = this.head.value;
          return this.head = this.head.next, this.head ? this.head.prev = null : this.tail = null, this.length--, e2;
        }
      }, UC.prototype.forEach = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = this.head, n2 = 0; r2 !== null; n2++)
          e2.call(t2, r2.value, n2, this), r2 = r2.next;
      }, UC.prototype.forEachReverse = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = this.tail, n2 = this.length - 1; r2 !== null; n2--)
          e2.call(t2, r2.value, n2, this), r2 = r2.prev;
      }, UC.prototype.get = function(e2) {
        for (var t2 = 0, r2 = this.head; r2 !== null && t2 < e2; t2++)
          r2 = r2.next;
        if (t2 === e2 && r2 !== null)
          return r2.value;
      }, UC.prototype.getReverse = function(e2) {
        for (var t2 = 0, r2 = this.tail; r2 !== null && t2 < e2; t2++)
          r2 = r2.prev;
        if (t2 === e2 && r2 !== null)
          return r2.value;
      }, UC.prototype.map = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = new UC(), n2 = this.head; n2 !== null; )
          r2.push(e2.call(t2, n2.value, this)), n2 = n2.next;
        return r2;
      }, UC.prototype.mapReverse = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = new UC(), n2 = this.tail; n2 !== null; )
          r2.push(e2.call(t2, n2.value, this)), n2 = n2.prev;
        return r2;
      }, UC.prototype.reduce = function(e2, t2) {
        var r2, n2 = this.head;
        if (arguments.length > 1)
          r2 = t2;
        else {
          if (!this.head)
            throw new TypeError("Reduce of empty list with no initial value");
          n2 = this.head.next, r2 = this.head.value;
        }
        for (var s2 = 0; n2 !== null; s2++)
          r2 = e2(r2, n2.value, s2), n2 = n2.next;
        return r2;
      }, UC.prototype.reduceReverse = function(e2, t2) {
        var r2, n2 = this.tail;
        if (arguments.length > 1)
          r2 = t2;
        else {
          if (!this.tail)
            throw new TypeError("Reduce of empty list with no initial value");
          n2 = this.tail.prev, r2 = this.tail.value;
        }
        for (var s2 = this.length - 1; n2 !== null; s2--)
          r2 = e2(r2, n2.value, s2), n2 = n2.prev;
        return r2;
      }, UC.prototype.toArray = function() {
        for (var e2 = new Array(this.length), t2 = 0, r2 = this.head; r2 !== null; t2++)
          e2[t2] = r2.value, r2 = r2.next;
        return e2;
      }, UC.prototype.toArrayReverse = function() {
        for (var e2 = new Array(this.length), t2 = 0, r2 = this.tail; r2 !== null; t2++)
          e2[t2] = r2.value, r2 = r2.prev;
        return e2;
      }, UC.prototype.slice = function(e2, t2) {
        (t2 = t2 || this.length) < 0 && (t2 += this.length), (e2 = e2 || 0) < 0 && (e2 += this.length);
        var r2 = new UC();
        if (t2 < e2 || t2 < 0)
          return r2;
        e2 < 0 && (e2 = 0), t2 > this.length && (t2 = this.length);
        for (var n2 = 0, s2 = this.head; s2 !== null && n2 < e2; n2++)
          s2 = s2.next;
        for (; s2 !== null && n2 < t2; n2++, s2 = s2.next)
          r2.push(s2.value);
        return r2;
      }, UC.prototype.sliceReverse = function(e2, t2) {
        (t2 = t2 || this.length) < 0 && (t2 += this.length), (e2 = e2 || 0) < 0 && (e2 += this.length);
        var r2 = new UC();
        if (t2 < e2 || t2 < 0)
          return r2;
        e2 < 0 && (e2 = 0), t2 > this.length && (t2 = this.length);
        for (var n2 = this.length, s2 = this.tail; s2 !== null && n2 > t2; n2--)
          s2 = s2.prev;
        for (; s2 !== null && n2 > e2; n2--, s2 = s2.prev)
          r2.push(s2.value);
        return r2;
      }, UC.prototype.splice = function(e2, t2) {
        e2 > this.length && (e2 = this.length - 1), e2 < 0 && (e2 = this.length + e2);
        for (var r2 = 0, n2 = this.head; n2 !== null && r2 < e2; r2++)
          n2 = n2.next;
        var s2 = [];
        for (r2 = 0; n2 && r2 < t2; r2++)
          s2.push(n2.value), n2 = this.removeNode(n2);
        n2 === null && (n2 = this.tail), n2 !== this.head && n2 !== this.tail && (n2 = n2.prev);
        for (r2 = 0; r2 < (arguments.length <= 2 ? 0 : arguments.length - 2); r2++)
          n2 = GC(this, n2, r2 + 2 < 2 || arguments.length <= r2 + 2 ? void 0 : arguments[r2 + 2]);
        return s2;
      }, UC.prototype.reverse = function() {
        for (var e2 = this.head, t2 = this.tail, r2 = e2; r2 !== null; r2 = r2.prev) {
          var n2 = r2.prev;
          r2.prev = r2.next, r2.next = n2;
        }
        return this.head = t2, this.tail = e2, this;
      };
      try {
        !function(e2) {
          e2.prototype[Symbol.iterator] = bh.mark(function e3() {
            var t2;
            return bh.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    t2 = this.head;
                  case 1:
                    if (!t2) {
                      e4.next = 7;
                      break;
                    }
                    return e4.next = 4, t2.value;
                  case 4:
                    t2 = t2.next, e4.next = 1;
                    break;
                  case 7:
                  case "end":
                    return e4.stop();
                }
            }, e3, this);
          });
        }(UC);
      } catch (e2) {
      }
      var XC = Symbol("max"), qC = Symbol("length"), $C = Symbol("lengthCalculator"), KC = Symbol("allowStale"), zC = Symbol("maxAge"), JC = Symbol("dispose"), YC = Symbol("noDisposeOnSet"), QC = Symbol("lruList"), ZC = Symbol("cache"), eS = Symbol("updateAgeOnGet"), tS = function() {
        return 1;
      }, rS = function() {
        function e2(e3) {
          if (typeof e3 == "number" && (e3 = { max: e3 }), e3 || (e3 = {}), e3.max && (typeof e3.max != "number" || e3.max < 0))
            throw new TypeError("max must be a non-negative number");
          this[XC] = e3.max || 1 / 0;
          var t3 = e3.length || tS;
          if (this[$C] = typeof t3 != "function" ? tS : t3, this[KC] = e3.stale || false, e3.maxAge && typeof e3.maxAge != "number")
            throw new TypeError("maxAge must be a number");
          this[zC] = e3.maxAge || 0, this[JC] = e3.dispose, this[YC] = e3.noDisposeOnSet || false, this[eS] = e3.updateAgeOnGet || false, this.reset();
        }
        var t2 = e2.prototype;
        return t2.rforEach = function(e3, t3) {
          t3 = t3 || this;
          for (var r2 = this[QC].tail; r2 !== null; ) {
            var n2 = r2.prev;
            uS(this, e3, r2, t3), r2 = n2;
          }
        }, t2.forEach = function(e3, t3) {
          t3 = t3 || this;
          for (var r2 = this[QC].head; r2 !== null; ) {
            var n2 = r2.next;
            uS(this, e3, r2, t3), r2 = n2;
          }
        }, t2.keys = function() {
          return this[QC].toArray().map(function(e3) {
            return e3.key;
          });
        }, t2.values = function() {
          return this[QC].toArray().map(function(e3) {
            return e3.value;
          });
        }, t2.reset = function() {
          var e3 = this;
          this[JC] && this[QC] && this[QC].length && this[QC].forEach(function(t3) {
            return e3[JC](t3.key, t3.value);
          }), this[ZC] = new Map(), this[QC] = new MC(), this[qC] = 0;
        }, t2.dump = function() {
          var e3 = this;
          return this[QC].map(function(t3) {
            return !sS(e3, t3) && { k: t3.key, v: t3.value, e: t3.now + (t3.maxAge || 0) };
          }).toArray().filter(function(e4) {
            return e4;
          });
        }, t2.dumpLru = function() {
          return this[QC];
        }, t2.set = function(e3, t3, r2) {
          if ((r2 = r2 || this[zC]) && typeof r2 != "number")
            throw new TypeError("maxAge must be a number");
          var n2 = r2 ? Date.now() : 0, s2 = this[$C](t3, e3);
          if (this[ZC].has(e3)) {
            if (s2 > this[XC])
              return iS(this, this[ZC].get(e3)), false;
            var a2 = this[ZC].get(e3).value;
            return this[JC] && (this[YC] || this[JC](e3, a2.value)), a2.now = n2, a2.maxAge = r2, a2.value = t3, this[qC] += s2 - a2.length, a2.length = s2, this.get(e3), aS(this), true;
          }
          var i2 = new oS(e3, t3, s2, n2, r2);
          return i2.length > this[XC] ? (this[JC] && this[JC](e3, t3), false) : (this[qC] += i2.length, this[QC].unshift(i2), this[ZC].set(e3, this[QC].head), aS(this), true);
        }, t2.has = function(e3) {
          if (!this[ZC].has(e3))
            return false;
          var t3 = this[ZC].get(e3).value;
          return !sS(this, t3);
        }, t2.get = function(e3) {
          return nS(this, e3, true);
        }, t2.peek = function(e3) {
          return nS(this, e3, false);
        }, t2.pop = function() {
          var e3 = this[QC].tail;
          return e3 ? (iS(this, e3), e3.value) : null;
        }, t2.del = function(e3) {
          iS(this, this[ZC].get(e3));
        }, t2.load = function(e3) {
          this.reset();
          for (var t3 = Date.now(), r2 = e3.length - 1; r2 >= 0; r2--) {
            var n2 = e3[r2], s2 = n2.e || 0;
            if (s2 === 0)
              this.set(n2.k, n2.v);
            else {
              var a2 = s2 - t3;
              a2 > 0 && this.set(n2.k, n2.v, a2);
            }
          }
        }, t2.prune = function() {
          var e3 = this;
          this[ZC].forEach(function(t3, r2) {
            return nS(e3, r2, false);
          });
        }, n(e2, [{ key: "max", get: function() {
          return this[XC];
        }, set: function(e3) {
          if (typeof e3 != "number" || e3 < 0)
            throw new TypeError("max must be a non-negative number");
          this[XC] = e3 || 1 / 0, aS(this);
        } }, { key: "allowStale", get: function() {
          return this[KC];
        }, set: function(e3) {
          this[KC] = !!e3;
        } }, { key: "maxAge", get: function() {
          return this[zC];
        }, set: function(e3) {
          if (typeof e3 != "number")
            throw new TypeError("maxAge must be a non-negative number");
          this[zC] = e3, aS(this);
        } }, { key: "lengthCalculator", get: function() {
          return this[$C];
        }, set: function(e3) {
          var t3 = this;
          typeof e3 != "function" && (e3 = tS), e3 !== this[$C] && (this[$C] = e3, this[qC] = 0, this[QC].forEach(function(e4) {
            e4.length = t3[$C](e4.value, e4.key), t3[qC] += e4.length;
          })), aS(this);
        } }, { key: "length", get: function() {
          return this[qC];
        } }, { key: "itemCount", get: function() {
          return this[QC].length;
        } }]), e2;
      }(), nS = function(e2, t2, r2) {
        var n2 = e2[ZC].get(t2);
        if (n2) {
          var s2 = n2.value;
          if (sS(e2, s2)) {
            if (iS(e2, n2), !e2[KC])
              return;
          } else
            r2 && (e2[eS] && (n2.value.now = Date.now()), e2[QC].unshiftNode(n2));
          return s2.value;
        }
      }, sS = function(e2, t2) {
        if (!t2 || !t2.maxAge && !e2[zC])
          return false;
        var r2 = Date.now() - t2.now;
        return t2.maxAge ? r2 > t2.maxAge : e2[zC] && r2 > e2[zC];
      }, aS = function(e2) {
        if (e2[qC] > e2[XC])
          for (var t2 = e2[QC].tail; e2[qC] > e2[XC] && t2 !== null; ) {
            var r2 = t2.prev;
            iS(e2, t2), t2 = r2;
          }
      }, iS = function(e2, t2) {
        if (t2) {
          var r2 = t2.value;
          e2[JC] && e2[JC](r2.key, r2.value), e2[qC] -= r2.length, e2[ZC].delete(r2.key), e2[QC].removeNode(t2);
        }
      }, oS = function(e2, t2, r2, n2, s2) {
        this.key = e2, this.value = t2, this.length = r2, this.now = n2, this.maxAge = s2 || 0;
      }, uS = function(e2, t2, r2, n2) {
        var s2 = r2.value;
        sS(e2, s2) && (iS(e2, r2), e2[KC] || (s2 = void 0)), s2 && t2.call(n2, s2.value, s2.key, e2);
      }, lS = rS, cS = function() {
        function e2(t3, r2) {
          var n2 = this;
          if (r2 = xC(r2), t3 instanceof e2)
            return t3.loose === !!r2.loose && t3.includePrerelease === !!r2.includePrerelease ? t3 : new e2(t3.raw, r2);
          if (t3 instanceof OS)
            return this.raw = t3.value, this.set = [[t3]], this.format(), this;
          if (this.options = r2, this.loose = !!r2.loose, this.includePrerelease = !!r2.includePrerelease, this.raw = t3, this.set = t3.split(/\s*\|\|\s*/).map(function(e3) {
            return n2.parseRange(e3.trim());
          }).filter(function(e3) {
            return e3.length;
          }), !this.set.length)
            throw new TypeError("Invalid SemVer Range: " + t3);
          if (this.set.length > 1) {
            var s2 = this.set[0];
            if (this.set = this.set.filter(function(e3) {
              return !gS(e3[0]);
            }), this.set.length === 0)
              this.set = [s2];
            else if (this.set.length > 1)
              for (var a2, i2 = f(this.set); !(a2 = i2()).done; ) {
                var o2 = a2.value;
                if (o2.length === 1 && vS(o2[0])) {
                  this.set = [o2];
                  break;
                }
              }
          }
          this.format();
        }
        var t2 = e2.prototype;
        return t2.format = function() {
          return this.range = this.set.map(function(e3) {
            return e3.join(" ").trim();
          }).join("||").trim(), this.range;
        }, t2.toString = function() {
          return this.range;
        }, t2.parseRange = function(e3) {
          var t3 = this;
          e3 = e3.trim();
          var r2 = "parseRange:" + Object.keys(this.options).join(",") + ":" + e3, n2 = pS.get(r2);
          if (n2)
            return n2;
          var s2 = this.options.loose, a2 = s2 ? dS[fS.HYPHENRANGELOOSE] : dS[fS.HYPHENRANGE];
          e3 = e3.replace(a2, IS(this.options.includePrerelease)), vC("hyphen replace", e3), e3 = e3.replace(dS[fS.COMPARATORTRIM], hS), vC("comparator trim", e3, dS[fS.COMPARATORTRIM]), e3 = (e3 = (e3 = e3.replace(dS[fS.TILDETRIM], mS)).replace(dS[fS.CARETTRIM], yS)).split(/\s+/).join(" ");
          var i2 = s2 ? dS[fS.COMPARATORLOOSE] : dS[fS.COMPARATOR], o2 = e3.split(" ").map(function(e4) {
            return ES(e4, t3.options);
          }).join(" ").split(/\s+/).map(function(e4) {
            return PS(e4, t3.options);
          }).filter(this.options.loose ? function(e4) {
            return !!e4.match(i2);
          } : function() {
            return true;
          }).map(function(e4) {
            return new OS(e4, t3.options);
          });
          o2.length;
          for (var u2, l2 = new Map(), p2 = f(o2); !(u2 = p2()).done; ) {
            var d2 = u2.value;
            if (gS(d2))
              return [d2];
            l2.set(d2.value, d2);
          }
          l2.size > 1 && l2.has("") && l2.delete("");
          var h2 = c(l2.values());
          return pS.set(r2, h2), h2;
        }, t2.intersects = function(t3, r2) {
          if (!(t3 instanceof e2))
            throw new TypeError("a Range is required");
          return this.set.some(function(e3) {
            return bS(e3, r2) && t3.set.some(function(t4) {
              return bS(t4, r2) && e3.every(function(e4) {
                return t4.every(function(t5) {
                  return e4.intersects(t5, r2);
                });
              });
            });
          });
        }, t2.test = function(e3) {
          if (!e3)
            return false;
          if (typeof e3 == "string")
            try {
              e3 = new IC(e3, this.options);
            } catch (e4) {
              return false;
            }
          for (var t3 = 0; t3 < this.set.length; t3++)
            if (FS(this.set[t3], e3, this.options))
              return true;
          return false;
        }, e2;
      }(), pS = new lS({ max: 1e3 }), dS = bC.re, fS = bC.t, hS = bC.comparatorTrimReplace, mS = bC.tildeTrimReplace, yS = bC.caretTrimReplace, gS = function(e2) {
        return e2.value === "<0.0.0-0";
      }, vS = function(e2) {
        return e2.value === "";
      }, bS = function(e2, t2) {
        for (var r2 = true, n2 = e2.slice(), s2 = n2.pop(); r2 && n2.length; )
          r2 = n2.every(function(e3) {
            return s2.intersects(e3, t2);
          }), s2 = n2.pop();
        return r2;
      }, ES = function(e2, t2) {
        return vC("comp", e2, t2), e2 = wS(e2, t2), vC("caret", e2), e2 = DS(e2, t2), vC("tildes", e2), e2 = SS(e2, t2), vC("xrange", e2), e2 = jS(e2, t2), vC("stars", e2), e2;
      }, xS = function(e2) {
        return !e2 || e2.toLowerCase() === "x" || e2 === "*";
      }, DS = function(e2, t2) {
        return e2.trim().split(/\s+/).map(function(e3) {
          return AS(e3, t2);
        }).join(" ");
      }, AS = function(e2, t2) {
        var r2 = t2.loose ? dS[fS.TILDELOOSE] : dS[fS.TILDE];
        return e2.replace(r2, function(t3, r3, n2, s2, a2) {
          var i2;
          return vC("tilde", e2, t3, r3, n2, s2, a2), xS(r3) ? i2 = "" : xS(n2) ? i2 = ">=" + r3 + ".0.0 <" + (+r3 + 1) + ".0.0-0" : xS(s2) ? i2 = ">=" + r3 + "." + n2 + ".0 <" + r3 + "." + (+n2 + 1) + ".0-0" : a2 ? (vC("replaceTilde pr", a2), i2 = ">=" + r3 + "." + n2 + "." + s2 + "-" + a2 + " <" + r3 + "." + (+n2 + 1) + ".0-0") : i2 = ">=" + r3 + "." + n2 + "." + s2 + " <" + r3 + "." + (+n2 + 1) + ".0-0", vC("tilde return", i2), i2;
        });
      }, wS = function(e2, t2) {
        return e2.trim().split(/\s+/).map(function(e3) {
          return CS(e3, t2);
        }).join(" ");
      }, CS = function(e2, t2) {
        vC("caret", e2, t2);
        var r2 = t2.loose ? dS[fS.CARETLOOSE] : dS[fS.CARET], n2 = t2.includePrerelease ? "-0" : "";
        return e2.replace(r2, function(t3, r3, s2, a2, i2) {
          var o2;
          return vC("caret", e2, t3, r3, s2, a2, i2), xS(r3) ? o2 = "" : xS(s2) ? o2 = ">=" + r3 + ".0.0" + n2 + " <" + (+r3 + 1) + ".0.0-0" : xS(a2) ? o2 = r3 === "0" ? ">=" + r3 + "." + s2 + ".0" + n2 + " <" + r3 + "." + (+s2 + 1) + ".0-0" : ">=" + r3 + "." + s2 + ".0" + n2 + " <" + (+r3 + 1) + ".0.0-0" : i2 ? (vC("replaceCaret pr", i2), o2 = r3 === "0" ? s2 === "0" ? ">=" + r3 + "." + s2 + "." + a2 + "-" + i2 + " <" + r3 + "." + s2 + "." + (+a2 + 1) + "-0" : ">=" + r3 + "." + s2 + "." + a2 + "-" + i2 + " <" + r3 + "." + (+s2 + 1) + ".0-0" : ">=" + r3 + "." + s2 + "." + a2 + "-" + i2 + " <" + (+r3 + 1) + ".0.0-0") : (vC("no pr"), o2 = r3 === "0" ? s2 === "0" ? ">=" + r3 + "." + s2 + "." + a2 + n2 + " <" + r3 + "." + s2 + "." + (+a2 + 1) + "-0" : ">=" + r3 + "." + s2 + "." + a2 + n2 + " <" + r3 + "." + (+s2 + 1) + ".0-0" : ">=" + r3 + "." + s2 + "." + a2 + " <" + (+r3 + 1) + ".0.0-0"), vC("caret return", o2), o2;
        });
      }, SS = function(e2, t2) {
        return vC("replaceXRanges", e2, t2), e2.split(/\s+/).map(function(e3) {
          return TS(e3, t2);
        }).join(" ");
      }, TS = function(e2, t2) {
        e2 = e2.trim();
        var r2 = t2.loose ? dS[fS.XRANGELOOSE] : dS[fS.XRANGE];
        return e2.replace(r2, function(r3, n2, s2, a2, i2, o2) {
          vC("xRange", e2, r3, n2, s2, a2, i2, o2);
          var u2 = xS(s2), l2 = u2 || xS(a2), c2 = l2 || xS(i2), p2 = c2;
          return n2 === "=" && p2 && (n2 = ""), o2 = t2.includePrerelease ? "-0" : "", u2 ? r3 = n2 === ">" || n2 === "<" ? "<0.0.0-0" : "*" : n2 && p2 ? (l2 && (a2 = 0), i2 = 0, n2 === ">" ? (n2 = ">=", l2 ? (s2 = +s2 + 1, a2 = 0, i2 = 0) : (a2 = +a2 + 1, i2 = 0)) : n2 === "<=" && (n2 = "<", l2 ? s2 = +s2 + 1 : a2 = +a2 + 1), n2 === "<" && (o2 = "-0"), r3 = n2 + s2 + "." + a2 + "." + i2 + o2) : l2 ? r3 = ">=" + s2 + ".0.0" + o2 + " <" + (+s2 + 1) + ".0.0-0" : c2 && (r3 = ">=" + s2 + "." + a2 + ".0" + o2 + " <" + s2 + "." + (+a2 + 1) + ".0-0"), vC("xRange return", r3), r3;
        });
      }, jS = function(e2, t2) {
        return vC("replaceStars", e2, t2), e2.trim().replace(dS[fS.STAR], "");
      }, PS = function(e2, t2) {
        return vC("replaceGTE0", e2, t2), e2.trim().replace(dS[t2.includePrerelease ? fS.GTE0PRE : fS.GTE0], "");
      }, IS = function(e2) {
        return function(t2, r2, n2, s2, a2, i2, o2, u2, l2, c2, p2, d2, f2) {
          return ((r2 = xS(n2) ? "" : xS(s2) ? ">=" + n2 + ".0.0" + (e2 ? "-0" : "") : xS(a2) ? ">=" + n2 + "." + s2 + ".0" + (e2 ? "-0" : "") : i2 ? ">=" + r2 : ">=" + r2 + (e2 ? "-0" : "")) + " " + (u2 = xS(l2) ? "" : xS(c2) ? "<" + (+l2 + 1) + ".0.0-0" : xS(p2) ? "<" + l2 + "." + (+c2 + 1) + ".0-0" : d2 ? "<=" + l2 + "." + c2 + "." + p2 + "-" + d2 : e2 ? "<" + l2 + "." + c2 + "." + (+p2 + 1) + "-0" : "<=" + u2)).trim();
        };
      }, FS = function(e2, t2, r2) {
        for (var n2 = 0; n2 < e2.length; n2++)
          if (!e2[n2].test(t2))
            return false;
        if (t2.prerelease.length && !r2.includePrerelease) {
          for (var s2 = 0; s2 < e2.length; s2++)
            if (vC(e2[s2].semver), e2[s2].semver !== OS.ANY && e2[s2].semver.prerelease.length > 0) {
              var a2 = e2[s2].semver;
              if (a2.major === t2.major && a2.minor === t2.minor && a2.patch === t2.patch)
                return true;
            }
          return false;
        }
        return true;
      }, kS = Symbol("SemVer ANY"), OS = function() {
        function e2(t3, r2) {
          if (r2 = xC(r2), t3 instanceof e2) {
            if (t3.loose === !!r2.loose)
              return t3;
            t3 = t3.value;
          }
          vC("comparator", t3, r2), this.options = r2, this.loose = !!r2.loose, this.parse(t3), this.semver === kS ? this.value = "" : this.value = this.operator + this.semver.version, vC("comp", this);
        }
        var t2 = e2.prototype;
        return t2.parse = function(e3) {
          var t3 = this.options.loose ? RS[NS.COMPARATORLOOSE] : RS[NS.COMPARATOR], r2 = e3.match(t3);
          if (!r2)
            throw new TypeError("Invalid comparator: " + e3);
          this.operator = r2[1] !== void 0 ? r2[1] : "", this.operator === "=" && (this.operator = ""), r2[2] ? this.semver = new IC(r2[2], this.options.loose) : this.semver = kS;
        }, t2.toString = function() {
          return this.value;
        }, t2.test = function(e3) {
          if (vC("Comparator.test", e3, this.options.loose), this.semver === kS || e3 === kS)
            return true;
          if (typeof e3 == "string")
            try {
              e3 = new IC(e3, this.options);
            } catch (e4) {
              return false;
            }
          return LC(e3, this.operator, this.semver, this.options);
        }, t2.intersects = function(t3, r2) {
          if (!(t3 instanceof e2))
            throw new TypeError("a Comparator is required");
          if (r2 && typeof r2 == "object" || (r2 = { loose: !!r2, includePrerelease: false }), this.operator === "")
            return this.value === "" || new cS(t3.value, r2).test(this.value);
          if (t3.operator === "")
            return t3.value === "" || new cS(this.value, r2).test(t3.semver);
          var n2 = !(this.operator !== ">=" && this.operator !== ">" || t3.operator !== ">=" && t3.operator !== ">"), s2 = !(this.operator !== "<=" && this.operator !== "<" || t3.operator !== "<=" && t3.operator !== "<"), a2 = this.semver.version === t3.semver.version, i2 = !(this.operator !== ">=" && this.operator !== "<=" || t3.operator !== ">=" && t3.operator !== "<="), o2 = LC(this.semver, "<", t3.semver, r2) && (this.operator === ">=" || this.operator === ">") && (t3.operator === "<=" || t3.operator === "<"), u2 = LC(this.semver, ">", t3.semver, r2) && (this.operator === "<=" || this.operator === "<") && (t3.operator === ">=" || t3.operator === ">");
          return n2 || s2 || a2 && i2 || o2 || u2;
        }, n(e2, null, [{ key: "ANY", get: function() {
          return kS;
        } }]), e2;
      }(), RS = bC.re, NS = bC.t;
      OS.ANY, OS.ANY;
      bC.re, bC.src, bC.t;
      var BS = zt(function(e2, t2) {
        var r2;
        t2 = e2.exports = p2, r2 = typeof ar == "object" && ar.env && ar.env.NODE_DEBUG && /\bsemver\b/i.test(ar.env.NODE_DEBUG) ? function() {
          var e3 = Array.prototype.slice.call(arguments, 0);
          e3.unshift("SEMVER"), console.log.apply(console, e3);
        } : function() {
        }, t2.SEMVER_SPEC_VERSION = "2.0.0";
        var n2 = Number.MAX_SAFE_INTEGER || 9007199254740991, s2 = t2.re = [], a2 = t2.src = [], i2 = t2.tokens = {}, o2 = 0;
        function u2(e3) {
          i2[e3] = o2++;
        }
        u2("NUMERICIDENTIFIER"), a2[i2.NUMERICIDENTIFIER] = "0|[1-9]\\d*", u2("NUMERICIDENTIFIERLOOSE"), a2[i2.NUMERICIDENTIFIERLOOSE] = "[0-9]+", u2("NONNUMERICIDENTIFIER"), a2[i2.NONNUMERICIDENTIFIER] = "\\d*[a-zA-Z-][a-zA-Z0-9-]*", u2("MAINVERSION"), a2[i2.MAINVERSION] = "(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")", u2("MAINVERSIONLOOSE"), a2[i2.MAINVERSIONLOOSE] = "(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")", u2("PRERELEASEIDENTIFIER"), a2[i2.PRERELEASEIDENTIFIER] = "(?:" + a2[i2.NUMERICIDENTIFIER] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASEIDENTIFIERLOOSE"), a2[i2.PRERELEASEIDENTIFIERLOOSE] = "(?:" + a2[i2.NUMERICIDENTIFIERLOOSE] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASE"), a2[i2.PRERELEASE] = "(?:-(" + a2[i2.PRERELEASEIDENTIFIER] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIER] + ")*))", u2("PRERELEASELOOSE"), a2[i2.PRERELEASELOOSE] = "(?:-?(" + a2[i2.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIERLOOSE] + ")*))", u2("BUILDIDENTIFIER"), a2[i2.BUILDIDENTIFIER] = "[0-9A-Za-z-]+", u2("BUILD"), a2[i2.BUILD] = "(?:\\+(" + a2[i2.BUILDIDENTIFIER] + "(?:\\." + a2[i2.BUILDIDENTIFIER] + ")*))", u2("FULL"), u2("FULLPLAIN"), a2[i2.FULLPLAIN] = "v?" + a2[i2.MAINVERSION] + a2[i2.PRERELEASE] + "?" + a2[i2.BUILD] + "?", a2[i2.FULL] = "^" + a2[i2.FULLPLAIN] + "$", u2("LOOSEPLAIN"), a2[i2.LOOSEPLAIN] = "[v=\\s]*" + a2[i2.MAINVERSIONLOOSE] + a2[i2.PRERELEASELOOSE] + "?" + a2[i2.BUILD] + "?", u2("LOOSE"), a2[i2.LOOSE] = "^" + a2[i2.LOOSEPLAIN] + "$", u2("GTLT"), a2[i2.GTLT] = "((?:<|>)?=?)", u2("XRANGEIDENTIFIERLOOSE"), a2[i2.XRANGEIDENTIFIERLOOSE] = a2[i2.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*", u2("XRANGEIDENTIFIER"), a2[i2.XRANGEIDENTIFIER] = a2[i2.NUMERICIDENTIFIER] + "|x|X|\\*", u2("XRANGEPLAIN"), a2[i2.XRANGEPLAIN] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:" + a2[i2.PRERELEASE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGEPLAINLOOSE"), a2[i2.XRANGEPLAINLOOSE] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:" + a2[i2.PRERELEASELOOSE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGE"), a2[i2.XRANGE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAIN] + "$", u2("XRANGELOOSE"), a2[i2.XRANGELOOSE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COERCE"), a2[i2.COERCE] = "(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])", u2("COERCERTL"), s2[i2.COERCERTL] = new RegExp(a2[i2.COERCE], "g"), u2("LONETILDE"), a2[i2.LONETILDE] = "(?:~>?)", u2("TILDETRIM"), a2[i2.TILDETRIM] = "(\\s*)" + a2[i2.LONETILDE] + "\\s+", s2[i2.TILDETRIM] = new RegExp(a2[i2.TILDETRIM], "g");
        u2("TILDE"), a2[i2.TILDE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAIN] + "$", u2("TILDELOOSE"), a2[i2.TILDELOOSE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("LONECARET"), a2[i2.LONECARET] = "(?:\\^)", u2("CARETTRIM"), a2[i2.CARETTRIM] = "(\\s*)" + a2[i2.LONECARET] + "\\s+", s2[i2.CARETTRIM] = new RegExp(a2[i2.CARETTRIM], "g");
        u2("CARET"), a2[i2.CARET] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAIN] + "$", u2("CARETLOOSE"), a2[i2.CARETLOOSE] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COMPARATORLOOSE"), a2[i2.COMPARATORLOOSE] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + ")$|^$", u2("COMPARATOR"), a2[i2.COMPARATOR] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.FULLPLAIN] + ")$|^$", u2("COMPARATORTRIM"), a2[i2.COMPARATORTRIM] = "(\\s*)" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + "|" + a2[i2.XRANGEPLAIN] + ")", s2[i2.COMPARATORTRIM] = new RegExp(a2[i2.COMPARATORTRIM], "g");
        u2("HYPHENRANGE"), a2[i2.HYPHENRANGE] = "^\\s*(" + a2[i2.XRANGEPLAIN] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAIN] + ")\\s*$", u2("HYPHENRANGELOOSE"), a2[i2.HYPHENRANGELOOSE] = "^\\s*(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s*$", u2("STAR"), a2[i2.STAR] = "(<|>)?=?\\s*\\*";
        for (var l2 = 0; l2 < o2; l2++)
          r2(l2, a2[l2]), s2[l2] || (s2[l2] = new RegExp(a2[l2]));
        function c2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2)
            return e3;
          if (typeof e3 != "string")
            return null;
          if (e3.length > 256)
            return null;
          if (!(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]).test(e3))
            return null;
          try {
            return new p2(e3, t3);
          } catch (e4) {
            return null;
          }
        }
        function p2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2) {
            if (e3.loose === t3.loose)
              return e3;
            e3 = e3.version;
          } else if (typeof e3 != "string")
            throw new TypeError("Invalid Version: " + e3);
          if (e3.length > 256)
            throw new TypeError("version is longer than 256 characters");
          if (!(this instanceof p2))
            return new p2(e3, t3);
          r2("SemVer", e3, t3), this.options = t3, this.loose = !!t3.loose;
          var a3 = e3.trim().match(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]);
          if (!a3)
            throw new TypeError("Invalid Version: " + e3);
          if (this.raw = e3, this.major = +a3[1], this.minor = +a3[2], this.patch = +a3[3], this.major > n2 || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > n2 || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > n2 || this.patch < 0)
            throw new TypeError("Invalid patch version");
          a3[4] ? this.prerelease = a3[4].split(".").map(function(e4) {
            if (/^[0-9]+$/.test(e4)) {
              var t4 = +e4;
              if (t4 >= 0 && t4 < n2)
                return t4;
            }
            return e4;
          }) : this.prerelease = [], this.build = a3[5] ? a3[5].split(".") : [], this.format();
        }
        t2.parse = c2, t2.valid = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 ? r3.version : null;
        }, t2.clean = function(e3, t3) {
          var r3 = c2(e3.trim().replace(/^[=v]+/, ""), t3);
          return r3 ? r3.version : null;
        }, t2.SemVer = p2, p2.prototype.format = function() {
          return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version;
        }, p2.prototype.toString = function() {
          return this.version;
        }, p2.prototype.compare = function(e3) {
          return r2("SemVer.compare", this.version, this.options, e3), e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.compareMain(e3) || this.comparePre(e3);
        }, p2.prototype.compareMain = function(e3) {
          return e3 instanceof p2 || (e3 = new p2(e3, this.options)), f2(this.major, e3.major) || f2(this.minor, e3.minor) || f2(this.patch, e3.patch);
        }, p2.prototype.comparePre = function(e3) {
          if (e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.prerelease.length && !e3.prerelease.length)
            return -1;
          if (!this.prerelease.length && e3.prerelease.length)
            return 1;
          if (!this.prerelease.length && !e3.prerelease.length)
            return 0;
          var t3 = 0;
          do {
            var n3 = this.prerelease[t3], s3 = e3.prerelease[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.compareBuild = function(e3) {
          e3 instanceof p2 || (e3 = new p2(e3, this.options));
          var t3 = 0;
          do {
            var n3 = this.build[t3], s3 = e3.build[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.inc = function(e3, t3) {
          switch (e3) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t3);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t3);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "prerelease":
              this.prerelease.length === 0 && this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "major":
              this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              this.prerelease.length === 0 && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (this.prerelease.length === 0)
                this.prerelease = [0];
              else {
                for (var r3 = this.prerelease.length; --r3 >= 0; )
                  typeof this.prerelease[r3] == "number" && (this.prerelease[r3]++, r3 = -2);
                r3 === -1 && this.prerelease.push(0);
              }
              t3 && (this.prerelease[0] === t3 ? isNaN(this.prerelease[1]) && (this.prerelease = [t3, 0]) : this.prerelease = [t3, 0]);
              break;
            default:
              throw new Error("invalid increment argument: " + e3);
          }
          return this.format(), this.raw = this.version, this;
        }, t2.inc = function(e3, t3, r3, n3) {
          typeof r3 == "string" && (n3 = r3, r3 = void 0);
          try {
            return new p2(e3, r3).inc(t3, n3).version;
          } catch (e4) {
            return null;
          }
        }, t2.diff = function(e3, t3) {
          if (g2(e3, t3))
            return null;
          var r3 = c2(e3), n3 = c2(t3), s3 = "";
          if (r3.prerelease.length || n3.prerelease.length) {
            s3 = "pre";
            var a3 = "prerelease";
          }
          for (var i3 in r3)
            if ((i3 === "major" || i3 === "minor" || i3 === "patch") && r3[i3] !== n3[i3])
              return s3 + i3;
          return a3;
        }, t2.compareIdentifiers = f2;
        var d2 = /^[0-9]+$/;
        function f2(e3, t3) {
          var r3 = d2.test(e3), n3 = d2.test(t3);
          return r3 && n3 && (e3 = +e3, t3 = +t3), e3 === t3 ? 0 : r3 && !n3 ? -1 : n3 && !r3 ? 1 : e3 < t3 ? -1 : 1;
        }
        function h2(e3, t3, r3) {
          return new p2(e3, r3).compare(new p2(t3, r3));
        }
        function m2(e3, t3, r3) {
          return h2(e3, t3, r3) > 0;
        }
        function y2(e3, t3, r3) {
          return h2(e3, t3, r3) < 0;
        }
        function g2(e3, t3, r3) {
          return h2(e3, t3, r3) === 0;
        }
        function v2(e3, t3, r3) {
          return h2(e3, t3, r3) !== 0;
        }
        function b2(e3, t3, r3) {
          return h2(e3, t3, r3) >= 0;
        }
        function E2(e3, t3, r3) {
          return h2(e3, t3, r3) <= 0;
        }
        function x2(e3, t3, r3, n3) {
          switch (t3) {
            case "===":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 === r3;
            case "!==":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 !== r3;
            case "":
            case "=":
            case "==":
              return g2(e3, r3, n3);
            case "!=":
              return v2(e3, r3, n3);
            case ">":
              return m2(e3, r3, n3);
            case ">=":
              return b2(e3, r3, n3);
            case "<":
              return y2(e3, r3, n3);
            case "<=":
              return E2(e3, r3, n3);
            default:
              throw new TypeError("Invalid operator: " + t3);
          }
        }
        function D2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof D2) {
            if (e3.loose === !!t3.loose)
              return e3;
            e3 = e3.value;
          }
          if (!(this instanceof D2))
            return new D2(e3, t3);
          r2("comparator", e3, t3), this.options = t3, this.loose = !!t3.loose, this.parse(e3), this.semver === A2 ? this.value = "" : this.value = this.operator + this.semver.version, r2("comp", this);
        }
        t2.rcompareIdentifiers = function(e3, t3) {
          return f2(t3, e3);
        }, t2.major = function(e3, t3) {
          return new p2(e3, t3).major;
        }, t2.minor = function(e3, t3) {
          return new p2(e3, t3).minor;
        }, t2.patch = function(e3, t3) {
          return new p2(e3, t3).patch;
        }, t2.compare = h2, t2.compareLoose = function(e3, t3) {
          return h2(e3, t3, true);
        }, t2.compareBuild = function(e3, t3, r3) {
          var n3 = new p2(e3, r3), s3 = new p2(t3, r3);
          return n3.compare(s3) || n3.compareBuild(s3);
        }, t2.rcompare = function(e3, t3, r3) {
          return h2(t3, e3, r3);
        }, t2.sort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(e4, n3, r3);
          });
        }, t2.rsort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(n3, e4, r3);
          });
        }, t2.gt = m2, t2.lt = y2, t2.eq = g2, t2.neq = v2, t2.gte = b2, t2.lte = E2, t2.cmp = x2, t2.Comparator = D2;
        var A2 = {};
        function w2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof w2)
            return e3.loose === !!t3.loose && e3.includePrerelease === !!t3.includePrerelease ? e3 : new w2(e3.raw, t3);
          if (e3 instanceof D2)
            return new w2(e3.value, t3);
          if (!(this instanceof w2))
            return new w2(e3, t3);
          if (this.options = t3, this.loose = !!t3.loose, this.includePrerelease = !!t3.includePrerelease, this.raw = e3, this.set = e3.split(/\s*\|\|\s*/).map(function(e4) {
            return this.parseRange(e4.trim());
          }, this).filter(function(e4) {
            return e4.length;
          }), !this.set.length)
            throw new TypeError("Invalid SemVer Range: " + e3);
          this.format();
        }
        function C2(e3, t3) {
          for (var r3 = true, n3 = e3.slice(), s3 = n3.pop(); r3 && n3.length; )
            r3 = n3.every(function(e4) {
              return s3.intersects(e4, t3);
            }), s3 = n3.pop();
          return r3;
        }
        function S2(e3) {
          return !e3 || e3.toLowerCase() === "x" || e3 === "*";
        }
        function T2(e3, t3, r3, n3, s3, a3, i3, o3, u3, l3, c3, p3, d3) {
          return ((t3 = S2(r3) ? "" : S2(n3) ? ">=" + r3 + ".0.0" : S2(s3) ? ">=" + r3 + "." + n3 + ".0" : ">=" + t3) + " " + (o3 = S2(u3) ? "" : S2(l3) ? "<" + (+u3 + 1) + ".0.0" : S2(c3) ? "<" + u3 + "." + (+l3 + 1) + ".0" : p3 ? "<=" + u3 + "." + l3 + "." + c3 + "-" + p3 : "<=" + o3)).trim();
        }
        function j2(e3, t3, n3) {
          for (var s3 = 0; s3 < e3.length; s3++)
            if (!e3[s3].test(t3))
              return false;
          if (t3.prerelease.length && !n3.includePrerelease) {
            for (s3 = 0; s3 < e3.length; s3++)
              if (r2(e3[s3].semver), e3[s3].semver !== A2 && e3[s3].semver.prerelease.length > 0) {
                var a3 = e3[s3].semver;
                if (a3.major === t3.major && a3.minor === t3.minor && a3.patch === t3.patch)
                  return true;
              }
            return false;
          }
          return true;
        }
        function P2(e3, t3, r3) {
          try {
            t3 = new w2(t3, r3);
          } catch (e4) {
            return false;
          }
          return t3.test(e3);
        }
        function I2(e3, t3, r3, n3) {
          var s3, a3, i3, o3, u3;
          switch (e3 = new p2(e3, n3), t3 = new w2(t3, n3), r3) {
            case ">":
              s3 = m2, a3 = E2, i3 = y2, o3 = ">", u3 = ">=";
              break;
            case "<":
              s3 = y2, a3 = b2, i3 = m2, o3 = "<", u3 = "<=";
              break;
            default:
              throw new TypeError('Must provide a hilo val of "<" or ">"');
          }
          if (P2(e3, t3, n3))
            return false;
          for (var l3 = 0; l3 < t3.set.length; ++l3) {
            var c3 = t3.set[l3], d3 = null, f3 = null;
            if (c3.forEach(function(e4) {
              e4.semver === A2 && (e4 = new D2(">=0.0.0")), d3 = d3 || e4, f3 = f3 || e4, s3(e4.semver, d3.semver, n3) ? d3 = e4 : i3(e4.semver, f3.semver, n3) && (f3 = e4);
            }), d3.operator === o3 || d3.operator === u3)
              return false;
            if ((!f3.operator || f3.operator === o3) && a3(e3, f3.semver))
              return false;
            if (f3.operator === u3 && i3(e3, f3.semver))
              return false;
          }
          return true;
        }
        D2.prototype.parse = function(e3) {
          var t3 = this.options.loose ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], r3 = e3.match(t3);
          if (!r3)
            throw new TypeError("Invalid comparator: " + e3);
          this.operator = r3[1] !== void 0 ? r3[1] : "", this.operator === "=" && (this.operator = ""), r3[2] ? this.semver = new p2(r3[2], this.options.loose) : this.semver = A2;
        }, D2.prototype.toString = function() {
          return this.value;
        }, D2.prototype.test = function(e3) {
          if (r2("Comparator.test", e3, this.options.loose), this.semver === A2 || e3 === A2)
            return true;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          return x2(e3, this.operator, this.semver, this.options);
        }, D2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof D2))
            throw new TypeError("a Comparator is required");
          var r3;
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), this.operator === "")
            return this.value === "" || (r3 = new w2(e3.value, t3), P2(this.value, r3, t3));
          if (e3.operator === "")
            return e3.value === "" || (r3 = new w2(this.value, t3), P2(e3.semver, r3, t3));
          var n3 = !(this.operator !== ">=" && this.operator !== ">" || e3.operator !== ">=" && e3.operator !== ">"), s3 = !(this.operator !== "<=" && this.operator !== "<" || e3.operator !== "<=" && e3.operator !== "<"), a3 = this.semver.version === e3.semver.version, i3 = !(this.operator !== ">=" && this.operator !== "<=" || e3.operator !== ">=" && e3.operator !== "<="), o3 = x2(this.semver, "<", e3.semver, t3) && (this.operator === ">=" || this.operator === ">") && (e3.operator === "<=" || e3.operator === "<"), u3 = x2(this.semver, ">", e3.semver, t3) && (this.operator === "<=" || this.operator === "<") && (e3.operator === ">=" || e3.operator === ">");
          return n3 || s3 || a3 && i3 || o3 || u3;
        }, t2.Range = w2, w2.prototype.format = function() {
          return this.range = this.set.map(function(e3) {
            return e3.join(" ").trim();
          }).join("||").trim(), this.range;
        }, w2.prototype.toString = function() {
          return this.range;
        }, w2.prototype.parseRange = function(e3) {
          var t3 = this.options.loose;
          e3 = e3.trim();
          var n3 = t3 ? s2[i2.HYPHENRANGELOOSE] : s2[i2.HYPHENRANGE];
          e3 = e3.replace(n3, T2), r2("hyphen replace", e3), e3 = e3.replace(s2[i2.COMPARATORTRIM], "$1$2$3"), r2("comparator trim", e3, s2[i2.COMPARATORTRIM]), e3 = (e3 = (e3 = e3.replace(s2[i2.TILDETRIM], "$1~")).replace(s2[i2.CARETTRIM], "$1^")).split(/\s+/).join(" ");
          var a3 = t3 ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], o3 = e3.split(" ").map(function(e4) {
            return function(e5, t4) {
              return r2("comp", e5, t4), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    r2("caret", e8, t6);
                    var n4 = t6.loose ? s2[i2.CARETLOOSE] : s2[i2.CARET];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("caret", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = n5 === "0" ? ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + ".0 <" + (+n5 + 1) + ".0.0" : i3 ? (r2("replaceCaret pr", i3), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + (+n5 + 1) + ".0.0") : (r2("no pr"), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + " <" + (+n5 + 1) + ".0.0"), r2("caret return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("caret", e5), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    var n4 = t6.loose ? s2[i2.TILDELOOSE] : s2[i2.TILDE];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("tilde", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : i3 ? (r2("replaceTilde pr", i3), o4 = ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0") : o4 = ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0", r2("tilde return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("tildes", e5), e5 = function(e6, t5) {
                return r2("replaceXRanges", e6, t5), e6.split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    e8 = e8.trim();
                    var n4 = t6.loose ? s2[i2.XRANGELOOSE] : s2[i2.XRANGE];
                    return e8.replace(n4, function(n5, s3, a4, i3, o4, u3) {
                      r2("xRange", e8, n5, s3, a4, i3, o4, u3);
                      var l3 = S2(a4), c3 = l3 || S2(i3), p3 = c3 || S2(o4), d3 = p3;
                      return s3 === "=" && d3 && (s3 = ""), u3 = t6.includePrerelease ? "-0" : "", l3 ? n5 = s3 === ">" || s3 === "<" ? "<0.0.0-0" : "*" : s3 && d3 ? (c3 && (i3 = 0), o4 = 0, s3 === ">" ? (s3 = ">=", c3 ? (a4 = +a4 + 1, i3 = 0, o4 = 0) : (i3 = +i3 + 1, o4 = 0)) : s3 === "<=" && (s3 = "<", c3 ? a4 = +a4 + 1 : i3 = +i3 + 1), n5 = s3 + a4 + "." + i3 + "." + o4 + u3) : c3 ? n5 = ">=" + a4 + ".0.0" + u3 + " <" + (+a4 + 1) + ".0.0" + u3 : p3 && (n5 = ">=" + a4 + "." + i3 + ".0" + u3 + " <" + a4 + "." + (+i3 + 1) + ".0" + u3), r2("xRange return", n5), n5;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("xrange", e5), e5 = function(e6, t5) {
                return r2("replaceStars", e6, t5), e6.trim().replace(s2[i2.STAR], "");
              }(e5, t4), r2("stars", e5), e5;
            }(e4, this.options);
          }, this).join(" ").split(/\s+/);
          return this.options.loose && (o3 = o3.filter(function(e4) {
            return !!e4.match(a3);
          })), o3 = o3.map(function(e4) {
            return new D2(e4, this.options);
          }, this);
        }, w2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof w2))
            throw new TypeError("a Range is required");
          return this.set.some(function(r3) {
            return C2(r3, t3) && e3.set.some(function(e4) {
              return C2(e4, t3) && r3.every(function(r4) {
                return e4.every(function(e5) {
                  return r4.intersects(e5, t3);
                });
              });
            });
          });
        }, t2.toComparators = function(e3, t3) {
          return new w2(e3, t3).set.map(function(e4) {
            return e4.map(function(e5) {
              return e5.value;
            }).join(" ").trim().split(" ");
          });
        }, w2.prototype.test = function(e3) {
          if (!e3)
            return false;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          for (var t3 = 0; t3 < this.set.length; t3++)
            if (j2(this.set[t3], e3, this.options))
              return true;
          return false;
        }, t2.satisfies = P2, t2.maxSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== -1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== 1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minVersion = function(e3, t3) {
          e3 = new w2(e3, t3);
          var r3 = new p2("0.0.0");
          if (e3.test(r3))
            return r3;
          if (r3 = new p2("0.0.0-0"), e3.test(r3))
            return r3;
          r3 = null;
          for (var n3 = 0; n3 < e3.set.length; ++n3) {
            e3.set[n3].forEach(function(e4) {
              var t4 = new p2(e4.semver.version);
              switch (e4.operator) {
                case ">":
                  t4.prerelease.length === 0 ? t4.patch++ : t4.prerelease.push(0), t4.raw = t4.format();
                case "":
                case ">=":
                  r3 && !m2(r3, t4) || (r3 = t4);
                  break;
                case "<":
                case "<=":
                  break;
                default:
                  throw new Error("Unexpected operation: " + e4.operator);
              }
            });
          }
          if (r3 && e3.test(r3))
            return r3;
          return null;
        }, t2.validRange = function(e3, t3) {
          try {
            return new w2(e3, t3).range || "*";
          } catch (e4) {
            return null;
          }
        }, t2.ltr = function(e3, t3, r3) {
          return I2(e3, t3, "<", r3);
        }, t2.gtr = function(e3, t3, r3) {
          return I2(e3, t3, ">", r3);
        }, t2.outside = I2, t2.prerelease = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 && r3.prerelease.length ? r3.prerelease : null;
        }, t2.intersects = function(e3, t3, r3) {
          return e3 = new w2(e3, r3), t3 = new w2(t3, r3), e3.intersects(t3);
        }, t2.coerce = function(e3, t3) {
          if (e3 instanceof p2)
            return e3;
          typeof e3 == "number" && (e3 = String(e3));
          if (typeof e3 != "string")
            return null;
          var r3 = null;
          if ((t3 = t3 || {}).rtl) {
            for (var n3; (n3 = s2[i2.COERCERTL].exec(e3)) && (!r3 || r3.index + r3[0].length !== e3.length); )
              r3 && n3.index + n3[0].length === r3.index + r3[0].length || (r3 = n3), s2[i2.COERCERTL].lastIndex = n3.index + n3[1].length + n3[2].length;
            s2[i2.COERCERTL].lastIndex = -1;
          } else
            r3 = e3.match(s2[i2.COERCE]);
          if (r3 === null)
            return null;
          return c2(r3[2] + "." + (r3[3] || "0") + "." + (r3[4] || "0"), t3);
        };
      }, "/$$rollup_base$$/packages/babel-helper-compilation-targets/node_modules/semver/node_modules/semver-BABEL_8_BREAKING-false"), _S = { safari: "tp" }, LS = { and_chr: "chrome", and_ff: "firefox", android: "android", chrome: "chrome", edge: "edge", firefox: "firefox", ie: "ie", ie_mob: "ie", ios_saf: "ios", node: "node", op_mob: "opera", opera: "opera", safari: "safari", samsung: "samsung" }, MS = /^(\d+|\d+.\d+)$/, US = new mC("@babel/helper-compilation-targets");
      function GS(e2, t2) {
        return e2 && BS.lt(e2, t2) ? e2 : t2;
      }
      function VS(e2) {
        if (typeof e2 == "string" && BS.valid(e2))
          return e2;
        US.invariant(typeof e2 == "number" || typeof e2 == "string" && MS.test(e2), "'" + e2 + "' is not a valid version");
        for (var t2 = e2.toString().split("."); t2.length < 3; )
          t2.push("0");
        return t2.join(".");
      }
      function WS(e2, t2) {
        var r2 = _S[t2];
        return !!r2 && r2 === e2.toString().toLowerCase();
      }
      function HS(e2, t2, r2) {
        var n2 = _S[r2], s2 = [e2, t2].some(function(e3) {
          return e3 === n2;
        });
        return s2 ? e2 === s2 ? t2 : e2 || t2 : GS(e2, t2);
      }
      function XS(e2, t2) {
        var r2 = e2[t2];
        return r2 || t2 !== "android" ? r2 : e2.chrome;
      }
      var qS = { node: "node", chrome: "chrome", opera: "opera", edge: "edge", firefox: "firefox", safari: "safari", ie: "ie", ios: "ios", android: "android", electron: "electron", samsung: "samsung" };
      function $S(e2) {
        if (typeof e2 != "string")
          return e2;
        var t2 = [BS.major(e2)], r2 = BS.minor(e2), n2 = BS.patch(e2);
        return (r2 || n2) && t2.push(r2), n2 && t2.push(n2), t2.join(".");
      }
      function KS(e2) {
        return Object.keys(e2).reduce(function(t2, r2) {
          var n2 = e2[r2];
          return typeof n2 == "string" && _S[r2] !== n2 && (n2 = $S(n2)), t2[r2] = n2, t2;
        }, {});
      }
      function zS(e2, t2, r2) {
        var n2 = r2[e2] || {};
        return Object.keys(t2).reduce(function(e3, r3) {
          var s2 = XS(n2, r3), a2 = t2[r3];
          if (s2) {
            var i2 = WS(s2, r3);
            WS(a2, r3) || !i2 && !BS.lt(a2.toString(), VS(s2)) || (e3[r3] = $S(a2));
          } else
            e3[r3] = $S(a2);
          return e3;
        }, {});
      }
      var JS = { "proposal-class-static-block": { chrome: "91", electron: "13.0" }, "proposal-private-property-in-object": { chrome: "91", firefox: "90", electron: "13.0" }, "proposal-class-properties": { chrome: "74", opera: "62", edge: "79", firefox: "90", safari: "14.1", node: "12", samsung: "11", electron: "6.0" }, "proposal-private-methods": { chrome: "84", opera: "70", edge: "84", firefox: "90", safari: "15", node: "14.6", electron: "10.0" }, "proposal-numeric-separator": { chrome: "75", opera: "62", edge: "79", firefox: "70", safari: "13", node: "12.5", ios: "13", samsung: "11", electron: "6.0" }, "proposal-logical-assignment-operators": { chrome: "85", opera: "71", edge: "85", firefox: "79", safari: "14", node: "15", ios: "14", electron: "10.0" }, "proposal-nullish-coalescing-operator": { chrome: "80", opera: "67", edge: "80", firefox: "72", safari: "13.1", node: "14", ios: "13.4", samsung: "13", electron: "8.0" }, "proposal-optional-chaining": { firefox: "74", safari: "13.1", ios: "13.4" }, "proposal-json-strings": { chrome: "66", opera: "53", edge: "79", firefox: "62", safari: "12", node: "10", ios: "12", samsung: "9", electron: "3.0" }, "proposal-optional-catch-binding": { chrome: "66", opera: "53", edge: "79", firefox: "58", safari: "11.1", node: "10", ios: "11.3", samsung: "9", electron: "3.0" }, "transform-parameters": { chrome: "49", opera: "36", edge: "18", firefox: "53", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "proposal-async-generator-functions": { chrome: "63", opera: "50", edge: "79", firefox: "57", safari: "12", node: "10", ios: "12", samsung: "8", electron: "3.0" }, "proposal-object-rest-spread": { chrome: "60", opera: "47", edge: "79", firefox: "55", safari: "11.1", node: "8.3", ios: "11.3", samsung: "8", electron: "2.0" }, "transform-dotall-regex": { chrome: "62", opera: "49", edge: "79", firefox: "78", safari: "11.1", node: "8.10", ios: "11.3", samsung: "8", electron: "3.0" }, "proposal-unicode-property-regex": { chrome: "64", opera: "51", edge: "79", firefox: "78", safari: "11.1", node: "10", ios: "11.3", samsung: "9", electron: "3.0" }, "transform-named-capturing-groups-regex": { chrome: "64", opera: "51", edge: "79", firefox: "78", safari: "11.1", node: "10", ios: "11.3", samsung: "9", electron: "3.0" }, "transform-async-to-generator": { chrome: "55", opera: "42", edge: "15", firefox: "52", safari: "11", node: "7.6", ios: "11", samsung: "6", electron: "1.6" }, "transform-exponentiation-operator": { chrome: "52", opera: "39", edge: "14", firefox: "52", safari: "10.1", node: "7", ios: "10.3", samsung: "6", electron: "1.3" }, "transform-template-literals": { chrome: "41", opera: "28", edge: "13", firefox: "34", safari: "13", node: "4", ios: "13", samsung: "3.4", electron: "0.21" }, "transform-literals": { chrome: "44", opera: "31", edge: "12", firefox: "53", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "transform-function-name": { chrome: "51", opera: "38", edge: "79", firefox: "53", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "transform-arrow-functions": { chrome: "47", opera: "34", edge: "13", firefox: "45", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.36" }, "transform-block-scoped-functions": { chrome: "41", opera: "28", edge: "12", firefox: "46", safari: "10", node: "4", ie: "11", ios: "10", samsung: "3.4", electron: "0.21" }, "transform-classes": { chrome: "46", opera: "33", edge: "13", firefox: "45", safari: "10", node: "5", ios: "10", samsung: "5", electron: "0.36" }, "transform-object-super": { chrome: "46", opera: "33", edge: "13", firefox: "45", safari: "10", node: "5", ios: "10", samsung: "5", electron: "0.36" }, "transform-shorthand-properties": { chrome: "43", opera: "30", edge: "12", firefox: "33", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.27" }, "transform-duplicate-keys": { chrome: "42", opera: "29", edge: "12", firefox: "34", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.25" }, "transform-computed-properties": { chrome: "44", opera: "31", edge: "12", firefox: "34", safari: "7.1", node: "4", ios: "8", samsung: "4", electron: "0.30" }, "transform-for-of": { chrome: "51", opera: "38", edge: "15", firefox: "53", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "transform-sticky-regex": { chrome: "49", opera: "36", edge: "13", firefox: "3", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "transform-unicode-escapes": { chrome: "44", opera: "31", edge: "12", firefox: "53", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "transform-unicode-regex": { chrome: "50", opera: "37", edge: "13", firefox: "46", safari: "12", node: "6", ios: "12", samsung: "5", electron: "1.1" }, "transform-spread": { chrome: "46", opera: "33", edge: "13", firefox: "45", safari: "10", node: "5", ios: "10", samsung: "5", electron: "0.36" }, "transform-destructuring": { chrome: "51", opera: "38", edge: "15", firefox: "53", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "transform-block-scoping": { chrome: "49", opera: "36", edge: "14", firefox: "51", safari: "11", node: "6", ios: "11", samsung: "5", electron: "0.37" }, "transform-typeof-symbol": { chrome: "38", opera: "25", edge: "12", firefox: "36", safari: "9", node: "0.12", ios: "9", samsung: "3", electron: "0.20" }, "transform-new-target": { chrome: "46", opera: "33", edge: "14", firefox: "41", safari: "10", node: "5", ios: "10", samsung: "5", electron: "0.36" }, "transform-regenerator": { chrome: "50", opera: "37", edge: "13", firefox: "53", safari: "10", node: "6", ios: "10", samsung: "5", electron: "1.1" }, "transform-member-expression-literals": { chrome: "7", opera: "12", edge: "12", firefox: "2", safari: "5.1", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "transform-property-literals": { chrome: "7", opera: "12", edge: "12", firefox: "2", safari: "5.1", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "transform-reserved-words": { chrome: "13", opera: "10.50", edge: "12", firefox: "2", safari: "3.1", node: "0.10", ie: "9", android: "4.4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "proposal-export-namespace-from": { chrome: "72", and_chr: "72", edge: "79", firefox: "80", and_ff: "80", node: "13.2", opera: "60", op_mob: "51", samsung: "11.0", android: "72", electron: "5.0" } };
      function YS(e2, t2, r2) {
        var n2, s2, a2, i2 = r2 === void 0 ? {} : r2, o2 = i2.compatData, u2 = o2 === void 0 ? JS : o2, l2 = i2.includes, c2 = i2.excludes;
        return (c2 == null || !c2.has(e2)) && (!(l2 == null || !l2.has(e2)) || (n2 = t2, s2 = u2[e2], !((a2 = Object.keys(n2)).length !== 0 && a2.filter(function(e3) {
          var t3 = XS(s2, e3);
          if (!t3)
            return true;
          var r3 = n2[e3];
          if (WS(r3, e3))
            return false;
          if (WS(t3, e3))
            return true;
          if (!BS.valid(r3.toString()))
            throw new Error('Invalid version passed for target "' + e3 + '": "' + r3 + '". Versions must be in semver format (major.minor.patch)');
          return BS.gt(VS(t3), r3.toString());
        }).length === 0)));
      }
      var QS = yC["es6.module"], ZS = new mC("@babel/helper-compilation-targets");
      function eT(e2) {
        return typeof e2 == "string" || Array.isArray(e2) && e2.every(function(e3) {
          return typeof e3 == "string";
        });
      }
      function tT(e2, t2) {
        try {
          return VS(t2);
        } catch (r2) {
          throw new Error(ZS.formatMessage("'" + t2 + "' is not a valid value for 'targets." + e2 + "'."));
        }
      }
      var rT = { __default: function(e2, t2) {
        return [e2, WS(t2, e2) ? t2.toLowerCase() : tT(e2, t2)];
      }, node: function(e2, t2) {
        return [e2, t2 === true || t2 === "current" ? ar.versions.node : tT(e2, t2)];
      } };
      function nT(e2) {
        return function(e3) {
          return e3.reduce(function(e4, t2) {
            var r2 = l(t2.split(" "), 2), n2 = r2[0], s2 = r2[1], a2 = LS[n2];
            if (!a2)
              return e4;
            try {
              var i2 = s2.split("-")[0].toLowerCase(), o2 = WS(i2, n2);
              if (!e4[a2])
                return e4[a2] = o2 ? i2 : VS(i2), e4;
              var u2 = e4[a2], c2 = WS(u2, n2);
              if (c2 && o2)
                e4[a2] = HS(u2, i2, n2);
              else if (c2)
                e4[a2] = VS(i2);
              else if (!c2 && !o2) {
                var p2 = VS(i2);
                e4[a2] = GS(u2, p2);
              }
            } catch (e5) {
            }
            return e4;
          }, {});
        }(dC(e2, { mobileToDesktop: true }));
      }
      function sT(e2, t2) {
        var r2;
        e2 === void 0 && (e2 = {}), t2 === void 0 && (t2 = {});
        var n2 = e2, s2 = n2.browsers, a2 = n2.esmodules, i2 = t2.configPath, o2 = i2 === void 0 ? "." : i2;
        !function(e3) {
          ZS.invariant(e3 === void 0 || eT(e3), "'" + String(e3) + "' is not a valid browserslist query");
        }(s2);
        var u2, c2, p2 = function(e3) {
          for (var t3 = Object.keys(qS), r3 = 0, n3 = Object.keys(e3); r3 < n3.length; r3++) {
            var s3 = n3[r3];
            if (!(s3 in qS))
              throw new Error(ZS.formatMessage("'" + s3 + "' is not a valid target\n- Did you mean '" + hC(s3, t3) + "'?"));
          }
          return e3;
        }(function(e3) {
          var t3 = Object.assign({}, e3);
          return delete t3.esmodules, delete t3.browsers, t3;
        }(e2)), d2 = !!s2 || Object.keys(p2).length > 0, h2 = !t2.ignoreBrowserslistConfig && !d2;
        if (!s2 && h2 && (s2 = dC.loadConfig({ config: t2.configFile, path: o2, env: t2.browserslistEnv })) == null && (s2 = []), !a2 || a2 === "intersect" && (r2 = s2) != null && r2.length || (s2 = Object.keys(QS).map(function(e3) {
          return e3 + " >= " + QS[e3];
        }).join(", "), a2 = false), s2) {
          var m2 = nT(s2);
          if (a2 === "intersect")
            for (var y2 = 0, g2 = Object.keys(m2); y2 < g2.length; y2++) {
              var v2 = g2[y2], b2 = m2[v2];
              QS[v2] ? m2[v2] = (u2 = b2, c2 = VS(QS[v2]), HS(u2, c2, v2) === u2 ? c2 : u2) : delete m2[v2];
            }
          p2 = Object.assign(m2, p2);
        }
        for (var E2, x2, D2 = {}, A2 = [], w2 = f(Object.keys(p2).sort()); !(E2 = w2()).done; ) {
          var C2, S2 = E2.value, T2 = p2[S2];
          typeof T2 == "number" && T2 % 1 != 0 && A2.push({ target: S2, value: T2 });
          var j2 = l(((C2 = rT[S2]) != null ? C2 : rT.__default)(S2, T2), 2), P2 = j2[0], I2 = j2[1];
          I2 && (D2[P2] = I2);
        }
        return (x2 = A2).length && (console.warn("Warning, the following targets are using a decimal version:\n"), x2.forEach(function(e3) {
          var t3 = e3.target, r3 = e3.value;
          return console.warn("  " + t3 + ": " + r3);
        }), console.warn("\nWe recommend using a string for minor/patch versions to avoid numbers like 6.10\ngetting parsed as 6.1, which can lead to unexpected behavior.\n")), D2;
      }
      function aT(e2, t2) {
        var r2 = e2.targets;
        return (typeof r2 == "string" || Array.isArray(r2)) && (r2 = { browsers: r2 }), r2 && r2.esmodules && (r2 = Object.assign({}, r2, { esmodules: "intersect" })), sT(r2, { ignoreBrowserslistConfig: true, browserslistEnv: e2.browserslistEnv });
      }
      var iT = bh.mark(pT), oT = bh.mark(xT), uT = bh.mark(DT), lT = bh.mark(AT), cT = bh.mark(wT);
      function pT(e2) {
        return bh.wrap(function(t2) {
          for (; ; )
            switch (t2.prev = t2.next) {
              case 0:
                return t2.abrupt("return", e2);
              case 1:
              case "end":
                return t2.stop();
            }
        }, iT);
      }
      function dT(e2, t2) {
        return typeof e2.browserslistConfigFile == "string" && (e2.browserslistConfigFile = void e2.browserslistConfigFile), e2;
      }
      function fT(e2, t2, r2) {
        var n2 = t2.plugins, s2 = t2.presets, a2 = t2.passPerPreset;
        return { options: dT(t2), plugins: n2 ? function() {
          return vT(n2, e2)(r2);
        } : function() {
          return pT([]);
        }, presets: s2 ? function() {
          return yT(s2, e2)(r2)(!!a2);
        } : function() {
          return pT([]);
        } };
      }
      function hT(e2, t2, r2) {
        var n2, s2;
        return { options: dT(t2), plugins: bh.mark(function s3() {
          return bh.wrap(function(s4) {
            for (; ; )
              switch (s4.prev = s4.next) {
                case 0:
                  if (n2) {
                    s4.next = 3;
                    break;
                  }
                  return s4.delegateYield(DT(t2.plugins || [], e2, r2), "t0", 2);
                case 2:
                  n2 = s4.t0;
                case 3:
                  return s4.abrupt("return", n2);
                case 4:
                case "end":
                  return s4.stop();
              }
          }, s3);
        }), presets: bh.mark(function n3() {
          return bh.wrap(function(n4) {
            for (; ; )
              switch (n4.prev = n4.next) {
                case 0:
                  if (s2) {
                    n4.next = 3;
                    break;
                  }
                  return n4.delegateYield(xT(t2.presets || [], e2, r2, !!t2.passPerPreset), "t0", 2);
                case 2:
                  s2 = n4.t0;
                case 3:
                  return n4.abrupt("return", s2);
                case 4:
                case "end":
                  return n4.stop();
              }
          }, n3);
        }) };
      }
      var mT = new WeakMap(), yT = uw(function(e2, t2) {
        var r2 = t2.using(function(e3) {
          return e3;
        });
        return cw(function(t3) {
          return lw(bh.mark(function n2(s2) {
            var a2;
            return bh.wrap(function(n3) {
              for (; ; )
                switch (n3.prev = n3.next) {
                  case 0:
                    return n3.delegateYield(xT(e2, r2, t3, s2), "t0", 1);
                  case 1:
                    return a2 = n3.t0, n3.abrupt("return", a2.map(function(e3) {
                      return ET(mT, e3);
                    }));
                  case 3:
                  case "end":
                    return n3.stop();
                }
            }, n2);
          }));
        });
      }), gT = new WeakMap(), vT = uw(function(e2, t2) {
        var r2 = t2.using(function(e3) {
          return e3;
        });
        return lw(bh.mark(function t3(n2) {
          var s2;
          return bh.wrap(function(t4) {
            for (; ; )
              switch (t4.prev = t4.next) {
                case 0:
                  return t4.delegateYield(DT(e2, r2, n2), "t0", 1);
                case 1:
                  return s2 = t4.t0, t4.abrupt("return", s2.map(function(e3) {
                    return ET(gT, e3);
                  }));
                case 3:
                case "end":
                  return t4.stop();
              }
          }, t3);
        }));
      }), bT = {};
      function ET(e2, t2) {
        var r2 = t2.value, n2 = t2.options, s2 = n2 === void 0 ? bT : n2;
        if (s2 === false)
          return t2;
        var a2 = e2.get(r2);
        a2 || (a2 = new WeakMap(), e2.set(r2, a2));
        var i2 = a2.get(s2);
        if (i2 || (i2 = [], a2.set(s2, i2)), i2.indexOf(t2) === -1) {
          var o2 = i2.filter(function(e3) {
            return n3 = t2, (r3 = e3).name === n3.name && r3.value === n3.value && r3.options === n3.options && r3.dirname === n3.dirname && r3.alias === n3.alias && r3.ownPass === n3.ownPass && (r3.file && r3.file.request) === (n3.file && n3.file.request) && (r3.file && r3.file.resolved) === (n3.file && n3.file.resolved);
            var r3, n3;
          });
          if (o2.length > 0)
            return o2[0];
          i2.push(t2);
        }
        return t2;
      }
      function xT(e2, t2, r2, n2) {
        return bh.wrap(function(s2) {
          for (; ; )
            switch (s2.prev = s2.next) {
              case 0:
                return s2.delegateYield(AT("preset", e2, t2, r2, n2), "t0", 1);
              case 1:
                return s2.abrupt("return", s2.t0);
              case 2:
              case "end":
                return s2.stop();
            }
        }, oT);
      }
      function DT(e2, t2, r2) {
        return bh.wrap(function(n2) {
          for (; ; )
            switch (n2.prev = n2.next) {
              case 0:
                return n2.delegateYield(AT("plugin", e2, t2, r2), "t0", 1);
              case 1:
                return n2.abrupt("return", n2.t0);
              case 2:
              case "end":
                return n2.stop();
            }
        }, uT);
      }
      function AT(e2, t2, r2, n2, s2) {
        var a2;
        return bh.wrap(function(i2) {
          for (; ; )
            switch (i2.prev = i2.next) {
              case 0:
                return i2.delegateYield(RA.all(t2.map(function(t3, a3) {
                  return wT(t3, r2, { type: e2, alias: n2 + "$" + a3, ownPass: !!s2 });
                })), "t0", 1);
              case 1:
                return CT(a2 = i2.t0), i2.abrupt("return", a2);
              case 4:
              case "end":
                return i2.stop();
            }
        }, lT);
      }
      function wT(e2, t2, r2) {
        var n2, s2, a2, i2, o2, u2, c2, p2, d2, f2, h2, m2, y2, g2;
        return bh.wrap(function(v2) {
          for (; ; )
            switch (v2.prev = v2.next) {
              case 0:
                if (n2 = r2.type, s2 = r2.alias, a2 = r2.ownPass, !(i2 = PT(e2))) {
                  v2.next = 4;
                  break;
                }
                return v2.abrupt("return", i2);
              case 4:
                if (c2 = e2, Array.isArray(c2) && (c2.length === 3 ? (p2 = l(c2, 3), c2 = p2[0], u2 = p2[1], o2 = p2[2]) : (d2 = l(c2, 2), c2 = d2[0], u2 = d2[1])), f2 = void 0, h2 = null, typeof c2 != "string") {
                  v2.next = 18;
                  break;
                }
                if (typeof n2 == "string") {
                  v2.next = 11;
                  break;
                }
                throw new Error("To resolve a string-based item, the type of item must be given");
              case 11:
                return m2 = n2 === "plugin" ? CA : SA, y2 = c2, v2.delegateYield(m2(c2, t2), "t0", 14);
              case 14:
                g2 = v2.t0, h2 = g2.filepath, c2 = g2.value, f2 = { request: y2, resolved: h2 };
              case 18:
                if (c2) {
                  v2.next = 20;
                  break;
                }
                throw new Error("Unexpected falsy value: " + String(c2));
              case 20:
                if (typeof c2 != "object" || !c2.__esModule) {
                  v2.next = 26;
                  break;
                }
                if (!c2.default) {
                  v2.next = 25;
                  break;
                }
                c2 = c2.default, v2.next = 26;
                break;
              case 25:
                throw new Error("Must export a default export when using ES6 modules.");
              case 26:
                if (typeof c2 == "object" || typeof c2 == "function") {
                  v2.next = 28;
                  break;
                }
                throw new Error("Unsupported format: " + typeof c2 + ". Expected an object or a function.");
              case 28:
                if (h2 === null || typeof c2 != "object" || !c2) {
                  v2.next = 30;
                  break;
                }
                throw new Error("Plugin/Preset files are not allowed to export objects, only functions. In " + h2);
              case 30:
                return v2.abrupt("return", { name: o2, alias: h2 || s2, value: c2, options: u2, dirname: t2, ownPass: a2, file: f2 });
              case 31:
              case "end":
                return v2.stop();
            }
        }, cT);
      }
      function CT(e2) {
        for (var t2, r2 = new Map(), n2 = function() {
          var n3 = t2.value;
          if (typeof n3.value != "function")
            return "continue";
          var s3 = r2.get(n3.value);
          if (s3 || (s3 = new Set(), r2.set(n3.value, s3)), s3.has(n3.name)) {
            var a2 = e2.filter(function(e3) {
              return e3.value === n3.value;
            });
            throw new Error(["Duplicate plugin/preset detected.", "If you'd like to use two separate instances of a plugin,", "they need separate names, e.g.", "", "  plugins: [", "    ['some-plugin', {}],", "    ['some-plugin', {}, 'some unique name'],", "  ]", "", "Duplicates detected are:", "" + JSON.stringify(a2, null, 2)].join("\n"));
          }
          s3.add(n3.name);
        }, s2 = f(e2); !(t2 = s2()).done; )
          n2();
      }
      var ST = bh.mark(jT);
      function TT(e2) {
        return new FT(e2);
      }
      function jT(e2, t2) {
        var r2, n2, s2, a2, i2;
        return bh.wrap(function(o2) {
          for (; ; )
            switch (o2.prev = o2.next) {
              case 0:
                return n2 = (r2 = t2 === void 0 ? {} : t2).dirname, s2 = n2 === void 0 ? "." : n2, a2 = r2.type, o2.delegateYield(wT(e2, nx.resolve(s2), { type: a2, alias: "programmatic item" }), "t0", 2);
              case 2:
                return i2 = o2.t0, o2.abrupt("return", TT(i2));
              case 4:
              case "end":
                return o2.stop();
            }
        }, ST);
      }
      function PT(e2) {
        if (e2 != null && e2[IT])
          return e2._descriptor;
      }
      var IT = Symbol.for("@babel/core@7 - ConfigItem"), FT = function(e2) {
        this._descriptor = void 0, this[IT] = true, this.value = void 0, this.options = void 0, this.dirname = void 0, this.name = void 0, this.file = void 0, this._descriptor = e2, Object.defineProperty(this, "_descriptor", { enumerable: false }), Object.defineProperty(this, IT, { enumerable: false }), this.value = this._descriptor.value, this.options = this._descriptor.options, this.dirname = this._descriptor.dirname, this.name = this._descriptor.name, this.file = this._descriptor.file ? { request: this._descriptor.file.request, resolved: this._descriptor.file.resolved } : void 0, Object.freeze(this);
      };
      Object.freeze(FT.prototype);
      var kT = 1e3, OT = 60 * kT, RT = 60 * OT, NT = 24 * RT, BT = 7 * NT, _T = 365.25 * NT, LT = function(e2, t2) {
        t2 = t2 || {};
        var r2 = typeof e2;
        if (r2 === "string" && e2.length > 0)
          return function(e3) {
            if ((e3 = String(e3)).length > 100)
              return;
            var t3 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e3);
            if (!t3)
              return;
            var r3 = parseFloat(t3[1]);
            switch ((t3[2] || "ms").toLowerCase()) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case "y":
                return r3 * _T;
              case "weeks":
              case "week":
              case "w":
                return r3 * BT;
              case "days":
              case "day":
              case "d":
                return r3 * NT;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case "h":
                return r3 * RT;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case "m":
                return r3 * OT;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case "s":
                return r3 * kT;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case "ms":
                return r3;
              default:
                return;
            }
          }(e2);
        if (r2 === "number" && isFinite(e2))
          return t2.long ? function(e3) {
            var t3 = Math.abs(e3);
            if (t3 >= NT)
              return MT(e3, t3, NT, "day");
            if (t3 >= RT)
              return MT(e3, t3, RT, "hour");
            if (t3 >= OT)
              return MT(e3, t3, OT, "minute");
            if (t3 >= kT)
              return MT(e3, t3, kT, "second");
            return e3 + " ms";
          }(e2) : function(e3) {
            var t3 = Math.abs(e3);
            if (t3 >= NT)
              return Math.round(e3 / NT) + "d";
            if (t3 >= RT)
              return Math.round(e3 / RT) + "h";
            if (t3 >= OT)
              return Math.round(e3 / OT) + "m";
            if (t3 >= kT)
              return Math.round(e3 / kT) + "s";
            return e3 + "ms";
          }(e2);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e2));
      };
      function MT(e2, t2, r2, n2) {
        var s2 = t2 >= 1.5 * r2;
        return Math.round(e2 / r2) + " " + n2 + (s2 ? "s" : "");
      }
      var UT = function(e2) {
        function t2(e3) {
          var n3, s2, a2, i2 = null;
          function o2() {
            for (var e4 = arguments.length, r3 = new Array(e4), s3 = 0; s3 < e4; s3++)
              r3[s3] = arguments[s3];
            if (o2.enabled) {
              var a3 = o2, i3 = Number(new Date()), u2 = i3 - (n3 || i3);
              a3.diff = u2, a3.prev = n3, a3.curr = i3, n3 = i3, r3[0] = t2.coerce(r3[0]), typeof r3[0] != "string" && r3.unshift("%O");
              var l2 = 0;
              r3[0] = r3[0].replace(/%([a-zA-Z%])/g, function(e5, n4) {
                if (e5 === "%%")
                  return "%";
                l2++;
                var s4 = t2.formatters[n4];
                if (typeof s4 == "function") {
                  var i4 = r3[l2];
                  e5 = s4.call(a3, i4), r3.splice(l2, 1), l2--;
                }
                return e5;
              }), t2.formatArgs.call(a3, r3);
              var c2 = a3.log || t2.log;
              c2.apply(a3, r3);
            }
          }
          return o2.namespace = e3, o2.useColors = t2.useColors(), o2.color = t2.selectColor(e3), o2.extend = r2, o2.destroy = t2.destroy, Object.defineProperty(o2, "enabled", { enumerable: true, configurable: false, get: function() {
            return i2 !== null ? i2 : (s2 !== t2.namespaces && (s2 = t2.namespaces, a2 = t2.enabled(e3)), a2);
          }, set: function(e4) {
            i2 = e4;
          } }), typeof t2.init == "function" && t2.init(o2), o2;
        }
        function r2(e3, r3) {
          var n3 = t2(this.namespace + (r3 === void 0 ? ":" : r3) + e3);
          return n3.log = this.log, n3;
        }
        function n2(e3) {
          return e3.toString().substring(2, e3.toString().length - 2).replace(/\.\*\?$/, "*");
        }
        return t2.debug = t2, t2.default = t2, t2.coerce = function(e3) {
          if (e3 instanceof Error)
            return e3.stack || e3.message;
          return e3;
        }, t2.disable = function() {
          var e3 = [].concat(c(t2.names.map(n2)), c(t2.skips.map(n2).map(function(e4) {
            return "-" + e4;
          }))).join(",");
          return t2.enable(""), e3;
        }, t2.enable = function(e3) {
          var r3;
          t2.save(e3), t2.namespaces = e3, t2.names = [], t2.skips = [];
          var n3 = (typeof e3 == "string" ? e3 : "").split(/[\s,]+/), s2 = n3.length;
          for (r3 = 0; r3 < s2; r3++)
            n3[r3] && ((e3 = n3[r3].replace(/\*/g, ".*?"))[0] === "-" ? t2.skips.push(new RegExp("^" + e3.substr(1) + "$")) : t2.names.push(new RegExp("^" + e3 + "$")));
        }, t2.enabled = function(e3) {
          if (e3[e3.length - 1] === "*")
            return true;
          var r3, n3;
          for (r3 = 0, n3 = t2.skips.length; r3 < n3; r3++)
            if (t2.skips[r3].test(e3))
              return false;
          for (r3 = 0, n3 = t2.names.length; r3 < n3; r3++)
            if (t2.names[r3].test(e3))
              return true;
          return false;
        }, t2.humanize = LT, t2.destroy = function() {
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }, Object.keys(e2).forEach(function(r3) {
          t2[r3] = e2[r3];
        }), t2.names = [], t2.skips = [], t2.formatters = {}, t2.selectColor = function(e3) {
          for (var r3 = 0, n3 = 0; n3 < e3.length; n3++)
            r3 = (r3 << 5) - r3 + e3.charCodeAt(n3), r3 |= 0;
          return t2.colors[Math.abs(r3) % t2.colors.length];
        }, t2.enable(t2.load()), t2;
      }, GT = zt(function(e2, t2) {
        var r2;
        t2.formatArgs = function(t3) {
          if (t3[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t3[0] + (this.useColors ? "%c " : " ") + "+" + e2.exports.humanize(this.diff), !this.useColors)
            return;
          var r3 = "color: " + this.color;
          t3.splice(1, 0, r3, "color: inherit");
          var n2 = 0, s2 = 0;
          t3[0].replace(/%[a-zA-Z%]/g, function(e3) {
            e3 !== "%%" && (n2++, e3 === "%c" && (s2 = n2));
          }), t3.splice(s2, 0, r3);
        }, t2.save = function(e3) {
          try {
            e3 ? t2.storage.setItem("debug", e3) : t2.storage.removeItem("debug");
          } catch (e4) {
          }
        }, t2.load = function() {
          var e3;
          try {
            e3 = t2.storage.getItem("debug");
          } catch (e4) {
          }
          !e3 && ar !== void 0 && "env" in ar && (e3 = ar.env.DEBUG);
          return e3;
        }, t2.useColors = function() {
          if (typeof window != "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs))
            return true;
          if (typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
            return false;
          return typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
        }, t2.storage = function() {
          try {
            return localStorage;
          } catch (e3) {
          }
        }(), t2.destroy = (r2 = false, function() {
          r2 || (r2 = true, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
        }), t2.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t2.log = console.debug || console.log || function() {
        }, e2.exports = UT(t2), e2.exports.formatters.j = function(e3) {
          try {
            return JSON.stringify(e3);
          } catch (e4) {
            return "[UnexpectedJSONParseError]: " + e4.message;
          }
        };
      }, "/$$rollup_base$$/packages/babel-core/node_modules/debug/src"), VT = { auxiliaryComment: { message: "Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`" }, blacklist: { message: "Put the specific transforms you want in the `plugins` option" }, breakConfig: { message: "This is not a necessary option in Babel 6" }, experimental: { message: "Put the specific transforms you want in the `plugins` option" }, externalHelpers: { message: "Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/" }, extra: { message: "" }, jsxPragma: { message: "use the `pragma` option in the `react-jsx` plugin. Check out http://babeljs.io/docs/plugins/transform-react-jsx/" }, loose: { message: "Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option." }, metadataUsedHelpers: { message: "Not required anymore as this is enabled by default" }, modules: { message: "Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules" }, nonStandard: { message: "Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.io/docs/plugins/preset-react/" }, optional: { message: "Put the specific transforms you want in the `plugins` option" }, sourceMapName: { message: "The `sourceMapName` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.file` themselves." }, stage: { message: "Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets" }, whitelist: { message: "Put the specific transforms you want in the `plugins` option" }, resolveModuleSource: { version: 6, message: "Use `babel-plugin-module-resolver@3`'s 'resolvePath' options" }, metadata: { version: 6, message: "Generated plugin metadata is always included in the output result" }, sourceMapTarget: { version: 6, message: "The `sourceMapTarget` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.file` themselves." } };
      function WT(e2) {
        switch (e2.type) {
          case "root":
            return "";
          case "env":
            return WT(e2.parent) + '.env["' + e2.name + '"]';
          case "overrides":
            return WT(e2.parent) + ".overrides[" + e2.index + "]";
          case "option":
            return WT(e2.parent) + "." + e2.name;
          case "access":
            return WT(e2.parent) + "[" + JSON.stringify(e2.name) + "]";
          default:
            throw new Error("Assertion failure: Unknown type " + e2.type);
        }
      }
      function HT(e2, t2) {
        return { type: "access", name: t2, parent: e2 };
      }
      function XT(e2, t2) {
        if (t2 !== void 0 && typeof t2 != "boolean" && t2 !== "inline" && t2 !== "both")
          throw new Error(WT(e2) + ' must be a boolean, "inline", "both", or undefined');
        return t2;
      }
      function qT(e2, t2) {
        if (t2 !== void 0 && typeof t2 != "string")
          throw new Error(WT(e2) + " must be a string, or undefined");
        return t2;
      }
      function $T(e2, t2) {
        if (t2 !== void 0 && typeof t2 != "function")
          throw new Error(WT(e2) + " must be a function, or undefined");
        return t2;
      }
      function KT(e2, t2) {
        if (t2 !== void 0 && typeof t2 != "boolean")
          throw new Error(WT(e2) + " must be a boolean, or undefined");
        return t2;
      }
      function zT(e2, t2) {
        if (t2 !== void 0 && (typeof t2 != "object" || Array.isArray(t2) || !t2))
          throw new Error(WT(e2) + " must be an object, or undefined");
        return t2;
      }
      function JT(e2, t2) {
        if (t2 != null && !Array.isArray(t2))
          throw new Error(WT(e2) + " must be an array, or undefined");
        return t2;
      }
      function YT(e2, t2) {
        var r2 = JT(e2, t2);
        return r2 && r2.forEach(function(t3, r3) {
          return function(e3, t4) {
            if (typeof t4 != "string" && typeof t4 != "function" && !(t4 instanceof RegExp))
              throw new Error(WT(e3) + " must be an array of string/Function/RegExp values, or undefined");
            return t4;
          }(HT(e2, r3), t3);
        }), r2;
      }
      function QT(e2, t2) {
        if (t2 === void 0)
          return t2;
        if (Array.isArray(t2))
          t2.forEach(function(t3, r2) {
            if (!ZT(t3))
              throw new Error(WT(HT(e2, r2)) + " must be a string/Function/RegExp.");
          });
        else if (!ZT(t2))
          throw new Error(WT(e2) + " must be a string/Function/RegExp, or an array of those");
        return t2;
      }
      function ZT(e2) {
        return typeof e2 == "string" || typeof e2 == "function" || e2 instanceof RegExp;
      }
      function ej(e2, t2) {
        if (t2 !== void 0 && typeof t2 != "boolean" && typeof t2 != "string")
          throw new Error(WT(e2) + " must be a undefined, a boolean, a string, got " + JSON.stringify(t2));
        return t2;
      }
      function tj(e2, t2) {
        var r2 = JT(e2, t2);
        return r2 && r2.forEach(function(t3, r3) {
          return function(e3, t4) {
            if (Array.isArray(t4)) {
              if (t4.length === 0)
                throw new Error(WT(e3) + " must include an object");
              if (t4.length > 3)
                throw new Error(WT(e3) + " may only be a two-tuple or three-tuple");
              if (rj(HT(e3, 0), t4[0]), t4.length > 1) {
                var r4 = t4[1];
                if (r4 !== void 0 && r4 !== false && (typeof r4 != "object" || Array.isArray(r4) || r4 === null))
                  throw new Error(WT(HT(e3, 1)) + " must be an object, false, or undefined");
              }
              if (t4.length === 3) {
                var n2 = t4[2];
                if (n2 !== void 0 && typeof n2 != "string")
                  throw new Error(WT(HT(e3, 2)) + " must be a string, or undefined");
              }
            } else
              rj(e3, t4);
            return t4;
          }(HT(e2, r3), t3);
        }), r2;
      }
      function rj(e2, t2) {
        if ((typeof t2 != "object" || !t2) && typeof t2 != "string" && typeof t2 != "function")
          throw new Error(WT(e2) + " must be a string, object, function");
        return t2;
      }
      function nj(e2, t2) {
        if (t2 !== void 0 && !eT(t2))
          throw new Error(WT(e2) + " must be undefined, a string or an array of strings");
      }
      function sj(e2, t2) {
        if ((typeof t2 != "number" || Math.round(t2) !== t2) && typeof t2 != "string")
          throw new Error(WT(e2) + " must be a string or an integer number");
      }
      var aj = { cwd: qT, root: qT, rootMode: function(e2, t2) {
        if (t2 !== void 0 && t2 !== "root" && t2 !== "upward" && t2 !== "upward-optional")
          throw new Error(WT(e2) + ' must be a "root", "upward", "upward-optional" or undefined');
        return t2;
      }, configFile: ej, caller: function(e2, t2) {
        var r2 = zT(e2, t2);
        if (r2) {
          if (typeof r2.name != "string")
            throw new Error(WT(e2) + ' set but does not contain "name" property string');
          for (var n2 = 0, s2 = Object.keys(r2); n2 < s2.length; n2++) {
            var a2 = s2[n2], i2 = HT(e2, a2), o2 = r2[a2];
            if (o2 != null && typeof o2 != "boolean" && typeof o2 != "string" && typeof o2 != "number")
              throw new Error(WT(i2) + " must be null, undefined, a boolean, a string, or a number.");
          }
        }
        return t2;
      }, filename: qT, filenameRelative: qT, code: KT, ast: KT, cloneInputAst: KT, envName: qT }, ij = { babelrc: KT, babelrcRoots: function(e2, t2) {
        if (t2 === void 0 || typeof t2 == "boolean")
          return t2;
        if (Array.isArray(t2))
          t2.forEach(function(t3, r2) {
            if (!ZT(t3))
              throw new Error(WT(HT(e2, r2)) + " must be a string/Function/RegExp.");
          });
        else if (!ZT(t2))
          throw new Error(WT(e2) + " must be a undefined, a boolean, a string/Function/RegExp or an array of those, got " + JSON.stringify(t2));
        return t2;
      } }, oj = { extends: qT, ignore: YT, only: YT, targets: function(e2, t2) {
        if (eT(t2))
          return t2;
        if (typeof t2 != "object" || !t2 || Array.isArray(t2))
          throw new Error(WT(e2) + " must be a string, an array of strings or an object");
        var r2 = HT(e2, "browsers"), n2 = HT(e2, "esmodules");
        nj(r2, t2.browsers), KT(n2, t2.esmodules);
        for (var s2 = 0, a2 = Object.keys(t2); s2 < a2.length; s2++) {
          var i2 = a2[s2], o2 = t2[i2], u2 = HT(e2, i2);
          if (i2 === "esmodules")
            KT(u2, o2);
          else if (i2 === "browsers")
            nj(u2, o2);
          else {
            if (!Object.hasOwnProperty.call(qS, i2)) {
              var l2 = Object.keys(qS).join(", ");
              throw new Error(WT(u2) + " is not a valid target. Supported targets are " + l2);
            }
            sj(u2, o2);
          }
        }
        return t2;
      }, browserslistConfigFile: ej, browserslistEnv: qT }, uj = { inputSourceMap: function(e2, t2) {
        if (t2 !== void 0 && typeof t2 != "boolean" && (typeof t2 != "object" || !t2))
          throw new Error(WT(e2) + " must be a boolean, object, or undefined");
        return t2;
      }, presets: tj, plugins: tj, passPerPreset: KT, assumptions: function(e2, t2) {
        if (t2 !== void 0) {
          if (typeof t2 != "object" || t2 === null)
            throw new Error(WT(e2) + " must be an object or undefined.");
          var r2 = e2;
          do {
            r2 = r2.parent;
          } while (r2.type !== "root");
          for (var n2 = r2.source === "preset", s2 = 0, a2 = Object.keys(t2); s2 < a2.length; s2++) {
            var i2 = a2[s2], o2 = HT(e2, i2);
            if (!lj.has(i2))
              throw new Error(WT(o2) + " is not a supported assumption.");
            if (typeof t2[i2] != "boolean")
              throw new Error(WT(o2) + " must be a boolean.");
            if (n2 && t2[i2] === false)
              throw new Error(WT(o2) + " cannot be set to 'false' inside presets.");
          }
          return t2;
        }
      }, env: function(e2, t2) {
        if (e2.parent.type === "env")
          throw new Error(WT(e2) + " is not allowed inside of another .env block");
        var r2 = e2.parent, n2 = zT(e2, t2);
        if (n2)
          for (var s2 = 0, a2 = Object.keys(n2); s2 < a2.length; s2++) {
            var i2 = a2[s2], o2 = zT(HT(e2, i2), n2[i2]);
            if (o2)
              dj({ type: "env", name: i2, parent: r2 }, o2);
          }
        return n2;
      }, overrides: function(e2, t2) {
        if (e2.parent.type === "env")
          throw new Error(WT(e2) + " is not allowed inside an .env block");
        if (e2.parent.type === "overrides")
          throw new Error(WT(e2) + " is not allowed inside an .overrides block");
        var r2 = e2.parent, n2 = JT(e2, t2);
        if (n2)
          for (var s2, a2 = f(n2.entries()); !(s2 = a2()).done; ) {
            var i2 = l(s2.value, 2), o2 = i2[0], u2 = i2[1], c2 = HT(e2, o2), p2 = zT(c2, u2);
            if (!p2)
              throw new Error(WT(c2) + " must be an object");
            dj({ type: "overrides", index: o2, parent: r2 }, p2);
          }
        return n2;
      }, test: QT, include: QT, exclude: QT, retainLines: KT, comments: KT, shouldPrintComment: $T, compact: function(e2, t2) {
        if (t2 !== void 0 && typeof t2 != "boolean" && t2 !== "auto")
          throw new Error(WT(e2) + ' must be a boolean, "auto", or undefined');
        return t2;
      }, minified: KT, auxiliaryCommentBefore: qT, auxiliaryCommentAfter: qT, sourceType: function(e2, t2) {
        if (t2 !== void 0 && t2 !== "module" && t2 !== "script" && t2 !== "unambiguous")
          throw new Error(WT(e2) + ' must be "module", "script", "unambiguous", or undefined');
        return t2;
      }, wrapPluginVisitorMethod: $T, highlightCode: KT, sourceMaps: XT, sourceMap: XT, sourceFileName: qT, sourceRoot: qT, parserOpts: zT, generatorOpts: zT };
      Object.assign(uj, { getModuleId: $T, moduleRoot: qT, moduleIds: KT, moduleId: qT });
      var lj = new Set(["arrayLikeIsIterable", "constantReexports", "constantSuper", "enumerableModuleMeta", "ignoreFunctionLength", "ignoreToPrimitiveHint", "iterableIsArray", "mutableTemplateObject", "noClassCalls", "noDocumentAll", "noNewArrows", "objectRestNoSymbols", "privateFieldsAsProperties", "pureGetters", "setClassMethods", "setComputedProperties", "setPublicClassFields", "setSpreadProperties", "skipForOfIteratorClosing", "superIsCallableConstructor"]);
      function cj(e2) {
        return e2.type === "root" ? e2.source : cj(e2.parent);
      }
      function pj(e2, t2) {
        return dj({ type: "root", source: e2 }, t2);
      }
      function dj(e2, t2) {
        var r2 = cj(e2);
        return function(e3) {
          if (hj(e3, "sourceMap") && hj(e3, "sourceMaps"))
            throw new Error(".sourceMap is an alias for .sourceMaps, cannot use both");
        }(t2), Object.keys(t2).forEach(function(n2) {
          var s2 = { type: "option", name: n2, parent: e2 };
          if (r2 === "preset" && oj[n2])
            throw new Error(WT(s2) + " is not allowed in preset options");
          if (r2 !== "arguments" && aj[n2])
            throw new Error(WT(s2) + " is only allowed in root programmatic options");
          if (r2 !== "arguments" && r2 !== "configfile" && ij[n2]) {
            if (r2 === "babelrcfile" || r2 === "extendsfile")
              throw new Error(WT(s2) + ' is not allowed in .babelrc or "extends"ed files, only in root programmatic options, or babel.config.js/config file options');
            throw new Error(WT(s2) + " is only allowed in root programmatic options, or babel.config.js/config file options");
          }
          (uj[n2] || oj[n2] || ij[n2] || aj[n2] || fj)(s2, t2[n2]);
        }), t2;
      }
      function fj(e2) {
        var t2 = e2.name;
        if (VT[t2]) {
          var r2 = VT[t2], n2 = r2.message, s2 = r2.version;
          throw new Error("Using removed Babel " + (s2 === void 0 ? 5 : s2) + " option: " + WT(e2) + " - " + n2);
        }
        var a2 = new Error("Unknown option: " + WT(e2) + ". Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.");
        throw a2.code = "BABEL_UNKNOWN_OPTION", a2;
      }
      function hj(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }
      function mj(e2, t2, r2, n2) {
        if (t2 !== 0) {
          var s2 = e2[t2 - 1], a2 = e2[t2];
          s2.file && s2.options === void 0 && typeof a2.value == "object" && (n2.message += '\n- Maybe you meant to use\n"' + r2 + '": [\n  ["' + s2.file.request + '", ' + JSON.stringify(a2.value, void 0, 2) + "]\n]\nTo be a valid " + r2 + ", its name and options should be wrapped in a pair of brackets");
        }
      }
      var yj = "\\" + nx.sep, gj = "(?:" + yj + "|$)", vj = "[^" + yj + "]+", bj = "(?:" + vj + yj + ")", Ej = "(?:" + vj + gj + ")", xj = bj + "*?", Dj = bj + "*?" + Ej + "?";
      function Aj(e2) {
        return e2.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&");
      }
      function wj(e2, t2) {
        var r2 = nx.resolve(t2, e2).split(nx.sep);
        return new RegExp(["^"].concat(c(r2.map(function(e3, t3) {
          var n2 = t3 === r2.length - 1;
          return e3 === "**" ? n2 ? Dj : xj : e3 === "*" ? n2 ? Ej : bj : e3.indexOf("*.") === 0 ? vj + Aj(e3.slice(1)) + (n2 ? gj : yj) : Aj(e3) + (n2 ? gj : yj);
        }))).join(""));
      }
      var Cj = 0, Sj = 1, Tj = { title: function(e2, t2, r2) {
        var n2 = "";
        return e2 === Cj ? (n2 = "programmatic options", t2 && (n2 += " from " + t2)) : n2 = "config " + r2, n2;
      }, loc: function(e2, t2) {
        var r2 = "";
        return e2 != null && (r2 += ".overrides[" + e2 + "]"), t2 != null && (r2 += '.env["' + t2 + '"]'), r2;
      }, optionsAndDescriptors: bh.mark(function e2(t2) {
        var r2, n2, s2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return delete (r2 = Object.assign({}, t2.options)).overrides, delete r2.env, e3.t0 = c, e3.delegateYield(t2.plugins(), "t1", 5);
              case 5:
                return e3.t2 = e3.t1, (n2 = (0, e3.t0)(e3.t2)).length && (r2.plugins = n2.map(function(e4) {
                  return jj(e4);
                })), e3.t3 = c, e3.delegateYield(t2.presets(), "t4", 10);
              case 10:
                return e3.t5 = e3.t4, (s2 = (0, e3.t3)(e3.t5)).length && (r2.presets = c(s2).map(function(e4) {
                  return jj(e4);
                })), e3.abrupt("return", JSON.stringify(r2, void 0, 2));
              case 14:
              case "end":
                return e3.stop();
            }
        }, e2);
      }) };
      function jj(e2) {
        var t2, r2 = (t2 = e2.file) == null ? void 0 : t2.request;
        return r2 == null && (typeof e2.value == "object" ? r2 = e2.value : typeof e2.value == "function" && (r2 = "[Function: " + e2.value.toString().substr(0, 50) + " ... ]")), r2 == null && (r2 = "[Unknown]"), e2.options === void 0 ? r2 : e2.name == null ? [r2, e2.options] : [r2, e2.options, e2.name];
      }
      var Pj = function() {
        function e2() {
          this._stack = [];
        }
        var t2 = e2.prototype;
        return t2.configure = function(e3, t3, r2) {
          var n2 = this, s2 = r2.callerName, a2 = r2.filepath;
          return e3 ? function(e4, r3, i2) {
            n2._stack.push({ type: t3, callerName: s2, filepath: a2, content: e4, index: r3, envName: i2 });
          } : function() {
          };
        }, e2.format = bh.mark(function e3(t3) {
          var r2, n2, s2;
          return bh.wrap(function(e4) {
            for (; ; )
              switch (e4.prev = e4.next) {
                case 0:
                  return r2 = Tj.title(t3.type, t3.callerName, t3.filepath), (n2 = Tj.loc(t3.index, t3.envName)) && (r2 += " " + n2), e4.delegateYield(Tj.optionsAndDescriptors(t3.content), "t0", 4);
                case 4:
                  return s2 = e4.t0, e4.abrupt("return", r2 + "\n" + s2);
                case 6:
                case "end":
                  return e4.stop();
              }
          }, e3);
        }), t2.output = bh.mark(function t3() {
          var r2;
          return bh.wrap(function(t4) {
            for (; ; )
              switch (t4.prev = t4.next) {
                case 0:
                  if (this._stack.length !== 0) {
                    t4.next = 2;
                    break;
                  }
                  return t4.abrupt("return", "");
                case 2:
                  return t4.delegateYield(RA.all(this._stack.map(function(t5) {
                    return e2.format(t5);
                  })), "t0", 3);
                case 3:
                  return r2 = t4.t0, t4.abrupt("return", r2.join("\n\n"));
                case 5:
                case "end":
                  return t4.stop();
              }
          }, t3, this);
        }), e2;
      }(), Ij = bh.mark(Bj), Fj = bh.mark(Vj), kj = bh.mark(zj), Oj = bh.mark(aP), Rj = bh.mark(oP), Nj = GT("babel:config:config-chain");
      function Bj(e2, t2) {
        var r2;
        return bh.wrap(function(n2) {
          for (; ; )
            switch (n2.prev = n2.next) {
              case 0:
                return n2.delegateYield(_j(e2, t2), "t0", 1);
              case 1:
                if (r2 = n2.t0) {
                  n2.next = 4;
                  break;
                }
                return n2.abrupt("return", null);
              case 4:
                return n2.abrupt("return", { plugins: cP(r2.plugins), presets: cP(r2.presets), options: r2.options.map(function(e3) {
                  return lP(e3);
                }), files: new Set() });
              case 5:
              case "end":
                return n2.stop();
            }
        }, Ij);
      }
      var _j = sP({ root: function(e2) {
        return Lj(e2);
      }, env: function(e2, t2) {
        return Mj(e2)(t2);
      }, overrides: function(e2, t2) {
        return Uj(e2)(t2);
      }, overridesEnv: function(e2, t2, r2) {
        return Gj(e2)(t2)(r2);
      }, createLogger: function() {
        return function() {
        };
      } }), Lj = uw(function(e2) {
        return eP(e2, e2.alias, hT);
      }), Mj = uw(function(e2) {
        return cw(function(t2) {
          return tP(e2, e2.alias, hT, t2);
        });
      }), Uj = uw(function(e2) {
        return cw(function(t2) {
          return rP(e2, e2.alias, hT, t2);
        });
      }), Gj = uw(function(e2) {
        return cw(function(t2) {
          return cw(function(r2) {
            return nP(e2, e2.alias, hT, t2, r2);
          });
        });
      });
      function Vj(e2, t2) {
        var r2, n2, s2, a2, i2, o2, u2, l2, c2, p2, d2, f2, h2, m2, y2, g2, v2, b2, E2, x2, D2, A2, w2;
        return bh.wrap(function(C2) {
          for (; ; )
            switch (C2.prev = C2.next) {
              case 0:
                return s2 = new Pj(), C2.delegateYield($j({ options: e2, dirname: t2.cwd }, t2, void 0, s2), "t0", 2);
              case 2:
                if (a2 = C2.t0) {
                  C2.next = 5;
                  break;
                }
                return C2.abrupt("return", null);
              case 5:
                return C2.delegateYield(s2.output(), "t1", 6);
              case 6:
                if (i2 = C2.t1, typeof e2.configFile != "string") {
                  C2.next = 12;
                  break;
                }
                return C2.delegateYield(EA(e2.configFile, t2.cwd, t2.envName, t2.caller), "t2", 9);
              case 9:
                o2 = C2.t2, C2.next = 15;
                break;
              case 12:
                if (e2.configFile === false) {
                  C2.next = 15;
                  break;
                }
                return C2.delegateYield(bA(t2.root, t2.envName, t2.caller), "t3", 14);
              case 14:
                o2 = C2.t3;
              case 15:
                if (u2 = e2.babelrc, l2 = e2.babelrcRoots, c2 = t2.cwd, p2 = uP(), d2 = new Pj(), !o2) {
                  C2.next = 30;
                  break;
                }
                return f2 = Hj(o2), C2.delegateYield(zj(f2, t2, void 0, d2), "t4", 22);
              case 22:
                if (h2 = C2.t4) {
                  C2.next = 25;
                  break;
                }
                return C2.abrupt("return", null);
              case 25:
                return C2.delegateYield(d2.output(), "t5", 26);
              case 26:
                r2 = C2.t5, u2 === void 0 && (u2 = f2.options.babelrc), l2 === void 0 && (c2 = f2.dirname, l2 = f2.options.babelrcRoots), iP(p2, h2);
              case 30:
                if (g2 = false, v2 = uP(), u2 !== true && u2 !== void 0 || typeof t2.filename != "string") {
                  C2.next = 55;
                  break;
                }
                return C2.delegateYield(gA(t2.filename), "t6", 34);
              case 34:
                if (!(b2 = C2.t6) || !Wj(t2, b2, l2, c2)) {
                  C2.next = 55;
                  break;
                }
                return C2.delegateYield(vA(0, t2.envName, t2.caller), "t7", 37);
              case 37:
                if (E2 = C2.t7, m2 = E2.ignore, y2 = E2.config, m2 && v2.files.add(m2.filepath), m2 && fP(t2, m2.ignore, null, m2.dirname) && (g2 = true), !y2 || g2) {
                  C2.next = 54;
                  break;
                }
                return x2 = Xj(y2), D2 = new Pj(), C2.delegateYield(zj(x2, t2, void 0, D2), "t8", 46);
              case 46:
                if (A2 = C2.t8) {
                  C2.next = 51;
                  break;
                }
                g2 = true, C2.next = 54;
                break;
              case 51:
                return C2.delegateYield(D2.output(), "t9", 52);
              case 52:
                n2 = C2.t9, iP(v2, A2);
              case 54:
                y2 && g2 && v2.files.add(y2.filepath);
              case 55:
                return t2.showConfig && console.log('Babel configs on "' + t2.filename + '" (ascending priority):\n' + [r2, n2, i2].filter(function(e3) {
                  return !!e3;
                }).join("\n\n") + "\n-----End Babel configs-----"), w2 = iP(iP(iP(uP(), p2), v2), a2), C2.abrupt("return", { plugins: g2 ? [] : cP(w2.plugins), presets: g2 ? [] : cP(w2.presets), options: g2 ? [] : w2.options.map(function(e3) {
                  return lP(e3);
                }), fileHandling: g2 ? "ignored" : "transpile", ignore: m2 || void 0, babelrc: y2 || void 0, config: o2 || void 0, files: w2.files });
              case 58:
              case "end":
                return C2.stop();
            }
        }, Fj);
      }
      function Wj(e2, t2, r2, n2) {
        if (typeof r2 == "boolean")
          return r2;
        var s2 = e2.root;
        if (r2 === void 0)
          return t2.directories.indexOf(s2) !== -1;
        var a2 = r2;
        return Array.isArray(a2) || (a2 = [a2]), (a2 = a2.map(function(e3) {
          return typeof e3 == "string" ? nx.resolve(n2, e3) : e3;
        })).length === 1 && a2[0] === s2 ? t2.directories.indexOf(s2) !== -1 : a2.some(function(r3) {
          return typeof r3 == "string" && (r3 = wj(r3, n2)), t2.directories.some(function(t3) {
            return mP(r3, n2, t3, e2);
          });
        });
      }
      var Hj = uw(function(e2) {
        return { filepath: e2.filepath, dirname: e2.dirname, options: pj("configfile", e2.options) };
      }), Xj = uw(function(e2) {
        return { filepath: e2.filepath, dirname: e2.dirname, options: pj("babelrcfile", e2.options) };
      }), qj = uw(function(e2) {
        return { filepath: e2.filepath, dirname: e2.dirname, options: pj("extendsfile", e2.options) };
      }), $j = sP({ root: function(e2) {
        return eP(e2, "base", fT);
      }, env: function(e2, t2) {
        return tP(e2, "base", fT, t2);
      }, overrides: function(e2, t2) {
        return rP(e2, "base", fT, t2);
      }, overridesEnv: function(e2, t2, r2) {
        return nP(e2, "base", fT, t2, r2);
      }, createLogger: function(e2, t2, r2) {
        return function(e3, t3, r3) {
          var n2;
          if (!r3)
            return function() {
            };
          return r3.configure(t3.showConfig, Cj, { callerName: (n2 = t3.caller) == null ? void 0 : n2.name });
        }(0, t2, r2);
      } }), Kj = sP({ root: function(e2) {
        return Jj(e2);
      }, env: function(e2, t2) {
        return Yj(e2)(t2);
      }, overrides: function(e2, t2) {
        return Qj(e2)(t2);
      }, overridesEnv: function(e2, t2, r2) {
        return Zj(e2)(t2)(r2);
      }, createLogger: function(e2, t2, r2) {
        return function(e3, t3, r3) {
          if (!r3)
            return function() {
            };
          return r3.configure(t3.showConfig, Sj, { filepath: e3 });
        }(e2.filepath, t2, r2);
      } });
      function zj(e2, t2, r2, n2) {
        var s2;
        return bh.wrap(function(a2) {
          for (; ; )
            switch (a2.prev = a2.next) {
              case 0:
                return a2.delegateYield(Kj(e2, t2, r2, n2), "t0", 1);
              case 1:
                return (s2 = a2.t0) && s2.files.add(e2.filepath), a2.abrupt("return", s2);
              case 4:
              case "end":
                return a2.stop();
            }
        }, kj);
      }
      var Jj = uw(function(e2) {
        return eP(e2, e2.filepath, hT);
      }), Yj = uw(function(e2) {
        return cw(function(t2) {
          return tP(e2, e2.filepath, hT, t2);
        });
      }), Qj = uw(function(e2) {
        return cw(function(t2) {
          return rP(e2, e2.filepath, hT, t2);
        });
      }), Zj = uw(function(e2) {
        return cw(function(t2) {
          return cw(function(r2) {
            return nP(e2, e2.filepath, hT, t2, r2);
          });
        });
      });
      function eP(e2, t2, r2) {
        return r2(e2.dirname, e2.options, t2);
      }
      function tP(e2, t2, r2, n2) {
        var s2 = e2.dirname, a2 = e2.options, i2 = a2.env && a2.env[n2];
        return i2 ? r2(s2, i2, t2 + '.env["' + n2 + '"]') : null;
      }
      function rP(e2, t2, r2, n2) {
        var s2 = e2.dirname, a2 = e2.options, i2 = a2.overrides && a2.overrides[n2];
        if (!i2)
          throw new Error("Assertion failure - missing override");
        return r2(s2, i2, t2 + ".overrides[" + n2 + "]");
      }
      function nP(e2, t2, r2, n2, s2) {
        var a2 = e2.dirname, i2 = e2.options, o2 = i2.overrides && i2.overrides[n2];
        if (!o2)
          throw new Error("Assertion failure - missing override");
        var u2 = o2.env && o2.env[s2];
        return u2 ? r2(a2, u2, t2 + ".overrides[" + n2 + '].env["' + s2 + '"]') : null;
      }
      function sP(e2) {
        var t2 = e2.root, r2 = e2.env, n2 = e2.overrides, s2 = e2.overridesEnv, a2 = e2.createLogger;
        return bh.mark(function e3(i2, o2, u2, l2) {
          var c2, p2, d2, f2, h2, m2, y2, g2, v2, b2, E2, x2;
          return bh.wrap(function(e4) {
            for (; ; )
              switch (e4.prev = e4.next) {
                case 0:
                  if (u2 === void 0 && (u2 = new Set()), c2 = i2.dirname, p2 = [], pP(d2 = t2(i2), c2, o2) && (p2.push({ config: d2, envName: void 0, index: void 0 }), (f2 = r2(i2, o2.envName)) && pP(f2, c2, o2) && p2.push({ config: f2, envName: o2.envName, index: void 0 }), (d2.options.overrides || []).forEach(function(e5, t3) {
                    var r3 = n2(i2, t3);
                    if (pP(r3, c2, o2)) {
                      p2.push({ config: r3, index: t3, envName: void 0 });
                      var a3 = s2(i2, t3, o2.envName);
                      a3 && pP(a3, c2, o2) && p2.push({ config: a3, index: t3, envName: o2.envName });
                    }
                  })), !p2.some(function(e5) {
                    var t3 = e5.config.options, r3 = t3.ignore, n3 = t3.only;
                    return fP(o2, r3, n3, c2);
                  })) {
                    e4.next = 7;
                    break;
                  }
                  return e4.abrupt("return", null);
                case 7:
                  h2 = uP(), m2 = a2(i2, o2, l2), y2 = 0, g2 = p2;
                case 10:
                  if (!(y2 < g2.length)) {
                    e4.next = 20;
                    break;
                  }
                  return v2 = g2[y2], b2 = v2.config, E2 = v2.index, x2 = v2.envName, e4.delegateYield(aP(h2, b2.options, c2, o2, u2, l2), "t0", 13);
                case 13:
                  if (e4.t0) {
                    e4.next = 15;
                    break;
                  }
                  return e4.abrupt("return", null);
                case 15:
                  return m2(b2, E2, x2), e4.delegateYield(oP(h2, b2), "t1", 17);
                case 17:
                  y2++, e4.next = 10;
                  break;
                case 20:
                  return e4.abrupt("return", h2);
                case 21:
                case "end":
                  return e4.stop();
              }
          }, e3);
        });
      }
      function aP(e2, t2, r2, n2, s2, a2) {
        var i2, o2;
        return bh.wrap(function(u2) {
          for (; ; )
            switch (u2.prev = u2.next) {
              case 0:
                if (t2.extends !== void 0) {
                  u2.next = 2;
                  break;
                }
                return u2.abrupt("return", true);
              case 2:
                return u2.delegateYield(EA(t2.extends, r2, n2.envName, n2.caller), "t0", 3);
              case 3:
                if (i2 = u2.t0, !s2.has(i2)) {
                  u2.next = 6;
                  break;
                }
                throw new Error("Configuration cycle detected loading " + i2.filepath + ".\nFile already loaded following the config chain:\n" + Array.from(s2, function(e3) {
                  return " - " + e3.filepath;
                }).join("\n"));
              case 6:
                return s2.add(i2), u2.delegateYield(zj(qj(i2), n2, s2, a2), "t1", 8);
              case 8:
                if (o2 = u2.t1, s2.delete(i2), o2) {
                  u2.next = 12;
                  break;
                }
                return u2.abrupt("return", false);
              case 12:
                return iP(e2, o2), u2.abrupt("return", true);
              case 14:
              case "end":
                return u2.stop();
            }
        }, Oj);
      }
      function iP(e2, t2) {
        var r2, n2, s2;
        (r2 = e2.options).push.apply(r2, c(t2.options)), (n2 = e2.plugins).push.apply(n2, c(t2.plugins)), (s2 = e2.presets).push.apply(s2, c(t2.presets));
        for (var a2, i2 = f(t2.files); !(a2 = i2()).done; ) {
          var o2 = a2.value;
          e2.files.add(o2);
        }
        return e2;
      }
      function oP(e2, t2) {
        var r2, n2, s2, a2, i2;
        return bh.wrap(function(o2) {
          for (; ; )
            switch (o2.prev = o2.next) {
              case 0:
                return s2 = t2.options, a2 = t2.plugins, i2 = t2.presets, e2.options.push(s2), o2.t0 = (r2 = e2.plugins).push, o2.t1 = r2, o2.t2 = c, o2.delegateYield(a2(), "t3", 6);
              case 6:
                return o2.t4 = o2.t3, o2.t5 = (0, o2.t2)(o2.t4), o2.t0.apply.call(o2.t0, o2.t1, o2.t5), o2.t6 = (n2 = e2.presets).push, o2.t7 = n2, o2.t8 = c, o2.delegateYield(i2(), "t9", 13);
              case 13:
                return o2.t10 = o2.t9, o2.t11 = (0, o2.t8)(o2.t10), o2.t6.apply.call(o2.t6, o2.t7, o2.t11), o2.abrupt("return", e2);
              case 17:
              case "end":
                return o2.stop();
            }
        }, Rj);
      }
      function uP() {
        return { options: [], presets: [], plugins: [], files: new Set() };
      }
      function lP(e2) {
        var t2 = Object.assign({}, e2);
        return delete t2.extends, delete t2.env, delete t2.overrides, delete t2.plugins, delete t2.presets, delete t2.passPerPreset, delete t2.ignore, delete t2.only, delete t2.test, delete t2.include, delete t2.exclude, Object.prototype.hasOwnProperty.call(t2, "sourceMap") && (t2.sourceMaps = t2.sourceMap, delete t2.sourceMap), t2;
      }
      function cP(e2) {
        for (var t2, r2 = new Map(), n2 = [], s2 = f(e2); !(t2 = s2()).done; ) {
          var a2 = t2.value;
          if (typeof a2.value == "function") {
            var i2 = a2.value, o2 = r2.get(i2);
            o2 || (o2 = new Map(), r2.set(i2, o2));
            var u2 = o2.get(a2.name);
            u2 ? u2.value = a2 : (u2 = { value: a2 }, n2.push(u2), a2.ownPass || o2.set(a2.name, u2));
          } else
            n2.push({ value: a2 });
        }
        return n2.reduce(function(e3, t3) {
          return e3.push(t3.value), e3;
        }, []);
      }
      function pP(e2, t2, r2) {
        var n2 = e2.options;
        return (n2.test === void 0 || dP(r2, n2.test, t2)) && (n2.include === void 0 || dP(r2, n2.include, t2)) && (n2.exclude === void 0 || !dP(r2, n2.exclude, t2));
      }
      function dP(e2, t2, r2) {
        return hP(e2, Array.isArray(t2) ? t2 : [t2], r2);
      }
      function fP(e2, t2, r2, n2) {
        if (t2 && hP(e2, t2, n2)) {
          var s2, a2 = 'No config is applied to "' + ((s2 = e2.filename) != null ? s2 : "(unknown)") + '" because it matches one of `ignore: ' + JSON.stringify(t2) + '` from "' + n2 + '"';
          return Nj(a2), e2.showConfig && console.log(a2), true;
        }
        if (r2 && !hP(e2, r2, n2)) {
          var i2, o2 = 'No config is applied to "' + ((i2 = e2.filename) != null ? i2 : "(unknown)") + '" because it fails to match one of `only: ' + JSON.stringify(r2) + '` from "' + n2 + '"';
          return Nj(o2), e2.showConfig && console.log(o2), true;
        }
        return false;
      }
      function hP(e2, t2, r2) {
        return t2.some(function(t3) {
          return mP(t3, r2, e2.filename, e2);
        });
      }
      function mP(e2, t2, r2, n2) {
        if (typeof e2 == "function")
          return !!e2(r2, { dirname: t2, envName: n2.envName, caller: n2.caller });
        if (typeof r2 != "string")
          throw new Error("Configuration contains string/RegExp pattern, but no filename was passed to Babel");
        return typeof e2 == "string" && (e2 = wj(e2, t2)), e2.test(r2);
      }
      var yP = { name: qT, manipulateOptions: $T, pre: $T, post: $T, inherits: $T, visitor: function(e2, t2) {
        var r2 = zT(e2, t2);
        if (r2 && (Object.keys(r2).forEach(function(e3) {
          return function(e4, t3) {
            if (t3 && typeof t3 == "object")
              Object.keys(t3).forEach(function(t4) {
                if (t4 !== "enter" && t4 !== "exit")
                  throw new Error('.visitor["' + e4 + '"] may only have .enter and/or .exit handlers.');
              });
            else if (typeof t3 != "function")
              throw new Error('.visitor["' + e4 + '"] must be a function');
            return t3;
          }(e3, r2[e3]);
        }), r2.enter || r2.exit))
          throw new Error(WT(e2) + ' cannot contain catch-all "enter" or "exit" handlers. Please target individual nodes.');
        return r2;
      }, parserOverride: $T, generatorOverride: $T };
      function gP(e2) {
        var t2 = { type: "root", source: "plugin" };
        return Object.keys(e2).forEach(function(r2) {
          var n2 = yP[r2];
          if (!n2) {
            var s2 = new Error("." + r2 + " is not a valid Plugin property");
            throw s2.code = "BABEL_UNKNOWN_PLUGIN_PROPERTY", s2;
          }
          n2({ type: "option", name: r2, parent: t2 }, e2[r2]);
        }), e2;
      }
      function vP(e2) {
        return Object.assign({}, function(e3) {
          return { version: wF, cache: e3.simple(), env: function(t2) {
            return e3.using(function(e4) {
              return t2 === void 0 ? e4.envName : typeof t2 == "function" ? gw(t2(e4.envName)) : (Array.isArray(t2) || (t2 = [t2]), t2.some(function(t3) {
                if (typeof t3 != "string")
                  throw new Error("Unexpected non-string value");
                return t3 === e4.envName;
              }));
            });
          }, async: function() {
            return false;
          }, caller: function(t2) {
            return e3.using(function(e4) {
              return gw(t2(e4.caller));
            });
          }, assertVersion: bP };
        }(e2), { targets: function() {
          return JSON.parse(e2.using(function(e3) {
            return JSON.stringify(e3.targets);
          }));
        } });
      }
      function bP(e2) {
        if (typeof e2 == "number") {
          if (!Number.isInteger(e2))
            throw new Error("Expected string or integer value.");
          e2 = "^" + e2 + ".0.0-0";
        }
        if (typeof e2 != "string")
          throw new Error("Expected string or integer value.");
        if (!nA.satisfies(wF, e2)) {
          var t2 = Error.stackTraceLimit;
          typeof t2 == "number" && t2 < 25 && (Error.stackTraceLimit = 25);
          var r2 = new Error('Requires Babel "' + e2 + '", but was loaded with "' + wF + `". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry that doesn't mention "@babel/core" or "babel-core" to see what is calling Babel.`);
          throw typeof t2 == "number" && (Error.stackTraceLimit = t2), Object.assign(r2, { code: "BABEL_VERSION_UNSUPPORTED", version: wF, range: e2 });
        }
      }
      var EP = ["showIgnoredFiles"], xP = bh.mark(AP);
      function DP(e2, t2) {
        switch (t2) {
          case "root":
            return e2;
          case "upward-optional":
            return e2;
          case "upward":
            throw Object.assign(new Error('Babel was run with rootMode:"upward" but a root could not be found when searching upward from "' + e2 + '".\nOne of the following config files must be in the directory tree: "' + DA.join(", ") + '".'), { code: "BABEL_ROOT_NOT_FOUND", dirname: e2 });
          default:
            throw new Error("Assertion failure - unknown rootMode value.");
        }
      }
      function AP(e2) {
        var t2, r2, n2, s2, a2, i2, o2, u2, l2, c2, p2, d2, f2, h2, m2, y2, g2, v2, b2, E2;
        return bh.wrap(function(x2) {
          for (; ; )
            switch (x2.prev = x2.next) {
              case 0:
                if (e2 == null || typeof e2 == "object" && !Array.isArray(e2)) {
                  x2.next = 2;
                  break;
                }
                throw new Error("Babel options must be an object, null, or undefined");
              case 2:
                return t2 = e2 ? pj("arguments", e2) : {}, r2 = t2.envName, n2 = r2 === void 0 ? TA() : r2, s2 = t2.cwd, a2 = s2 === void 0 ? "." : s2, i2 = t2.root, o2 = i2 === void 0 ? "." : i2, u2 = t2.rootMode, l2 = u2 === void 0 ? "root" : u2, c2 = t2.caller, p2 = t2.cloneInputAst, d2 = p2 === void 0 || p2, f2 = nx.resolve(a2), h2 = DP(nx.resolve(f2, o2), l2), m2 = typeof t2.filename == "string" ? nx.resolve(a2, t2.filename) : void 0, x2.delegateYield(xA(), "t0", 8);
              case 8:
                return y2 = x2.t0, g2 = { filename: m2, cwd: f2, root: h2, envName: n2, caller: c2, showConfig: y2 === m2 }, x2.delegateYield(Vj(t2, g2), "t1", 11);
              case 11:
                if (v2 = x2.t1) {
                  x2.next = 14;
                  break;
                }
                return x2.abrupt("return", null);
              case 14:
                return b2 = { assumptions: {} }, v2.options.forEach(function(e3) {
                  QA(b2, e3);
                }), E2 = Object.assign({}, b2, { targets: aT(b2), cloneInputAst: d2, babelrc: false, configFile: false, browserslistConfigFile: false, passPerPreset: false, envName: g2.envName, cwd: g2.cwd, root: g2.root, rootMode: "root", filename: typeof g2.filename == "string" ? g2.filename : void 0, plugins: v2.plugins.map(function(e3) {
                  return TT(e3);
                }), presets: v2.presets.map(function(e3) {
                  return TT(e3);
                }) }), x2.abrupt("return", { options: E2, context: g2, fileHandling: v2.fileHandling, ignore: v2.ignore, babelrc: v2.babelrc, config: v2.config, files: v2.files });
              case 18:
              case "end":
                return x2.stop();
            }
        }, xP);
      }
      var wP = RA(bh.mark(function e2(t2) {
        var r2, n2, s2, a2, o2, u2, l2, c2, p2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return r2 = false, typeof t2 != "object" || t2 === null || Array.isArray(t2) || (r2 = (n2 = t2).showIgnoredFiles, t2 = i(n2, EP)), e3.delegateYield(AP(t2), "t0", 3);
              case 3:
                if (s2 = e3.t0) {
                  e3.next = 6;
                  break;
                }
                return e3.abrupt("return", null);
              case 6:
                if (a2 = s2.options, o2 = s2.babelrc, u2 = s2.ignore, l2 = s2.config, c2 = s2.fileHandling, p2 = s2.files, c2 !== "ignored" || r2) {
                  e3.next = 9;
                  break;
                }
                return e3.abrupt("return", null);
              case 9:
                return (a2.plugins || []).forEach(function(e4) {
                  if (e4.value instanceof tw)
                    throw new Error("Passing cached plugin instances is not supported in babel.loadPartialConfig()");
                }), e3.abrupt("return", new CP(a2, o2 ? o2.filepath : void 0, u2 ? u2.filepath : void 0, l2 ? l2.filepath : void 0, c2, p2));
              case 11:
              case "end":
                return e3.stop();
            }
        }, e2);
      })), CP = function() {
        function e2(e3, t2, r2, n2, s2, a2) {
          this.options = void 0, this.babelrc = void 0, this.babelignore = void 0, this.config = void 0, this.fileHandling = void 0, this.files = void 0, this.options = e3, this.babelignore = r2, this.babelrc = t2, this.config = n2, this.fileHandling = s2, this.files = a2, Object.freeze(this);
        }
        return e2.prototype.hasFilesystemConfig = function() {
          return this.babelrc !== void 0 || this.config !== void 0;
        }, e2;
      }();
      Object.freeze(CP.prototype);
      var SP = bh.mark(OP), TP = bh.mark(_P), jP = RA(bh.mark(function e2(t2) {
        var r2, n2, s2, a2, i2, o2, u2, l2, p2, d2, h2, m2, y2, g2, v2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return e3.delegateYield(AP(t2), "t0", 1);
              case 1:
                if (n2 = e3.t0) {
                  e3.next = 4;
                  break;
                }
                return e3.abrupt("return", null);
              case 4:
                if (s2 = n2.options, a2 = n2.context, n2.fileHandling !== "ignored") {
                  e3.next = 7;
                  break;
                }
                return e3.abrupt("return", null);
              case 7:
                if (i2 = {}, o2 = s2.plugins, u2 = s2.presets, o2 && u2) {
                  e3.next = 11;
                  break;
                }
                throw new Error("Assertion failure - plugins and presets exist");
              case 11:
                return l2 = Object.assign({}, a2, { targets: s2.targets }), p2 = function(e4) {
                  var t3 = PT(e4);
                  if (!t3)
                    throw new Error("Assertion failure - must be config item");
                  return t3;
                }, d2 = u2.map(p2), h2 = o2.map(p2), m2 = [[]], y2 = [], e3.delegateYield(PP(a2, bh.mark(function e4(t3, r3) {
                  var n3, s3, a3, o3, u3, p3, d3, h3;
                  return bh.wrap(function(y3) {
                    for (; ; )
                      switch (y3.prev = y3.next) {
                        case 0:
                          n3 = [], s3 = 0;
                        case 2:
                          if (!(s3 < t3.length)) {
                            y3.next = 30;
                            break;
                          }
                          if ((a3 = t3[s3]).options === false) {
                            y3.next = 27;
                            break;
                          }
                          if (y3.prev = 5, !a3.ownPass) {
                            y3.next = 15;
                            break;
                          }
                          return y3.t0 = n3, y3.delegateYield(_P(a3, l2), "t1", 9);
                        case 9:
                          y3.t2 = y3.t1, y3.t3 = [], y3.t4 = { preset: y3.t2, pass: y3.t3 }, y3.t0.push.call(y3.t0, y3.t4), y3.next = 21;
                          break;
                        case 15:
                          return y3.t5 = n3, y3.delegateYield(_P(a3, l2), "t6", 17);
                        case 17:
                          y3.t7 = y3.t6, y3.t8 = r3, y3.t9 = { preset: y3.t7, pass: y3.t8 }, y3.t5.unshift.call(y3.t5, y3.t9);
                        case 21:
                          y3.next = 27;
                          break;
                        case 23:
                          throw y3.prev = 23, y3.t10 = y3.catch(5), y3.t10.code === "BABEL_UNKNOWN_OPTION" && mj(t3, s3, "preset", y3.t10), y3.t10;
                        case 27:
                          s3++, y3.next = 2;
                          break;
                        case 30:
                          if (!(n3.length > 0)) {
                            y3.next = 45;
                            break;
                          }
                          m2.splice.apply(m2, [1, 0].concat(c(n3.map(function(e5) {
                            return e5.pass;
                          }).filter(function(e5) {
                            return e5 !== r3;
                          })))), o3 = f(n3);
                        case 33:
                          if ((u3 = o3()).done) {
                            y3.next = 45;
                            break;
                          }
                          if (p3 = u3.value, d3 = p3.preset, h3 = p3.pass, d3) {
                            y3.next = 37;
                            break;
                          }
                          return y3.abrupt("return", true);
                        case 37:
                          return h3.push.apply(h3, c(d3.plugins)), y3.delegateYield(e4(d3.presets, h3), "t11", 39);
                        case 39:
                          if (!y3.t11) {
                            y3.next = 42;
                            break;
                          }
                          return y3.abrupt("return", true);
                        case 42:
                          d3.options.forEach(function(e5) {
                            QA(i2, e5);
                          });
                        case 43:
                          y3.next = 33;
                          break;
                        case 45:
                        case "end":
                          return y3.stop();
                      }
                  }, e4, null, [[5, 23]]);
                }))(d2, m2[0]), "t1", 18);
              case 18:
                if (!e3.t1) {
                  e3.next = 21;
                  break;
                }
                return e3.abrupt("return", null);
              case 21:
                return QA(g2 = i2, s2), v2 = Object.assign({}, l2, { assumptions: (r2 = g2.assumptions) != null ? r2 : {} }), e3.delegateYield(PP(a2, bh.mark(function e4() {
                  var t3, r3, n3, s3, a3, i3, o3;
                  return bh.wrap(function(e5) {
                    for (; ; )
                      switch (e5.prev = e5.next) {
                        case 0:
                          (t3 = m2[0]).unshift.apply(t3, c(h2)), r3 = f(m2);
                        case 2:
                          if ((n3 = r3()).done) {
                            e5.next = 26;
                            break;
                          }
                          s3 = n3.value, a3 = [], y2.push(a3), i3 = 0;
                        case 7:
                          if (!(i3 < s3.length)) {
                            e5.next = 24;
                            break;
                          }
                          if ((o3 = s3[i3]).options === false) {
                            e5.next = 21;
                            break;
                          }
                          return e5.prev = 10, e5.t0 = a3, e5.delegateYield(OP(o3, v2), "t1", 13);
                        case 13:
                          e5.t2 = e5.t1, e5.t0.push.call(e5.t0, e5.t2), e5.next = 21;
                          break;
                        case 17:
                          throw e5.prev = 17, e5.t3 = e5.catch(10), e5.t3.code === "BABEL_UNKNOWN_PLUGIN_PROPERTY" && mj(s3, i3, "plugin", e5.t3), e5.t3;
                        case 21:
                          i3++, e5.next = 7;
                          break;
                        case 24:
                          e5.next = 2;
                          break;
                        case 26:
                        case "end":
                          return e5.stop();
                      }
                  }, e4, null, [[10, 17]]);
                }))(), "t2", 25);
              case 25:
                return g2.plugins = y2[0], g2.presets = y2.slice(1).filter(function(e4) {
                  return e4.length > 0;
                }).map(function(e4) {
                  return { plugins: e4 };
                }), g2.passPerPreset = g2.presets.length > 0, e3.abrupt("return", { options: g2, passes: y2 });
              case 29:
              case "end":
                return e3.stop();
            }
        }, e2);
      }));
      function PP(e2, t2) {
        return bh.mark(function r2(n2, s2) {
          return bh.wrap(function(r3) {
            for (; ; )
              switch (r3.prev = r3.next) {
                case 0:
                  return r3.prev = 0, r3.delegateYield(t2(n2, s2), "t0", 2);
                case 2:
                  return r3.abrupt("return", r3.t0);
                case 5:
                  throw r3.prev = 5, r3.t1 = r3.catch(0), /^\[BABEL\]/.test(r3.t1.message) || (r3.t1.message = "[BABEL] " + (e2.filename || "unknown") + ": " + r3.t1.message), r3.t1;
                case 9:
                case "end":
                  return r3.stop();
              }
          }, r2, null, [[0, 5]]);
        });
      }
      var IP = function(e2) {
        return ow(bh.mark(function r2(n2, s2) {
          var a2, i2, o2, u2, l2, c2, p2;
          return bh.wrap(function(r3) {
            for (; ; )
              switch (r3.prev = r3.next) {
                case 0:
                  if (a2 = n2.value, i2 = n2.options, o2 = n2.dirname, u2 = n2.alias, i2 !== false) {
                    r3.next = 3;
                    break;
                  }
                  throw new Error("Assertion failure");
                case 3:
                  if (i2 = i2 || {}, l2 = a2, typeof a2 != "function") {
                    r3.next = 17;
                    break;
                  }
                  return c2 = qA(a2, "You appear to be using an async plugin/preset, but Babel has been called synchronously"), p2 = Object.assign({}, t, e2(s2)), r3.prev = 8, r3.delegateYield(c2(p2, i2, o2), "t0", 10);
                case 10:
                  l2 = r3.t0, r3.next = 17;
                  break;
                case 13:
                  throw r3.prev = 13, r3.t1 = r3.catch(8), u2 && (r3.t1.message += " (While processing: " + JSON.stringify(u2) + ")"), r3.t1;
                case 17:
                  if (l2 && typeof l2 == "object") {
                    r3.next = 19;
                    break;
                  }
                  throw new Error("Plugin/Preset did not return an object.");
                case 19:
                  if (!YA(l2)) {
                    r3.next = 22;
                    break;
                  }
                  return r3.delegateYield([], "t2", 21);
                case 21:
                  throw new Error(`You appear to be using a promise as a plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version. As an alternative, you can prefix the promise with "await". (While processing: ` + JSON.stringify(u2) + ")");
                case 22:
                  return r3.abrupt("return", { value: l2, options: i2, dirname: o2, alias: u2 });
                case 23:
                case "end":
                  return r3.stop();
              }
          }, r2, null, [[8, 13]]);
        }));
      }, FP = IP(function(e2) {
        return Object.assign({}, vP(e2), { assumption: function(t2) {
          return e2.using(function(e3) {
            return e3.assumptions[t2];
          });
        } });
      }), kP = IP(vP);
      function OP(e2, t2) {
        return bh.wrap(function(r2) {
          for (; ; )
            switch (r2.prev = r2.next) {
              case 0:
                if (!(e2.value instanceof tw)) {
                  r2.next = 4;
                  break;
                }
                if (!e2.options) {
                  r2.next = 3;
                  break;
                }
                throw new Error("Passed options to an existing Plugin instance will not work.");
              case 3:
                return r2.abrupt("return", e2.value);
              case 4:
                return r2.t0 = RP, r2.delegateYield(FP(e2, t2), "t1", 6);
              case 6:
                return r2.t2 = r2.t1, r2.t3 = t2, r2.delegateYield((0, r2.t0)(r2.t2, r2.t3), "t4", 9);
              case 9:
                return r2.abrupt("return", r2.t4);
              case 10:
              case "end":
                return r2.stop();
            }
        }, SP);
      }
      var RP = ow(bh.mark(function e2(t2, r2) {
        var n2, s2, a2, i2, o2, u2, l2, c2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                if (n2 = t2.value, s2 = t2.options, a2 = t2.dirname, i2 = t2.alias, o2 = gP(n2), (u2 = Object.assign({}, o2)).visitor && (u2.visitor = vv.explode(Object.assign({}, u2.visitor))), !u2.inherits) {
                  e3.next = 12;
                  break;
                }
                return l2 = { name: void 0, alias: i2 + "$inherits", value: u2.inherits, options: s2, dirname: a2 }, e3.delegateYield(KA(OP, function(e4) {
                  return r2.invalidate(function(t3) {
                    return e4(l2, t3);
                  });
                }), "t0", 7);
              case 7:
                c2 = e3.t0, u2.pre = MP(c2.pre, u2.pre), u2.post = MP(c2.post, u2.post), u2.manipulateOptions = MP(c2.manipulateOptions, u2.manipulateOptions), u2.visitor = vv.visitors.merge([c2.visitor || {}, u2.visitor || {}]);
              case 12:
                return e3.abrupt("return", new tw(u2, s2, i2));
              case 13:
              case "end":
                return e3.stop();
            }
        }, e2);
      })), NP = function(e2, t2) {
        if (e2.test || e2.include || e2.exclude) {
          var r2 = t2.name ? '"' + t2.name + '"' : "/* your preset */";
          throw new Error(["Preset " + r2 + " requires a filename to be set when babel is called directly,", "```", "babel.transform(code, { filename: 'file.ts', presets: [" + r2 + "] });", "```", "See https://babeljs.io/docs/en/options#filename for more information."].join("\n"));
        }
      }, BP = function(e2, t2, r2) {
        if (!t2.filename) {
          var n2 = e2.options;
          NP(n2, r2), n2.overrides && n2.overrides.forEach(function(e3) {
            return NP(e3, r2);
          });
        }
      };
      function _P(e2, t2) {
        var r2;
        return bh.wrap(function(n2) {
          for (; ; )
            switch (n2.prev = n2.next) {
              case 0:
                return n2.t0 = LP, n2.delegateYield(kP(e2, t2), "t1", 2);
              case 2:
                return n2.t2 = n2.t1, r2 = (0, n2.t0)(n2.t2), BP(r2, t2, e2), n2.delegateYield(Bj(r2, t2), "t3", 6);
              case 6:
                return n2.abrupt("return", n2.t3);
              case 7:
              case "end":
                return n2.stop();
            }
        }, TP);
      }
      var LP = uw(function(e2) {
        var t2 = e2.value, r2 = e2.dirname, n2 = e2.alias;
        return { options: pj("preset", t2), alias: n2, dirname: r2 };
      });
      function MP(e2, t2) {
        var r2 = [e2, t2].filter(Boolean);
        return r2.length <= 1 ? r2[0] : function() {
          for (var e3 = arguments.length, t3 = new Array(e3), n2 = 0; n2 < e3; n2++)
            t3[n2] = arguments[n2];
          for (var s2, a2 = f(r2); !(s2 = a2()).done; ) {
            var i2 = s2.value;
            i2.apply(this, t3);
          }
        };
      }
      var UP = RA(bh.mark(function e2(t2) {
        var r2, n2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return e3.delegateYield(jP(t2), "t0", 1);
              case 1:
                return n2 = e3.t0, e3.abrupt("return", (r2 = n2 == null ? void 0 : n2.options) != null ? r2 : null);
              case 3:
              case "end":
                return e3.stop();
            }
        }, e2);
      })), GP = RA(jT), VP = function(e2) {
        return function(t2, r2) {
          return r2 === void 0 && typeof t2 == "function" && (r2 = t2, t2 = void 0), r2 ? e2.errback(t2, r2) : e2.sync(t2);
        };
      }, WP = VP(wP), HP = wP.sync, XP = wP.async, qP = VP(UP), $P = UP.sync, KP = UP.async, zP = GP.sync, JP = GP.async;
      function YP(e2, t2, r2) {
        return r2 !== void 0 ? GP.errback(e2, t2, r2) : typeof t2 == "function" ? GP.errback(e2, void 0, r2) : GP.sync(e2, t2);
      }
      var QP, ZP = function() {
        function e2(e3, t3, r2) {
          this._map = new Map(), this.key = void 0, this.file = void 0, this.opts = void 0, this.cwd = void 0, this.filename = void 0, this.key = t3, this.file = e3, this.opts = r2 || {}, this.cwd = e3.opts.cwd, this.filename = e3.opts.filename;
        }
        var t2 = e2.prototype;
        return t2.set = function(e3, t3) {
          this._map.set(e3, t3);
        }, t2.get = function(e3) {
          return this._map.get(e3);
        }, t2.availableHelper = function(e3, t3) {
          return this.file.availableHelper(e3, t3);
        }, t2.addHelper = function(e3) {
          return this.file.addHelper(e3);
        }, t2.addImport = function() {
          return this.file.addImport();
        }, t2.buildCodeFrameError = function(e3, t3, r2) {
          return this.file.buildCodeFrameError(e3, t3, r2);
        }, e2;
      }();
      function eI(e2) {
        var t2 = e2 == null ? void 0 : e2._blockHoist;
        return t2 == null ? 1 : t2 === true ? 2 : t2;
      }
      ZP.prototype.getModuleName = function() {
        return this.file.getModuleName();
      };
      var tI = { name: "internal.blockHoist", visitor: { Block: { exit: function(e2) {
        for (var t2 = e2.node, r2 = t2.body, n2 = Math.pow(2, 30) - 1, s2 = false, a2 = 0; a2 < r2.length; a2++) {
          var i2 = eI(r2[a2]);
          if (i2 > n2) {
            s2 = true;
            break;
          }
          n2 = i2;
        }
        s2 && (t2.body = function(e3) {
          for (var t3 = Object.create(null), r3 = 0; r3 < e3.length; r3++) {
            var n3 = e3[r3], s3 = eI(n3);
            (t3[s3] || (t3[s3] = [])).push(n3);
          }
          for (var a3, i3 = 0, o2 = f(Object.keys(t3).map(function(e4) {
            return +e4;
          }).sort(function(e4, t4) {
            return t4 - e4;
          })); !(a3 = o2()).done; )
            for (var u2, l2 = f(t3[a3.value]); !(u2 = l2()).done; ) {
              var c2 = u2.value;
              e3[i3++] = c2;
            }
          return e3;
        }(r2.slice()));
      } } } };
      function rI(e2) {
        for (var t2, r2 = e2.options, n2 = r2.filename, s2 = r2.cwd, a2 = r2.filenameRelative, i2 = a2 === void 0 ? typeof n2 == "string" ? nx.relative(s2, n2) : "unknown" : a2, o2 = r2.sourceType, u2 = o2 === void 0 ? "module" : o2, l2 = r2.inputSourceMap, c2 = r2.sourceMaps, p2 = c2 === void 0 ? !!l2 : c2, d2 = r2.sourceRoot, h2 = d2 === void 0 ? e2.options.moduleRoot : d2, m2 = r2.sourceFileName, y2 = m2 === void 0 ? nx.basename(i2) : m2, g2 = r2.comments, v2 = g2 === void 0 || g2, b2 = r2.compact, E2 = b2 === void 0 ? "auto" : b2, x2 = e2.options, D2 = Object.assign({}, x2, { parserOpts: Object.assign({ sourceType: nx.extname(i2) === ".mjs" ? "module" : u2, sourceFileName: n2, plugins: [] }, x2.parserOpts), generatorOpts: Object.assign({ filename: n2, auxiliaryCommentBefore: x2.auxiliaryCommentBefore, auxiliaryCommentAfter: x2.auxiliaryCommentAfter, retainLines: x2.retainLines, comments: v2, shouldPrintComment: x2.shouldPrintComment, compact: E2, minified: x2.minified, sourceMaps: p2, sourceRoot: h2, sourceFileName: y2 }, x2.generatorOpts) }), A2 = f(e2.passes); !(t2 = A2()).done; )
          for (var w2, C2 = f(t2.value); !(w2 = C2()).done; ) {
            var S2 = w2.value;
            S2.manipulateOptions && S2.manipulateOptions(D2, D2.parserOpts);
          }
        return D2;
      }
      var nI = {}, sI = zt(function(e2, t2) {
        var r2 = Jd.Buffer;
        function n2(e3, t3) {
          for (var r3 in e3)
            t3[r3] = e3[r3];
        }
        function s2(e3, t3, n3) {
          return r2(e3, t3, n3);
        }
        r2.from && r2.alloc && r2.allocUnsafe && r2.allocUnsafeSlow ? e2.exports = Jd : (n2(Jd, t2), t2.Buffer = s2), n2(r2, s2), s2.from = function(e3, t3, n3) {
          if (typeof e3 == "number")
            throw new TypeError("Argument must not be a number");
          return r2(e3, t3, n3);
        }, s2.alloc = function(e3, t3, n3) {
          if (typeof e3 != "number")
            throw new TypeError("Argument must be a number");
          var s3 = r2(e3);
          return t3 !== void 0 ? typeof n3 == "string" ? s3.fill(t3, n3) : s3.fill(t3) : s3.fill(0), s3;
        }, s2.allocUnsafe = function(e3) {
          if (typeof e3 != "number")
            throw new TypeError("Argument must be a number");
          return r2(e3);
        }, s2.allocUnsafeSlow = function(e3) {
          if (typeof e3 != "number")
            throw new TypeError("Argument must be a number");
          return Jd.SlowBuffer(e3);
        };
      }, "/$$rollup_base$$/packages/babel-core/node_modules/convert-source-map/node_modules/safe-buffer"), aI = Kt(ix), iI = zt(function(e2, t2) {
        function r2(e3, r3) {
          (r3 = r3 || {}).isFileComment && (e3 = function(e4, r4) {
            var n2 = t2.mapFileCommentRegex.exec(e4), s2 = n2[1] || n2[2], a2 = aI.resolve(r4, s2);
            try {
              return kw.readFileSync(a2, "utf8");
            } catch (e5) {
              throw new Error("An error occurred while trying to read the map file at " + a2 + "\n" + e5);
            }
          }(e3, r3.commentFileDir)), r3.hasComment && (e3 = function(e4) {
            return e4.split(",").pop();
          }(e3)), r3.isEncoded && (e3 = function(e4) {
            return sI.Buffer.from(e4, "base64").toString();
          }(e3)), (r3.isJSON || r3.isEncoded) && (e3 = JSON.parse(e3)), this.sourcemap = e3;
        }
        Object.defineProperty(t2, "commentRegex", { get: function() {
          return /^\s*\/(?:\/|\*)[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/gm;
        } }), Object.defineProperty(t2, "mapFileCommentRegex", { get: function() {
          return /(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"`]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/){1}[ \t]*$)/gm;
        } }), r2.prototype.toJSON = function(e3) {
          return JSON.stringify(this.sourcemap, null, e3);
        }, r2.prototype.toBase64 = function() {
          var e3 = this.toJSON();
          return sI.Buffer.from(e3, "utf8").toString("base64");
        }, r2.prototype.toComment = function(e3) {
          var t3 = "sourceMappingURL=data:application/json;charset=utf-8;base64," + this.toBase64();
          return e3 && e3.multiline ? "/*# " + t3 + " */" : "//# " + t3;
        }, r2.prototype.toObject = function() {
          return JSON.parse(this.toJSON());
        }, r2.prototype.addProperty = function(e3, t3) {
          if (this.sourcemap.hasOwnProperty(e3))
            throw new Error('property "' + e3 + '" already exists on the sourcemap, use set property instead');
          return this.setProperty(e3, t3);
        }, r2.prototype.setProperty = function(e3, t3) {
          return this.sourcemap[e3] = t3, this;
        }, r2.prototype.getProperty = function(e3) {
          return this.sourcemap[e3];
        }, t2.fromObject = function(e3) {
          return new r2(e3);
        }, t2.fromJSON = function(e3) {
          return new r2(e3, { isJSON: true });
        }, t2.fromBase64 = function(e3) {
          return new r2(e3, { isEncoded: true });
        }, t2.fromComment = function(e3) {
          return new r2(e3 = e3.replace(/^\/\*/g, "//").replace(/\*\/$/g, ""), { isEncoded: true, hasComment: true });
        }, t2.fromMapFileComment = function(e3, t3) {
          return new r2(e3, { commentFileDir: t3, isFileComment: true, isJSON: true });
        }, t2.fromSource = function(e3) {
          var r3 = e3.match(t2.commentRegex);
          return r3 ? t2.fromComment(r3.pop()) : null;
        }, t2.fromMapFileSource = function(e3, r3) {
          var n2 = e3.match(t2.mapFileCommentRegex);
          return n2 ? t2.fromMapFileComment(n2.pop(), r3) : null;
        }, t2.removeComments = function(e3) {
          return e3.replace(t2.commentRegex, "");
        }, t2.removeMapFileComments = function(e3) {
          return e3.replace(t2.mapFileCommentRegex, "");
        }, t2.generateMapFileComment = function(e3, t3) {
          var r3 = "sourceMappingURL=" + e3;
          return t3 && t3.multiline ? "/*# " + r3 + " */" : "//# " + r3;
        };
      }, "/$$rollup_base$$/packages/babel-core/node_modules/convert-source-map"), oI = { asyncDoExpressions: { syntax: { name: "@babel/plugin-syntax-async-do-expressions", url: "https://git.io/JYer8" } }, classProperties: { syntax: { name: "@babel/plugin-syntax-class-properties", url: "https://git.io/vb4yQ" }, transform: { name: "@babel/plugin-proposal-class-properties", url: "https://git.io/vb4SL" } }, classPrivateProperties: { syntax: { name: "@babel/plugin-syntax-class-properties", url: "https://git.io/vb4yQ" }, transform: { name: "@babel/plugin-proposal-class-properties", url: "https://git.io/vb4SL" } }, classPrivateMethods: { syntax: { name: "@babel/plugin-syntax-class-properties", url: "https://git.io/vb4yQ" }, transform: { name: "@babel/plugin-proposal-private-methods", url: "https://git.io/JvpRG" } }, classStaticBlock: { syntax: { name: "@babel/plugin-syntax-class-static-block", url: "https://git.io/JTLB6" }, transform: { name: "@babel/plugin-proposal-class-static-block", url: "https://git.io/JTLBP" } }, decimal: { syntax: { name: "@babel/plugin-syntax-decimal", url: "https://git.io/JfKOH" } }, decorators: { syntax: { name: "@babel/plugin-syntax-decorators", url: "https://git.io/vb4y9" }, transform: { name: "@babel/plugin-proposal-decorators", url: "https://git.io/vb4ST" } }, doExpressions: { syntax: { name: "@babel/plugin-syntax-do-expressions", url: "https://git.io/vb4yh" }, transform: { name: "@babel/plugin-proposal-do-expressions", url: "https://git.io/vb4S3" } }, dynamicImport: { syntax: { name: "@babel/plugin-syntax-dynamic-import", url: "https://git.io/vb4Sv" } }, exportDefaultFrom: { syntax: { name: "@babel/plugin-syntax-export-default-from", url: "https://git.io/vb4SO" }, transform: { name: "@babel/plugin-proposal-export-default-from", url: "https://git.io/vb4yH" } }, exportNamespaceFrom: { syntax: { name: "@babel/plugin-syntax-export-namespace-from", url: "https://git.io/vb4Sf" }, transform: { name: "@babel/plugin-proposal-export-namespace-from", url: "https://git.io/vb4SG" } }, flow: { syntax: { name: "@babel/plugin-syntax-flow", url: "https://git.io/vb4yb" }, transform: { name: "@babel/preset-flow", url: "https://git.io/JfeDn" } }, functionBind: { syntax: { name: "@babel/plugin-syntax-function-bind", url: "https://git.io/vb4y7" }, transform: { name: "@babel/plugin-proposal-function-bind", url: "https://git.io/vb4St" } }, functionSent: { syntax: { name: "@babel/plugin-syntax-function-sent", url: "https://git.io/vb4yN" }, transform: { name: "@babel/plugin-proposal-function-sent", url: "https://git.io/vb4SZ" } }, importMeta: { syntax: { name: "@babel/plugin-syntax-import-meta", url: "https://git.io/vbKK6" } }, jsx: { syntax: { name: "@babel/plugin-syntax-jsx", url: "https://git.io/vb4yA" }, transform: { name: "@babel/preset-react", url: "https://git.io/JfeDR" } }, importAssertions: { syntax: { name: "@babel/plugin-syntax-import-assertions", url: "https://git.io/JUbkv" } }, moduleStringNames: { syntax: { name: "@babel/plugin-syntax-module-string-names", url: "https://git.io/JTL8G" } }, numericSeparator: { syntax: { name: "@babel/plugin-syntax-numeric-separator", url: "https://git.io/vb4Sq" }, transform: { name: "@babel/plugin-proposal-numeric-separator", url: "https://git.io/vb4yS" } }, optionalChaining: { syntax: { name: "@babel/plugin-syntax-optional-chaining", url: "https://git.io/vb4Sc" }, transform: { name: "@babel/plugin-proposal-optional-chaining", url: "https://git.io/vb4Sk" } }, pipelineOperator: { syntax: { name: "@babel/plugin-syntax-pipeline-operator", url: "https://git.io/vb4yj" }, transform: { name: "@babel/plugin-proposal-pipeline-operator", url: "https://git.io/vb4SU" } }, privateIn: { syntax: { name: "@babel/plugin-syntax-private-property-in-object", url: "https://git.io/JfK3q" }, transform: { name: "@babel/plugin-proposal-private-property-in-object", url: "https://git.io/JfK3O" } }, recordAndTuple: { syntax: { name: "@babel/plugin-syntax-record-and-tuple", url: "https://git.io/JvKp3" } }, throwExpressions: { syntax: { name: "@babel/plugin-syntax-throw-expressions", url: "https://git.io/vb4SJ" }, transform: { name: "@babel/plugin-proposal-throw-expressions", url: "https://git.io/vb4yF" } }, typescript: { syntax: { name: "@babel/plugin-syntax-typescript", url: "https://git.io/vb4SC" }, transform: { name: "@babel/preset-typescript", url: "https://git.io/JfeDz" } }, asyncGenerators: { syntax: { name: "@babel/plugin-syntax-async-generators", url: "https://git.io/vb4SY" }, transform: { name: "@babel/plugin-proposal-async-generator-functions", url: "https://git.io/vb4yp" } }, logicalAssignment: { syntax: { name: "@babel/plugin-syntax-logical-assignment-operators", url: "https://git.io/vAlBp" }, transform: { name: "@babel/plugin-proposal-logical-assignment-operators", url: "https://git.io/vAlRe" } }, nullishCoalescingOperator: { syntax: { name: "@babel/plugin-syntax-nullish-coalescing-operator", url: "https://git.io/vb4yx" }, transform: { name: "@babel/plugin-proposal-nullish-coalescing-operator", url: "https://git.io/vb4Se" } }, objectRestSpread: { syntax: { name: "@babel/plugin-syntax-object-rest-spread", url: "https://git.io/vb4y5" }, transform: { name: "@babel/plugin-proposal-object-rest-spread", url: "https://git.io/vb4Ss" } }, optionalCatchBinding: { syntax: { name: "@babel/plugin-syntax-optional-catch-binding", url: "https://git.io/vb4Sn" }, transform: { name: "@babel/plugin-proposal-optional-catch-binding", url: "https://git.io/vb4SI" } } };
      oI.privateIn.syntax = oI.privateIn.transform;
      var uI = function(e2) {
        return e2.name + " (" + e2.url + ")";
      };
      function lI(e2, t2, r2) {
        var n2 = "Support for the experimental syntax '" + e2 + "' isn't currently enabled (" + t2.line + ":" + (t2.column + 1) + "):\n\n" + r2, s2 = oI[e2];
        if (s2) {
          var a2 = s2.syntax, i2 = s2.transform;
          if (a2) {
            var o2 = uI(a2);
            if (i2)
              n2 += "\n\nAdd " + uI(i2) + " to the '" + (i2.name.startsWith("@babel/plugin") ? "plugins" : "presets") + "' section of your Babel config to enable transformation.\nIf you want to leave it as-is, add " + o2 + " to the 'plugins' section to enable parsing.";
            else
              n2 += "\n\nAdd " + o2 + " to the 'plugins' section of your Babel config to enable parsing.";
          }
        }
        return n2;
      }
      var cI = bh.mark(pI);
      function pI(e2, t2, r2) {
        var n2, s2, a2, i2, o2, u2, l2, c2, p2, d2, h2, m2, y2, g2, v2, b2, E2;
        return bh.wrap(function(x2) {
          for (; ; )
            switch (x2.prev = x2.next) {
              case 0:
                for (n2 = t2.parserOpts, s2 = t2.highlightCode, a2 = s2 === void 0 || s2, i2 = t2.filename, o2 = i2 === void 0 ? "unknown" : i2, x2.prev = 1, u2 = [], l2 = f(e2); !(c2 = l2()).done; )
                  for (p2 = c2.value, d2 = f(p2); !(h2 = d2()).done; )
                    m2 = h2.value, (y2 = m2.parserOverride) && (g2 = y2(r2, n2, _y)) !== void 0 && u2.push(g2);
                if (u2.length !== 0) {
                  x2.next = 8;
                  break;
                }
                return x2.abrupt("return", _y(r2, n2));
              case 8:
                if (u2.length !== 1) {
                  x2.next = 13;
                  break;
                }
                return x2.delegateYield([], "t0", 10);
              case 10:
                if (typeof u2[0].then != "function") {
                  x2.next = 12;
                  break;
                }
                throw new Error("You appear to be using an async parser plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");
              case 12:
                return x2.abrupt("return", u2[0]);
              case 13:
                throw new Error("More than one plugin attempted to override parsing.");
              case 16:
                throw x2.prev = 16, x2.t1 = x2.catch(1), x2.t1.code === "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED" && (x2.t1.message += "\nConsider renaming the file to '.mjs', or setting sourceType:module or sourceType:unambiguous in your Babel config for this file."), v2 = x2.t1.loc, b2 = x2.t1.missingPlugin, v2 && (E2 = Zh(r2, { start: { line: v2.line, column: v2.column + 1 } }, { highlightCode: a2 }), x2.t1.message = b2 ? o2 + ": " + lI(b2[0], v2, E2) : o2 + ": " + x2.t1.message + "\n\n" + E2, x2.t1.code = "BABEL_PARSE_ERROR"), x2.t1;
              case 22:
              case "end":
                return x2.stop();
            }
        }, cI, null, [[1, 16]]);
      }
      var dI = "$$ babel internal serialized type" + Math.random();
      function fI(e2, t2) {
        var r2;
        return typeof t2 != "bigint" ? t2 : ((r2 = {})[dI] = "BigInt", r2.value = t2.toString(), r2);
      }
      function hI(e2, t2) {
        return t2 && typeof t2 == "object" ? t2[dI] !== "BigInt" ? t2 : BigInt(t2.value) : t2;
      }
      var mI = bh.mark(gI), yI = GT("babel:transform:file");
      function gI(e2, t2, r2, n2) {
        var s2, a2, i2, o2, u2;
        return bh.wrap(function(l2) {
          for (; ; )
            switch (l2.prev = l2.next) {
              case 0:
                if (r2 = "" + (r2 || ""), !n2) {
                  l2.next = 11;
                  break;
                }
                if (n2.type !== "Program") {
                  l2.next = 6;
                  break;
                }
                n2 = gs(n2, [], []), l2.next = 8;
                break;
              case 6:
                if (n2.type === "File") {
                  l2.next = 8;
                  break;
                }
                throw new Error("AST root must be a Program or File node");
              case 8:
                t2.cloneInputAst && (c2 = n2, n2 = JSON.parse(JSON.stringify(c2, fI), hI)), l2.next = 13;
                break;
              case 11:
                return l2.delegateYield(pI(e2, t2, r2), "t0", 12);
              case 12:
                n2 = l2.t0;
              case 13:
                if (s2 = null, t2.inputSourceMap !== false) {
                  if (typeof t2.inputSourceMap == "object" && (s2 = iI.fromObject(t2.inputSourceMap)), !s2 && (a2 = xI(vI, n2)))
                    try {
                      s2 = iI.fromComment(a2);
                    } catch (e3) {
                      yI("discarding unknown inline input sourcemap", e3);
                    }
                  if (!s2)
                    if (i2 = xI(bI, n2), typeof t2.filename == "string" && i2)
                      try {
                        o2 = bI.exec(i2), (u2 = nI.readFileSync(nx.resolve(nx.dirname(t2.filename), o2[1]))).length > 1e6 ? yI("skip merging input map > 1 MB") : s2 = iI.fromJSON(u2);
                      } catch (e3) {
                        yI("discarding unknown file input sourcemap", e3);
                      }
                    else
                      i2 && yI("discarding un-loadable file input sourcemap");
                }
                return l2.abrupt("return", new aA(t2, { code: r2, ast: n2, inputMap: s2 }));
              case 16:
              case "end":
                return l2.stop();
            }
          var c2;
        }, mI);
      }
      var vI = /^[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/, bI = /^[@#][ \t]+sourceMappingURL=([^\s'"`]+)[ \t]*$/;
      function EI(e2, t2, r2) {
        return t2 && (t2 = t2.filter(function(t3) {
          var n2 = t3.value;
          return !e2.test(n2) || (r2 = n2, false);
        })), [t2, r2];
      }
      function xI(e2, t2) {
        var r2 = null;
        return sc(t2, function(t3) {
          var n2 = l(EI(e2, t3.leadingComments, r2), 2);
          t3.leadingComments = n2[0], r2 = n2[1];
          var s2 = l(EI(e2, t3.innerComments, r2), 2);
          t3.innerComments = s2[0], r2 = s2[1];
          var a2 = l(EI(e2, t3.trailingComments, r2), 2);
          t3.trailingComments = a2[0], r2 = a2[1];
        }), r2;
      }
      var DI = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""), AI = function(e2) {
        if (0 <= e2 && e2 < DI.length)
          return DI[e2];
        throw new TypeError("Must be between 0 and 63: " + e2);
      }, wI = function(e2) {
        return 65 <= e2 && e2 <= 90 ? e2 - 65 : 97 <= e2 && e2 <= 122 ? e2 - 97 + 26 : 48 <= e2 && e2 <= 57 ? e2 - 48 + 52 : e2 == 43 ? 62 : e2 == 47 ? 63 : -1;
      };
      var CI = function(e2) {
        var t2, r2 = "", n2 = function(e3) {
          return e3 < 0 ? 1 + (-e3 << 1) : 0 + (e3 << 1);
        }(e2);
        do {
          t2 = 31 & n2, (n2 >>>= 5) > 0 && (t2 |= 32), r2 += AI(t2);
        } while (n2 > 0);
        return r2;
      }, SI = function(e2, t2, r2) {
        var n2, s2, a2, i2, o2 = e2.length, u2 = 0, l2 = 0;
        do {
          if (t2 >= o2)
            throw new Error("Expected more digits in base 64 VLQ value.");
          if ((s2 = wI(e2.charCodeAt(t2++))) === -1)
            throw new Error("Invalid base64 digit: " + e2.charAt(t2 - 1));
          n2 = !!(32 & s2), u2 += (s2 &= 31) << l2, l2 += 5;
        } while (n2);
        r2.value = (i2 = (a2 = u2) >> 1, (1 & a2) == 1 ? -i2 : i2), r2.rest = t2;
      }, TI = zt(function(e2, t2) {
        t2.getArg = function(e3, t3, r3) {
          if (t3 in e3)
            return e3[t3];
          if (arguments.length === 3)
            return r3;
          throw new Error('"' + t3 + '" is a required argument.');
        };
        var r2 = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/, n2 = /^data:.+\,.+$/;
        function s2(e3) {
          var t3 = e3.match(r2);
          return t3 ? { scheme: t3[1], auth: t3[2], host: t3[3], port: t3[4], path: t3[5] } : null;
        }
        function a2(e3) {
          var t3 = "";
          return e3.scheme && (t3 += e3.scheme + ":"), t3 += "//", e3.auth && (t3 += e3.auth + "@"), e3.host && (t3 += e3.host), e3.port && (t3 += ":" + e3.port), e3.path && (t3 += e3.path), t3;
        }
        function i2(e3) {
          var r3 = e3, n3 = s2(e3);
          if (n3) {
            if (!n3.path)
              return e3;
            r3 = n3.path;
          }
          for (var i3, o3 = t2.isAbsolute(r3), u3 = r3.split(/\/+/), l3 = 0, c3 = u3.length - 1; c3 >= 0; c3--)
            (i3 = u3[c3]) === "." ? u3.splice(c3, 1) : i3 === ".." ? l3++ : l3 > 0 && (i3 === "" ? (u3.splice(c3 + 1, l3), l3 = 0) : (u3.splice(c3, 2), l3--));
          return (r3 = u3.join("/")) === "" && (r3 = o3 ? "/" : "."), n3 ? (n3.path = r3, a2(n3)) : r3;
        }
        t2.urlParse = s2, t2.urlGenerate = a2, t2.normalize = i2, t2.join = function(e3, t3) {
          e3 === "" && (e3 = "."), t3 === "" && (t3 = ".");
          var r3 = s2(t3), o3 = s2(e3);
          if (o3 && (e3 = o3.path || "/"), r3 && !r3.scheme)
            return o3 && (r3.scheme = o3.scheme), a2(r3);
          if (r3 || t3.match(n2))
            return t3;
          if (o3 && !o3.host && !o3.path)
            return o3.host = t3, a2(o3);
          var u3 = t3.charAt(0) === "/" ? t3 : i2(e3.replace(/\/+$/, "") + "/" + t3);
          return o3 ? (o3.path = u3, a2(o3)) : u3;
        }, t2.isAbsolute = function(e3) {
          return e3.charAt(0) === "/" || !!e3.match(r2);
        }, t2.relative = function(e3, t3) {
          e3 === "" && (e3 = "."), e3 = e3.replace(/\/$/, "");
          for (var r3 = 0; t3.indexOf(e3 + "/") !== 0; ) {
            var n3 = e3.lastIndexOf("/");
            if (n3 < 0)
              return t3;
            if ((e3 = e3.slice(0, n3)).match(/^([^\/]+:\/)?\/*$/))
              return t3;
            ++r3;
          }
          return Array(r3 + 1).join("../") + t3.substr(e3.length + 1);
        };
        var o2 = !("__proto__" in Object.create(null));
        function u2(e3) {
          return e3;
        }
        function l2(e3) {
          if (!e3)
            return false;
          var t3 = e3.length;
          if (t3 < 9)
            return false;
          if (e3.charCodeAt(t3 - 1) !== 95 || e3.charCodeAt(t3 - 2) !== 95 || e3.charCodeAt(t3 - 3) !== 111 || e3.charCodeAt(t3 - 4) !== 116 || e3.charCodeAt(t3 - 5) !== 111 || e3.charCodeAt(t3 - 6) !== 114 || e3.charCodeAt(t3 - 7) !== 112 || e3.charCodeAt(t3 - 8) !== 95 || e3.charCodeAt(t3 - 9) !== 95)
            return false;
          for (var r3 = t3 - 10; r3 >= 0; r3--)
            if (e3.charCodeAt(r3) !== 36)
              return false;
          return true;
        }
        function c2(e3, t3) {
          return e3 === t3 ? 0 : e3 > t3 ? 1 : -1;
        }
        t2.toSetString = o2 ? u2 : function(e3) {
          return l2(e3) ? "$" + e3 : e3;
        }, t2.fromSetString = o2 ? u2 : function(e3) {
          return l2(e3) ? e3.slice(1) : e3;
        }, t2.compareByOriginalPositions = function(e3, t3, r3) {
          var n3 = e3.source - t3.source;
          return n3 !== 0 || (n3 = e3.originalLine - t3.originalLine) !== 0 || (n3 = e3.originalColumn - t3.originalColumn) !== 0 || r3 || (n3 = e3.generatedColumn - t3.generatedColumn) !== 0 || (n3 = e3.generatedLine - t3.generatedLine) !== 0 ? n3 : e3.name - t3.name;
        }, t2.compareByGeneratedPositionsDeflated = function(e3, t3, r3) {
          var n3 = e3.generatedLine - t3.generatedLine;
          return n3 !== 0 || (n3 = e3.generatedColumn - t3.generatedColumn) !== 0 || r3 || (n3 = e3.source - t3.source) !== 0 || (n3 = e3.originalLine - t3.originalLine) !== 0 || (n3 = e3.originalColumn - t3.originalColumn) !== 0 ? n3 : e3.name - t3.name;
        }, t2.compareByGeneratedPositionsInflated = function(e3, t3) {
          var r3 = e3.generatedLine - t3.generatedLine;
          return r3 !== 0 || (r3 = e3.generatedColumn - t3.generatedColumn) !== 0 || (r3 = c2(e3.source, t3.source)) !== 0 || (r3 = e3.originalLine - t3.originalLine) !== 0 || (r3 = e3.originalColumn - t3.originalColumn) !== 0 ? r3 : c2(e3.name, t3.name);
        };
      }, "/$$rollup_base$$/packages/babel-core/node_modules/source-map/lib"), jI = Object.prototype.hasOwnProperty, PI = typeof Map != "undefined";
      function II() {
        this._array = [], this._set = PI ? new Map() : Object.create(null);
      }
      II.fromArray = function(e2, t2) {
        for (var r2 = new II(), n2 = 0, s2 = e2.length; n2 < s2; n2++)
          r2.add(e2[n2], t2);
        return r2;
      }, II.prototype.size = function() {
        return PI ? this._set.size : Object.getOwnPropertyNames(this._set).length;
      }, II.prototype.add = function(e2, t2) {
        var r2 = PI ? e2 : TI.toSetString(e2), n2 = PI ? this.has(e2) : jI.call(this._set, r2), s2 = this._array.length;
        n2 && !t2 || this._array.push(e2), n2 || (PI ? this._set.set(e2, s2) : this._set[r2] = s2);
      }, II.prototype.has = function(e2) {
        if (PI)
          return this._set.has(e2);
        var t2 = TI.toSetString(e2);
        return jI.call(this._set, t2);
      }, II.prototype.indexOf = function(e2) {
        if (PI) {
          var t2 = this._set.get(e2);
          if (t2 >= 0)
            return t2;
        } else {
          var r2 = TI.toSetString(e2);
          if (jI.call(this._set, r2))
            return this._set[r2];
        }
        throw new Error('"' + e2 + '" is not in the set.');
      }, II.prototype.at = function(e2) {
        if (e2 >= 0 && e2 < this._array.length)
          return this._array[e2];
        throw new Error("No element indexed by " + e2);
      }, II.prototype.toArray = function() {
        return this._array.slice();
      };
      var FI = { ArraySet: II };
      function kI() {
        this._array = [], this._sorted = true, this._last = { generatedLine: -1, generatedColumn: 0 };
      }
      kI.prototype.unsortedForEach = function(e2, t2) {
        this._array.forEach(e2, t2);
      }, kI.prototype.add = function(e2) {
        var t2, r2, n2, s2, a2, i2;
        t2 = this._last, r2 = e2, n2 = t2.generatedLine, s2 = r2.generatedLine, a2 = t2.generatedColumn, i2 = r2.generatedColumn, s2 > n2 || s2 == n2 && i2 >= a2 || TI.compareByGeneratedPositionsInflated(t2, r2) <= 0 ? (this._last = e2, this._array.push(e2)) : (this._sorted = false, this._array.push(e2));
      }, kI.prototype.toArray = function() {
        return this._sorted || (this._array.sort(TI.compareByGeneratedPositionsInflated), this._sorted = true), this._array;
      };
      var OI = FI.ArraySet, RI = { MappingList: kI }.MappingList;
      function NI(e2) {
        e2 || (e2 = {}), this._file = TI.getArg(e2, "file", null), this._sourceRoot = TI.getArg(e2, "sourceRoot", null), this._skipValidation = TI.getArg(e2, "skipValidation", false), this._sources = new OI(), this._names = new OI(), this._mappings = new RI(), this._sourcesContents = null;
      }
      NI.prototype._version = 3, NI.fromSourceMap = function(e2) {
        var t2 = e2.sourceRoot, r2 = new NI({ file: e2.file, sourceRoot: t2 });
        return e2.eachMapping(function(e3) {
          var n2 = { generated: { line: e3.generatedLine, column: e3.generatedColumn } };
          e3.source != null && (n2.source = e3.source, t2 != null && (n2.source = TI.relative(t2, n2.source)), n2.original = { line: e3.originalLine, column: e3.originalColumn }, e3.name != null && (n2.name = e3.name)), r2.addMapping(n2);
        }), e2.sources.forEach(function(t3) {
          var n2 = e2.sourceContentFor(t3);
          n2 != null && r2.setSourceContent(t3, n2);
        }), r2;
      }, NI.prototype.addMapping = function(e2) {
        var t2 = TI.getArg(e2, "generated"), r2 = TI.getArg(e2, "original", null), n2 = TI.getArg(e2, "source", null), s2 = TI.getArg(e2, "name", null);
        this._skipValidation || this._validateMapping(t2, r2, n2, s2), n2 != null && (n2 = String(n2), this._sources.has(n2) || this._sources.add(n2)), s2 != null && (s2 = String(s2), this._names.has(s2) || this._names.add(s2)), this._mappings.add({ generatedLine: t2.line, generatedColumn: t2.column, originalLine: r2 != null && r2.line, originalColumn: r2 != null && r2.column, source: n2, name: s2 });
      }, NI.prototype.setSourceContent = function(e2, t2) {
        var r2 = e2;
        this._sourceRoot != null && (r2 = TI.relative(this._sourceRoot, r2)), t2 != null ? (this._sourcesContents || (this._sourcesContents = Object.create(null)), this._sourcesContents[TI.toSetString(r2)] = t2) : this._sourcesContents && (delete this._sourcesContents[TI.toSetString(r2)], Object.keys(this._sourcesContents).length === 0 && (this._sourcesContents = null));
      }, NI.prototype.applySourceMap = function(e2, t2, r2) {
        var n2 = t2;
        if (t2 == null) {
          if (e2.file == null)
            throw new Error(`SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's "file" property. Both were omitted.`);
          n2 = e2.file;
        }
        var s2 = this._sourceRoot;
        s2 != null && (n2 = TI.relative(s2, n2));
        var a2 = new OI(), i2 = new OI();
        this._mappings.unsortedForEach(function(t3) {
          if (t3.source === n2 && t3.originalLine != null) {
            var o2 = e2.originalPositionFor({ line: t3.originalLine, column: t3.originalColumn });
            o2.source != null && (t3.source = o2.source, r2 != null && (t3.source = TI.join(r2, t3.source)), s2 != null && (t3.source = TI.relative(s2, t3.source)), t3.originalLine = o2.line, t3.originalColumn = o2.column, o2.name != null && (t3.name = o2.name));
          }
          var u2 = t3.source;
          u2 == null || a2.has(u2) || a2.add(u2);
          var l2 = t3.name;
          l2 == null || i2.has(l2) || i2.add(l2);
        }, this), this._sources = a2, this._names = i2, e2.sources.forEach(function(t3) {
          var n3 = e2.sourceContentFor(t3);
          n3 != null && (r2 != null && (t3 = TI.join(r2, t3)), s2 != null && (t3 = TI.relative(s2, t3)), this.setSourceContent(t3, n3));
        }, this);
      }, NI.prototype._validateMapping = function(e2, t2, r2, n2) {
        if (t2 && typeof t2.line != "number" && typeof t2.column != "number")
          throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");
        if ((!(e2 && "line" in e2 && "column" in e2 && e2.line > 0 && e2.column >= 0) || t2 || r2 || n2) && !(e2 && "line" in e2 && "column" in e2 && t2 && "line" in t2 && "column" in t2 && e2.line > 0 && e2.column >= 0 && t2.line > 0 && t2.column >= 0 && r2))
          throw new Error("Invalid mapping: " + JSON.stringify({ generated: e2, source: r2, original: t2, name: n2 }));
      }, NI.prototype._serializeMappings = function() {
        for (var e2, t2, r2, n2, s2 = 0, a2 = 1, i2 = 0, o2 = 0, u2 = 0, l2 = 0, c2 = "", p2 = this._mappings.toArray(), d2 = 0, f2 = p2.length; d2 < f2; d2++) {
          if (e2 = "", (t2 = p2[d2]).generatedLine !== a2)
            for (s2 = 0; t2.generatedLine !== a2; )
              e2 += ";", a2++;
          else if (d2 > 0) {
            if (!TI.compareByGeneratedPositionsInflated(t2, p2[d2 - 1]))
              continue;
            e2 += ",";
          }
          e2 += CI(t2.generatedColumn - s2), s2 = t2.generatedColumn, t2.source != null && (n2 = this._sources.indexOf(t2.source), e2 += CI(n2 - l2), l2 = n2, e2 += CI(t2.originalLine - 1 - o2), o2 = t2.originalLine - 1, e2 += CI(t2.originalColumn - i2), i2 = t2.originalColumn, t2.name != null && (r2 = this._names.indexOf(t2.name), e2 += CI(r2 - u2), u2 = r2)), c2 += e2;
        }
        return c2;
      }, NI.prototype._generateSourcesContent = function(e2, t2) {
        return e2.map(function(e3) {
          if (!this._sourcesContents)
            return null;
          t2 != null && (e3 = TI.relative(t2, e3));
          var r2 = TI.toSetString(e3);
          return Object.prototype.hasOwnProperty.call(this._sourcesContents, r2) ? this._sourcesContents[r2] : null;
        }, this);
      }, NI.prototype.toJSON = function() {
        var e2 = { version: this._version, sources: this._sources.toArray(), names: this._names.toArray(), mappings: this._serializeMappings() };
        return this._file != null && (e2.file = this._file), this._sourceRoot != null && (e2.sourceRoot = this._sourceRoot), this._sourcesContents && (e2.sourcesContent = this._generateSourcesContent(e2.sources, e2.sourceRoot)), e2;
      }, NI.prototype.toString = function() {
        return JSON.stringify(this.toJSON());
      };
      var BI = { SourceMapGenerator: NI }, _I = zt(function(e2, t2) {
        function r2(e3, n2, s2, a2, i2, o2) {
          var u2 = Math.floor((n2 - e3) / 2) + e3, l2 = i2(s2, a2[u2], true);
          return l2 === 0 ? u2 : l2 > 0 ? n2 - u2 > 1 ? r2(u2, n2, s2, a2, i2, o2) : o2 == t2.LEAST_UPPER_BOUND ? n2 < a2.length ? n2 : -1 : u2 : u2 - e3 > 1 ? r2(e3, u2, s2, a2, i2, o2) : o2 == t2.LEAST_UPPER_BOUND ? u2 : e3 < 0 ? -1 : e3;
        }
        t2.GREATEST_LOWER_BOUND = 1, t2.LEAST_UPPER_BOUND = 2, t2.search = function(e3, n2, s2, a2) {
          if (n2.length === 0)
            return -1;
          var i2 = r2(-1, n2.length, e3, n2, s2, a2 || t2.GREATEST_LOWER_BOUND);
          if (i2 < 0)
            return -1;
          for (; i2 - 1 >= 0 && s2(n2[i2], n2[i2 - 1], true) === 0; )
            --i2;
          return i2;
        };
      }, "/$$rollup_base$$/packages/babel-core/node_modules/source-map/lib");
      function LI(e2, t2, r2) {
        var n2 = e2[t2];
        e2[t2] = e2[r2], e2[r2] = n2;
      }
      function MI(e2, t2, r2, n2) {
        if (r2 < n2) {
          var s2 = r2 - 1;
          LI(e2, (u2 = r2, l2 = n2, Math.round(u2 + Math.random() * (l2 - u2))), n2);
          for (var a2 = e2[n2], i2 = r2; i2 < n2; i2++)
            t2(e2[i2], a2) <= 0 && LI(e2, s2 += 1, i2);
          LI(e2, s2 + 1, i2);
          var o2 = s2 + 1;
          MI(e2, t2, r2, o2 - 1), MI(e2, t2, o2 + 1, n2);
        }
        var u2, l2;
      }
      var UI = FI.ArraySet, GI = function(e2, t2) {
        MI(e2, t2, 0, e2.length - 1);
      };
      function VI(e2) {
        var t2 = e2;
        return typeof e2 == "string" && (t2 = JSON.parse(e2.replace(/^\)\]\}'/, ""))), t2.sections != null ? new $I(t2) : new HI(t2);
      }
      VI.fromSourceMap = function(e2) {
        return HI.fromSourceMap(e2);
      }, VI.prototype._version = 3, VI.prototype.__generatedMappings = null, Object.defineProperty(VI.prototype, "_generatedMappings", { get: function() {
        return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
      } }), VI.prototype.__originalMappings = null, Object.defineProperty(VI.prototype, "_originalMappings", { get: function() {
        return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
      } }), VI.prototype._charIsMappingSeparator = function(e2, t2) {
        var r2 = e2.charAt(t2);
        return r2 === ";" || r2 === ",";
      }, VI.prototype._parseMappings = function(e2, t2) {
        throw new Error("Subclasses must implement _parseMappings");
      }, VI.GENERATED_ORDER = 1, VI.ORIGINAL_ORDER = 2, VI.GREATEST_LOWER_BOUND = 1, VI.LEAST_UPPER_BOUND = 2, VI.prototype.eachMapping = function(e2, t2, r2) {
        var n2, s2 = t2 || null;
        switch (r2 || VI.GENERATED_ORDER) {
          case VI.GENERATED_ORDER:
            n2 = this._generatedMappings;
            break;
          case VI.ORIGINAL_ORDER:
            n2 = this._originalMappings;
            break;
          default:
            throw new Error("Unknown order of iteration.");
        }
        var a2 = this.sourceRoot;
        n2.map(function(e3) {
          var t3 = e3.source === null ? null : this._sources.at(e3.source);
          return t3 != null && a2 != null && (t3 = TI.join(a2, t3)), { source: t3, generatedLine: e3.generatedLine, generatedColumn: e3.generatedColumn, originalLine: e3.originalLine, originalColumn: e3.originalColumn, name: e3.name === null ? null : this._names.at(e3.name) };
        }, this).forEach(e2, s2);
      }, VI.prototype.allGeneratedPositionsFor = function(e2) {
        var t2 = TI.getArg(e2, "line"), r2 = { source: TI.getArg(e2, "source"), originalLine: t2, originalColumn: TI.getArg(e2, "column", 0) };
        if (this.sourceRoot != null && (r2.source = TI.relative(this.sourceRoot, r2.source)), !this._sources.has(r2.source))
          return [];
        r2.source = this._sources.indexOf(r2.source);
        var n2 = [], s2 = this._findMapping(r2, this._originalMappings, "originalLine", "originalColumn", TI.compareByOriginalPositions, _I.LEAST_UPPER_BOUND);
        if (s2 >= 0) {
          var a2 = this._originalMappings[s2];
          if (e2.column === void 0)
            for (var i2 = a2.originalLine; a2 && a2.originalLine === i2; )
              n2.push({ line: TI.getArg(a2, "generatedLine", null), column: TI.getArg(a2, "generatedColumn", null), lastColumn: TI.getArg(a2, "lastGeneratedColumn", null) }), a2 = this._originalMappings[++s2];
          else
            for (var o2 = a2.originalColumn; a2 && a2.originalLine === t2 && a2.originalColumn == o2; )
              n2.push({ line: TI.getArg(a2, "generatedLine", null), column: TI.getArg(a2, "generatedColumn", null), lastColumn: TI.getArg(a2, "lastGeneratedColumn", null) }), a2 = this._originalMappings[++s2];
        }
        return n2;
      };
      var WI = VI;
      function HI(e2) {
        var t2 = e2;
        typeof e2 == "string" && (t2 = JSON.parse(e2.replace(/^\)\]\}'/, "")));
        var r2 = TI.getArg(t2, "version"), n2 = TI.getArg(t2, "sources"), s2 = TI.getArg(t2, "names", []), a2 = TI.getArg(t2, "sourceRoot", null), i2 = TI.getArg(t2, "sourcesContent", null), o2 = TI.getArg(t2, "mappings"), u2 = TI.getArg(t2, "file", null);
        if (r2 != this._version)
          throw new Error("Unsupported version: " + r2);
        n2 = n2.map(String).map(TI.normalize).map(function(e3) {
          return a2 && TI.isAbsolute(a2) && TI.isAbsolute(e3) ? TI.relative(a2, e3) : e3;
        }), this._names = UI.fromArray(s2.map(String), true), this._sources = UI.fromArray(n2, true), this.sourceRoot = a2, this.sourcesContent = i2, this._mappings = o2, this.file = u2;
      }
      function XI() {
        this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
      }
      HI.prototype = Object.create(VI.prototype), HI.prototype.consumer = VI, HI.fromSourceMap = function(e2) {
        var t2 = Object.create(HI.prototype), r2 = t2._names = UI.fromArray(e2._names.toArray(), true), n2 = t2._sources = UI.fromArray(e2._sources.toArray(), true);
        t2.sourceRoot = e2._sourceRoot, t2.sourcesContent = e2._generateSourcesContent(t2._sources.toArray(), t2.sourceRoot), t2.file = e2._file;
        for (var s2 = e2._mappings.toArray().slice(), a2 = t2.__generatedMappings = [], i2 = t2.__originalMappings = [], o2 = 0, u2 = s2.length; o2 < u2; o2++) {
          var l2 = s2[o2], c2 = new XI();
          c2.generatedLine = l2.generatedLine, c2.generatedColumn = l2.generatedColumn, l2.source && (c2.source = n2.indexOf(l2.source), c2.originalLine = l2.originalLine, c2.originalColumn = l2.originalColumn, l2.name && (c2.name = r2.indexOf(l2.name)), i2.push(c2)), a2.push(c2);
        }
        return GI(t2.__originalMappings, TI.compareByOriginalPositions), t2;
      }, HI.prototype._version = 3, Object.defineProperty(HI.prototype, "sources", { get: function() {
        return this._sources.toArray().map(function(e2) {
          return this.sourceRoot != null ? TI.join(this.sourceRoot, e2) : e2;
        }, this);
      } }), HI.prototype._parseMappings = function(e2, t2) {
        for (var r2, n2, s2, a2, i2, o2 = 1, u2 = 0, l2 = 0, c2 = 0, p2 = 0, d2 = 0, f2 = e2.length, h2 = 0, m2 = {}, y2 = {}, g2 = [], v2 = []; h2 < f2; )
          if (e2.charAt(h2) === ";")
            o2++, h2++, u2 = 0;
          else if (e2.charAt(h2) === ",")
            h2++;
          else {
            for ((r2 = new XI()).generatedLine = o2, a2 = h2; a2 < f2 && !this._charIsMappingSeparator(e2, a2); a2++)
              ;
            if (s2 = m2[n2 = e2.slice(h2, a2)])
              h2 += n2.length;
            else {
              for (s2 = []; h2 < a2; )
                SI(e2, h2, y2), i2 = y2.value, h2 = y2.rest, s2.push(i2);
              if (s2.length === 2)
                throw new Error("Found a source, but no line and column");
              if (s2.length === 3)
                throw new Error("Found a source and line, but no column");
              m2[n2] = s2;
            }
            r2.generatedColumn = u2 + s2[0], u2 = r2.generatedColumn, s2.length > 1 && (r2.source = p2 + s2[1], p2 += s2[1], r2.originalLine = l2 + s2[2], l2 = r2.originalLine, r2.originalLine += 1, r2.originalColumn = c2 + s2[3], c2 = r2.originalColumn, s2.length > 4 && (r2.name = d2 + s2[4], d2 += s2[4])), v2.push(r2), typeof r2.originalLine == "number" && g2.push(r2);
          }
        GI(v2, TI.compareByGeneratedPositionsDeflated), this.__generatedMappings = v2, GI(g2, TI.compareByOriginalPositions), this.__originalMappings = g2;
      }, HI.prototype._findMapping = function(e2, t2, r2, n2, s2, a2) {
        if (e2[r2] <= 0)
          throw new TypeError("Line must be greater than or equal to 1, got " + e2[r2]);
        if (e2[n2] < 0)
          throw new TypeError("Column must be greater than or equal to 0, got " + e2[n2]);
        return _I.search(e2, t2, s2, a2);
      }, HI.prototype.computeColumnSpans = function() {
        for (var e2 = 0; e2 < this._generatedMappings.length; ++e2) {
          var t2 = this._generatedMappings[e2];
          if (e2 + 1 < this._generatedMappings.length) {
            var r2 = this._generatedMappings[e2 + 1];
            if (t2.generatedLine === r2.generatedLine) {
              t2.lastGeneratedColumn = r2.generatedColumn - 1;
              continue;
            }
          }
          t2.lastGeneratedColumn = 1 / 0;
        }
      }, HI.prototype.originalPositionFor = function(e2) {
        var t2 = { generatedLine: TI.getArg(e2, "line"), generatedColumn: TI.getArg(e2, "column") }, r2 = this._findMapping(t2, this._generatedMappings, "generatedLine", "generatedColumn", TI.compareByGeneratedPositionsDeflated, TI.getArg(e2, "bias", VI.GREATEST_LOWER_BOUND));
        if (r2 >= 0) {
          var n2 = this._generatedMappings[r2];
          if (n2.generatedLine === t2.generatedLine) {
            var s2 = TI.getArg(n2, "source", null);
            s2 !== null && (s2 = this._sources.at(s2), this.sourceRoot != null && (s2 = TI.join(this.sourceRoot, s2)));
            var a2 = TI.getArg(n2, "name", null);
            return a2 !== null && (a2 = this._names.at(a2)), { source: s2, line: TI.getArg(n2, "originalLine", null), column: TI.getArg(n2, "originalColumn", null), name: a2 };
          }
        }
        return { source: null, line: null, column: null, name: null };
      }, HI.prototype.hasContentsOfAllSources = function() {
        return !!this.sourcesContent && (this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(e2) {
          return e2 == null;
        }));
      }, HI.prototype.sourceContentFor = function(e2, t2) {
        if (!this.sourcesContent)
          return null;
        if (this.sourceRoot != null && (e2 = TI.relative(this.sourceRoot, e2)), this._sources.has(e2))
          return this.sourcesContent[this._sources.indexOf(e2)];
        var r2;
        if (this.sourceRoot != null && (r2 = TI.urlParse(this.sourceRoot))) {
          var n2 = e2.replace(/^file:\/\//, "");
          if (r2.scheme == "file" && this._sources.has(n2))
            return this.sourcesContent[this._sources.indexOf(n2)];
          if ((!r2.path || r2.path == "/") && this._sources.has("/" + e2))
            return this.sourcesContent[this._sources.indexOf("/" + e2)];
        }
        if (t2)
          return null;
        throw new Error('"' + e2 + '" is not in the SourceMap.');
      }, HI.prototype.generatedPositionFor = function(e2) {
        var t2 = TI.getArg(e2, "source");
        if (this.sourceRoot != null && (t2 = TI.relative(this.sourceRoot, t2)), !this._sources.has(t2))
          return { line: null, column: null, lastColumn: null };
        var r2 = { source: t2 = this._sources.indexOf(t2), originalLine: TI.getArg(e2, "line"), originalColumn: TI.getArg(e2, "column") }, n2 = this._findMapping(r2, this._originalMappings, "originalLine", "originalColumn", TI.compareByOriginalPositions, TI.getArg(e2, "bias", VI.GREATEST_LOWER_BOUND));
        if (n2 >= 0) {
          var s2 = this._originalMappings[n2];
          if (s2.source === r2.source)
            return { line: TI.getArg(s2, "generatedLine", null), column: TI.getArg(s2, "generatedColumn", null), lastColumn: TI.getArg(s2, "lastGeneratedColumn", null) };
        }
        return { line: null, column: null, lastColumn: null };
      };
      var qI = HI;
      function $I(e2) {
        var t2 = e2;
        typeof e2 == "string" && (t2 = JSON.parse(e2.replace(/^\)\]\}'/, "")));
        var r2 = TI.getArg(t2, "version"), n2 = TI.getArg(t2, "sections");
        if (r2 != this._version)
          throw new Error("Unsupported version: " + r2);
        this._sources = new UI(), this._names = new UI();
        var s2 = { line: -1, column: 0 };
        this._sections = n2.map(function(e3) {
          if (e3.url)
            throw new Error("Support for url field in sections not implemented.");
          var t3 = TI.getArg(e3, "offset"), r3 = TI.getArg(t3, "line"), n3 = TI.getArg(t3, "column");
          if (r3 < s2.line || r3 === s2.line && n3 < s2.column)
            throw new Error("Section offsets must be ordered and non-overlapping.");
          return s2 = t3, { generatedOffset: { generatedLine: r3 + 1, generatedColumn: n3 + 1 }, consumer: new VI(TI.getArg(e3, "map")) };
        });
      }
      $I.prototype = Object.create(VI.prototype), $I.prototype.constructor = VI, $I.prototype._version = 3, Object.defineProperty($I.prototype, "sources", { get: function() {
        for (var e2 = [], t2 = 0; t2 < this._sections.length; t2++)
          for (var r2 = 0; r2 < this._sections[t2].consumer.sources.length; r2++)
            e2.push(this._sections[t2].consumer.sources[r2]);
        return e2;
      } }), $I.prototype.originalPositionFor = function(e2) {
        var t2 = { generatedLine: TI.getArg(e2, "line"), generatedColumn: TI.getArg(e2, "column") }, r2 = _I.search(t2, this._sections, function(e3, t3) {
          var r3 = e3.generatedLine - t3.generatedOffset.generatedLine;
          return r3 || e3.generatedColumn - t3.generatedOffset.generatedColumn;
        }), n2 = this._sections[r2];
        return n2 ? n2.consumer.originalPositionFor({ line: t2.generatedLine - (n2.generatedOffset.generatedLine - 1), column: t2.generatedColumn - (n2.generatedOffset.generatedLine === t2.generatedLine ? n2.generatedOffset.generatedColumn - 1 : 0), bias: e2.bias }) : { source: null, line: null, column: null, name: null };
      }, $I.prototype.hasContentsOfAllSources = function() {
        return this._sections.every(function(e2) {
          return e2.consumer.hasContentsOfAllSources();
        });
      }, $I.prototype.sourceContentFor = function(e2, t2) {
        for (var r2 = 0; r2 < this._sections.length; r2++) {
          var n2 = this._sections[r2].consumer.sourceContentFor(e2, true);
          if (n2)
            return n2;
        }
        if (t2)
          return null;
        throw new Error('"' + e2 + '" is not in the SourceMap.');
      }, $I.prototype.generatedPositionFor = function(e2) {
        for (var t2 = 0; t2 < this._sections.length; t2++) {
          var r2 = this._sections[t2];
          if (r2.consumer.sources.indexOf(TI.getArg(e2, "source")) !== -1) {
            var n2 = r2.consumer.generatedPositionFor(e2);
            if (n2)
              return { line: n2.line + (r2.generatedOffset.generatedLine - 1), column: n2.column + (r2.generatedOffset.generatedLine === n2.line ? r2.generatedOffset.generatedColumn - 1 : 0) };
          }
        }
        return { line: null, column: null };
      }, $I.prototype._parseMappings = function(e2, t2) {
        this.__generatedMappings = [], this.__originalMappings = [];
        for (var r2 = 0; r2 < this._sections.length; r2++)
          for (var n2 = this._sections[r2], s2 = n2.consumer._generatedMappings, a2 = 0; a2 < s2.length; a2++) {
            var i2 = s2[a2], o2 = n2.consumer._sources.at(i2.source);
            n2.consumer.sourceRoot !== null && (o2 = TI.join(n2.consumer.sourceRoot, o2)), this._sources.add(o2), o2 = this._sources.indexOf(o2);
            var u2 = n2.consumer._names.at(i2.name);
            this._names.add(u2), u2 = this._names.indexOf(u2);
            var l2 = { source: o2, generatedLine: i2.generatedLine + (n2.generatedOffset.generatedLine - 1), generatedColumn: i2.generatedColumn + (n2.generatedOffset.generatedLine === i2.generatedLine ? n2.generatedOffset.generatedColumn - 1 : 0), originalLine: i2.originalLine, originalColumn: i2.originalColumn, name: u2 };
            this.__generatedMappings.push(l2), typeof l2.originalLine == "number" && this.__originalMappings.push(l2);
          }
        GI(this.__generatedMappings, TI.compareByGeneratedPositionsDeflated), GI(this.__originalMappings, TI.compareByOriginalPositions);
      };
      var KI = { SourceMapConsumer: WI, BasicSourceMapConsumer: qI, IndexedSourceMapConsumer: $I }, zI = BI.SourceMapGenerator, JI = /(\r?\n)/, YI = "$$$isSourceNode$$$";
      function QI(e2, t2, r2, n2, s2) {
        this.children = [], this.sourceContents = {}, this.line = e2 == null ? null : e2, this.column = t2 == null ? null : t2, this.source = r2 == null ? null : r2, this.name = s2 == null ? null : s2, this[YI] = true, n2 != null && this.add(n2);
      }
      QI.fromStringWithSourceMap = function(e2, t2, r2) {
        var n2 = new QI(), s2 = e2.split(JI), a2 = 0, i2 = function() {
          return e3() + (e3() || "");
          function e3() {
            return a2 < s2.length ? s2[a2++] : void 0;
          }
        }, o2 = 1, u2 = 0, l2 = null;
        return t2.eachMapping(function(e3) {
          if (l2 !== null) {
            if (!(o2 < e3.generatedLine)) {
              var t3 = (r3 = s2[a2]).substr(0, e3.generatedColumn - u2);
              return s2[a2] = r3.substr(e3.generatedColumn - u2), u2 = e3.generatedColumn, c2(l2, t3), void (l2 = e3);
            }
            c2(l2, i2()), o2++, u2 = 0;
          }
          for (; o2 < e3.generatedLine; )
            n2.add(i2()), o2++;
          if (u2 < e3.generatedColumn) {
            var r3 = s2[a2];
            n2.add(r3.substr(0, e3.generatedColumn)), s2[a2] = r3.substr(e3.generatedColumn), u2 = e3.generatedColumn;
          }
          l2 = e3;
        }, this), a2 < s2.length && (l2 && c2(l2, i2()), n2.add(s2.splice(a2).join(""))), t2.sources.forEach(function(e3) {
          var s3 = t2.sourceContentFor(e3);
          s3 != null && (r2 != null && (e3 = TI.join(r2, e3)), n2.setSourceContent(e3, s3));
        }), n2;
        function c2(e3, t3) {
          if (e3 === null || e3.source === void 0)
            n2.add(t3);
          else {
            var s3 = r2 ? TI.join(r2, e3.source) : e3.source;
            n2.add(new QI(e3.originalLine, e3.originalColumn, s3, t3, e3.name));
          }
        }
      }, QI.prototype.add = function(e2) {
        if (Array.isArray(e2))
          e2.forEach(function(e3) {
            this.add(e3);
          }, this);
        else {
          if (!e2[YI] && typeof e2 != "string")
            throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e2);
          e2 && this.children.push(e2);
        }
        return this;
      }, QI.prototype.prepend = function(e2) {
        if (Array.isArray(e2))
          for (var t2 = e2.length - 1; t2 >= 0; t2--)
            this.prepend(e2[t2]);
        else {
          if (!e2[YI] && typeof e2 != "string")
            throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e2);
          this.children.unshift(e2);
        }
        return this;
      }, QI.prototype.walk = function(e2) {
        for (var t2, r2 = 0, n2 = this.children.length; r2 < n2; r2++)
          (t2 = this.children[r2])[YI] ? t2.walk(e2) : t2 !== "" && e2(t2, { source: this.source, line: this.line, column: this.column, name: this.name });
      }, QI.prototype.join = function(e2) {
        var t2, r2, n2 = this.children.length;
        if (n2 > 0) {
          for (t2 = [], r2 = 0; r2 < n2 - 1; r2++)
            t2.push(this.children[r2]), t2.push(e2);
          t2.push(this.children[r2]), this.children = t2;
        }
        return this;
      }, QI.prototype.replaceRight = function(e2, t2) {
        var r2 = this.children[this.children.length - 1];
        return r2[YI] ? r2.replaceRight(e2, t2) : typeof r2 == "string" ? this.children[this.children.length - 1] = r2.replace(e2, t2) : this.children.push("".replace(e2, t2)), this;
      }, QI.prototype.setSourceContent = function(e2, t2) {
        this.sourceContents[TI.toSetString(e2)] = t2;
      }, QI.prototype.walkSourceContents = function(e2) {
        for (var t2 = 0, r2 = this.children.length; t2 < r2; t2++)
          this.children[t2][YI] && this.children[t2].walkSourceContents(e2);
        var n2 = Object.keys(this.sourceContents);
        for (t2 = 0, r2 = n2.length; t2 < r2; t2++)
          e2(TI.fromSetString(n2[t2]), this.sourceContents[n2[t2]]);
      }, QI.prototype.toString = function() {
        var e2 = "";
        return this.walk(function(t2) {
          e2 += t2;
        }), e2;
      }, QI.prototype.toStringWithSourceMap = function(e2) {
        var t2 = { code: "", line: 1, column: 0 }, r2 = new zI(e2), n2 = false, s2 = null, a2 = null, i2 = null, o2 = null;
        return this.walk(function(e3, u2) {
          t2.code += e3, u2.source !== null && u2.line !== null && u2.column !== null ? (s2 === u2.source && a2 === u2.line && i2 === u2.column && o2 === u2.name || r2.addMapping({ source: u2.source, original: { line: u2.line, column: u2.column }, generated: { line: t2.line, column: t2.column }, name: u2.name }), s2 = u2.source, a2 = u2.line, i2 = u2.column, o2 = u2.name, n2 = true) : n2 && (r2.addMapping({ generated: { line: t2.line, column: t2.column } }), s2 = null, n2 = false);
          for (var l2 = 0, c2 = e3.length; l2 < c2; l2++)
            e3.charCodeAt(l2) === 10 ? (t2.line++, t2.column = 0, l2 + 1 === c2 ? (s2 = null, n2 = false) : n2 && r2.addMapping({ source: u2.source, original: { line: u2.line, column: u2.column }, generated: { line: t2.line, column: t2.column }, name: u2.name })) : t2.column++;
        }), this.walkSourceContents(function(e3, t3) {
          r2.setSourceContent(e3, t3);
        }), { code: t2.code, map: r2 };
      };
      var ZI = { SourceMapGenerator: BI.SourceMapGenerator, SourceMapConsumer: KI.SourceMapConsumer, SourceNode: { SourceNode: QI }.SourceNode };
      function eF(e2, t2) {
        for (var r2, n2 = rF(e2), s2 = rF(t2), a2 = new ZI.SourceMapGenerator(), i2 = f(n2.sources); !(r2 = i2()).done; ) {
          var o2 = r2.value.source;
          typeof o2.content == "string" && a2.setSourceContent(o2.path, o2.content);
        }
        if (s2.sources.length === 1) {
          var u2 = s2.sources[0], l2 = new Map();
          !function(e3, t3) {
            for (var r3, n3 = f(e3.sources); !(r3 = n3()).done; )
              for (var s3, a3 = r3.value, i3 = a3.source, o3 = f(a3.mappings); !(s3 = o3()).done; )
                for (var u3, l3 = s3.value, c3 = l3.original, p3 = f(l3.generated); !(u3 = p3()).done; ) {
                  t3(u3.value, c3, i3);
                }
          }(n2, function(e3, t3, r3) {
            !function(e4, t4, r4) {
              for (var n3, s3 = f(function(e5, t5) {
                var r5 = e5.mappings, n4 = t5.line, s4 = t5.columnStart, a4 = t5.columnEnd;
                return function(e6, t6) {
                  for (var r6 = function(e7, t7) {
                    var r7 = 0, n6 = e7.length;
                    for (; r7 < n6; ) {
                      var s6 = Math.floor((r7 + n6) / 2), a5 = t7(e7[s6]);
                      if (a5 === 0) {
                        r7 = s6;
                        break;
                      }
                      a5 >= 0 ? n6 = s6 : r7 = s6 + 1;
                    }
                    var i4 = r7;
                    if (i4 < e7.length) {
                      for (; i4 >= 0 && t7(e7[i4]) >= 0; )
                        i4--;
                      return i4 + 1;
                    }
                    return i4;
                  }(e6, t6), n5 = [], s5 = r6; s5 < e6.length && t6(e6[s5]) === 0; s5++)
                    n5.push(e6[s5]);
                  return n5;
                }(r5, function(e6) {
                  var t6 = e6.original;
                  return n4 > t6.line ? -1 : n4 < t6.line ? 1 : s4 >= t6.columnEnd ? -1 : a4 <= t6.columnStart ? 1 : 0;
                });
              }(e4, t4)); !(n3 = s3()).done; )
                for (var a3, i3 = f(n3.value.generated); !(a3 = i3()).done; ) {
                  r4(a3.value);
                }
            }(u2, e3, function(e4) {
              var n3 = tF(e4);
              l2.has(n3) || (l2.set(n3, e4), a2.addMapping({ source: r3.path, original: { line: t3.line, column: t3.columnStart }, generated: { line: e4.line, column: e4.columnStart }, name: t3.name }));
            });
          });
          for (var c2, p2 = f(l2.values()); !(c2 = p2()).done; ) {
            var d2 = c2.value;
            if (d2.columnEnd !== 1 / 0) {
              var h2 = { line: d2.line, columnStart: d2.columnEnd }, m2 = tF(h2);
              l2.has(m2) || a2.addMapping({ generated: { line: h2.line, column: h2.columnStart } });
            }
          }
        }
        var y2 = a2.toJSON();
        return typeof n2.sourceRoot == "string" && (y2.sourceRoot = n2.sourceRoot), y2;
      }
      function tF(e2) {
        return e2.line + "/" + e2.columnStart;
      }
      function rF(e2) {
        var t2 = new ZI.SourceMapConsumer(Object.assign({}, e2, { sourceRoot: null })), r2 = new Map(), n2 = new Map(), s2 = null;
        return t2.computeColumnSpans(), t2.eachMapping(function(e3) {
          if (e3.originalLine !== null) {
            var a2 = r2.get(e3.source);
            a2 || (a2 = { path: e3.source, content: t2.sourceContentFor(e3.source, true) }, r2.set(e3.source, a2));
            var i2 = n2.get(a2);
            i2 || (i2 = { source: a2, mappings: [] }, n2.set(a2, i2));
            var o2 = { line: e3.originalLine, columnStart: e3.originalColumn, columnEnd: 1 / 0, name: e3.name };
            s2 && s2.source === a2 && s2.mapping.line === e3.originalLine && (s2.mapping.columnEnd = e3.originalColumn), s2 = { source: a2, mapping: o2 }, i2.mappings.push({ original: o2, generated: t2.allGeneratedPositionsFor({ source: e3.source, line: e3.originalLine, column: e3.originalColumn }).map(function(e4) {
              return { line: e4.line, columnStart: e4.column, columnEnd: e4.lastColumn + 1 };
            }) });
          }
        }, null, ZI.SourceMapConsumer.ORIGINAL_ORDER), { file: e2.file, sourceRoot: e2.sourceRoot, sources: Array.from(n2.values()) };
      }
      function nF(e2, t2) {
        for (var r2, n2, s2 = t2.opts, a2 = t2.ast, i2 = t2.code, o2 = t2.inputMap, u2 = [], l2 = f(e2); !(r2 = l2()).done; )
          for (var c2, p2 = f(r2.value); !(c2 = p2()).done; ) {
            var d2 = c2.value.generatorOverride;
            if (d2) {
              var h2 = d2(a2, s2.generatorOpts, i2, Bf);
              h2 !== void 0 && u2.push(h2);
            }
          }
        if (u2.length === 0)
          n2 = Bf(a2, s2.generatorOpts, i2);
        else {
          if (u2.length !== 1)
            throw new Error("More than one plugin attempted to override codegen.");
          if (typeof (n2 = u2[0]).then == "function")
            throw new Error("You appear to be using an async codegen plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");
        }
        var m2 = n2, y2 = m2.code, g2 = m2.map;
        return g2 && o2 && (g2 = eF(o2.toObject(), g2)), s2.sourceMaps !== "inline" && s2.sourceMaps !== "both" || (y2 += "\n" + iI.fromObject(g2).toComment()), s2.sourceMaps === "inline" && (g2 = null), { outputCode: y2, outputMap: g2 };
      }
      var sF = bh.mark(iF), aF = bh.mark(oF);
      function iF(e2, t2, r2) {
        var n2, s2, a2, i2, o2, u2, l2;
        return bh.wrap(function(c2) {
          for (; ; )
            switch (c2.prev = c2.next) {
              case 0:
                return c2.delegateYield(gI(e2.passes, rI(e2), t2, r2), "t0", 1);
              case 1:
                return n2 = c2.t0, s2 = n2.opts, c2.prev = 3, c2.delegateYield(oF(n2, e2.passes), "t1", 5);
              case 5:
                c2.next = 12;
                break;
              case 7:
                throw c2.prev = 7, c2.t2 = c2.catch(3), c2.t2.message = ((a2 = s2.filename) != null ? a2 : "unknown") + ": " + c2.t2.message, c2.t2.code || (c2.t2.code = "BABEL_TRANSFORM_ERROR"), c2.t2;
              case 12:
                c2.prev = 12, s2.code !== false && (u2 = nF(e2.passes, n2), i2 = u2.outputCode, o2 = u2.outputMap), c2.next = 21;
                break;
              case 16:
                throw c2.prev = 16, c2.t3 = c2.catch(12), c2.t3.message = ((l2 = s2.filename) != null ? l2 : "unknown") + ": " + c2.t3.message, c2.t3.code || (c2.t3.code = "BABEL_GENERATE_ERROR"), c2.t3;
              case 21:
                return c2.abrupt("return", { metadata: n2.metadata, options: s2, ast: s2.ast === true ? n2.ast : null, code: i2 === void 0 ? null : i2, map: o2 === void 0 ? null : o2, sourceType: n2.ast.program.sourceType });
              case 22:
              case "end":
                return c2.stop();
            }
        }, sF, null, [[3, 7], [12, 16]]);
      }
      function oF(e2, t2) {
        var r2, n2, s2, a2, i2, o2, u2, c2, p2, d2, h2, m2, y2, g2, v2, b2, E2, x2, D2, A2, w2, C2, S2, T2, j2;
        return bh.wrap(function(P2) {
          for (; ; )
            switch (P2.prev = P2.next) {
              case 0:
                r2 = f(t2);
              case 1:
                if ((n2 = r2()).done) {
                  P2.next = 35;
                  break;
                }
                for (s2 = n2.value, a2 = [], i2 = [], o2 = [], u2 = f(s2.concat([(QP || (QP = new tw(Object.assign({}, tI, { visitor: vv.explode(tI.visitor) }), {})), QP)])); !(c2 = u2()).done; )
                  p2 = c2.value, d2 = new ZP(e2, p2.key, p2.options), a2.push([p2, d2]), i2.push(d2), o2.push(p2.visitor);
                h2 = 0, m2 = a2;
              case 8:
                if (!(h2 < m2.length)) {
                  P2.next = 19;
                  break;
                }
                if (y2 = l(m2[h2], 2), g2 = y2[0], v2 = y2[1], !(b2 = g2.pre)) {
                  P2.next = 16;
                  break;
                }
                return E2 = b2.call(v2, e2), P2.delegateYield([], "t0", 14);
              case 14:
                if (!uF(E2)) {
                  P2.next = 16;
                  break;
                }
                throw new Error("You appear to be using an plugin with an async .pre, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");
              case 16:
                h2++, P2.next = 8;
                break;
              case 19:
                x2 = vv.visitors.merge(o2, i2, e2.opts.wrapPluginVisitorMethod), vv(e2.ast, x2, e2.scope), D2 = 0, A2 = a2;
              case 22:
                if (!(D2 < A2.length)) {
                  P2.next = 33;
                  break;
                }
                if (w2 = l(A2[D2], 2), C2 = w2[0], S2 = w2[1], !(T2 = C2.post)) {
                  P2.next = 30;
                  break;
                }
                return j2 = T2.call(S2, e2), P2.delegateYield([], "t1", 28);
              case 28:
                if (!uF(j2)) {
                  P2.next = 30;
                  break;
                }
                throw new Error("You appear to be using an plugin with an async .post, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");
              case 30:
                D2++, P2.next = 22;
                break;
              case 33:
                P2.next = 1;
                break;
              case 35:
              case "end":
                return P2.stop();
            }
        }, aF);
      }
      function uF(e2) {
        return !(!e2 || typeof e2 != "object" && typeof e2 != "function" || !e2.then || typeof e2.then != "function");
      }
      var lF = RA(bh.mark(function e2(t2, r2) {
        var n2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return e3.delegateYield(jP(r2), "t0", 1);
              case 1:
                if ((n2 = e3.t0) !== null) {
                  e3.next = 4;
                  break;
                }
                return e3.abrupt("return", null);
              case 4:
                return e3.delegateYield(iF(n2, t2), "t1", 5);
              case 5:
                return e3.abrupt("return", e3.t1);
              case 6:
              case "end":
                return e3.stop();
            }
        }, e2);
      })), cF = function(e2, t2, r2) {
        if (typeof t2 == "function" && (r2 = t2, t2 = void 0), r2 === void 0)
          return lF.sync(e2, t2);
        lF.errback(e2, t2, r2);
      }, pF = lF.sync, dF = lF.async, fF = function(e2, t2, r2) {
        typeof t2 == "function" && (r2 = t2), r2(new Error("Transforming files is not supported in browsers"), null);
      };
      function hF() {
        throw new Error("Transforming files is not supported in browsers");
      }
      function mF() {
        return Promise.reject(new Error("Transforming files is not supported in browsers"));
      }
      var yF = RA(bh.mark(function e2(t2, r2, n2) {
        var s2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return e3.delegateYield(jP(n2), "t0", 1);
              case 1:
                if ((s2 = e3.t0) !== null) {
                  e3.next = 4;
                  break;
                }
                return e3.abrupt("return", null);
              case 4:
                if (t2) {
                  e3.next = 6;
                  break;
                }
                throw new Error("No AST given");
              case 6:
                return e3.delegateYield(iF(s2, r2, t2), "t1", 7);
              case 7:
                return e3.abrupt("return", e3.t1);
              case 8:
              case "end":
                return e3.stop();
            }
        }, e2);
      })), gF = function(e2, t2, r2, n2) {
        if (typeof r2 == "function" && (n2 = r2, r2 = void 0), n2 === void 0)
          return yF.sync(e2, t2, r2);
        yF.errback(e2, t2, r2, n2);
      }, vF = yF.sync, bF = yF.async, EF = RA(bh.mark(function e2(t2, r2) {
        var n2;
        return bh.wrap(function(e3) {
          for (; ; )
            switch (e3.prev = e3.next) {
              case 0:
                return e3.delegateYield(jP(r2), "t0", 1);
              case 1:
                if ((n2 = e3.t0) !== null) {
                  e3.next = 4;
                  break;
                }
                return e3.abrupt("return", null);
              case 4:
                return e3.delegateYield(pI(n2.passes, rI(n2), t2), "t1", 5);
              case 5:
                return e3.abrupt("return", e3.t1);
              case 6:
              case "end":
                return e3.stop();
            }
        }, e2);
      })), xF = function(e2, t2, r2) {
        if (typeof t2 == "function" && (r2 = t2, t2 = void 0), r2 === void 0)
          return EF.sync(e2, t2);
        EF.errback(e2, t2, r2);
      }, DF = EF.sync, AF = EF.async, wF = "7.14.6", CF = Object.freeze([".js", ".jsx", ".es6", ".es", ".mjs", ".cjs"]), SF = function() {
        function e2() {
        }
        return e2.prototype.init = function(e3) {
          return qP(e3);
        }, e2;
      }();
      function TF(e2) {
        throw new Error("The (" + e2 + ") Babel 5 plugin is being run with an unsupported Babel version.");
      }
      function jF(e2) {
        return function(t2, r2, n2) {
          for (var s2, a2, i2 = 0, o2 = Object.keys(PF); i2 < o2.length; i2++) {
            var u2, l2 = o2[i2];
            t2[l2] || ((a2 = (u2 = a2) != null ? u2 : IF(t2))[l2] = PF[l2](a2));
          }
          return e2((s2 = a2) != null ? s2 : t2, r2 || {}, n2);
        };
      }
      var PF = { assertVersion: function(e2) {
        return function(t2) {
          !function(e3, t3) {
            if (typeof e3 == "number") {
              if (!Number.isInteger(e3))
                throw new Error("Expected string or integer value.");
              e3 = "^" + e3 + ".0.0-0";
            }
            if (typeof e3 != "string")
              throw new Error("Expected string or integer value.");
            var r2, n2 = Error.stackTraceLimit;
            typeof n2 == "number" && n2 < 25 && (Error.stackTraceLimit = 25);
            r2 = t3.slice(0, 2) === "7." ? new Error('Requires Babel "^7.0.0-beta.41", but was loaded with "' + t3 + `". You'll need to update your @babel/core version.`) : new Error('Requires Babel "' + e3 + '", but was loaded with "' + t3 + `". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry that doesn't mention "@babel/core" or "babel-core" to see what is calling Babel.`);
            typeof n2 == "number" && (Error.stackTraceLimit = n2);
            throw Object.assign(r2, { code: "BABEL_VERSION_UNSUPPORTED", version: t3, range: e3 });
          }(t2, e2.version);
        };
      }, targets: function() {
        return function() {
          return {};
        };
      }, assumption: function() {
        return function() {
        };
      } };
      function IF(e2) {
        var t2 = null;
        return typeof e2.version == "string" && /^7\./.test(e2.version) && (!(t2 = Object.getPrototypeOf(e2)) || FF(t2, "version") && FF(t2, "transform") && FF(t2, "template") && FF(t2, "types") || (t2 = null)), Object.assign({}, t2, e2);
      }
      function FF(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }
      var kF = Object.freeze({ __proto__: null, declare: jF }), OF = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = t2.helperVersion, n2 = r2 === void 0 ? "7.0.0-beta.0" : r2, s2 = t2.whitelist, a2 = s2 !== void 0 && s2;
        if (a2 !== false && (!Array.isArray(a2) || a2.some(function(e3) {
          return typeof e3 != "string";
        })))
          throw new Error(".whitelist must be undefined, false, or an array of strings");
        var i2 = a2 ? new Set(a2) : null;
        return { name: "external-helpers", pre: function(e3) {
          e3.set("helperGenerator", function(t3) {
            if ((!e3.availableHelper || e3.availableHelper(t3, n2)) && (!i2 || i2.has(t3)))
              return Fs2(Ds("babelHelpers"), Ds(t3));
          });
        } };
      }), RF = Kt(kF), NF = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-async-generators", manipulateOptions: function(e4, t3) {
            t3.plugins.push("asyncGenerators");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-standalone/node_modules/@babel/plugin-syntax-async-generators/lib"), BF = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-class-properties", manipulateOptions: function(e4, t3) {
            t3.plugins.push("classProperties", "classPrivateProperties", "classPrivateMethods");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-standalone/node_modules/@babel/plugin-syntax-class-properties/lib"), _F = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-class-static-block", manipulateOptions: function(e3, t2) {
          t2.plugins.push("classStaticBlock");
        } };
      }), LF = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-decimal", manipulateOptions: function(e3, t2) {
          t2.plugins.push("decimal");
        } };
      }), MF = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = t2.legacy, n2 = r2 !== void 0 && r2;
        if (typeof n2 != "boolean")
          throw new Error("'legacy' must be a boolean.");
        var s2 = t2.decoratorsBeforeExport;
        if (s2 === void 0) {
          if (!n2)
            throw new Error("The '@babel/plugin-syntax-decorators' plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean. If you want to use the legacy decorators semantics, you can set the 'legacy: true' option.");
        } else {
          if (n2)
            throw new Error("'decoratorsBeforeExport' can't be used with legacy decorators.");
          if (typeof s2 != "boolean")
            throw new Error("'decoratorsBeforeExport' must be a boolean.");
        }
        return { name: "syntax-decorators", manipulateOptions: function(e3, t3) {
          t3.plugins.push(n2 ? "decorators-legacy" : ["decorators", { decoratorsBeforeExport: s2 }]);
        } };
      }), UF = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-do-expressions", manipulateOptions: function(e3, t2) {
          t2.plugins.push("doExpressions");
        } };
      }), GF = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-export-default-from", manipulateOptions: function(e3, t2) {
          t2.plugins.push("exportDefaultFrom");
        } };
      }), VF = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = t2.all, n2 = t2.enums;
        if (typeof r2 != "boolean" && r2 !== void 0)
          throw new Error(".all must be a boolean, or undefined");
        if (typeof n2 != "boolean" && n2 !== void 0)
          throw new Error(".enums must be a boolean, or undefined");
        return { name: "syntax-flow", manipulateOptions: function(e3, t3) {
          t3.plugins.some(function(e4) {
            return (Array.isArray(e4) ? e4[0] : e4) === "typescript";
          }) || t3.plugins.push(["flow", { all: r2, enums: n2 }]);
        } };
      }), WF = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-function-bind", manipulateOptions: function(e3, t2) {
          t2.plugins.push("functionBind");
        } };
      }), HF = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-function-sent", manipulateOptions: function(e3, t2) {
          t2.plugins.push("functionSent");
        } };
      }), XF = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-module-blocks", manipulateOptions: function(e3, t2) {
          t2.plugins.push("moduleBlocks");
        } };
      }), qF = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-import-meta", manipulateOptions: function(e4, t3) {
            t3.plugins.push("importMeta");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-standalone/node_modules/@babel/plugin-syntax-import-meta/lib"), $F = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-jsx", manipulateOptions: function(e3, t2) {
          t2.plugins.some(function(e4) {
            return (Array.isArray(e4) ? e4[0] : e4) === "typescript";
          }) || t2.plugins.push("jsx");
        } };
      }), KF = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-import-assertions", manipulateOptions: function(e3, t2) {
          t2.plugins.push(["importAssertions"]);
        } };
      }), zF = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-object-rest-spread", manipulateOptions: function(e4, t3) {
            t3.plugins.push("objectRestSpread");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-standalone/node_modules/@babel/plugin-syntax-object-rest-spread/lib"), JF = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-optional-catch-binding", manipulateOptions: function(e4, t3) {
            t3.plugins.push("optionalCatchBinding");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-standalone/node_modules/@babel/plugin-syntax-optional-catch-binding/lib"), YF = ["minimal", "smart", "fsharp"], QF = jF(function(e2, t2) {
        var r2 = t2.proposal;
        if (e2.assertVersion(7), typeof r2 != "string" || !YF.includes(r2))
          throw new Error("The pipeline operator plugin requires a 'proposal' option.'proposal' must be one of: " + YF.join(", ") + ". More details: https://babeljs.io/docs/en/next/babel-plugin-proposal-pipeline-operator");
        return { name: "syntax-pipeline-operator", manipulateOptions: function(e3, t3) {
          t3.plugins.push(["pipelineOperator", { proposal: r2 }]);
        } };
      }), ZF = jF(function(e2, t2) {
        return e2.assertVersion(7), { name: "syntax-record-and-tuple", manipulateOptions: function(e3, r2) {
          e3.generatorOpts.recordAndTupleSyntaxType = t2.syntaxType, r2.plugins.push(["recordAndTuple", { syntaxType: t2.syntaxType }]);
        } };
      }), ek = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-top-level-await", manipulateOptions: function(e3, t2) {
          t2.plugins.push("topLevelAwait");
        } };
      });
      function tk(e2, t2) {
        var r2 = [];
        e2.forEach(function(e3, n3) {
          (Array.isArray(e3) ? e3[0] : e3) === t2 && r2.unshift(n3);
        });
        for (var n2 = 0, s2 = r2; n2 < s2.length; n2++) {
          var a2 = s2[n2];
          e2.splice(a2, 1);
        }
      }
      var rk = jF(function(e2, t2) {
        var r2 = t2.isTSX;
        return e2.assertVersion(7), { name: "syntax-typescript", manipulateOptions: function(e3, t3) {
          var n2 = t3.plugins;
          tk(n2, "flow"), tk(n2, "jsx"), t3.plugins.push("typescript", "classProperties"), t3.plugins.push("objectRestSpread"), r2 && t3.plugins.push("jsx");
        } };
      }), nk = Eg.expression("\n  (function () {\n    var REF = FUNCTION;\n    return function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    };\n  })()\n"), sk = Eg.expression("\n  (function () {\n    var REF = FUNCTION;\n    function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    }\n    return NAME;\n  })()\n"), ak = Eg("\n  function NAME(PARAMS) { return REF.apply(this, arguments); }\n  function REF() {\n    REF = FUNCTION;\n    return REF.apply(this, arguments);\n  }\n");
      function ik(e2, t2, r2) {
        r2 === void 0 && (r2 = true), e2.isMethod() ? function(e3, t3) {
          var r3 = e3.node, n2 = r3.body, s2 = xs(null, [], os(n2.body), true);
          n2.body = [Ls(ls(ls(t3, [s2]), []))], r3.async = false, r3.generator = false, e3.get("body.body.0.argument.callee.arguments.0").unwrapFunctionEnvironment();
        }(e2, t2) : function(e3, t3, r3) {
          var n2 = e3.node, s2 = e3.isFunctionDeclaration(), a2 = n2.id, i2 = s2 ? ak : a2 ? sk : nk;
          e3.isArrowFunctionExpression() && e3.arrowFunctionToExpression({ noNewArrows: r3 }), n2.id = null, s2 && (n2.type = "FunctionExpression");
          var o2 = ls(t3, [n2]), u2 = i2({ NAME: a2 || null, REF: e3.scope.generateUidIdentifier(a2 ? a2.name : "ref"), FUNCTION: o2, PARAMS: n2.params.reduce(function(t4, r4) {
            return t4.done = t4.done || re(r4) || X(r4), t4.done || t4.params.push(e3.scope.generateUidIdentifier("x")), t4;
          }, { params: [], done: false }).params });
          if (s2)
            e3.replaceWith(u2[0]), e3.insertAfter(u2[1]);
          else {
            var l2 = u2.callee.body.body[1].argument;
            a2 || Cg({ node: l2, parent: e3.parent, scope: e3.scope }), !l2 || l2.id || n2.params.length ? e3.replaceWith(u2) : e3.replaceWith(o2);
          }
        }(e2, t2, r2);
      }
      function ok(e2) {
        var t2 = e2.node || e2;
        (function(e3) {
          var t3 = e3.leadingComments;
          return !!t3 && t3.some(function(e4) {
            return /[@#]__PURE__/.test(e4.value);
          });
        })(t2) || el(t2, "leading", "#__PURE__");
      }
      var uk = { Function: function(e2) {
        e2.skip();
      }, AwaitExpression: function(e2, t2) {
        var r2 = t2.wrapAwait, n2 = e2.get("argument");
        e2.parentPath.isYieldExpression() ? e2.replaceWith(n2.node) : e2.replaceWith(xa(r2 ? ls(Ju(r2), [n2.node]) : n2.node));
      } };
      function lk(e2, t2, r2) {
        e2.traverse(uk, { wrapAwait: t2.wrapAwait });
        var n2 = function(e3) {
          if (e3.parentPath.isCallExpression({ callee: e3.node }))
            return true;
          var t3 = e3.parentPath;
          if (t3.isMemberExpression() && F(t3.node.property, { name: "bind" })) {
            var r3 = t3.parentPath;
            return r3.isCallExpression() && r3.node.arguments.length === 1 && J(r3.node.arguments[0]) && r3.parentPath.isCallExpression({ callee: r3.node });
          }
          return false;
        }(e2);
        e2.node.async = false, e2.node.generator = true, ik(e2, Ju(t2.wrapAsync), r2), e2.isObjectMethod() || e2.isClassMethod() || e2.parentPath.isObjectProperty() || e2.parentPath.isClassProperty() || n2 || !e2.isExpression() || ok(e2);
      }
      var ck = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-async-generators", manipulateOptions: function(e4, t3) {
            t3.plugins.push("asyncGenerators");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-async-generator-functions/node_modules/@babel/plugin-syntax-async-generators/lib"), pk = Eg("\n  async function wrapper() {\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY;\n    try {\n      for (\n        var ITERATOR_KEY = GET_ITERATOR(OBJECT), STEP_KEY, STEP_VALUE;\n        (\n          STEP_KEY = await ITERATOR_KEY.next(),\n          ITERATOR_COMPLETION = STEP_KEY.done,\n          STEP_VALUE = await STEP_KEY.value,\n          !ITERATOR_COMPLETION\n        );\n        ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n          await ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  }\n");
      var dk, fk, hk, mk, yk, gk, vk, bk, Ek, xk, Dk, Ak, wk, Ck, Sk, Tk, jk = jF(function(e2) {
        e2.assertVersion(7);
        var t2 = { Function: function(e3) {
          e3.skip();
        }, YieldExpression: function(e3, t3) {
          var r3 = e3.node;
          if (r3.delegate) {
            var n3 = t3.addHelper("asyncGeneratorDelegate");
            r3.argument = ls(n3, [ls(t3.addHelper("asyncIterator"), [r3.argument]), t3.addHelper("awaitAsyncGenerator")]);
          }
        } }, r2 = { Function: function(e3) {
          e3.skip();
        }, ForOfStatement: function(e3, t3) {
          var r3 = t3.file, n3 = e3.node;
          if (n3.await) {
            var s2 = function(e4, t4) {
              var r4, n4 = t4.getAsyncIterator, s3 = e4.node, a3 = e4.scope, i3 = e4.parent, o3 = a3.generateUidIdentifier("step"), u2 = a3.generateUidIdentifier("value"), l2 = s3.left;
              F(l2) || Ot(l2) || M(l2) ? r4 = ys(rs("=", l2, u2)) : Z(l2) && (r4 = Ks(l2.kind, [zs(l2.declarations[0].id, u2)]));
              var c2 = pk({ ITERATOR_HAD_ERROR_KEY: a3.generateUidIdentifier("didIteratorError"), ITERATOR_COMPLETION: a3.generateUidIdentifier("iteratorNormalCompletion"), ITERATOR_ERROR_KEY: a3.generateUidIdentifier("iteratorError"), ITERATOR_KEY: a3.generateUidIdentifier("iterator"), GET_ITERATOR: n4, OBJECT: s3.right, STEP_VALUE: Ju(u2), STEP_KEY: o3 });
              c2 = c2.body.body;
              var p2 = O(i3), d2 = c2[3].block.body, f2 = d2[0];
              return p2 && (d2[0] = ws(i3.label, f2)), { replaceParent: p2, node: c2, declar: r4, loop: f2 };
            }(e3, { getAsyncIterator: r3.addHelper("asyncIterator") }), a2 = s2.declar, i2 = s2.loop, o2 = i2.body;
            e3.ensureBlock(), a2 && o2.body.push(a2), o2.body = o2.body.concat(n3.body.body), yc(i2, n3), yc(i2.body, n3.body), s2.replaceParent ? e3.parentPath.replaceWithMultiple(s2.node) : e3.replaceWithMultiple(s2.node);
          }
        } }, n2 = { Function: function(e3, n3) {
          e3.node.async && (e3.traverse(r2, n3), e3.node.generator && (e3.traverse(t2, n3), lk(e3, { wrapAsync: n3.addHelper("wrapAsyncGenerator"), wrapAwait: n3.addHelper("awaitAsyncGenerator") })));
        } };
        return { name: "proposal-async-generator-functions", inherits: ck.default, visitor: { Program: function(e3, t3) {
          e3.traverse(n2, t3);
        } } };
      });
      function Pk(e2) {
        if (e2.node.declare)
          throw e2.buildCodeFrameError("TypeScript 'declare' fields must first be transformed by @babel/plugin-transform-typescript.\nIf you have already enabled that plugin (or '@babel/preset-typescript'), make sure that it runs before any plugin related to additional class features:\n - @babel/plugin-proposal-class-properties\n - @babel/plugin-proposal-private-methods\n - @babel/plugin-proposal-decorators");
      }
      function Ik(e2) {
        var t2 = Object.assign({}, e2, { Class: function(e3) {
          for (var n2, s2 = this.privateNamesMap, a2 = e3.get("body.body"), i2 = new Map(s2), o2 = [], u2 = f(a2); !(n2 = u2()).done; ) {
            var l2 = n2.value;
            if (l2.isPrivate()) {
              var c2 = l2.node.key.id.name;
              i2.delete(c2), o2.push(c2);
            }
          }
          o2.length && (e3.get("body").traverse(r2, Object.assign({}, this, { redeclared: o2 })), e3.traverse(t2, Object.assign({}, this, { privateNamesMap: i2 })), e3.skipKey("body"));
        } }), r2 = vv.visitors.merge([Object.assign({}, e2), FE]);
        return t2;
      }
      var Fk = Ik({ PrivateName: function(e2, t2) {
        var r2 = t2.noDocumentAll, n2 = this.privateNamesMap, s2 = this.redeclared, a2 = e2.node, i2 = e2.parentPath;
        if (i2.isMemberExpression({ property: a2 }) || i2.isOptionalMemberExpression({ property: a2 })) {
          var o2 = a2.id.name;
          n2.has(o2) && (s2 && s2.includes(o2) || this.handle(i2, r2));
        }
      } }), kk = Ik({ BinaryExpression: function(e2) {
        var t2 = e2.node, r2 = t2.operator, n2 = t2.left, s2 = t2.right;
        if (r2 === "in" && e2.get("left").isPrivateName()) {
          var a2 = this.privateFieldsAsProperties, i2 = this.privateNamesMap, o2 = this.redeclared, l2 = n2.id.name;
          if (i2.has(l2) && (!o2 || !o2.includes(l2)))
            if (a2) {
              var c2 = i2.get(l2).id;
              e2.replaceWith(Eg.expression.ast(fk || (fk = u(["\n        Object.prototype.hasOwnProperty.call(", ", ", ")\n      "])), s2, Ju(c2)));
            } else {
              var p2 = i2.get(l2), d2 = p2.id;
              p2.static ? e2.replaceWith(Eg.expression.ast(hk || (hk = u(["", " === ", ""])), s2, this.classRef)) : e2.replaceWith(Eg.expression.ast(mk || (mk = u(["", ".has(", ")"])), Ju(d2), s2));
            }
        }
      } }), Ok = { memoise: function(e2, t2) {
        var r2 = e2.scope, n2 = e2.node.object, s2 = r2.maybeGenerateMemoised(n2);
        s2 && this.memoiser.set(n2, s2, t2);
      }, receiver: function(e2) {
        var t2 = e2.node.object;
        return this.memoiser.has(t2) ? Ju(this.memoiser.get(t2)) : Ju(t2);
      }, get: function(e2) {
        var t2 = this.classRef, r2 = this.privateNamesMap, n2 = this.file, s2 = e2.node.property.id.name, a2 = r2.get(s2), i2 = a2.id, o2 = a2.static, u2 = a2.method, l2 = a2.methodId, c2 = a2.getId, p2 = a2.setId, d2 = c2 || p2;
        if (o2) {
          var f2 = u2 && !d2 ? "classStaticPrivateMethodGet" : "classStaticPrivateFieldSpecGet";
          return ls(n2.addHelper(f2), [this.receiver(e2), Ju(t2), Ju(i2)]);
        }
        if (u2) {
          if (d2) {
            if (!c2 && p2) {
              if (n2.availableHelper("writeOnlyError"))
                return Ms([this.receiver(e2), ls(n2.addHelper("writeOnlyError"), [Cs("#" + s2)])]);
              console.warn("@babel/helpers is outdated, update it to silence this warning.");
            }
            return ls(n2.addHelper("classPrivateFieldGet"), [this.receiver(e2), Ju(i2)]);
          }
          return ls(n2.addHelper("classPrivateMethodGet"), [this.receiver(e2), Ju(i2), Ju(l2)]);
        }
        return ls(n2.addHelper("classPrivateFieldGet"), [this.receiver(e2), Ju(i2)]);
      }, boundGet: function(e2) {
        return this.memoise(e2, 1), ls(Fs2(this.get(e2), Ds("bind")), [this.receiver(e2)]);
      }, set: function(e2, t2) {
        var r2 = this.classRef, n2 = this.privateNamesMap, s2 = this.file, a2 = e2.node.property.id.name, i2 = n2.get(a2), o2 = i2.id, u2 = i2.static, l2 = i2.method, c2 = i2.setId, p2 = i2.getId;
        if (u2) {
          var d2 = l2 && !(p2 || c2) ? "classStaticPrivateMethodSet" : "classStaticPrivateFieldSpecSet";
          return ls(s2.addHelper(d2), [this.receiver(e2), Ju(r2), Ju(o2), t2]);
        }
        return l2 ? c2 ? ls(s2.addHelper("classPrivateFieldSet"), [this.receiver(e2), Ju(o2), t2]) : Ms([this.receiver(e2), t2, ls(s2.addHelper("readOnlyError"), [Cs("#" + a2)])]) : ls(s2.addHelper("classPrivateFieldSet"), [this.receiver(e2), Ju(o2), t2]);
      }, destructureSet: function(e2) {
        var t2 = this.classRef, r2 = this.privateNamesMap, n2 = this.file, s2 = e2.node.property.id.name, a2 = r2.get(s2), i2 = a2.id;
        if (a2.static) {
          try {
            var o2 = n2.addHelper("classStaticPrivateFieldDestructureSet");
          } catch (e3) {
            throw new Error("Babel can not transpile `[C.#p] = [0]` with @babel/helpers < 7.13.10, \nplease update @babel/helpers to the latest version.");
          }
          return Fs2(ls(o2, [this.receiver(e2), Ju(t2), Ju(i2)]), Ds("value"));
        }
        return Fs2(ls(n2.addHelper("classPrivateFieldDestructureSet"), [this.receiver(e2), Ju(i2)]), Ds("value"));
      }, call: function(e2, t2) {
        return this.memoise(e2, 1), PE(this.get(e2), this.receiver(e2), t2, false);
      }, optionalCall: function(e2, t2) {
        return this.memoise(e2, 1), PE(this.get(e2), this.receiver(e2), t2, true);
      } }, Rk = { get: function(e2) {
        var t2 = this.privateNamesMap, r2 = this.file, n2 = e2.node.object, s2 = e2.node.property.id.name;
        return Eg.expression(yk || (yk = u(["BASE(REF, PROP)[PROP]"])))({ BASE: r2.addHelper("classPrivateFieldLooseBase"), REF: Ju(n2), PROP: Ju(t2.get(s2).id) });
      }, boundGet: function(e2) {
        return ls(Fs2(this.get(e2), Ds("bind")), [Ju(e2.node.object)]);
      }, simpleSet: function(e2) {
        return this.get(e2);
      }, destructureSet: function(e2) {
        return this.get(e2);
      }, call: function(e2, t2) {
        return ls(this.get(e2), t2);
      }, optionalCall: function(e2, t2) {
        return Ta(this.get(e2), t2, true);
      } };
      function Nk(e2, t2, r2) {
        var n2 = r2.get(t2.node.key.id.name).id, s2 = t2.node.value || t2.scope.buildUndefinedNode();
        return Eg.statement.ast(gk || (gk = u(["\n    Object.defineProperty(", ", ", ", {\n      // configurable is false by default\n      // enumerable is false by default\n      writable: true,\n      value: ", "\n    });\n  "])), e2, Ju(n2), s2);
      }
      function Bk(e2, t2, r2) {
        var n2 = r2.get(t2.node.key.id.name).id, s2 = t2.node.value || t2.scope.buildUndefinedNode();
        return Eg.statement.ast(vk || (vk = u(["", ".set(", ", {\n    // configurable is always false for private elements\n    // enumerable is always false for private elements\n    writable: true,\n    value: ", ",\n  })"])), Ju(n2), e2, s2);
      }
      function _k(e2, t2) {
        var r2 = t2.get(e2.node.key.id.name), n2 = r2.id, s2 = r2.getId, a2 = r2.setId, i2 = r2.initAdded, o2 = s2 || a2;
        if (e2.isProperty() || !i2 && o2) {
          if (o2)
            return t2.set(e2.node.key.id.name, Object.assign({}, r2, { initAdded: true })), Eg.statement.ast(bk || (bk = u(["\n      var ", " = {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        get: ", ",\n        set: ", "\n      }\n    "])), Ju(n2), s2 ? s2.name : e2.scope.buildUndefinedNode(), a2 ? a2.name : e2.scope.buildUndefinedNode());
          var l2 = e2.node.value || e2.scope.buildUndefinedNode();
          return Eg.statement.ast(Ek || (Ek = u(["\n    var ", " = {\n      // configurable is false by default\n      // enumerable is false by default\n      writable: true,\n      value: ", "\n    };\n  "])), Ju(n2), l2);
        }
      }
      function Lk(e2, t2, r2) {
        var n2 = r2.get(t2.node.key.id.name), s2 = n2.methodId, a2 = n2.id, i2 = n2.getId, o2 = n2.setId;
        if (!n2.initAdded)
          return s2 ? Eg.statement.ast(xk || (xk = u(["\n        Object.defineProperty(", ", ", ", {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          value: ", "\n        });\n      "])), e2, a2, s2.name) : i2 || o2 ? (r2.set(t2.node.key.id.name, Object.assign({}, n2, { initAdded: true })), Eg.statement.ast(Dk || (Dk = u(["\n      Object.defineProperty(", ", ", ", {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        get: ", ",\n        set: ", "\n      });\n    "])), e2, a2, i2 ? i2.name : t2.scope.buildUndefinedNode(), o2 ? o2.name : t2.scope.buildUndefinedNode())) : void 0;
      }
      function Mk(e2, t2, r2) {
        var n2 = r2.get(t2.node.key.id.name), s2 = n2.id, a2 = n2.getId, i2 = n2.setId;
        if (!n2.initAdded)
          return a2 || i2 ? (r2.set(t2.node.key.id.name, Object.assign({}, n2, { initAdded: true })), Eg.statement.ast(Ak || (Ak = u(["\n      ", ".set(", ", {\n        get: ", ",\n        set: ", "\n      });\n    "])), s2, e2, a2 ? a2.name : t2.scope.buildUndefinedNode(), i2 ? i2.name : t2.scope.buildUndefinedNode())) : Eg.statement.ast(wk || (wk = u(["", ".add(", ")"])), s2, e2);
      }
      function Uk(e2, t2) {
        var r2 = t2.node, n2 = r2.key, s2 = r2.computed, a2 = t2.node.value || t2.scope.buildUndefinedNode();
        return ys(rs("=", Fs2(e2, n2, s2 || Pt(n2)), a2));
      }
      function Gk(e2, t2, r2) {
        var n2 = t2.node, s2 = n2.key, a2 = n2.computed, i2 = t2.node.value || t2.scope.buildUndefinedNode();
        return ys(ls(r2.addHelper("defineProperty"), [e2, a2 || Pt(s2) ? s2 : Cs(s2.name), i2]));
      }
      function Vk(e2, t2, r2, n2) {
        var s2 = n2.get(t2.node.key.id.name), a2 = s2.id, i2 = s2.methodId, o2 = s2.getId, l2 = s2.setId;
        if (!s2.initAdded)
          return o2 || l2 ? (n2.set(t2.node.key.id.name, Object.assign({}, s2, { initAdded: true })), Eg.statement.ast(Ck || (Ck = u(["\n      Object.defineProperty(", ", ", ", {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        get: ", ",\n        set: ", "\n      })\n    "])), e2, a2, o2 ? o2.name : t2.scope.buildUndefinedNode(), l2 ? l2.name : t2.scope.buildUndefinedNode())) : Eg.statement.ast(Sk || (Sk = u(["\n    Object.defineProperty(", ", ", ", {\n      // configurable is false by default\n      // enumerable is false by default\n      // writable is false by default\n      value: ", "\n    });\n  "])), e2, a2, i2.name);
      }
      function Wk(e2, t2, r2) {
        r2 === void 0 && (r2 = false);
        var n2 = t2.get(e2.node.key.id.name), s2 = n2.id, a2 = n2.methodId, i2 = n2.getId, o2 = n2.setId, u2 = n2.getterDeclared, l2 = n2.setterDeclared, c2 = n2.static, p2 = e2.node, d2 = p2.params, f2 = p2.body, h2 = p2.generator, m2 = p2.async, y2 = i2 && !u2 && d2.length === 0, g2 = o2 && !l2 && d2.length > 0, v2 = a2;
        return y2 ? (t2.set(e2.node.key.id.name, Object.assign({}, n2, { getterDeclared: true })), v2 = i2) : g2 ? (t2.set(e2.node.key.id.name, Object.assign({}, n2, { setterDeclared: true })), v2 = o2) : c2 && !r2 && (v2 = s2), Es(Ju(v2), d2, f2, h2, m2);
      }
      var Hk, Xk, qk, $k, Kk, zk = vv.visitors.merge([{ ThisExpression: function(e2, t2) {
        t2.needsClassRef = true, e2.replaceWith(Ju(t2.classRef));
      } }, FE]), Jk = { ReferencedIdentifier: function(e2, t2) {
        e2.scope.bindingIdentifierEquals(e2.node.name, t2.innerBinding) && (t2.needsClassRef = true, e2.node.name = t2.classRef.name);
      } };
      function Yk(e2, t2, r2, n2, s2, a2, i2) {
        var o2, u2 = { classRef: t2, needsClassRef: false, innerBinding: i2 };
        return new BE({ methodPath: e2, constantSuper: a2, file: n2, refToPreserve: t2, getSuperRef: r2, getObjectRef: function() {
          return u2.needsClassRef = true, s2 || e2.node.static ? t2 : Fs2(t2, Ds("prototype"));
        } }).replace(), (s2 || e2.isProperty()) && e2.traverse(zk, u2), (o2 = u2.classRef) != null && o2.name && u2.classRef.name !== (i2 == null ? void 0 : i2.name) && e2.traverse(Jk, u2), u2.needsClassRef;
      }
      function Qk(e2) {
        return !(!e2.decorators || !e2.decorators.length);
      }
      function Zk(e2, t2) {
        return t2 ? Bs(Ds(e2), t2) : null;
      }
      function eO(e2) {
        var t2;
        return e2.decorators && e2.decorators.length > 0 && (t2 = ts(e2.decorators.map(function(e3) {
          return e3.expression;
        }))), e2.decorators = void 0, t2;
      }
      function tO(e2) {
        return e2.computed ? e2.key : F(e2.key) ? Cs(e2.key.name) : Cs(String(e2.key.value));
      }
      function rO(e2, t2, r2) {
        var n2 = r2.node, s2 = r2.scope, a2 = r2.isClassMethod();
        if (r2.isPrivate())
          throw r2.buildCodeFrameError("Private " + (a2 ? "methods" : "fields") + " in decorated classes are not supported yet.");
        new BE({ methodPath: r2, objectRef: e2, superRef: t2, file: this, refToPreserve: e2 }).replace();
        var i2, o2, l2 = [Zk("kind", Cs(a2 ? n2.kind : "field")), Zk("decorators", eO(n2)), Zk("static", n2.static && js(true)), Zk("key", tO(n2))].filter(Boolean);
        if (a2) {
          var c2 = n2.computed ? null : n2.key;
          nc(n2), l2.push(Zk("value", Cg({ node: n2, id: c2, scope: s2 }) || n2));
        } else
          n2.value ? l2.push((i2 = "value", o2 = Eg.statements.ast(Hk || (Hk = u(["return ", ""])), n2.value), Ns("method", Ds(i2), [], os(o2)))) : l2.push(Zk("value", s2.buildUndefinedNode()));
        return r2.remove(), Rs(l2);
      }
      var nO = vv.visitors.merge([{ Super: function(e2) {
        var t2 = e2.node, r2 = e2.parentPath;
        r2.isCallExpression({ callee: t2 }) && this.push(r2);
      } }, FE]), sO = { "TSTypeAnnotation|TypeAnnotation": function(e2) {
        e2.skip();
      }, ReferencedIdentifier: function(e2) {
        this.scope.hasOwnBinding(e2.node.name) && (this.scope.rename(e2.node.name), e2.skip());
      } };
      function aO(e2, t2) {
        if (t2.classBinding && t2.classBinding === e2.scope.getBinding(e2.node.name)) {
          var r2 = ls(t2.file.addHelper("classNameTDZError"), [Cs(e2.node.name)]);
          e2.replaceWith(Ms([r2, e2.node])), e2.skip();
        }
      }
      var iO = { ReferencedIdentifier: aO };
      function oO(e2, t2, r2, n2) {
        if (r2.length) {
          var s2 = !!e2.node.superClass;
          if (!t2) {
            var a2 = ha("constructor", Ds("constructor"), [], os([]));
            s2 && (a2.params = [_s(Ds("args"))], a2.body.body.push(Eg.statement.ast(Kk || (Kk = u(["super(...args)"]))))), t2 = l(e2.get("body").unshiftContainer("body", a2), 1)[0];
          }
          if (n2 && n2(sO, { scope: t2.scope }), s2) {
            var i2 = [];
            t2.traverse(nO, i2);
            for (var o2 = true, c2 = 0, p2 = i2; c2 < p2.length; c2++) {
              var d2 = p2[c2];
              o2 ? (d2.insertAfter(r2), o2 = false) : d2.insertAfter(r2.map(function(e3) {
                return Ju(e3);
              }));
            }
          } else
            t2.get("body").unshiftContainer("body", r2);
        }
      }
      var uO = Object.freeze({ fields: 2, privateMethods: 4, decorators: 8, privateIn: 16, staticBlocks: 32 }), lO = new Map([[uO.fields, "@babel/plugin-proposal-class-properties"], [uO.privateMethods, "@babel/plugin-proposal-private-methods"], [uO.privateIn, "@babel/plugin-proposal-private-property-in-object"]]), cO = "@babel/plugin-class-features/featuresKey", pO = "@babel/plugin-class-features/looseKey", dO = "@babel/plugin-class-features/looseLowPriorityKey/#__internal__@babel/preset-env__please-overwrite-loose-instead-of-throwing";
      function fO(e2, t2, r2) {
        var n2, s2;
        hO(e2, t2) && !gO(e2, t2) || (e2.set(cO, e2.get(cO) | t2), r2 === "#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error" ? (yO(e2, t2, true), e2.set(dO, e2.get(dO) | t2)) : r2 === "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error" ? (yO(e2, t2, false), e2.set(dO, e2.get(dO) | t2)) : yO(e2, t2, r2));
        for (var a2, i2 = f(lO); !(a2 = i2()).done; ) {
          var o2 = l(a2.value, 2), u2 = o2[0], c2 = o2[1];
          if (hO(e2, u2)) {
            var p2 = mO(e2, u2);
            if (!gO(e2, u2)) {
              if (n2 === !p2)
                throw new Error("'loose' mode configuration must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled).");
              n2 = p2, s2 = c2;
            }
          }
        }
        if (n2 !== void 0)
          for (var d2, h2 = f(lO); !(d2 = h2()).done; ) {
            var m2 = l(d2.value, 2), y2 = m2[0], g2 = m2[1];
            hO(e2, y2) && mO(e2, y2) !== n2 && (yO(e2, y2, n2), console.warn('Though the "loose" option was set to "' + !n2 + '" in your @babel/preset-env config, it will not be used for ' + g2 + ' since the "loose" mode option was set to "' + n2 + '" for ' + s2 + '.\nThe "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding\n	["' + g2 + '", { "loose": ' + n2 + ' }]\nto the "plugins" section of your Babel config.'));
          }
      }
      function hO(e2, t2) {
        return !!(e2.get(cO) & t2);
      }
      function mO(e2, t2) {
        return !!(e2.get(pO) & t2);
      }
      function yO(e2, t2, r2) {
        r2 ? e2.set(pO, e2.get(pO) | t2) : e2.set(pO, e2.get(pO) & ~t2), e2.set(dO, e2.get(dO) & ~t2);
      }
      function gO(e2, t2) {
        return !!(e2.get(dO) & t2);
      }
      function vO(e2, t2) {
        if (Qk(e2.node)) {
          if (!hO(t2, uO.decorators))
            throw e2.buildCodeFrameError('Decorators are not enabled.\nIf you are using ["@babel/plugin-proposal-decorators", { "legacy": true }], make sure it comes *before* "@babel/plugin-proposal-class-properties" and enable loose mode, like so:\n	["@babel/plugin-proposal-decorators", { "legacy": true }]\n	["@babel/plugin-proposal-class-properties", { "loose": true }]');
          if (e2.isPrivate())
            throw e2.buildCodeFrameError("Private " + (e2.isClassMethod() ? "methods" : "fields") + " in decorated classes are not supported yet.");
        }
        if (e2.isPrivateMethod != null && e2.isPrivateMethod() && !hO(t2, uO.privateMethods))
          throw e2.buildCodeFrameError("Class private methods are not enabled.");
        if (e2.isPrivateName() && e2.parentPath.isBinaryExpression({ operator: "in", left: e2.node }) && !hO(t2, uO.privateIn))
          throw e2.buildCodeFrameError("Private property in checks are not enabled.");
        if (e2.isProperty() && !hO(t2, uO.fields))
          throw e2.buildCodeFrameError("Class fields are not enabled.");
        if (e2.isStaticBlock != null && e2.isStaticBlock() && !hO(t2, uO.staticBlocks))
          throw e2.buildCodeFrameError("Static class blocks are not enabled. Please add `@babel/plugin-proposal-class-static-block` to your configuration.");
      }
      var bO = "7.14.6".split(".").reduce(function(e2, t2) {
        return 1e5 * e2 + +t2;
      }, 0), EO = "@babel/plugin-class-features/version";
      function xO(e2) {
        var t2 = e2.name, r2 = e2.feature, n2 = e2.loose, s2 = e2.manipulateOptions, a2 = e2.api, i2 = a2 === void 0 ? { assumption: function() {
        } } : a2, o2 = i2.assumption("setPublicClassFields"), p2 = i2.assumption("privateFieldsAsProperties"), d2 = i2.assumption("constantSuper"), h2 = i2.assumption("noDocumentAll");
        if (n2 === true) {
          var m2 = [];
          o2 !== void 0 && m2.push('"setPublicClassFields"'), p2 !== void 0 && m2.push('"privateFieldsAsProperties"'), m2.length !== 0 && console.warn("[" + t2 + ']: You are using the "loose: true" option and you are explicitly setting a value for the ' + m2.join(" and ") + " assumption" + (m2.length > 1 ? "s" : "") + `. The "loose" option can cause incompatibilities with the other class features plugins, so it's recommended that you replace it with the following top-level option:
	"assumptions": {
		"setPublicClassFields": true,
		"privateFieldsAsProperties": true
	}`);
        }
        return { name: t2, manipulateOptions: s2, pre: function() {
          fO(this.file, r2, n2), (!this.file.get(EO) || this.file.get(EO) < bO) && this.file.set(EO, bO);
        }, visitor: { Class: function(e3, t3) {
          if (this.file.get(EO) === bO) {
            vO(e3, this.file);
            for (var n3, s3, a3 = mO(this.file, r2), i3 = Qk(e3.node), m3 = [], y2 = [], g2 = [], v2 = new Set(), b2 = f(e3.get("body").get("body")); !(s3 = b2()).done; ) {
              var E2 = s3.value;
              if (vO(E2, this.file), E2.node.computed && g2.push(E2), E2.isPrivate()) {
                var x2 = E2.node.key.id.name, D2 = "get " + x2, A2 = "set " + x2;
                if (E2.node.kind === "get") {
                  if (v2.has(D2) || v2.has(x2) && !v2.has(A2))
                    throw E2.buildCodeFrameError("Duplicate private field");
                  v2.add(D2).add(x2);
                } else if (E2.node.kind === "set") {
                  if (v2.has(A2) || v2.has(x2) && !v2.has(D2))
                    throw E2.buildCodeFrameError("Duplicate private field");
                  v2.add(A2).add(x2);
                } else {
                  if (v2.has(x2) && !v2.has(D2) && !v2.has(A2) || v2.has(x2) && (v2.has(D2) || v2.has(A2)))
                    throw E2.buildCodeFrameError("Duplicate private field");
                  v2.add(x2);
                }
              }
              E2.isClassMethod({ kind: "constructor" }) ? n3 = E2 : (y2.push(E2), (E2.isProperty() || E2.isPrivate() || E2.isStaticBlock != null && E2.isStaticBlock()) && m3.push(E2)), i3 || (i3 = Qk(E2.node));
            }
            if (m3.length || i3) {
              var w2, C2 = e3.node.id;
              !C2 || e3.isClassExpression() ? (Cg(e3), w2 = e3.scope.generateUidIdentifier("class")) : w2 = Ju(e3.node.id);
              var S2, T2, j2, P2, I2, k2 = function(e4) {
                for (var t4, r3 = new Map(), n4 = f(e4); !(t4 = n4()).done; ) {
                  var s4 = t4.value, a4 = s4.isPrivate(), i4 = !s4.isProperty(), o3 = !s4.node.static;
                  if (a4) {
                    var u2 = s4.node.key.id.name, l2 = r3.has(u2) ? r3.get(u2) : { id: s4.scope.generateUidIdentifier(u2), static: !o3, method: i4 };
                    s4.node.kind === "get" ? l2.getId = s4.scope.generateUidIdentifier("get_" + u2) : s4.node.kind === "set" ? l2.setId = s4.scope.generateUidIdentifier("set_" + u2) : s4.node.kind === "method" && (l2.methodId = s4.scope.generateUidIdentifier(u2)), r3.set(u2, l2);
                  }
                }
                return r3;
              }(m3), O2 = function(e4, t4, r3) {
                for (var n4, s4 = [], a4 = f(e4); !(n4 = a4()).done; ) {
                  var i4 = l(n4.value, 2), o3 = i4[0], c2 = i4[1], p3 = c2.static, d3 = c2.method, h3 = c2.getId, m4 = c2.setId, y3 = h3 || m4, g3 = Ju(c2.id), v3 = void 0;
                  t4 ? v3 = ls(r3.addHelper("classPrivateFieldLooseKey"), [Cs(o3)]) : p3 || (v3 = ks(Ds(!d3 || y3 ? "WeakMap" : "WeakSet"), [])), v3 && (ok(v3), s4.push(Eg.statement.ast(dk || (dk = u(["var ", " = ", ""])), g3, v3)));
                }
                return s4;
              }(k2, p2 != null ? p2 : a3, t3);
              if (function(e4, t4, r3, n4, s4) {
                var a4 = n4.privateFieldsAsProperties, i4 = n4.noDocumentAll;
                if (r3.size) {
                  var o3 = t4.get("body"), u2 = a4 ? Rk : Ok;
                  jE(o3, Fk, Object.assign({ privateNamesMap: r3, classRef: e4, file: s4 }, u2, { noDocumentAll: i4 })), o3.traverse(kk, { privateNamesMap: r3, classRef: e4, file: s4, privateFieldsAsProperties: a4 });
                }
              }(w2, e3, k2, { privateFieldsAsProperties: p2 != null ? p2 : a3, noDocumentAll: h2 }, t3), i3) {
                T2 = j2 = S2 = [];
                var R2 = function(e4, t4, r3, n4) {
                  var s4, a4 = t4.node, i4 = t4.scope, o3 = i4.generateUidIdentifier("initialize"), l2 = a4.id && t4.isDeclaration(), c2 = t4.isInStrictMode(), p3 = a4.superClass;
                  a4.type = "ClassDeclaration", a4.id || (a4.id = Ju(e4)), p3 && (s4 = i4.generateUidIdentifierBasedOnNode(a4.superClass, "super"), a4.superClass = s4);
                  var d3 = eO(a4), f2 = ts(r3.filter(function(e5) {
                    return !e5.node.abstract;
                  }).map(rO.bind(n4, a4.id, s4))), h3 = Eg.expression.ast(Xk || (Xk = u(["\n    ", "(\n      ", ",\n      function (", ", ", ") {\n        ", "\n        return { F: ", ", d: ", " };\n      },\n      ", "\n    )\n  "])), function(e5) {
                    try {
                      return e5.addHelper("decorate");
                    } catch (e6) {
                      throw e6.code === "BABEL_HELPER_UNKNOWN" && (e6.message += "\n  '@babel/plugin-transform-decorators' in non-legacy mode requires '@babel/core' version ^7.0.2 and you appear to be using an older version."), e6;
                    }
                  }(n4), d3 || Ts(), o3, p3 ? Ju(s4) : null, a4, Ju(a4.id), f2, p3);
                  c2 || h3.arguments[1].body.directives.push(as(is("use strict")));
                  var m4 = h3, y3 = "arguments.1.body.body.0";
                  return l2 && (m4 = Eg.statement.ast(qk || (qk = u(["let ", " = ", ""])), e4, h3), y3 = "declarations.0.init." + y3), { instanceNodes: [Eg.statement.ast($k || ($k = u(["", "(this)"])), Ju(o3))], wrapClass: function(e5) {
                    return e5.replaceWith(m4), e5.get(y3);
                  } };
                }(w2, e3, y2, this.file);
                P2 = R2.instanceNodes, I2 = R2.wrapClass;
              } else {
                S2 = function(e4, t4, r3, n4) {
                  for (var s4, a4 = [], i4 = { classBinding: t4.node.id && t4.scope.getBinding(t4.node.id.name), file: n4 }, o3 = f(r3); !(s4 = o3()).done; ) {
                    var u2 = s4.value, l2 = u2.get("key");
                    l2.isReferencedIdentifier() ? aO(l2, i4) : l2.traverse(iO, i4);
                    var c2 = u2.node;
                    if (!l2.isConstantExpression()) {
                      var p3 = t4.scope.generateUidIdentifierBasedOnNode(c2.key);
                      t4.scope.push({ id: p3, kind: "let" }), a4.push(ys(rs("=", Ju(p3), c2.key))), c2.key = Ju(p3);
                    }
                  }
                  return a4;
                }(0, e3, g2, this.file);
                var N2 = function(e4, t4, r3, n4, s4, a4, i4, o3, l2) {
                  for (var c2, p3, d3 = false, h3 = [], m4 = [], y3 = [], g3 = F(t4) ? function() {
                    return t4;
                  } : function() {
                    return c2 != null || (c2 = r3[0].scope.generateUidIdentifierBasedOnNode(t4)), c2;
                  }, v3 = f(r3); !(p3 = v3()).done; ) {
                    var b3 = p3.value;
                    Pk(b3);
                    var E3 = b3.node.static, x3 = !E3, D3 = b3.isPrivate(), A3 = !D3, w3 = b3.isProperty(), C3 = !w3, S3 = b3.isStaticBlock == null ? void 0 : b3.isStaticBlock();
                    if (E3 || C3 && D3 || S3) {
                      var T3 = Yk(b3, e4, g3, s4, S3, o3, l2);
                      d3 = d3 || T3;
                    }
                    switch (true) {
                      case S3:
                        h3.push(Eg.statement.ast(Tk || (Tk = u(["(() => ", ")()"])), os(b3.node.body)));
                        break;
                      case (E3 && D3 && w3 && i4):
                        d3 = true, h3.push(Nk(Ju(e4), b3, n4));
                        break;
                      case (E3 && D3 && w3 && !i4):
                        d3 = true, h3.push(_k(b3, n4));
                        break;
                      case (E3 && A3 && w3 && a4):
                        d3 = true, h3.push(Uk(Ju(e4), b3));
                        break;
                      case (E3 && A3 && w3 && !a4):
                        d3 = true, h3.push(Gk(Ju(e4), b3, s4));
                        break;
                      case (x3 && D3 && w3 && i4):
                        m4.push(Nk(Ws(), b3, n4));
                        break;
                      case (x3 && D3 && w3 && !i4):
                        m4.push(Bk(Ws(), b3, n4));
                        break;
                      case (x3 && D3 && C3 && i4):
                        m4.unshift(Lk(Ws(), b3, n4)), y3.push(Wk(b3, n4, i4));
                        break;
                      case (x3 && D3 && C3 && !i4):
                        m4.unshift(Mk(Ws(), b3, n4)), y3.push(Wk(b3, n4, i4));
                        break;
                      case (E3 && D3 && C3 && !i4):
                        d3 = true, h3.unshift(_k(b3, n4)), y3.push(Wk(b3, n4, i4));
                        break;
                      case (E3 && D3 && C3 && i4):
                        d3 = true, h3.unshift(Vk(Ju(e4), b3, 0, n4)), y3.push(Wk(b3, n4, i4));
                        break;
                      case (x3 && A3 && w3 && a4):
                        m4.push(Uk(Ws(), b3));
                        break;
                      case (x3 && A3 && w3 && !a4):
                        m4.push(Gk(Ws(), b3, s4));
                        break;
                      default:
                        throw new Error("Unreachable.");
                    }
                  }
                  return { staticNodes: h3.filter(Boolean), instanceNodes: m4.filter(Boolean), pureStaticNodes: y3.filter(Boolean), wrapClass: function(t5) {
                    for (var n5, s5 = f(r3); !(n5 = s5()).done; )
                      n5.value.remove();
                    return c2 && (t5.scope.push({ id: Ju(c2) }), t5.set("superClass", rs("=", c2, t5.node.superClass))), d3 ? (t5.isClassExpression() ? (t5.scope.push({ id: e4 }), t5.replaceWith(rs("=", Ju(e4), t5.node))) : t5.node.id || (t5.node.id = e4), t5) : t5;
                  } };
                }(w2, e3.node.superClass, m3, k2, t3, o2 != null ? o2 : a3, p2 != null ? p2 : a3, d2 != null ? d2 : a3, C2);
                T2 = N2.staticNodes, j2 = N2.pureStaticNodes, P2 = N2.instanceNodes, I2 = N2.wrapClass;
              }
              P2.length > 0 && oO(e3, n3, P2, function(e4, t4) {
                if (!i3)
                  for (var r3, n4 = f(m3); !(r3 = n4()).done; ) {
                    var s4 = r3.value;
                    s4.node.static || s4.traverse(e4, t4);
                  }
              }), (e3 = I2(e3)).insertBefore([].concat(c(O2), c(S2))), T2.length > 0 && e3.insertAfter(T2), j2.length > 0 && e3.find(function(e4) {
                return e4.isStatement() || e4.isDeclaration();
              }).insertAfter(j2);
            }
          }
        }, PrivateName: function(e3) {
          if (this.file.get(EO) === bO && !e3.parentPath.isPrivate({ key: e3.node }))
            throw e3.buildCodeFrameError('Unknown PrivateName "' + e3 + '"');
        }, ExportDefaultDeclaration: function(e3) {
          if (this.file.get(EO) === bO) {
            var t3 = e3.get("declaration");
            t3.isClassDeclaration() && function(e4) {
              return Qk(e4) || e4.body.body.some(Qk);
            }(t3.node) && (t3.node.id ? Qc(e3) : t3.node.type = "ClassExpression");
          }
        } } };
      }
      var DO, AO = jF(function(e2, t2) {
        return e2.assertVersion(7), xO({ name: "proposal-class-properties", api: e2, feature: uO.fields, loose: t2.loose, manipulateOptions: function(e3, t3) {
          t3.plugins.push("classProperties", "classPrivateProperties");
        } });
      });
      function wO(e2, t2) {
        var r2, n2 = 1;
        do {
          r2 = e2._generateUid("", n2), n2++;
        } while (t2.has(r2));
        return r2;
      }
      var CO = jF(function(e2) {
        var t2 = e2.types, r2 = e2.template;
        return (0, e2.assertVersion)("^7.12.0"), { name: "proposal-class-static-block", inherits: _F, pre: function() {
          fO(this.file, uO.staticBlocks, false);
        }, visitor: { ClassBody: function(e3) {
          for (var n2, s2 = e3.scope, a2 = new Set(), i2 = e3.get("body"), o2 = f(i2); !(n2 = o2()).done; ) {
            var l2 = n2.value;
            l2.isPrivate() && a2.add(l2.get("key.id").node.name);
          }
          for (var c2, p2 = f(i2); !(c2 = p2()).done; ) {
            var d2 = c2.value;
            if (d2.isStaticBlock()) {
              var h2 = wO(s2, a2);
              a2.add(h2);
              var m2 = t2.privateName(t2.identifier(h2));
              d2.replaceWith(t2.classPrivateProperty(m2, r2.expression.ast(DO || (DO = u(["(() => { ", " })()"])), d2.node.body), [], true));
            }
          }
        } } };
      }), SO = Eg("\n  DECORATOR(CLASS_REF = INNER) || CLASS_REF;\n"), TO = Eg("\n  CLASS_REF.prototype;\n"), jO = Eg("\n    Object.getOwnPropertyDescriptor(TARGET, PROPERTY);\n"), PO = Eg("\n    (TEMP = Object.getOwnPropertyDescriptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n"), IO = new WeakSet();
      function FO(e2) {
        var t2 = (e2.isClass() ? [e2].concat(e2.get("body.body")) : e2.get("properties")).reduce(function(e3, t3) {
          return e3.concat(t3.node.decorators || []);
        }, []).filter(function(e3) {
          return !F(e3.expression);
        });
        if (t2.length !== 0)
          return Ms(t2.map(function(t3) {
            var r2 = t3.expression;
            return rs("=", t3.expression = e2.scope.generateDeclaredUidIdentifier("dec"), r2);
          }).concat([e2.node]));
      }
      function kO(e2) {
        return !(!e2.decorators || !e2.decorators.length);
      }
      function OO(e2) {
        return e2.some(function(e3) {
          var t2;
          return (t2 = e3.decorators) == null ? void 0 : t2.length;
        });
      }
      function RO(e2, t2, r2) {
        var n2 = e2.scope.generateDeclaredUidIdentifier(e2.isClass() ? "class" : "obj"), s2 = r2.reduce(function(r3, s3) {
          var a2 = s3.decorators || [];
          if (s3.decorators = null, a2.length === 0)
            return r3;
          if (s3.computed)
            throw e2.buildCodeFrameError("Computed method/property decorators are not yet supported.");
          var i2 = Pt(s3.key) ? s3.key : Cs(s3.key.name), o2 = e2.isClass() && !s3.static ? TO({ CLASS_REF: n2 }).expression : n2;
          if (nt(s3, { static: false })) {
            var u2 = e2.scope.generateDeclaredUidIdentifier("descriptor"), l2 = s3.value ? xs(null, [], os([Ls(s3.value)])) : Ts();
            s3.value = ls(t2.addHelper("initializerWarningHelper"), [u2, Ws()]), IO.add(s3.value), r3 = r3.concat([rs("=", Ju(u2), ls(t2.addHelper("applyDecoratedDescriptor"), [Ju(o2), Ju(i2), ts(a2.map(function(e3) {
              return Ju(e3.expression);
            })), Rs([Bs(Ds("configurable"), js(true)), Bs(Ds("enumerable"), js(true)), Bs(Ds("writable"), js(true)), Bs(Ds("initializer"), l2)])]))]);
          } else
            r3 = r3.concat(ls(t2.addHelper("applyDecoratedDescriptor"), [Ju(o2), Ju(i2), ts(a2.map(function(e3) {
              return Ju(e3.expression);
            })), H(s3) || nt(s3, { static: true }) ? PO({ TEMP: e2.scope.generateDeclaredUidIdentifier("init"), TARGET: Ju(o2), PROPERTY: Ju(i2) }).expression : jO({ TARGET: Ju(o2), PROPERTY: Ju(i2) }).expression, Ju(o2)]));
          return r3;
        }, []);
        return Ms([rs("=", Ju(n2), e2.node), Ms(s2), Ju(n2)]);
      }
      function NO(e2) {
        var t2 = e2.node, r2 = e2.scope;
        if (kO(t2) || OO(t2.body.body))
          return Ks("let", [zs(t2.id ? Ju(t2.id) : r2.generateUidIdentifier("class"), nc(t2))]);
      }
      var BO, _O = { ExportDefaultDeclaration: function(e2) {
        var t2 = e2.get("declaration");
        if (t2.isClassDeclaration()) {
          var r2 = NO(t2);
          if (r2) {
            var n2 = l(e2.replaceWithMultiple([r2, ia(null, [oa(Ju(r2.declarations[0].id), Ds("default"))])]), 1)[0];
            t2.node.id || e2.scope.registerDeclaration(n2);
          }
        }
      }, ClassDeclaration: function(e2) {
        var t2 = NO(e2);
        t2 && e2.replaceWith(t2);
      }, ClassExpression: function(e2, t2) {
        var r2 = FO(e2) || function(e3) {
          if (kO(e3.node)) {
            var t3 = e3.node.decorators || [];
            e3.node.decorators = null;
            var r3 = e3.scope.generateDeclaredUidIdentifier("class");
            return t3.map(function(e4) {
              return e4.expression;
            }).reverse().reduce(function(e4, t4) {
              return SO({ CLASS_REF: Ju(r3), DECORATOR: Ju(t4), INNER: e4 }).expression;
            }, e3.node);
          }
        }(e2) || function(e3, t3) {
          if (OO(e3.node.body.body))
            return RO(e3, t3, e3.node.body.body);
        }(e2, t2);
        r2 && e2.replaceWith(r2);
      }, ObjectExpression: function(e2, t2) {
        var r2 = FO(e2) || function(e3, t3) {
          if (OO(e3.node.properties))
            return RO(e3, t3, e3.node.properties);
        }(e2, t2);
        r2 && e2.replaceWith(r2);
      }, AssignmentExpression: function(e2, t2) {
        IO.has(e2.node.right) && e2.replaceWith(ls(t2.addHelper("initializerDefineProperty"), [Ju(e2.get("left.object").node), Cs(e2.get("left.property").node.name || e2.get("left.property").node.value), Ju(e2.get("right.arguments")[0].node), Ju(e2.get("right.arguments")[1].node)]));
      }, CallExpression: function(e2, t2) {
        e2.node.arguments.length === 3 && IO.has(e2.node.arguments[2]) && e2.node.callee.name === t2.addHelper("defineProperty").name && e2.replaceWith(ls(t2.addHelper("initializerDefineProperty"), [Ju(e2.get("arguments")[0].node), Ju(e2.get("arguments")[1].node), Ju(e2.get("arguments.2.arguments")[0].node), Ju(e2.get("arguments.2.arguments")[1].node)]));
      } }, LO = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = t2.legacy, n2 = r2 !== void 0 && r2;
        if (typeof n2 != "boolean")
          throw new Error("'legacy' must be a boolean.");
        var s2 = t2.decoratorsBeforeExport;
        if (s2 === void 0) {
          if (!n2)
            throw new Error("The decorators plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean. If you want to use the legacy decorators semantics, you can set the 'legacy: true' option.");
        } else {
          if (n2)
            throw new Error("'decoratorsBeforeExport' can't be used with legacy decorators.");
          if (typeof s2 != "boolean")
            throw new Error("'decoratorsBeforeExport' must be a boolean.");
        }
        return n2 ? { name: "proposal-decorators", inherits: MF, manipulateOptions: function(e3) {
          e3.generatorOpts.decoratorsBeforeExport = s2;
        }, visitor: _O } : xO({ name: "proposal-decorators", api: e2, feature: uO.decorators, manipulateOptions: function(e3) {
          var t3 = e3.generatorOpts;
          e3.parserOpts.plugins.push(["decorators", { decoratorsBeforeExport: s2 }]), t3.decoratorsBeforeExport = s2;
        } });
      }), MO = jF(function(e2) {
        return e2.assertVersion(7), { name: "proposal-do-expressions", inherits: UF, visitor: { DoExpression: { exit: function(e3) {
          var t2 = e3.node;
          if (!t2.async) {
            var r2 = t2.body.body;
            r2.length ? e3.replaceExpressionWithStatements(r2) : e3.replaceWith(e3.scope.buildUndefinedNode());
          }
        } } } };
      }), UO = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-dynamic-import", manipulateOptions: function(e4, t3) {
            t3.plugins.push("dynamicImport");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-dynamic-import/node_modules/@babel/plugin-syntax-dynamic-import/lib"), GO = ["commonjs", "amd", "systemjs"], VO = jF(function(e2) {
        return e2.assertVersion(7), { name: "proposal-dynamic-import", inherits: UO.default, pre: function() {
          this.file.set("@babel/plugin-proposal-dynamic-import", "7.14.5");
        }, visitor: { Program: function() {
          var e3 = this.file.get("@babel/plugin-transform-modules-*");
          if (!GO.includes(e3))
            throw new Error("@babel/plugin-proposal-dynamic-import depends on a modules\ntransform plugin. Supported plugins are:\n - @babel/plugin-transform-modules-commonjs ^7.4.0\n - @babel/plugin-transform-modules-amd ^7.4.0\n - @babel/plugin-transform-modules-systemjs ^7.4.0\n\nIf you are using Webpack or Rollup and thus don't want\nBabel to transpile your imports and exports, you can use\nthe @babel/plugin-syntax-dynamic-import plugin and let your\nbundler handle dynamic imports.\n");
        } } };
      }), WO = jF(function(e2) {
        return e2.assertVersion(7), { name: "proposal-export-default-from", inherits: GF, visitor: { ExportNamedDeclaration: function(e3) {
          var t2 = e3.node, r2 = e3.scope, n2 = t2.specifiers;
          if (it(n2[0])) {
            var s2 = n2.shift().exported, a2 = r2.generateUidIdentifier(s2.name), i2 = [la([ca(a2)], Ju(t2.source)), ia(null, [oa(Ju(a2), s2)])];
            n2.length >= 1 && i2.push(t2);
            var o2 = l(e3.replaceWithMultiple(i2), 1)[0];
            e3.scope.registerDeclaration(o2);
          }
        } } };
      }), HO = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-export-namespace-from", manipulateOptions: function(e4, t3) {
            t3.plugins.push("exportNamespaceFrom");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-export-namespace-from/node_modules/@babel/plugin-syntax-export-namespace-from/lib"), XO = jF(function(e2) {
        return e2.assertVersion(7), { name: "proposal-export-namespace-from", inherits: HO.default, visitor: { ExportNamedDeclaration: function(e3) {
          var t2, r2 = e3.node, n2 = e3.scope, s2 = r2.specifiers, a2 = it(s2[0]) ? 1 : 0;
          if (Te(s2[a2])) {
            var i2 = [];
            a2 === 1 && i2.push(ia(null, [s2.shift()], r2.source));
            var o2 = s2.shift().exported, u2 = n2.generateUidIdentifier((t2 = o2.name) != null ? t2 : o2.value);
            i2.push(la([pa(u2)], Ju(r2.source)), ia(null, [oa(Ju(u2), o2)])), r2.specifiers.length >= 1 && i2.push(r2);
            var c2 = l(e3.replaceWithMultiple(i2), 1)[0];
            e3.scope.registerDeclaration(c2);
          }
        } } };
      }), qO = jF(function(e2) {
        function t2(e3, t3) {
          var r2 = function(e4, t4) {
            var r3 = e4.object || e4.callee.object;
            return t4.isStatic(r3) && (Ee(r3) ? Ws() : r3);
          }(e3, t3);
          if (r2)
            return Ju(r2);
          var n2 = function(e4) {
            var t4 = e4.path.getData("functionBind");
            return t4 ? Ju(t4) : (t4 = e4.generateDeclaredUidIdentifier("context"), e4.path.setData("functionBind", t4));
          }(t3);
          return e3.object ? e3.callee = Ms([rs("=", n2, e3.object), e3.callee]) : e3.callee.object = rs("=", n2, e3.callee.object), Ju(n2);
        }
        return e2.assertVersion(7), { name: "proposal-function-bind", inherits: WF, visitor: { CallExpression: function(e3) {
          var r2 = e3.node, n2 = e3.scope, s2 = r2.callee;
          if (rt(s2)) {
            var a2 = t2(s2, n2);
            r2.callee = Fs2(s2.callee, Ds("call")), r2.arguments.unshift(a2);
          }
        }, BindExpression: function(e3) {
          var r2 = e3.node, n2 = t2(r2, e3.scope);
          e3.replaceWith(ls(Fs2(r2.callee, Ds("bind")), [n2]));
        } } };
      }), $O = jF(function(e2) {
        e2.assertVersion(7);
        var t2 = function(e3) {
          return F(e3.meta, { name: "function" }) && F(e3.property, { name: "sent" });
        }, r2 = { Function: function(e3) {
          e3.skip();
        }, YieldExpression: function(e3) {
          (function(e4, t3) {
            return y(e4) && F(e4.left, { name: t3 });
          })(e3.parent, this.sentId) || e3.replaceWith(rs("=", Ds(this.sentId), e3.node));
        }, MetaProperty: function(e3) {
          t2(e3.node) && e3.replaceWith(Ds(this.sentId));
        } };
        return { name: "proposal-function-sent", inherits: HF, visitor: { MetaProperty: function(e3, n2) {
          if (t2(e3.node)) {
            var s2 = e3.getFunctionParent();
            if (!s2.node.generator)
              throw new Error("Parent generator function not found");
            var a2 = e3.scope.generateUid("function.sent");
            s2.traverse(r2, { sentId: a2 }), s2.node.body.body.unshift(Ks("let", [zs(Ds(a2), xa())])), ik(s2, n2.addHelper("skipFirstGeneratorNext"));
          }
        } } };
      }), KO = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-json-strings", manipulateOptions: function(e4, t3) {
            t3.plugins.push("jsonStrings");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-json-strings/node_modules/@babel/plugin-syntax-json-strings/lib"), zO = jF(function(e2) {
        e2.assertVersion(7);
        var t2 = /(\\*)([\u2028\u2029])/g;
        function r2(e3, t3, r3) {
          return t3.length % 2 == 1 ? e3 : t3 + "\\u" + r3.charCodeAt(0).toString(16);
        }
        return { name: "proposal-json-strings", inherits: KO.default, visitor: { "DirectiveLiteral|StringLiteral": function(e3) {
          var n2 = e3.node.extra;
          n2 != null && n2.raw && (n2.raw = n2.raw.replace(t2, r2));
        } } };
      }), JO = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-logical-assignment-operators", manipulateOptions: function(e4, t3) {
            t3.plugins.push("logicalAssignment");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-logical-assignment-operators/node_modules/@babel/plugin-syntax-logical-assignment-operators/lib"), YO = jF(function(e2) {
        return e2.assertVersion(7), { name: "proposal-logical-assignment-operators", inherits: JO.default, visitor: { AssignmentExpression: function(e3) {
          var t2 = e3.node, r2 = e3.scope, n2 = t2.operator, s2 = t2.left, a2 = t2.right, i2 = n2.slice(0, -1);
          if (Or.includes(i2)) {
            var o2 = Ju(s2);
            if (M(s2)) {
              var u2 = s2.object, l2 = s2.property, c2 = s2.computed, p2 = r2.maybeGenerateMemoised(u2);
              if (p2 && (s2.object = p2, o2.object = rs("=", Ju(p2), u2)), c2) {
                var d2 = r2.maybeGenerateMemoised(l2);
                d2 && (s2.property = d2, o2.property = rs("=", Ju(d2), l2));
              }
            }
            e3.replaceWith(Is(i2, o2, rs("=", s2, a2)));
          }
        } } };
      }), QO = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-nullish-coalescing-operator", manipulateOptions: function(e4, t3) {
            t3.plugins.push("nullishCoalescingOperator");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-nullish-coalescing-operator/node_modules/@babel/plugin-syntax-nullish-coalescing-operator/lib"), ZO = jF(function(e2, t2) {
        var r2, n2 = t2.loose, s2 = n2 !== void 0 && n2;
        e2.assertVersion(7);
        var a2 = (r2 = e2.assumption("noDocumentAll")) != null ? r2 : s2;
        return { name: "proposal-nullish-coalescing-operator", inherits: QO.default, visitor: { LogicalExpression: function(e3) {
          var t3 = e3.node, r3 = e3.scope;
          if (t3.operator === "??") {
            var n3, s3;
            if (r3.isStatic(t3.left))
              n3 = t3.left, s3 = Ju(t3.left);
            else {
              if (r3.path.isPattern())
                return void e3.replaceWith(Eg.ast(BO || (BO = u(["(() => ", ")()"])), e3.node));
              n3 = r3.generateUidIdentifierBasedOnNode(t3.left), r3.push({ id: Ju(n3) }), s3 = rs("=", n3, t3.left);
            }
            e3.replaceWith(ps(a2 ? ns("!=", s3, Ts()) : Is("&&", ns("!==", s3, Ts()), ns("!==", Ju(n3), r3.buildUndefinedNode())), Ju(n3), t3.right));
          }
        } } };
      }), eR = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-numeric-separator", manipulateOptions: function(e4, t3) {
            t3.plugins.push("numericSeparator");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-numeric-separator/node_modules/@babel/plugin-syntax-numeric-separator/lib");
      function tR(e2) {
        var t2, r2 = e2.node.extra;
        r2 != null && (t2 = r2.raw) != null && t2.includes("_") && (r2.raw = r2.raw.replace(/_/g, ""));
      }
      var rR = jF(function(e2) {
        return e2.assertVersion(7), { name: "proposal-numeric-separator", inherits: eR.default, visitor: { NumericLiteral: tR, BigIntLiteral: tR } };
      }), nR = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-object-rest-spread", manipulateOptions: function(e4, t3) {
            t3.plugins.push("objectRestSpread");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-object-rest-spread/node_modules/@babel/plugin-syntax-object-rest-spread/lib"), sR = Eg("\n  let VARIABLE_NAME =\n    arguments.length > ARGUMENT_KEY && arguments[ARGUMENT_KEY] !== undefined ?\n      arguments[ARGUMENT_KEY]\n    :\n      DEFAULT_VALUE;\n"), aR = Eg("\n  if (ASSIGNMENT_IDENTIFIER === UNDEFINED) {\n    ASSIGNMENT_IDENTIFIER = DEFAULT_VALUE;\n  }\n"), iR = Eg("\n  let ASSIGNMENT_IDENTIFIER = PARAMETER_NAME === UNDEFINED ? DEFAULT_VALUE : PARAMETER_NAME ;\n"), oR = Eg("\n  let $0 = arguments.length > $1 ? arguments[$1] : undefined;\n"), uR = { "ReferencedIdentifier|BindingIdentifier": function(e2, t2) {
        var r2 = e2.scope, n2 = e2.node.name;
        (n2 === "eval" || r2.getBinding(n2) === t2.scope.parent.getBinding(n2) && t2.scope.hasOwnBinding(n2)) && (t2.needsOuterBinding = true, e2.stop());
      }, "TypeAnnotation|TSTypeAnnotation|TypeParameterDeclaration|TSTypeParameterDeclaration": function(e2) {
        return e2.skip();
      } };
      function lR(e2, t2, r2, n2) {
        var s2 = e2.get("params");
        if (s2.every(function(e3) {
          return e3.isIdentifier();
        }))
          return false;
        for (var a2, i2 = e2.node, o2 = e2.scope, u2 = { stop: false, needsOuterBinding: false, scope: o2 }, l2 = [], c2 = new Set(), p2 = f(s2); !(a2 = p2()).done; )
          for (var d2 = a2.value, h2 = 0, m2 = Object.keys(d2.getBindingIdentifiers()); h2 < m2.length; h2++) {
            var y2, g2 = m2[h2], v2 = (y2 = o2.bindings[g2]) == null ? void 0 : y2.constantViolations;
            if (v2)
              for (var b2, E2 = f(v2); !(b2 = E2()).done; ) {
                var x2 = b2.value, D2 = x2.node;
                switch (D2.type) {
                  case "VariableDeclarator":
                    if (D2.init === null) {
                      var A2 = x2.parentPath;
                      if (!A2.parentPath.isFor() || A2.parentPath.get("body") === A2) {
                        x2.remove();
                        break;
                      }
                    }
                    c2.add(g2);
                    break;
                  case "FunctionDeclaration":
                    c2.add(g2);
                }
              }
          }
        if (c2.size === 0)
          for (var w2, C2 = f(s2); !(w2 = C2()).done; ) {
            var S2 = w2.value;
            if (S2.isIdentifier() || S2.traverse(uR, u2), u2.needsOuterBinding)
              break;
          }
        for (var T2 = null, j2 = 0; j2 < s2.length; j2++) {
          var P2 = s2[j2];
          if (!r2 || r2(j2)) {
            var I2 = [];
            n2 && n2(P2.parentPath, P2, I2);
            var F2 = P2.isAssignmentPattern();
            if (F2 && (t2 || i2.kind === "set")) {
              var k2 = P2.get("left"), O2 = P2.get("right"), R2 = o2.buildUndefinedNode();
              if (k2.isIdentifier())
                l2.push(aR({ ASSIGNMENT_IDENTIFIER: Ju(k2.node), DEFAULT_VALUE: O2.node, UNDEFINED: R2 })), P2.replaceWith(k2.node);
              else if (k2.isObjectPattern() || k2.isArrayPattern()) {
                var N2 = o2.generateUidIdentifier();
                l2.push(iR({ ASSIGNMENT_IDENTIFIER: k2.node, DEFAULT_VALUE: O2.node, PARAMETER_NAME: Ju(N2), UNDEFINED: R2 })), P2.replaceWith(N2);
              }
            } else if (F2) {
              T2 === null && (T2 = j2);
              var B2 = P2.get("left"), _2 = P2.get("right"), L2 = sR({ VARIABLE_NAME: B2.node, DEFAULT_VALUE: _2.node, ARGUMENT_KEY: Ss(j2) });
              l2.push(L2);
            } else if (T2 !== null) {
              var M2 = oR([P2.node, Ss(j2)]);
              l2.push(M2);
            } else if (P2.isObjectPattern() || P2.isArrayPattern()) {
              var U2 = e2.scope.generateUidIdentifier("ref"), G2 = Ks("let", [zs(P2.node, U2)]);
              l2.push(G2), P2.replaceWith(Ju(U2));
            }
            if (I2)
              for (var V2, W2 = f(I2); !(V2 = W2()).done; ) {
                var H2 = V2.value;
                l2.push(H2);
              }
          }
        }
        if (T2 !== null && (i2.params = i2.params.slice(0, T2)), e2.ensureBlock(), u2.needsOuterBinding || c2.size > 0) {
          l2.push(function(e3, t3) {
            for (var r3, n3 = [], s3 = [], a3 = f(e3); !(r3 = a3()).done; ) {
              var i3 = r3.value;
              n3.push(Ds(i3)), s3.push(Ds(i3));
            }
            return Ls(ls(ea(s3, t3), n3));
          }(c2, e2.get("body").node)), e2.set("body", os(l2));
          var X2 = e2.get("body.body"), q2 = X2[X2.length - 1].get("argument.callee");
          q2.arrowFunctionToExpression(), q2.node.generator = e2.node.generator, q2.node.async = e2.node.async, e2.node.generator = false;
        } else
          e2.get("body").unshiftContainer("body", l2);
        return true;
      }
      var cR = Eg("\n  for (var LEN = ARGUMENTS.length,\n           ARRAY = new Array(ARRAY_LEN),\n           KEY = START;\n       KEY < LEN;\n       KEY++) {\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\n  }\n"), pR = Eg("\n  (INDEX < OFFSET || ARGUMENTS.length <= INDEX) ? undefined : ARGUMENTS[INDEX]\n"), dR = Eg("\n  REF = INDEX, (REF < OFFSET || ARGUMENTS.length <= REF) ? undefined : ARGUMENTS[REF]\n"), fR = Eg("\n  ARGUMENTS.length <= OFFSET ? 0 : ARGUMENTS.length - OFFSET\n");
      function hR(e2, t2) {
        return e2.node.name === t2.name && e2.scope.bindingIdentifierEquals(t2.name, t2.outerBinding);
      }
      var mR = { Scope: function(e2, t2) {
        e2.scope.bindingIdentifierEquals(t2.name, t2.outerBinding) || e2.skip();
      }, Flow: function(e2) {
        e2.isTypeCastExpression() || e2.skip();
      }, Function: function(e2, t2) {
        var r2 = t2.noOptimise;
        t2.noOptimise = true, e2.traverse(mR, t2), t2.noOptimise = r2, e2.skip();
      }, ReferencedIdentifier: function(e2, t2) {
        var r2 = e2.node;
        if (r2.name === "arguments" && (t2.deopted = true), hR(e2, t2))
          if (t2.noOptimise)
            t2.deopted = true;
          else {
            var n2 = e2.parentPath;
            if (n2.listKey === "params" && n2.key < t2.offset)
              return;
            if (n2.isMemberExpression({ object: r2 })) {
              var s2 = n2.parentPath;
              if (!t2.deopted && !(s2.isAssignmentExpression() && n2.node === s2.node.left || s2.isLVal() || s2.isForXStatement() || s2.isUpdateExpression() || s2.isUnaryExpression({ operator: "delete" }) || (s2.isCallExpression() || s2.isNewExpression()) && n2.node === s2.node.callee)) {
                if (n2.node.computed) {
                  if (n2.get("property").isBaseType("number"))
                    return void t2.candidates.push({ cause: "indexGetter", path: e2 });
                } else if (n2.node.property.name === "length")
                  return void t2.candidates.push({ cause: "lengthGetter", path: e2 });
              }
            }
            if (t2.offset === 0 && n2.isSpreadElement()) {
              var a2 = n2.parentPath;
              if (a2.isCallExpression() && a2.node.arguments.length === 1)
                return void t2.candidates.push({ cause: "argSpread", path: e2 });
            }
            t2.references.push(e2);
          }
      }, BindingIdentifier: function(e2, t2) {
        hR(e2, t2) && (t2.deopted = true);
      } };
      function yR(e2, t2, r2) {
        var n2, s2 = Ss(r2);
        n2 = N(e2.parent.property) ? Ss(e2.parent.property.value + r2) : r2 === 0 ? e2.parent.property : ns("+", e2.parent.property, Ju(s2));
        var a2 = e2.scope;
        if (a2.isPure(n2)) {
          var i2 = e2.parentPath;
          i2.replaceWith(pR({ ARGUMENTS: t2, OFFSET: s2, INDEX: n2 }));
          var o2 = i2.get("test").get("left").evaluate();
          o2.confident && (o2.value === true ? i2.replaceWith(i2.scope.buildUndefinedNode()) : i2.get("test").replaceWith(i2.get("test").get("right")));
        } else {
          var u2 = a2.generateUidIdentifierBasedOnNode(n2);
          a2.push({ id: u2, kind: "var" }), e2.parentPath.replaceWith(dR({ ARGUMENTS: t2, OFFSET: s2, INDEX: n2, REF: Ju(u2) }));
        }
      }
      function gR(e2, t2, r2) {
        r2 ? e2.parentPath.replaceWith(fR({ ARGUMENTS: t2, OFFSET: Ss(r2) })) : e2.replaceWith(t2);
      }
      function vR(e2) {
        var t2 = e2.node, r2 = e2.scope;
        if (!function(e3) {
          var t3 = e3.params.length;
          return t3 > 0 && X(e3.params[t3 - 1]);
        }(t2))
          return false;
        var n2 = t2.params.pop().argument, s2 = Ds("arguments");
        if (Ot(n2)) {
          var a2 = Ks("let", [zs(n2, n2 = r2.generateUidIdentifier("ref"))]);
          t2.body.body.unshift(a2);
        }
        var i2 = function(e3) {
          var t3 = e3.params.length;
          return t3 > 0 && F(e3.params[0], { name: "this" }) && (t3 -= 1), t3;
        }(t2), o2 = { references: [], offset: i2, argumentsNode: s2, outerBinding: r2.getBindingIdentifier(n2.name), candidates: [], name: n2.name, deopted: false };
        if (e2.traverse(mR, o2), !o2.deopted && !o2.references.length) {
          for (var u2 = 0, l2 = o2.candidates; u2 < l2.length; u2++) {
            var c2 = l2[u2], p2 = c2.path, d2 = c2.cause, f2 = Ju(s2);
            switch (d2) {
              case "indexGetter":
                yR(p2, f2, o2.offset);
                break;
              case "lengthGetter":
                gR(p2, f2, o2.offset);
                break;
              default:
                p2.replaceWith(f2);
            }
          }
          return true;
        }
        o2.references = o2.references.concat(o2.candidates.map(function(e3) {
          return e3.path;
        }));
        var h2, m2, y2 = Ss(i2), g2 = r2.generateUidIdentifier("key"), v2 = r2.generateUidIdentifier("len");
        i2 ? (h2 = ns("-", Ju(g2), Ju(y2)), m2 = ps(ns(">", Ju(v2), Ju(y2)), ns("-", Ju(v2), Ju(y2)), Ss(0))) : (h2 = Ds(g2.name), m2 = Ds(v2.name));
        var b2 = cR({ ARGUMENTS: s2, ARRAY_KEY: h2, ARRAY_LEN: m2, START: y2, ARRAY: n2, KEY: g2, LEN: v2 });
        if (o2.deopted)
          t2.body.body.unshift(b2);
        else {
          var E2 = e2.getEarliestCommonAncestorFrom(o2.references).getStatementParent();
          E2.findParent(function(e3) {
            if (!e3.isLoop())
              return e3.isFunction();
            E2 = e3;
          }), E2.insertBefore(b2);
        }
        return true;
      }
      var bR, ER, xR, DR, AR, wR, CR, SR = jF(function(e2, t2) {
        var r2;
        e2.assertVersion(7);
        var n2 = (r2 = e2.assumption("ignoreFunctionLength")) != null ? r2 : t2.loose, s2 = e2.assumption("noNewArrows");
        return { name: "transform-parameters", visitor: { Function: function(e3) {
          e3.isArrowFunctionExpression() && e3.get("params").some(function(e4) {
            return e4.isRestElement() || e4.isAssignmentPattern();
          }) && e3.arrowFunctionToExpression({ noNewArrows: s2 });
          var t3 = vR(e3), r3 = lR(e3, n2);
          (t3 || r3) && e3.scope.crawl();
        } } };
      }), TR = { "es6.array.copy-within": { chrome: "45", opera: "32", edge: "12", firefox: "32", safari: "9", node: "4", ios: "9", samsung: "5", electron: "0.31" }, "es6.array.every": { chrome: "5", opera: "10.10", edge: "12", firefox: "2", safari: "3.1", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.array.fill": { chrome: "45", opera: "32", edge: "12", firefox: "31", safari: "7.1", node: "4", ios: "8", samsung: "5", electron: "0.31" }, "es6.array.filter": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.array.find": { chrome: "45", opera: "32", edge: "12", firefox: "25", safari: "7.1", node: "4", ios: "8", samsung: "5", electron: "0.31" }, "es6.array.find-index": { chrome: "45", opera: "32", edge: "12", firefox: "25", safari: "7.1", node: "4", ios: "8", samsung: "5", electron: "0.31" }, "es7.array.flat-map": { chrome: "69", opera: "56", edge: "79", firefox: "62", safari: "12", node: "11", ios: "12", samsung: "10", electron: "4.0" }, "es6.array.for-each": { chrome: "5", opera: "10.10", edge: "12", firefox: "2", safari: "3.1", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.array.from": { chrome: "51", opera: "38", edge: "15", firefox: "36", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es7.array.includes": { chrome: "47", opera: "34", edge: "14", firefox: "43", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.36" }, "es6.array.index-of": { chrome: "5", opera: "10.10", edge: "12", firefox: "2", safari: "3.1", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.array.is-array": { chrome: "5", opera: "10.50", edge: "12", firefox: "4", safari: "4", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.array.iterator": { chrome: "66", opera: "53", edge: "12", firefox: "60", safari: "9", node: "10", ios: "9", samsung: "9", electron: "3.0" }, "es6.array.last-index-of": { chrome: "5", opera: "10.10", edge: "12", firefox: "2", safari: "3.1", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.array.map": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.array.of": { chrome: "45", opera: "32", edge: "12", firefox: "25", safari: "9", node: "4", ios: "9", samsung: "5", electron: "0.31" }, "es6.array.reduce": { chrome: "5", opera: "10.50", edge: "12", firefox: "3", safari: "4", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.array.reduce-right": { chrome: "5", opera: "10.50", edge: "12", firefox: "3", safari: "4", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.array.slice": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.array.some": { chrome: "5", opera: "10.10", edge: "12", firefox: "2", safari: "3.1", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.array.sort": { chrome: "63", opera: "50", edge: "12", firefox: "5", safari: "12", node: "10", ie: "9", ios: "12", samsung: "8", electron: "3.0" }, "es6.array.species": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.date.now": { chrome: "5", opera: "10.50", edge: "12", firefox: "2", safari: "4", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.date.to-iso-string": { chrome: "5", opera: "10.50", edge: "12", firefox: "3.5", safari: "4", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.date.to-json": { chrome: "5", opera: "12.10", edge: "12", firefox: "4", safari: "10", node: "0.10", ie: "9", android: "4", ios: "10", samsung: "1", electron: "0.20" }, "es6.date.to-primitive": { chrome: "47", opera: "34", edge: "15", firefox: "44", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.36" }, "es6.date.to-string": { chrome: "5", opera: "10.50", edge: "12", firefox: "2", safari: "3.1", node: "0.10", ie: "10", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.function.bind": { chrome: "7", opera: "12", edge: "12", firefox: "4", safari: "5.1", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.function.has-instance": { chrome: "51", opera: "38", edge: "15", firefox: "50", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.function.name": { chrome: "5", opera: "10.50", edge: "14", firefox: "2", safari: "4", node: "0.10", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.map": { chrome: "51", opera: "38", edge: "15", firefox: "53", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.math.acosh": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.asinh": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.atanh": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.cbrt": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.clz32": { chrome: "38", opera: "25", edge: "12", firefox: "31", safari: "9", node: "0.12", ios: "9", samsung: "3", electron: "0.20" }, "es6.math.cosh": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.expm1": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.fround": { chrome: "38", opera: "25", edge: "12", firefox: "26", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.hypot": { chrome: "38", opera: "25", edge: "12", firefox: "27", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.imul": { chrome: "30", opera: "17", edge: "12", firefox: "23", safari: "7", node: "0.12", android: "4.4", ios: "7", samsung: "2", electron: "0.20" }, "es6.math.log1p": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.log10": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.log2": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.sign": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "9", node: "0.12", ios: "9", samsung: "3", electron: "0.20" }, "es6.math.sinh": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.tanh": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.math.trunc": { chrome: "38", opera: "25", edge: "12", firefox: "25", safari: "7.1", node: "0.12", ios: "8", samsung: "3", electron: "0.20" }, "es6.number.constructor": { chrome: "41", opera: "28", edge: "12", firefox: "36", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.number.epsilon": { chrome: "34", opera: "21", edge: "12", firefox: "25", safari: "9", node: "0.12", ios: "9", samsung: "2", electron: "0.20" }, "es6.number.is-finite": { chrome: "19", opera: "15", edge: "12", firefox: "16", safari: "9", node: "0.12", android: "4.1", ios: "9", samsung: "1.5", electron: "0.20" }, "es6.number.is-integer": { chrome: "34", opera: "21", edge: "12", firefox: "16", safari: "9", node: "0.12", ios: "9", samsung: "2", electron: "0.20" }, "es6.number.is-nan": { chrome: "19", opera: "15", edge: "12", firefox: "15", safari: "9", node: "0.12", android: "4.1", ios: "9", samsung: "1.5", electron: "0.20" }, "es6.number.is-safe-integer": { chrome: "34", opera: "21", edge: "12", firefox: "32", safari: "9", node: "0.12", ios: "9", samsung: "2", electron: "0.20" }, "es6.number.max-safe-integer": { chrome: "34", opera: "21", edge: "12", firefox: "31", safari: "9", node: "0.12", ios: "9", samsung: "2", electron: "0.20" }, "es6.number.min-safe-integer": { chrome: "34", opera: "21", edge: "12", firefox: "31", safari: "9", node: "0.12", ios: "9", samsung: "2", electron: "0.20" }, "es6.number.parse-float": { chrome: "34", opera: "21", edge: "12", firefox: "25", safari: "9", node: "0.12", ios: "9", samsung: "2", electron: "0.20" }, "es6.number.parse-int": { chrome: "34", opera: "21", edge: "12", firefox: "25", safari: "9", node: "0.12", ios: "9", samsung: "2", electron: "0.20" }, "es6.object.assign": { chrome: "49", opera: "36", edge: "13", firefox: "36", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.object.create": { chrome: "5", opera: "12", edge: "12", firefox: "4", safari: "4", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es7.object.define-getter": { chrome: "62", opera: "49", edge: "16", firefox: "48", safari: "9", node: "8.10", ios: "9", samsung: "8", electron: "3.0" }, "es7.object.define-setter": { chrome: "62", opera: "49", edge: "16", firefox: "48", safari: "9", node: "8.10", ios: "9", samsung: "8", electron: "3.0" }, "es6.object.define-property": { chrome: "5", opera: "12", edge: "12", firefox: "4", safari: "5.1", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.object.define-properties": { chrome: "5", opera: "12", edge: "12", firefox: "4", safari: "4", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es7.object.entries": { chrome: "54", opera: "41", edge: "14", firefox: "47", safari: "10.1", node: "7", ios: "10.3", samsung: "6", electron: "1.4" }, "es6.object.freeze": { chrome: "44", opera: "31", edge: "12", firefox: "35", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "es6.object.get-own-property-descriptor": { chrome: "44", opera: "31", edge: "12", firefox: "35", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "es7.object.get-own-property-descriptors": { chrome: "54", opera: "41", edge: "15", firefox: "50", safari: "10.1", node: "7", ios: "10.3", samsung: "6", electron: "1.4" }, "es6.object.get-own-property-names": { chrome: "40", opera: "27", edge: "12", firefox: "33", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.object.get-prototype-of": { chrome: "44", opera: "31", edge: "12", firefox: "35", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "es7.object.lookup-getter": { chrome: "62", opera: "49", edge: "79", firefox: "36", safari: "9", node: "8.10", ios: "9", samsung: "8", electron: "3.0" }, "es7.object.lookup-setter": { chrome: "62", opera: "49", edge: "79", firefox: "36", safari: "9", node: "8.10", ios: "9", samsung: "8", electron: "3.0" }, "es6.object.prevent-extensions": { chrome: "44", opera: "31", edge: "12", firefox: "35", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "es6.object.to-string": { chrome: "57", opera: "44", edge: "15", firefox: "51", safari: "10", node: "8", ios: "10", samsung: "7", electron: "1.7" }, "es6.object.is": { chrome: "19", opera: "15", edge: "12", firefox: "22", safari: "9", node: "0.12", android: "4.1", ios: "9", samsung: "1.5", electron: "0.20" }, "es6.object.is-frozen": { chrome: "44", opera: "31", edge: "12", firefox: "35", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "es6.object.is-sealed": { chrome: "44", opera: "31", edge: "12", firefox: "35", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "es6.object.is-extensible": { chrome: "44", opera: "31", edge: "12", firefox: "35", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "es6.object.keys": { chrome: "40", opera: "27", edge: "12", firefox: "35", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.object.seal": { chrome: "44", opera: "31", edge: "12", firefox: "35", safari: "9", node: "4", ios: "9", samsung: "4", electron: "0.30" }, "es6.object.set-prototype-of": { chrome: "34", opera: "21", edge: "12", firefox: "31", safari: "9", node: "0.12", ie: "11", ios: "9", samsung: "2", electron: "0.20" }, "es7.object.values": { chrome: "54", opera: "41", edge: "14", firefox: "47", safari: "10.1", node: "7", ios: "10.3", samsung: "6", electron: "1.4" }, "es6.promise": { chrome: "51", opera: "38", edge: "14", firefox: "45", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es7.promise.finally": { chrome: "63", opera: "50", edge: "18", firefox: "58", safari: "11.1", node: "10", ios: "11.3", samsung: "8", electron: "3.0" }, "es6.reflect.apply": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.construct": { chrome: "49", opera: "36", edge: "13", firefox: "49", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.define-property": { chrome: "49", opera: "36", edge: "13", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.delete-property": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.get": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.get-own-property-descriptor": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.get-prototype-of": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.has": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.is-extensible": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.own-keys": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.prevent-extensions": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.set": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.reflect.set-prototype-of": { chrome: "49", opera: "36", edge: "12", firefox: "42", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "es6.regexp.constructor": { chrome: "50", opera: "37", edge: "79", firefox: "40", safari: "10", node: "6", ios: "10", samsung: "5", electron: "1.1" }, "es6.regexp.flags": { chrome: "49", opera: "36", edge: "79", firefox: "37", safari: "9", node: "6", ios: "9", samsung: "5", electron: "0.37" }, "es6.regexp.match": { chrome: "50", opera: "37", edge: "79", firefox: "49", safari: "10", node: "6", ios: "10", samsung: "5", electron: "1.1" }, "es6.regexp.replace": { chrome: "50", opera: "37", edge: "79", firefox: "49", safari: "10", node: "6", ios: "10", samsung: "5", electron: "1.1" }, "es6.regexp.split": { chrome: "50", opera: "37", edge: "79", firefox: "49", safari: "10", node: "6", ios: "10", samsung: "5", electron: "1.1" }, "es6.regexp.search": { chrome: "50", opera: "37", edge: "79", firefox: "49", safari: "10", node: "6", ios: "10", samsung: "5", electron: "1.1" }, "es6.regexp.to-string": { chrome: "50", opera: "37", edge: "79", firefox: "39", safari: "10", node: "6", ios: "10", samsung: "5", electron: "1.1" }, "es6.set": { chrome: "51", opera: "38", edge: "15", firefox: "53", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.symbol": { chrome: "51", opera: "38", edge: "79", firefox: "51", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es7.symbol.async-iterator": { chrome: "63", opera: "50", edge: "79", firefox: "57", safari: "12", node: "10", ios: "12", samsung: "8", electron: "3.0" }, "es6.string.anchor": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.big": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.blink": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.bold": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.code-point-at": { chrome: "41", opera: "28", edge: "12", firefox: "29", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.string.ends-with": { chrome: "41", opera: "28", edge: "12", firefox: "29", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.string.fixed": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.fontcolor": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.fontsize": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.from-code-point": { chrome: "41", opera: "28", edge: "12", firefox: "29", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.string.includes": { chrome: "41", opera: "28", edge: "12", firefox: "40", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.string.italics": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.iterator": { chrome: "38", opera: "25", edge: "12", firefox: "36", safari: "9", node: "0.12", ios: "9", samsung: "3", electron: "0.20" }, "es6.string.link": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es7.string.pad-start": { chrome: "57", opera: "44", edge: "15", firefox: "48", safari: "10", node: "8", ios: "10", samsung: "7", electron: "1.7" }, "es7.string.pad-end": { chrome: "57", opera: "44", edge: "15", firefox: "48", safari: "10", node: "8", ios: "10", samsung: "7", electron: "1.7" }, "es6.string.raw": { chrome: "41", opera: "28", edge: "12", firefox: "34", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.string.repeat": { chrome: "41", opera: "28", edge: "12", firefox: "24", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.string.small": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.starts-with": { chrome: "41", opera: "28", edge: "12", firefox: "29", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "es6.string.strike": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.sub": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.sup": { chrome: "5", opera: "15", edge: "12", firefox: "17", safari: "6", node: "0.10", android: "4", ios: "7", phantom: "2", samsung: "1", electron: "0.20" }, "es6.string.trim": { chrome: "5", opera: "10.50", edge: "12", firefox: "3.5", safari: "4", node: "0.10", ie: "9", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es7.string.trim-left": { chrome: "66", opera: "53", edge: "79", firefox: "61", safari: "12", node: "10", ios: "12", samsung: "9", electron: "3.0" }, "es7.string.trim-right": { chrome: "66", opera: "53", edge: "79", firefox: "61", safari: "12", node: "10", ios: "12", samsung: "9", electron: "3.0" }, "es6.typed.array-buffer": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.typed.data-view": { chrome: "5", opera: "12", edge: "12", firefox: "15", safari: "5.1", node: "0.10", ie: "10", android: "4", ios: "6", phantom: "2", samsung: "1", electron: "0.20" }, "es6.typed.int8-array": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.typed.uint8-array": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.typed.uint8-clamped-array": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.typed.int16-array": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.typed.uint16-array": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.typed.int32-array": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.typed.uint32-array": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.typed.float32-array": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.typed.float64-array": { chrome: "51", opera: "38", edge: "13", firefox: "48", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "es6.weak-map": { chrome: "51", opera: "38", edge: "15", firefox: "53", safari: "9", node: "6.5", ios: "9", samsung: "5", electron: "1.2" }, "es6.weak-set": { chrome: "51", opera: "38", edge: "15", firefox: "53", safari: "9", node: "6.5", ios: "9", samsung: "5", electron: "1.2" } }, jR = function() {
        var e2 = Ds("a"), t2 = Bs(Ds("key"), e2);
        return Ac(e2, t2, ma([t2])) ? 1 : 0;
      }(), PR = jF(function(e2, t2) {
        var r2, n2, s2, a2;
        e2.assertVersion(7);
        var i2 = !YS("es6.object.assign", e2.targets(), { compatData: TR }), o2 = t2.useBuiltIns, u2 = o2 === void 0 ? i2 : o2, p2 = t2.loose, d2 = p2 !== void 0 && p2;
        if (typeof d2 != "boolean")
          throw new Error(".loose must be a boolean, or undefined");
        var h2 = (r2 = e2.assumption("ignoreFunctionLength")) != null ? r2 : d2, m2 = (n2 = e2.assumption("objectRestNoSymbols")) != null ? n2 : d2, y2 = (s2 = e2.assumption("pureGetters")) != null ? s2 : d2, g2 = (a2 = e2.assumption("setSpreadProperties")) != null ? a2 : d2;
        function v2(e3) {
          return u2 ? Fs2(Ds("Object"), Ds("assign")) : e3.addHelper("extends");
        }
        function b2(e3) {
          var t3 = false;
          return x2(e3, function(e4) {
            t3 = true, e4.stop();
          }), t3;
        }
        function E2(e3) {
          var t3 = false;
          return x2(e3, function(e4) {
            e4.parentPath.isObjectPattern() && (t3 = true, e4.stop());
          }), t3;
        }
        function x2(e3, t3) {
          e3.traverse({ Expression: function(e4) {
            var t4 = e4.parent.type;
            (t4 === "AssignmentPattern" && e4.key === "right" || t4 === "ObjectProperty" && e4.parent.computed && e4.key === "key") && e4.skip();
          }, RestElement: t3 });
        }
        function D2(e3, t3) {
          for (var r3, n3 = [], s3 = f(e3); !(r3 = s3()).done; ) {
            var a3 = r3.value, i3 = a3.get("key");
            if (a3.node.computed && !i3.isPure()) {
              var o3 = t3.generateUidBasedOnNode(i3.node), u3 = zs(Ds(o3), i3.node);
              n3.push(u3), i3.replaceWith(Ds(o3));
            }
          }
          return n3;
        }
        function A2(e3, t3, r3) {
          var n3 = e3.get("properties"), s3 = n3[n3.length - 1];
          Uu(s3.node);
          var a3 = Ju(s3.node);
          s3.remove();
          var i3, o3 = D2(e3.get("properties"), e3.scope), u3 = function(e4) {
            for (var t4, r4 = [], n4 = true, s4 = false, a4 = f(e4.node.properties); !(t4 = a4()).done; ) {
              var i4 = t4.value;
              F(i4.key) && !i4.computed ? r4.push(Cs(i4.key.name)) : De(i4.key) ? (r4.push(Ju(i4.key)), s4 = true) : Pt(i4.key) ? r4.push(Cs(String(i4.key.value))) : (r4.push(Ju(i4.key)), n4 = false);
            }
            return { keys: r4, allLiteral: n4, hasTemplateLiteral: s4 };
          }(e3), l2 = u3.keys, c2 = u3.allLiteral, p3 = u3.hasTemplateLiteral;
          if (l2.length === 0)
            return [o3, a3.argument, ls(v2(t3), [Rs([]), Ju(r3)])];
          if (c2) {
            if (i3 = ts(l2), !p3 && !G(e3.scope.block)) {
              var d3 = e3.findParent(function(e4) {
                return e4.isProgram();
              }), h3 = e3.scope.generateUidIdentifier("excluded");
              d3.scope.push({ id: h3, init: i3, kind: "const" }), i3 = Ju(h3);
            }
          } else
            i3 = ls(Fs2(ts(l2), Ds("map")), [t3.addHelper("toPropertyKey")]);
          return [o3, a3.argument, ls(t3.addHelper("objectWithoutProperties" + (m2 ? "Loose" : "")), [Ju(r3), i3])];
        }
        function w2(e3, t3, r3) {
          if (t3.isAssignmentPattern())
            w2(e3, t3.get("left"), r3);
          else {
            if (t3.isArrayPattern() && b2(t3))
              for (var n3 = t3.get("elements"), s3 = 0; s3 < n3.length; s3++)
                w2(e3, n3[s3], r3);
            if (t3.isObjectPattern() && b2(t3)) {
              var a3 = e3.scope.generateUidIdentifier("ref"), i3 = Ks("let", [zs(t3.node, a3)]);
              r3 ? r3.push(i3) : (e3.ensureBlock(), e3.get("body").unshiftContainer("body", i3)), t3.replaceWith(Ju(a3));
            }
          }
        }
        return { name: "proposal-object-rest-spread", inherits: nR.default, visitor: { Function: function(e3) {
          for (var t3 = e3.get("params"), r3 = new Set(), n3 = new Set(), s3 = 0; s3 < t3.length; ++s3) {
            var a3 = t3[s3];
            if (b2(a3)) {
              r3.add(s3);
              for (var i3 = 0, o3 = Object.keys(a3.getBindingIdentifiers()); i3 < o3.length; i3++) {
                var u3 = o3[i3];
                n3.add(u3);
              }
            }
          }
          var l2, c2 = false, p3 = function(e4, t4) {
            var r4 = e4.node.name;
            e4.scope.getBinding(r4) === t4.getBinding(r4) && n3.has(r4) && (c2 = true, e4.stop());
          };
          for (l2 = 0; l2 < t3.length && !c2; ++l2) {
            var d3 = t3[l2];
            r3.has(l2) || (d3.isReferencedIdentifier() || d3.isBindingIdentifier() ? p3(e3, e3.scope) : d3.traverse({ "Scope|TypeAnnotation|TSTypeAnnotation": function(e4) {
              return e4.skip();
            }, "ReferencedIdentifier|BindingIdentifier": p3 }, e3.scope));
          }
          if (c2) {
            lR(e3, h2, function(e4) {
              return e4 >= l2 - 1 || r3.has(e4);
            }, w2);
          } else
            for (var f2 = 0; f2 < t3.length; ++f2) {
              var m3 = t3[f2];
              r3.has(f2) && w2(m3.parentPath, m3);
            }
        }, VariableDeclarator: function(e3, t3) {
          if (e3.get("id").isObjectPattern()) {
            var r3 = e3, n3 = e3;
            x2(e3.get("id"), function(e4) {
              if (e4.parentPath.isObjectPattern()) {
                if (n3.node.id.properties.length > 1 && !F(n3.node.init)) {
                  var s3 = e4.scope.generateUidIdentifierBasedOnNode(n3.node.init, "ref");
                  return n3.insertBefore(zs(s3, n3.node.init)), void n3.replaceWith(zs(n3.node.id, Ju(s3)));
                }
                var a3, i3 = n3.node.init, o3 = [];
                e4.findParent(function(e5) {
                  if (e5.isObjectProperty())
                    o3.unshift(e5);
                  else if (e5.isVariableDeclarator())
                    return a3 = e5.parentPath.node.kind, true;
                });
                var u3 = D2(o3, e4.scope);
                o3.forEach(function(e5) {
                  var t4 = e5.node;
                  i3 = Fs2(i3, Ju(t4.key), t4.computed || Pt(t4.key));
                });
                var c2 = e4.findParent(function(e5) {
                  return e5.isObjectPattern();
                }), p3 = l(A2(c2, t3, i3), 3), d3 = p3[0], f2 = p3[1], h3 = p3[2];
                y2 && function(e5) {
                  var t4 = e5.getOuterBindingIdentifierPaths();
                  Object.keys(t4).forEach(function(r4) {
                    var n4 = t4[r4].parentPath;
                    e5.scope.getBinding(r4).references > jR || !n4.isObjectProperty() || n4.remove();
                  });
                }(c2), Mu(f2), r3.insertBefore(d3), r3.insertBefore(u3), r3.insertAfter(zs(f2, h3)), r3 = r3.getSibling(r3.key + 1), e4.scope.registerBinding(a3, r3), c2.node.properties.length === 0 && c2.findParent(function(e5) {
                  return e5.isObjectProperty() || e5.isVariableDeclarator();
                }).remove();
              }
            });
          }
        }, ExportNamedDeclaration: function(e3) {
          var t3 = e3.get("declaration");
          if (t3.isVariableDeclaration() && t3.get("declarations").some(function(e4) {
            return E2(e4.get("id"));
          })) {
            for (var r3 = [], n3 = 0, s3 = Object.keys(e3.getOuterBindingIdentifiers(e3)); n3 < s3.length; n3++) {
              var a3 = s3[n3];
              r3.push(oa(Ds(a3), Ds(a3)));
            }
            e3.replaceWith(t3.node), e3.insertAfter(ia(null, r3));
          }
        }, CatchClause: function(e3) {
          var t3 = e3.get("param");
          w2(t3.parentPath, t3);
        }, AssignmentExpression: function(e3, t3) {
          var r3 = e3.get("left");
          if (r3.isObjectPattern() && b2(r3)) {
            var n3 = [], s3 = e3.scope.generateUidBasedOnNode(e3.node.right, "ref");
            n3.push(Ks("var", [zs(Ds(s3), e3.node.right)]));
            var a3 = l(A2(r3, t3, Ds(s3)), 3), i3 = a3[0], o3 = a3[1], u3 = a3[2];
            i3.length > 0 && n3.push(Ks("var", i3));
            var c2 = Ju(e3.node);
            c2.right = Ds(s3), n3.push(ys(c2)), n3.push(fc(rs("=", o3, u3))), n3.push(ys(Ds(s3))), e3.replaceWithMultiple(n3);
          }
        }, ForXStatement: function(e3) {
          var t3 = e3.node, r3 = e3.scope, n3 = e3.get("left"), s3 = t3.left;
          if (E2(n3))
            if (Z(s3)) {
              var a3 = s3.declarations[0].id, i3 = r3.generateUidIdentifier("ref");
              t3.left = Ks(s3.kind, [zs(i3, null)]), e3.ensureBlock(), t3.body.body.unshift(Ks(t3.left.kind, [zs(a3, Ju(i3))]));
            } else {
              var o3 = r3.generateUidIdentifier("ref");
              t3.left = Ks("var", [zs(o3)]), e3.ensureBlock(), t3.body.body.length === 0 && e3.isCompletionRecord() && t3.body.body.unshift(ys(r3.buildUndefinedNode())), t3.body.body.unshift(ys(rs("=", s3, Ju(o3))));
            }
        }, ArrayPattern: function(e3) {
          var t3 = [];
          if (x2(e3, function(e4) {
            if (e4.parentPath.isObjectPattern()) {
              var r4 = e4.parentPath, n3 = e4.scope.generateUidIdentifier("ref");
              t3.push(zs(r4.node, n3)), r4.replaceWith(Ju(n3)), e4.skip();
            }
          }), t3.length > 0) {
            var r3 = e3.getStatementParent();
            r3.insertAfter(Ks(r3.node.kind || "var", t3));
          }
        }, ObjectExpression: function(e3, t3) {
          if (function(e4) {
            for (var t4, r4 = f(e4.properties); !(t4 = r4()).done; )
              if (be(t4.value))
                return true;
            return false;
          }(e3.node)) {
            var r3;
            if (g2)
              r3 = v2(t3);
            else
              try {
                r3 = t3.addHelper("objectSpread2");
              } catch (e4) {
                this.file.declarations.objectSpread2 = null, r3 = t3.addHelper("objectSpread");
              }
            for (var n3 = null, s3 = [], a3 = 0, i3 = e3.node.properties; a3 < i3.length; a3++) {
              var o3 = i3[a3];
              be(o3) ? (u3(), n3.arguments.push(o3.argument)) : s3.push(o3);
            }
            s3.length && u3(), e3.replaceWith(n3);
          }
          function u3() {
            var e4 = s3.length > 0, t4 = Rs(s3);
            s3 = [], n3 ? y2 ? e4 && n3.arguments.push(t4) : n3 = ls(Ju(r3), [n3].concat(c(e4 ? [Rs([]), t4] : []))) : n3 = ls(r3, [t4]);
          }
        } } };
      }), IR = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-optional-catch-binding", manipulateOptions: function(e4, t3) {
            t3.plugins.push("optionalCatchBinding");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-optional-catch-binding/node_modules/@babel/plugin-syntax-optional-catch-binding/lib"), FR = jF(function(e2) {
        return e2.assertVersion(7), { name: "proposal-optional-catch-binding", inherits: IR.default, visitor: { CatchClause: function(e3) {
          if (!e3.node.param) {
            var t2 = e3.scope.generateUidIdentifier("unused");
            e3.get("param").replaceWith(t2);
          }
        } } };
      }), kR = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-optional-chaining", manipulateOptions: function(e4, t3) {
            t3.plugins.push("optionalChaining");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-plugin-proposal-optional-chaining/node_modules/@babel/plugin-syntax-optional-chaining/lib");
      function OR(e2) {
        return ht(e2) || mt(e2) || yt(e2) || Ve(e2) || K(e2);
      }
      function RR(e2) {
        for (; OR(e2.node); )
          e2 = e2.get("expression");
        return e2;
      }
      function NR(e2) {
        var t2 = BR(e2), r2 = t2.node, n2 = t2.parentPath;
        if (n2.isLogicalExpression()) {
          var s2 = n2.node, a2 = s2.operator, i2 = s2.right;
          if (a2 === "&&" || a2 === "||" || a2 === "??" && r2 === i2)
            return NR(n2);
        }
        if (n2.isSequenceExpression()) {
          var o2 = n2.node.expressions;
          return o2[o2.length - 1] !== r2 || NR(n2);
        }
        return n2.isConditional({ test: r2 }) || n2.isUnaryExpression({ operator: "!" }) || n2.isLoop({ test: r2 });
      }
      function BR(e2) {
        var t2 = e2;
        return e2.findParent(function(e3) {
          if (!OR(e3))
            return true;
          t2 = e3;
        }), t2;
      }
      var _R = Eg.expression.ast;
      function LR(e2) {
        return F(e2 = RR(e2)) || Ee(e2) || M(e2) && !e2.computed && LR(e2.object);
      }
      function MR(e2, t2) {
        var r2 = t2.pureGetters, n2 = t2.noDocumentAll, s2 = e2.scope, a2 = BR(e2), i2 = a2.parentPath, o2 = NR(a2), l2 = false, c2 = i2.isCallExpression({ callee: a2.node }) && e2.isOptionalMemberExpression(), p2 = [], d2 = e2;
        if (s2.path.isPattern() && function(e3) {
          for (var t3 = e3, r3 = e3.scope; t3.isOptionalMemberExpression() || t3.isOptionalCallExpression(); ) {
            var n3 = t3.node, s3 = t3.isOptionalMemberExpression() ? "object" : "callee", a3 = RR(t3.get(s3));
            if (n3.optional)
              return !r3.isStatic(a3.node);
            t3 = a3;
          }
        }(d2))
          e2.replaceWith(Eg.ast(bR || (bR = u(["(() => ", ")()"])), e2.node));
        else {
          for (; d2.isOptionalMemberExpression() || d2.isOptionalCallExpression(); ) {
            var f2 = d2.node;
            f2.optional && p2.push(f2), d2.isOptionalMemberExpression() ? (d2.node.type = "MemberExpression", d2 = RR(d2.get("object"))) : d2.isOptionalCallExpression() && (d2.node.type = "CallExpression", d2 = RR(d2.get("callee")));
          }
          var h2 = e2;
          i2.isUnaryExpression({ operator: "delete" }) && (h2 = i2, l2 = true);
          for (var m2 = p2.length - 1; m2 >= 0; m2--) {
            for (var y2 = p2[m2], g2 = E(y2), v2 = g2 ? "callee" : "object", b2 = y2[v2], x2 = b2; OR(x2); )
              x2 = x2.expression;
            var D2 = void 0, A2 = void 0;
            if (g2 && F(x2, { name: "eval" }) ? (A2 = D2 = x2, y2[v2] = Ms([Ss(0), D2])) : r2 && g2 && LR(x2) ? A2 = D2 = b2 : (D2 = s2.maybeGenerateMemoised(x2)) ? (A2 = rs("=", Ju(D2), b2), y2[v2] = D2) : A2 = D2 = b2, g2 && M(x2))
              if (r2 && LR(x2))
                y2.callee = b2;
              else {
                var w2 = x2.object, C2 = s2.maybeGenerateMemoised(w2);
                C2 ? x2.object = rs("=", C2, w2) : C2 = Ee(w2) ? Ws() : w2, y2.arguments.unshift(Ju(C2)), y2.callee = Fs2(y2.callee, Ds("call"));
              }
            var S2 = h2.node;
            if (m2 === 0 && c2) {
              var T2, j2 = RR(h2.get("object")).node, P2 = void 0;
              r2 && LR(j2) || (P2 = s2.maybeGenerateMemoised(j2)) && (S2.object = rs("=", P2, j2)), S2 = ls(Fs2(S2, Ds("bind")), [Ju((T2 = P2) != null ? T2 : j2)]);
            }
            if (o2) {
              var I2 = n2 ? _R(ER || (ER = u(["", " != null"])), Ju(A2)) : _R(xR || (xR = u(["\n            ", " !== null && ", " !== void 0"])), Ju(A2), Ju(D2));
              h2.replaceWith(Is("&&", I2, S2)), h2 = RR(h2.get("right"));
            } else {
              var k2 = n2 ? _R(DR || (DR = u(["", " == null"])), Ju(A2)) : _R(AR || (AR = u(["\n            ", " === null || ", " === void 0"])), Ju(A2), Ju(D2)), O2 = _R(l2 ? wR || (wR = u(["true"])) : CR || (CR = u(["void 0"])));
              h2.replaceWith(ps(k2, O2, S2)), h2 = RR(h2.get("alternate"));
            }
          }
        }
      }
      var UR, GR, VR, WR, HR, XR, qR = jF(function(e2, t2) {
        var r2, n2;
        e2.assertVersion(7);
        var s2 = t2.loose, a2 = s2 !== void 0 && s2, i2 = (r2 = e2.assumption("noDocumentAll")) != null ? r2 : a2, o2 = (n2 = e2.assumption("pureGetters")) != null ? n2 : a2;
        return { name: "proposal-optional-chaining", inherits: kR.default, visitor: { "OptionalCallExpression|OptionalMemberExpression": function(e3) {
          MR(e3, { noDocumentAll: i2, pureGetters: o2 });
        } } };
      }), $R = function(e2) {
        var t2, r2 = e2.assign, n2 = e2.call, s2 = e2.path, a2 = r2.left, i2 = r2.right, o2 = n2.callee, u2 = se(o2) && vt(o2.body) && !o2.async && !o2.generator;
        if (u2) {
          var l2 = o2.params;
          l2.length === 1 && F(l2[0]) ? t2 = l2[0] : l2.length > 0 && (u2 = false);
        } else if (F(o2, { name: "eval" })) {
          var c2 = Ms([Ss(0), o2]);
          return n2.callee = c2, s2.scope.push({ id: Ju(a2) }), Ms([r2, n2]);
        }
        return u2 && !t2 ? Ms([i2, o2.body]) : (s2.scope.push({ id: Ju(a2) }), t2 ? (s2.get("right").scope.rename(t2.name, a2.name), Ms([r2, o2.body])) : Ms([r2, n2]));
      }, KR = { PipelinePrimaryTopicReference: function(e2) {
        e2.replaceWith(Ju(this.topicId));
      }, PipelineTopicExpression: function(e2) {
        e2.skip();
      } }, zR = { minimal: { BinaryExpression: function(e2) {
        var t2 = e2.scope, r2 = e2.node, n2 = r2.operator, s2 = r2.left, a2 = r2.right;
        if (n2 === "|>") {
          var i2 = t2.generateUidIdentifierBasedOnNode(s2), o2 = ls(a2, [Ju(i2)]);
          e2.replaceWith($R({ assign: rs("=", Ju(i2), s2), call: o2, path: e2 }));
        }
      } }, smart: { BinaryExpression: function(e2) {
        var t2 = e2.scope, r2 = e2.node, n2 = r2.operator, s2 = r2.left, a2 = r2.right;
        if (n2 === "|>") {
          var i2, o2 = t2.generateUidIdentifierBasedOnNode(s2);
          if (t2.push({ id: o2 }), st(a2))
            e2.get("right").traverse(KR, { topicId: o2 }), i2 = a2.expression;
          else {
            var u2 = a2.callee;
            F(u2, { name: "eval" }) && (u2 = Ms([Ss(0), u2])), i2 = ls(u2, [Ju(o2)]);
          }
          e2.replaceWith(Ms([rs("=", Ju(o2), s2), i2]));
        }
      } }, fsharp: { BinaryExpression: function(e2) {
        var t2 = e2.scope, r2 = e2.node, n2 = r2.operator, s2 = r2.left, a2 = r2.right;
        if (n2 === "|>") {
          var i2 = t2.generateUidIdentifierBasedOnNode(s2), o2 = a2.type === "AwaitExpression" ? Da(Ju(i2)) : ls(a2, [Ju(i2)]), u2 = $R({ assign: rs("=", Ju(i2), s2), call: o2, path: e2 });
          e2.replaceWith(u2);
        }
      } } }, JR = jF(function(e2, t2) {
        return e2.assertVersion(7), { name: "proposal-pipeline-operator", inherits: QF, visitor: zR[t2.proposal] };
      }), YR = jF(function(e2, t2) {
        return e2.assertVersion(7), xO({ name: "proposal-private-methods", api: e2, feature: uO.privateMethods, loose: t2.loose, manipulateOptions: function(e3, t3) {
          t3.plugins.push("classPrivateMethods");
        } });
      }), QR = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-private-property-in-object", manipulateOptions: function(e3, t2) {
          t2.plugins.push("privateIn");
        } };
      }), ZR = jF(function(e2, t2) {
        var r2 = e2.assertVersion, n2 = e2.types, s2 = e2.template, a2 = t2.loose;
        r2(7);
        var i2 = new WeakMap();
        new WeakMap();
        function o2(e3, t3, r3) {
          r3 === void 0 && (r3 = false), e3.node.value ? r3 ? e3.get("value").insertBefore(t3) : e3.get("value").insertAfter(t3) : e3.set("value", n2.unaryExpression("void", t3));
        }
        function l2(e3, t3) {
          for (var r3, s3, a3, i3 = f(e3.get("body.body")); !(a3 = i3()).done; ) {
            var u2 = a3.value;
            if ((u2.isClassProperty() || u2.isClassPrivateProperty()) && !u2.node.static) {
              r3 = u2;
              break;
            }
            !s3 && u2.isClassMethod({ kind: "constructor" }) && (s3 = u2);
          }
          r3 ? o2(r3, t3, true) : oO(e3, s3, [n2.expressionStatement(t3)]);
        }
        function c2(e3, t3, r3, a3, o3) {
          a3 === void 0 && (a3 = "");
          var l3 = i2.get(r3.node);
          if (!l3) {
            l3 = t3.scope.generateUidIdentifier((a3 || "") + " brandCheck"), i2.set(r3.node, l3), o3(r3, s2.expression.ast(UR || (UR = u(["", ".add(this)"])), n2.cloneNode(l3)));
            var c3 = n2.newExpression(n2.identifier("WeakSet"), []);
            ok(c3), t3.insertBefore(s2.ast(GR || (GR = u(["var ", " = ", ""])), l3, c3));
          }
          return n2.cloneNode(l3);
        }
        return { name: "proposal-private-property-in-object", inherits: QR, pre: function() {
          fO(this.file, uO.privateIn, a2);
        }, visitor: { BinaryExpression: function(e3) {
          var t3 = e3.node;
          if (t3.operator === "in" && n2.isPrivateName(t3.left)) {
            var r3, a3 = t3.left.id.name, i3 = e3.findParent(function(e4) {
              return !!e4.isClass() && !!(r3 = e4.get("body.body").find(function(e5) {
                var t4 = e5.node;
                return n2.isPrivate(t4) && t4.key.id.name === a3;
              }));
            });
            if (i3.parentPath.scope.path.isPattern())
              i3.replaceWith(s2.ast(VR || (VR = u(["(() => ", ")()"])), i3.node));
            else if (r3.isMethod())
              if (r3.node.static)
                i3.node.id ? function(e4, t4, r4) {
                  for (; r4 !== t4; )
                    r4.hasOwnBinding(e4) && r4.rename(e4), r4 = r4.parent;
                }(i3.node.id.name, i3.scope, e3.scope) : i3.set("id", e3.scope.generateUidIdentifier("class")), e3.replaceWith(s2.expression.ast(WR || (WR = u(["\n                ", " === ", "\n              "])), n2.cloneNode(i3.node.id), e3.node.right));
              else {
                var p2, d2 = c2(0, i3, i3, (p2 = i3.node.id) == null ? void 0 : p2.name, l2);
                e3.replaceWith(s2.expression.ast(HR || (HR = u(["", ".has(", ")"])), d2, e3.node.right));
              }
            else {
              var f2 = c2(0, i3, r3, r3.node.key.id.name, o2);
              e3.replaceWith(s2.expression.ast(XR || (XR = u(["", ".has(", ")"])), f2, e3.node.right));
            }
          }
        } } };
      }), eN = jF(function(e2) {
        return e2.assertVersion(7), { name: "syntax-throw-expressions", manipulateOptions: function(e3, t2) {
          t2.plugins.push("throwExpressions");
        } };
      }), tN = jF(function(e2) {
        return e2.assertVersion(7), { name: "proposal-throw-expressions", inherits: eN, visitor: { UnaryExpression: function(e3) {
          var t2 = e3.node, r2 = t2.operator, n2 = t2.argument;
          if (r2 === "throw") {
            var s2 = xs(null, [Ds("e")], os([Hs(Ds("e"))]));
            e3.replaceWith(ls(s2, [n2]));
          }
        } } };
      }), rN = zt(function(e2, t2) {
        (function() {
          var r2 = { function: true, object: true }[typeof window] && window || this, n2 = t2 && !t2.nodeType && t2, s2 = e2 && !e2.nodeType, a2 = n2 && s2 && typeof $t == "object" && $t;
          !a2 || a2.global !== a2 && a2.window !== a2 && a2.self !== a2 || (r2 = a2);
          var i2 = Object.prototype.hasOwnProperty;
          function o2() {
            var e3 = Number(arguments[0]);
            if (!isFinite(e3) || e3 < 0 || e3 > 1114111 || Math.floor(e3) != e3)
              throw RangeError("Invalid code point: " + e3);
            if (e3 <= 65535)
              return String.fromCharCode(e3);
            var t3 = 55296 + ((e3 -= 65536) >> 10), r3 = e3 % 1024 + 56320;
            return String.fromCharCode(t3, r3);
          }
          var u2 = {};
          function l2(e3, t3) {
            if (t3.indexOf("|") == -1) {
              if (e3 == t3)
                return;
              throw Error("Invalid node type: " + e3 + "; expected type: " + t3);
            }
            if (!(t3 = i2.call(u2, t3) ? u2[t3] : u2[t3] = RegExp("^(?:" + t3 + ")$")).test(e3))
              throw Error("Invalid node type: " + e3 + "; expected types: " + t3);
          }
          function c2(e3) {
            var t3 = e3.type;
            if (i2.call(h2, t3))
              return h2[t3](e3);
            throw Error("Invalid node type: " + t3);
          }
          function p2(e3) {
            return l2(e3.type, "anchor|characterClassEscape|characterClassRange|dot|value"), c2(e3);
          }
          function d2(e3) {
            return l2(e3.type, "identifier"), e3.value;
          }
          function f2(e3) {
            return l2(e3.type, "anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|unicodePropertyEscape|value|dot"), c2(e3);
          }
          var h2 = { alternative: function(e3) {
            l2(e3.type, "alternative");
            for (var t3 = e3.body, r3 = -1, n3 = t3.length, s3 = ""; ++r3 < n3; )
              s3 += f2(t3[r3]);
            return s3;
          }, anchor: function(e3) {
            switch (l2(e3.type, "anchor"), e3.kind) {
              case "start":
                return "^";
              case "end":
                return "$";
              case "boundary":
                return "\\b";
              case "not-boundary":
                return "\\B";
              default:
                throw Error("Invalid assertion");
            }
          }, characterClass: function(e3) {
            l2(e3.type, "characterClass");
            var t3 = e3.body, r3 = -1, n3 = t3.length, s3 = "";
            for (e3.negative && (s3 += "^"); ++r3 < n3; )
              s3 += p2(t3[r3]);
            return "[" + s3 + "]";
          }, characterClassEscape: function(e3) {
            return l2(e3.type, "characterClassEscape"), "\\" + e3.value;
          }, characterClassRange: function(e3) {
            l2(e3.type, "characterClassRange");
            var t3 = e3.min, r3 = e3.max;
            if (t3.type == "characterClassRange" || r3.type == "characterClassRange")
              throw Error("Invalid character class range");
            return p2(t3) + "-" + p2(r3);
          }, unicodePropertyEscape: function(e3) {
            return l2(e3.type, "unicodePropertyEscape"), "\\" + (e3.negative ? "P" : "p") + "{" + e3.value + "}";
          }, disjunction: function(e3) {
            l2(e3.type, "disjunction");
            for (var t3 = e3.body, r3 = -1, n3 = t3.length, s3 = ""; ++r3 < n3; )
              r3 != 0 && (s3 += "|"), s3 += c2(t3[r3]);
            return s3;
          }, dot: function(e3) {
            return l2(e3.type, "dot"), ".";
          }, group: function(e3) {
            l2(e3.type, "group");
            var t3 = "";
            switch (e3.behavior) {
              case "normal":
                e3.name && (t3 += "?<" + d2(e3.name) + ">");
                break;
              case "ignore":
                t3 += "?:";
                break;
              case "lookahead":
                t3 += "?=";
                break;
              case "negativeLookahead":
                t3 += "?!";
                break;
              case "lookbehind":
                t3 += "?<=";
                break;
              case "negativeLookbehind":
                t3 += "?<!";
                break;
              default:
                throw Error("Invalid behaviour: " + e3.behaviour);
            }
            for (var r3 = e3.body, n3 = -1, s3 = r3.length; ++n3 < s3; )
              t3 += c2(r3[n3]);
            return "(" + t3 + ")";
          }, quantifier: function(e3) {
            l2(e3.type, "quantifier");
            var t3 = "", r3 = e3.min, n3 = e3.max;
            return t3 = n3 == null ? r3 == 0 ? "*" : r3 == 1 ? "+" : "{" + r3 + ",}" : r3 == n3 ? "{" + r3 + "}" : r3 == 0 && n3 == 1 ? "?" : "{" + r3 + "," + n3 + "}", e3.greedy || (t3 += "?"), function(e4) {
              return l2(e4.type, "anchor|characterClass|characterClassEscape|dot|group|reference|value"), c2(e4);
            }(e3.body[0]) + t3;
          }, reference: function(e3) {
            if (l2(e3.type, "reference"), e3.matchIndex)
              return "\\" + e3.matchIndex;
            if (e3.name)
              return "\\k<" + d2(e3.name) + ">";
            throw new Error("Unknown reference type");
          }, value: function(e3) {
            l2(e3.type, "value");
            var t3 = e3.kind, r3 = e3.codePoint;
            if (typeof r3 != "number")
              throw new Error("Invalid code point: " + r3);
            switch (t3) {
              case "controlLetter":
                return "\\c" + o2(r3 + 64);
              case "hexadecimalEscape":
                return "\\x" + ("00" + r3.toString(16).toUpperCase()).slice(-2);
              case "identifier":
                return "\\" + o2(r3);
              case "null":
                return "\\" + r3;
              case "octal":
                return "\\" + r3.toString(8);
              case "singleEscape":
                switch (r3) {
                  case 8:
                    return "\\b";
                  case 9:
                    return "\\t";
                  case 10:
                    return "\\n";
                  case 11:
                    return "\\v";
                  case 12:
                    return "\\f";
                  case 13:
                    return "\\r";
                  default:
                    throw Error("Invalid code point: " + r3);
                }
              case "symbol":
                return o2(r3);
              case "unicodeEscape":
                return "\\u" + ("0000" + r3.toString(16).toUpperCase()).slice(-4);
              case "unicodeCodePointEscape":
                return "\\u{" + r3.toString(16).toUpperCase() + "}";
              default:
                throw Error("Unsupported node kind: " + t3);
            }
          } }, m2 = { generate: c2 };
          n2 && s2 ? n2.generate = c2 : r2.regjsgen = m2;
        }).call($t);
      }, "/$$rollup_base$$/node_modules/regjsgen"), nN = zt(function(e2) {
        var t2, r2, n2, s2;
        n2 = String.fromCodePoint || (t2 = String.fromCharCode, r2 = Math.floor, function() {
          var e3, n3, s3 = 16384, a2 = [], i2 = -1, o2 = arguments.length;
          if (!o2)
            return "";
          for (var u2 = ""; ++i2 < o2; ) {
            var l2 = Number(arguments[i2]);
            if (!isFinite(l2) || l2 < 0 || l2 > 1114111 || r2(l2) != l2)
              throw RangeError("Invalid code point: " + l2);
            l2 <= 65535 ? a2.push(l2) : (e3 = 55296 + ((l2 -= 65536) >> 10), n3 = l2 % 1024 + 56320, a2.push(e3, n3)), (i2 + 1 == o2 || a2.length > s3) && (u2 += t2.apply(null, a2), a2.length = 0);
          }
          return u2;
        }), s2 = { parse: function(e3, t3, r3) {
          function s3(t4) {
            return t4.raw = e3.substring(t4.range[0], t4.range[1]), t4;
          }
          function a2(e4, t4) {
            return e4.range[0] = t4, s3(e4);
          }
          function i2(e4, t4) {
            return s3({ type: "anchor", kind: e4, range: [V2 - t4, V2] });
          }
          function o2(e4, t4, r4, n3) {
            return s3({ type: "value", kind: e4, codePoint: t4, range: [r4, n3] });
          }
          function u2(e4, t4, r4, n3) {
            return n3 = n3 || 0, o2(e4, t4, V2 - (r4.length + n3), V2);
          }
          function l2(e4) {
            var t4, r4 = e4[0], n3 = r4.charCodeAt(0);
            return G2 && r4.length === 1 && n3 >= 55296 && n3 <= 56319 && (t4 = g2().charCodeAt(0)) >= 56320 && t4 <= 57343 ? o2("symbol", 1024 * (n3 - 55296) + t4 - 56320 + 65536, ++V2 - 2, V2) : o2("symbol", n3, V2 - 1, V2);
          }
          function c2(e4, t4, r4, n3) {
            return n3 == null && (r4 = V2 - 1, n3 = V2), s3({ type: "quantifier", min: e4, max: t4, greedy: true, body: null, range: [r4, n3] });
          }
          function p2(e4, t4, r4, n3) {
            return s3({ type: "characterClass", body: e4, negative: t4, range: [r4, n3] });
          }
          function d2(e4, t4, r4, n3) {
            return e4.codePoint > t4.codePoint && _2("invalid range in character class", e4.raw + "-" + t4.raw, r4, n3), s3({ type: "characterClassRange", min: e4, max: t4, range: [r4, n3] });
          }
          function f2(e4) {
            return e4.type === "alternative" ? e4.body : [e4];
          }
          function h2(t4) {
            t4 = t4 || 1;
            var r4 = e3.substring(V2, V2 + t4);
            return V2 += t4 || 1, r4;
          }
          function m2(e4) {
            y2(e4) || _2("character", e4);
          }
          function y2(t4) {
            if (e3.indexOf(t4, V2) === V2)
              return h2(t4.length);
          }
          function g2() {
            return e3[V2];
          }
          function v2(t4) {
            return e3.indexOf(t4, V2) === V2;
          }
          function b2(t4) {
            return e3[V2 + 1] === t4;
          }
          function E2(t4) {
            var r4 = e3.substring(V2).match(t4);
            return r4 && (r4.range = [], r4.range[0] = V2, h2(r4[0].length), r4.range[1] = V2), r4;
          }
          function x2() {
            var e4 = [], t4 = V2;
            for (e4.push(D2()); y2("|"); )
              e4.push(D2());
            return e4.length === 1 ? e4[0] : function(e5, t5, r4) {
              return s3({ type: "disjunction", body: e5, range: [t5, r4] });
            }(e4, t4, V2);
          }
          function D2() {
            for (var e4, t4 = [], r4 = V2; e4 = A2(); )
              t4.push(e4);
            return t4.length === 1 ? t4[0] : function(e5, t5, r5) {
              return s3({ type: "alternative", body: e5, range: [t5, r5] });
            }(t4, r4, V2);
          }
          function A2() {
            if (V2 >= e3.length || v2("|") || v2(")"))
              return null;
            var t4 = y2("^") ? i2("start", 1) : y2("$") ? i2("end", 1) : y2("\\b") ? i2("boundary", 2) : y2("\\B") ? i2("not-boundary", 2) : w2("(?=", "lookahead", "(?!", "negativeLookahead");
            if (t4)
              return t4;
            var n3 = function() {
              var e4;
              if (e4 = E2(/^[^^$\\.*+?()[\]{}|]/))
                return l2(e4);
              if (!G2 && (e4 = E2(/^(?:]|})/)))
                return l2(e4);
              if (y2("."))
                return s3({ type: "dot", range: [V2 - 1, V2] });
              if (y2("\\")) {
                if (!(e4 = j2())) {
                  if (!G2 && g2() == "c")
                    return o2("symbol", 92, V2 - 1, V2);
                  _2("atomEscape");
                }
                return e4;
              }
              if (e4 = function() {
                var e5, t6 = V2;
                return (e5 = E2(/^\[\^/)) ? (e5 = R2(), m2("]"), p2(e5, true, t6, V2)) : y2("[") ? (e5 = R2(), m2("]"), p2(e5, false, t6, V2)) : null;
              }())
                return e4;
              if (r3.lookbehind && (e4 = w2("(?<=", "lookbehind", "(?<!", "negativeLookbehind")))
                return e4;
              if (r3.namedGroups && y2("(?<")) {
                var t5 = F2();
                m2(">");
                var n4 = C2("normal", t5.range[0] - 3);
                return n4.name = t5, n4;
              }
              return w2("(?:", "ignore", "(", "normal");
            }();
            n3 || _2("Expected atom");
            var u3 = function() {
              var e4, t5, r4, n4, s4 = V2;
              return y2("*") ? t5 = c2(0) : y2("+") ? t5 = c2(1) : y2("?") ? t5 = c2(0, 1) : (e4 = E2(/^\{([0-9]+)\}/)) ? t5 = c2(r4 = parseInt(e4[1], 10), r4, e4.range[0], e4.range[1]) : (e4 = E2(/^\{([0-9]+),\}/)) ? t5 = c2(r4 = parseInt(e4[1], 10), void 0, e4.range[0], e4.range[1]) : (e4 = E2(/^\{([0-9]+),([0-9]+)\}/)) && ((r4 = parseInt(e4[1], 10)) > (n4 = parseInt(e4[2], 10)) && _2("numbers out of order in {} quantifier", "", s4, V2), t5 = c2(r4, n4, e4.range[0], e4.range[1])), t5 && y2("?") && (t5.greedy = false, t5.range[1] += 1), t5;
            }() || false;
            return u3 ? (u3.body = f2(n3), a2(u3, n3.range[0]), u3) : n3;
          }
          function w2(e4, t4, r4, n3) {
            var s4 = null, a3 = V2;
            if (y2(e4))
              s4 = t4;
            else {
              if (!y2(r4))
                return false;
              s4 = n3;
            }
            return C2(s4, a3);
          }
          function C2(e4, t4) {
            var r4 = x2();
            r4 || _2("Expected disjunction"), m2(")");
            var n3 = function(e5, t5, r5, n4) {
              return s3({ type: "group", behavior: e5, body: t5, range: [r5, n4] });
            }(e4, f2(r4), t4, V2);
            return e4 == "normal" && U2 && M2++, n3;
          }
          function S2(e4) {
            var t4, r4;
            if (G2 && e4.kind == "unicodeEscape" && (t4 = e4.codePoint) >= 55296 && t4 <= 56319 && v2("\\") && b2("u")) {
              var n3 = V2;
              V2++;
              var a3 = T2();
              a3.kind == "unicodeEscape" && (r4 = a3.codePoint) >= 56320 && r4 <= 57343 ? (e4.range[1] = a3.range[1], e4.codePoint = 1024 * (t4 - 55296) + r4 - 56320 + 65536, e4.type = "value", e4.kind = "unicodeCodePointEscape", s3(e4)) : V2 = n3;
            }
            return e4;
          }
          function T2() {
            return j2(true);
          }
          function j2(e4) {
            var t4, n3 = V2;
            if (t4 = function() {
              var e5, t5, r4;
              if (e5 = E2(/^(?!0)\d+/)) {
                t5 = e5[0];
                var n4 = parseInt(e5[0], 10);
                return n4 <= M2 ? (r4 = e5[0], s3({ type: "reference", matchIndex: parseInt(r4, 10), range: [V2 - 1 - r4.length, V2] })) : (L2.push(n4), h2(-e5[0].length), (e5 = E2(/^[0-7]{1,3}/)) ? u2("octal", parseInt(e5[0], 8), e5[0], 1) : a2(e5 = l2(E2(/^[89]/)), e5.range[0] - 1));
              }
              return (e5 = E2(/^[0-7]{1,3}/)) ? (t5 = e5[0], /^0{1,3}$/.test(t5) ? u2("null", 0, "0", t5.length + 1) : u2("octal", parseInt(t5, 8), t5, 1)) : !!(e5 = E2(/^[dDsSwW]/)) && s3({ type: "characterClassEscape", value: e5[0], range: [V2 - 2, V2] });
            }() || function() {
              if (r3.namedGroups && E2(/^k<(?=.*?>)/)) {
                var e5 = F2();
                return m2(">"), function(e6) {
                  return s3({ type: "reference", name: e6, range: [e6.range[0] - 3, V2] });
                }(e5);
              }
            }())
              return t4;
            if (e4) {
              if (y2("b"))
                return u2("singleEscape", 8, "\\b");
              if (y2("B"))
                _2("\\B not possible inside of CharacterClass", "", n3);
              else if (!G2 && (t4 = E2(/^c([0-9])/)))
                return u2("controlLetter", t4[1] + 16, t4[1], 2);
              if (y2("-") && G2)
                return u2("singleEscape", 45, "\\-");
            }
            return t4 = function() {
              var e5, t5, n4, a3 = V2;
              if (e5 = E2(/^[fnrtv]/)) {
                var i3 = 0;
                switch (e5[0]) {
                  case "t":
                    i3 = 9;
                    break;
                  case "n":
                    i3 = 10;
                    break;
                  case "v":
                    i3 = 11;
                    break;
                  case "f":
                    i3 = 12;
                    break;
                  case "r":
                    i3 = 13;
                }
                return u2("singleEscape", i3, "\\" + e5[0]);
              }
              return (e5 = E2(/^c([a-zA-Z])/)) ? u2("controlLetter", e5[1].charCodeAt(0) % 32, e5[1], 2) : (e5 = E2(/^x([0-9a-fA-F]{2})/)) ? u2("hexadecimalEscape", parseInt(e5[1], 16), e5[1], 2) : (e5 = P2()) ? ((!e5 || e5.codePoint > 1114111) && _2("Invalid escape sequence", null, a3, V2), e5) : r3.unicodePropertyEscape && G2 && (e5 = E2(/^([pP])\{([^\}]+)\}/)) ? s3({ type: "unicodePropertyEscape", negative: e5[1] === "P", value: e5[2], range: [e5.range[0] - 1, e5.range[1]], raw: e5[0] }) : (n4 = g2(), G2 && /[\^\$\.\*\+\?\(\)\\\[\]\{\}\|\/]/.test(n4) || !G2 && n4 !== "c" ? n4 === "k" && r3.lookbehind ? null : u2("identifier", (t5 = h2()).charCodeAt(0), t5, 1) : null);
            }();
          }
          function P2() {
            var e4;
            return (e4 = E2(/^u([0-9a-fA-F]{4})/)) ? S2(u2("unicodeEscape", parseInt(e4[1], 16), e4[1], 2)) : G2 && (e4 = E2(/^u\{([0-9a-fA-F]+)\}/)) ? u2("unicodeCodePointEscape", parseInt(e4[1], 16), e4[1], 4) : void 0;
          }
          function I2(t4) {
            var r4 = g2(), s4 = V2;
            if (r4 === "\\") {
              h2();
              var a3 = P2();
              return a3 && t4(a3.codePoint) || _2("Invalid escape sequence", null, s4, V2), n2(a3.codePoint);
            }
            var i3 = r4.charCodeAt(0);
            if (i3 >= 55296 && i3 <= 56319) {
              var o3 = (r4 += e3[V2 + 1]).charCodeAt(1);
              o3 >= 56320 && o3 <= 57343 && (i3 = 1024 * (i3 - 55296) + o3 - 56320 + 65536);
            }
            if (t4(i3))
              return h2(), i3 > 65535 && h2(), r4;
          }
          function F2() {
            var e4, t4 = V2, r4 = I2(k2);
            for (r4 || _2("Invalid identifier"); e4 = I2(O2); )
              r4 += e4;
            return s3({ type: "identifier", value: r4, range: [t4, V2] });
          }
          function k2(e4) {
            return e4 === 36 || e4 === 95 || e4 >= 65 && e4 <= 90 || e4 >= 97 && e4 <= 122 || e4 >= 128 && /[\$A-Z_a-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEF\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7B9\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDF00-\uDF1C\uDF27\uDF30-\uDF45]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF1A]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFF1]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/.test(n2(e4));
          }
          function O2(e4) {
            return k2(e4) || e4 >= 48 && e4 <= 57 || e4 >= 128 && /[0-9_\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD801[\uDCA0-\uDCA9]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDD30-\uDD39\uDF46-\uDF50]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC66-\uDC6F\uDC7F-\uDC82\uDCB0-\uDCBA\uDCF0-\uDCF9\uDD00-\uDD02\uDD27-\uDD34\uDD36-\uDD3F\uDD45\uDD46\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDDC9-\uDDCC\uDDD0-\uDDD9\uDE2C-\uDE37\uDE3E\uDEDF-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF3B\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC35-\uDC46\uDC50-\uDC59\uDC5E\uDCB0-\uDCC3\uDCD0-\uDCD9\uDDAF-\uDDB5\uDDB8-\uDDC0\uDDDC\uDDDD\uDE30-\uDE40\uDE50-\uDE59\uDEAB-\uDEB7\uDEC0-\uDEC9\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDC2C-\uDC3A\uDCE0-\uDCE9\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE3E\uDE47\uDE51-\uDE5B\uDE8A-\uDE99]|\uD807[\uDC2F-\uDC36\uDC38-\uDC3F\uDC50-\uDC59\uDC92-\uDCA7\uDCA9-\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD50-\uDD59\uDD8A-\uDD8E\uDD90\uDD91\uDD93-\uDD97\uDDA0-\uDDA9\uDEF3-\uDEF6]|\uD81A[\uDE60-\uDE69\uDEF0-\uDEF4\uDF30-\uDF36\uDF50-\uDF59]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A\uDD50-\uDD59]|\uDB40[\uDD00-\uDDEF]/.test(n2(e4));
          }
          function R2() {
            var e4, t4;
            return v2("]") ? [] : ((t4 = B2()) || _2("classAtom"), (e4 = v2("]") ? [t4] : N2(t4)) || _2("nonEmptyClassRanges"), e4);
          }
          function N2(e4) {
            var t4, r4, n3;
            if (v2("-") && !b2("]")) {
              m2("-"), (n3 = B2()) || _2("classAtom"), r4 = V2;
              var s4 = R2();
              return s4 || _2("classRanges"), t4 = e4.range[0], s4.type === "empty" ? [d2(e4, n3, t4, r4)] : [d2(e4, n3, t4, r4)].concat(s4);
            }
            return (n3 = function() {
              var e5 = B2();
              return e5 || _2("classAtom"), v2("]") ? e5 : N2(e5);
            }()) || _2("nonEmptyClassRangesNoDash"), [e4].concat(n3);
          }
          function B2() {
            return y2("-") ? l2("-") : (e4 = E2(/^[^\\\]-]/)) ? l2(e4[0]) : y2("\\") ? ((e4 = T2()) || _2("classEscape"), S2(e4)) : void 0;
            var e4;
          }
          function _2(t4, r4, n3, s4) {
            n3 = n3 == null ? V2 : n3, s4 = s4 == null ? n3 : s4;
            var a3 = Math.max(0, n3 - 10), i3 = Math.min(s4 + 10, e3.length), o3 = "    " + e3.substring(a3, i3), u3 = "    " + new Array(n3 - a3 + 1).join(" ") + "^";
            throw SyntaxError(t4 + " at position " + n3 + (r4 ? ": " + r4 : "") + "\n" + o3 + "\n" + u3);
          }
          r3 || (r3 = {});
          var L2 = [], M2 = 0, U2 = true, G2 = (t3 || "").indexOf("u") !== -1, V2 = 0;
          (e3 = String(e3)) === "" && (e3 = "(?:)");
          var W2 = x2();
          W2.range[1] !== e3.length && _2("Could not parse entire input - got stuck", "", W2.range[1]);
          for (var H2 = 0; H2 < L2.length; H2++)
            if (L2[H2] <= M2)
              return V2 = 0, U2 = false, x2();
          return W2;
        } }, e2.exports ? e2.exports = s2 : window.regjsparser = s2;
      }, "/$$rollup_base$$/node_modules/regjsparser"), sN = zt(function(e2, t2) {
        !function(r2) {
          var n2 = t2, s2 = e2 && e2.exports == n2 && e2, a2 = typeof $t == "object" && $t;
          a2.global !== a2 && a2.window !== a2 || (r2 = a2);
          var i2 = "A range\u2019s `stop` value must be greater than or equal to the `start` value.", o2 = "Invalid code point value. Code points range from U+000000 to U+10FFFF.", u2 = 55296, l2 = 56319, c2 = 56320, p2 = 57343, d2 = /\\x00([^0123456789]|$)/g, f2 = {}, h2 = f2.hasOwnProperty, m2 = function(e3, t3) {
            for (var r3 = -1, n3 = e3.length; ++r3 < n3; )
              t3(e3[r3], r3);
          }, y2 = f2.toString, g2 = function(e3) {
            return y2.call(e3) == "[object Array]";
          }, v2 = function(e3) {
            return typeof e3 == "number" || y2.call(e3) == "[object Number]";
          }, b2 = function(e3, t3) {
            var r3 = String(e3);
            return r3.length < t3 ? ("0000" + r3).slice(-t3) : r3;
          }, E2 = function(e3) {
            return Number(e3).toString(16).toUpperCase();
          }, x2 = [].slice, D2 = function(e3, t3) {
            for (var r3, n3, s3 = 0, a3 = e3.length; s3 < a3; ) {
              if (r3 = e3[s3], n3 = e3[s3 + 1], t3 >= r3 && t3 < n3)
                return t3 == r3 ? n3 == r3 + 1 ? (e3.splice(s3, 2), e3) : (e3[s3] = t3 + 1, e3) : t3 == n3 - 1 ? (e3[s3 + 1] = t3, e3) : (e3.splice(s3, 2, r3, t3, t3 + 1, n3), e3);
              s3 += 2;
            }
            return e3;
          }, A2 = function(e3, t3, r3) {
            if (r3 < t3)
              throw Error(i2);
            for (var n3, s3, a3 = 0; a3 < e3.length; ) {
              if (n3 = e3[a3], s3 = e3[a3 + 1] - 1, n3 > r3)
                return e3;
              if (t3 <= n3 && r3 >= s3)
                e3.splice(a3, 2);
              else {
                if (t3 >= n3 && r3 < s3)
                  return t3 == n3 ? (e3[a3] = r3 + 1, e3[a3 + 1] = s3 + 1, e3) : (e3.splice(a3, 2, n3, t3, r3 + 1, s3 + 1), e3);
                if (t3 >= n3 && t3 <= s3)
                  e3[a3 + 1] = t3;
                else if (r3 >= n3 && r3 <= s3)
                  return e3[a3] = r3 + 1, e3;
                a3 += 2;
              }
            }
            return e3;
          }, w2 = function(e3, t3) {
            var r3, n3, s3 = 0, a3 = null, i3 = e3.length;
            if (t3 < 0 || t3 > 1114111)
              throw RangeError(o2);
            for (; s3 < i3; ) {
              if (r3 = e3[s3], n3 = e3[s3 + 1], t3 >= r3 && t3 < n3)
                return e3;
              if (t3 == r3 - 1)
                return e3[s3] = t3, e3;
              if (r3 > t3)
                return e3.splice(a3 != null ? a3 + 2 : 0, 0, t3, t3 + 1), e3;
              if (t3 == n3)
                return t3 + 1 == e3[s3 + 2] ? (e3.splice(s3, 4, r3, e3[s3 + 3]), e3) : (e3[s3 + 1] = t3 + 1, e3);
              a3 = s3, s3 += 2;
            }
            return e3.push(t3, t3 + 1), e3;
          }, C2 = function(e3, t3) {
            for (var r3, n3, s3 = 0, a3 = e3.slice(), i3 = t3.length; s3 < i3; )
              a3 = (r3 = t3[s3]) == (n3 = t3[s3 + 1] - 1) ? w2(a3, r3) : T2(a3, r3, n3), s3 += 2;
            return a3;
          }, S2 = function(e3, t3) {
            for (var r3, n3, s3 = 0, a3 = e3.slice(), i3 = t3.length; s3 < i3; )
              a3 = (r3 = t3[s3]) == (n3 = t3[s3 + 1] - 1) ? D2(a3, r3) : A2(a3, r3, n3), s3 += 2;
            return a3;
          }, T2 = function(e3, t3, r3) {
            if (r3 < t3)
              throw Error(i2);
            if (t3 < 0 || t3 > 1114111 || r3 < 0 || r3 > 1114111)
              throw RangeError(o2);
            for (var n3, s3, a3 = 0, u3 = false, l3 = e3.length; a3 < l3; ) {
              if (n3 = e3[a3], s3 = e3[a3 + 1], u3) {
                if (n3 == r3 + 1)
                  return e3.splice(a3 - 1, 2), e3;
                if (n3 > r3)
                  return e3;
                n3 >= t3 && n3 <= r3 && (s3 > t3 && s3 - 1 <= r3 ? (e3.splice(a3, 2), a3 -= 2) : (e3.splice(a3 - 1, 2), a3 -= 2));
              } else {
                if (n3 == r3 + 1 || n3 == r3)
                  return e3[a3] = t3, e3;
                if (n3 > r3)
                  return e3.splice(a3, 0, t3, r3 + 1), e3;
                if (t3 >= n3 && t3 < s3 && r3 + 1 <= s3)
                  return e3;
                t3 >= n3 && t3 < s3 || s3 == t3 ? (e3[a3 + 1] = r3 + 1, u3 = true) : t3 <= n3 && r3 + 1 >= s3 && (e3[a3] = t3, e3[a3 + 1] = r3 + 1, u3 = true);
              }
              a3 += 2;
            }
            return u3 || e3.push(t3, r3 + 1), e3;
          }, j2 = function(e3, t3) {
            var r3 = 0, n3 = e3.length, s3 = e3[r3], a3 = e3[n3 - 1];
            if (n3 >= 2 && (t3 < s3 || t3 > a3))
              return false;
            for (; r3 < n3; ) {
              if (s3 = e3[r3], a3 = e3[r3 + 1], t3 >= s3 && t3 < a3)
                return true;
              r3 += 2;
            }
            return false;
          }, P2 = function(e3) {
            return !e3.length;
          }, I2 = function(e3) {
            return e3.length == 2 && e3[0] + 1 == e3[1];
          }, F2 = function(e3) {
            for (var t3, r3, n3 = 0, s3 = [], a3 = e3.length; n3 < a3; ) {
              for (t3 = e3[n3], r3 = e3[n3 + 1]; t3 < r3; )
                s3.push(t3), ++t3;
              n3 += 2;
            }
            return s3;
          }, k2 = Math.floor, O2 = function(e3) {
            return parseInt(k2((e3 - 65536) / 1024) + u2, 10);
          }, R2 = function(e3) {
            return parseInt((e3 - 65536) % 1024 + c2, 10);
          }, N2 = String.fromCharCode, B2 = function(e3) {
            return e3 == 9 ? "\\t" : e3 == 10 ? "\\n" : e3 == 12 ? "\\f" : e3 == 13 ? "\\r" : e3 == 45 ? "\\x2D" : e3 == 92 ? "\\\\" : e3 == 36 || e3 >= 40 && e3 <= 43 || e3 == 46 || e3 == 47 || e3 == 63 || e3 >= 91 && e3 <= 94 || e3 >= 123 && e3 <= 125 ? "\\" + N2(e3) : e3 >= 32 && e3 <= 126 ? N2(e3) : e3 <= 255 ? "\\x" + b2(E2(e3), 2) : "\\u" + b2(E2(e3), 4);
          }, _2 = function(e3) {
            return e3 <= 65535 ? B2(e3) : "\\u{" + e3.toString(16).toUpperCase() + "}";
          }, L2 = function(e3) {
            var t3, r3 = e3.length, n3 = e3.charCodeAt(0);
            return n3 >= u2 && n3 <= l2 && r3 > 1 ? (t3 = e3.charCodeAt(1), 1024 * (n3 - u2) + t3 - c2 + 65536) : n3;
          }, M2 = function(e3) {
            var t3, r3, n3 = "", s3 = 0, a3 = e3.length;
            if (I2(e3))
              return B2(e3[0]);
            for (; s3 < a3; )
              n3 += (t3 = e3[s3]) == (r3 = e3[s3 + 1] - 1) ? B2(t3) : t3 + 1 == r3 ? B2(t3) + B2(r3) : B2(t3) + "-" + B2(r3), s3 += 2;
            return "[" + n3 + "]";
          }, U2 = function(e3) {
            if (e3.length == 1)
              return e3;
            for (var t3 = -1, r3 = -1; ++t3 < e3.length; ) {
              var n3 = e3[t3], s3 = n3[1], a3 = s3[0], i3 = s3[1];
              for (r3 = t3; ++r3 < e3.length; ) {
                var o3 = e3[r3], u3 = o3[1], l3 = u3[0], c3 = u3[1];
                a3 == l3 && i3 == c3 && u3.length === 2 && (I2(o3[0]) ? n3[0] = w2(n3[0], o3[0][0]) : n3[0] = T2(n3[0], o3[0][0], o3[0][1] - 1), e3.splice(r3, 1), --r3);
              }
            }
            return e3;
          }, G2 = function(e3) {
            if (!e3.length)
              return [];
            for (var t3, r3, n3, s3, a3, i3, o3 = 0, u3 = [], l3 = e3.length; o3 < l3; ) {
              t3 = e3[o3], r3 = e3[o3 + 1] - 1, n3 = O2(t3), s3 = R2(t3), a3 = O2(r3);
              var d3 = (i3 = R2(r3)) == p2, f3 = false;
              n3 == a3 || s3 == c2 && d3 ? (u3.push([[n3, a3 + 1], [s3, i3 + 1]]), f3 = true) : u3.push([[n3, n3 + 1], [s3, 57344]]), !f3 && n3 + 1 < a3 && (d3 ? (u3.push([[n3 + 1, a3 + 1], [c2, i3 + 1]]), f3 = true) : u3.push([[n3 + 1, a3], [c2, 57344]])), f3 || u3.push([[a3, a3 + 1], [c2, i3 + 1]]), o3 += 2;
            }
            return function(e4) {
              for (var t4, r4, n4, s4, a4, i4, o4 = [], u4 = [], l4 = false, c3 = -1, p3 = e4.length; ++c3 < p3; )
                if (t4 = e4[c3], r4 = e4[c3 + 1]) {
                  for (n4 = t4[0], s4 = t4[1], a4 = r4[0], i4 = r4[1], u4 = s4; a4 && n4[0] == a4[0] && n4[1] == a4[1]; )
                    u4 = I2(i4) ? w2(u4, i4[0]) : T2(u4, i4[0], i4[1] - 1), n4 = (t4 = e4[++c3])[0], s4 = t4[1], a4 = (r4 = e4[c3 + 1]) && r4[0], i4 = r4 && r4[1], l4 = true;
                  o4.push([n4, l4 ? u4 : s4]), l4 = false;
                } else
                  o4.push(t4);
              return U2(o4);
            }(u3);
          }, V2 = function(e3, t3, r3) {
            if (r3)
              return function(e4) {
                var t4, r4, n4 = "", s4 = 0, a4 = e4.length;
                if (I2(e4))
                  return _2(e4[0]);
                for (; s4 < a4; )
                  n4 += (t4 = e4[s4]) == (r4 = e4[s4 + 1] - 1) ? _2(t4) : t4 + 1 == r4 ? _2(t4) + _2(r4) : _2(t4) + "-" + _2(r4), s4 += 2;
                return "[" + n4 + "]";
              }(e3);
            var n3 = [], s3 = function(e4) {
              for (var t4, r4, n4 = [], s4 = [], a4 = [], i4 = [], o4 = 0, d4 = e4.length; o4 < d4; )
                t4 = e4[o4], r4 = e4[o4 + 1] - 1, t4 < u2 ? (r4 < u2 && a4.push(t4, r4 + 1), r4 >= u2 && r4 <= l2 && (a4.push(t4, u2), n4.push(u2, r4 + 1)), r4 >= c2 && r4 <= p2 && (a4.push(t4, u2), n4.push(u2, 56320), s4.push(c2, r4 + 1)), r4 > p2 && (a4.push(t4, u2), n4.push(u2, 56320), s4.push(c2, 57344), r4 <= 65535 ? a4.push(57344, r4 + 1) : (a4.push(57344, 65536), i4.push(65536, r4 + 1)))) : t4 >= u2 && t4 <= l2 ? (r4 >= u2 && r4 <= l2 && n4.push(t4, r4 + 1), r4 >= c2 && r4 <= p2 && (n4.push(t4, 56320), s4.push(c2, r4 + 1)), r4 > p2 && (n4.push(t4, 56320), s4.push(c2, 57344), r4 <= 65535 ? a4.push(57344, r4 + 1) : (a4.push(57344, 65536), i4.push(65536, r4 + 1)))) : t4 >= c2 && t4 <= p2 ? (r4 >= c2 && r4 <= p2 && s4.push(t4, r4 + 1), r4 > p2 && (s4.push(t4, 57344), r4 <= 65535 ? a4.push(57344, r4 + 1) : (a4.push(57344, 65536), i4.push(65536, r4 + 1)))) : t4 > p2 && t4 <= 65535 ? r4 <= 65535 ? a4.push(t4, r4 + 1) : (a4.push(t4, 65536), i4.push(65536, r4 + 1)) : i4.push(t4, r4 + 1), o4 += 2;
              return { loneHighSurrogates: n4, loneLowSurrogates: s4, bmp: a4, astral: i4 };
            }(e3), a3 = s3.loneHighSurrogates, i3 = s3.loneLowSurrogates, o3 = s3.bmp, d3 = s3.astral, f3 = !P2(a3), h3 = !P2(i3), y3 = G2(d3);
            return t3 && (o3 = C2(o3, a3), f3 = false, o3 = C2(o3, i3), h3 = false), P2(o3) || n3.push(M2(o3)), y3.length && n3.push(function(e4) {
              var t4 = [];
              return m2(e4, function(e5) {
                var r4 = e5[0], n4 = e5[1];
                t4.push(M2(r4) + M2(n4));
              }), t4.join("|");
            }(y3)), f3 && n3.push(M2(a3) + "(?![\\uDC00-\\uDFFF])"), h3 && n3.push("(?:[^\\uD800-\\uDBFF]|^)" + M2(i3)), n3.join("|");
          }, W2 = function e3(t3) {
            return arguments.length > 1 && (t3 = x2.call(arguments)), this instanceof e3 ? (this.data = [], t3 ? this.add(t3) : this) : new e3().add(t3);
          };
          W2.version = "1.4.2";
          var H2 = W2.prototype;
          !function(e3, t3) {
            var r3;
            for (r3 in t3)
              h2.call(t3, r3) && (e3[r3] = t3[r3]);
          }(H2, { add: function(e3) {
            var t3 = this;
            return e3 == null ? t3 : e3 instanceof W2 ? (t3.data = C2(t3.data, e3.data), t3) : (arguments.length > 1 && (e3 = x2.call(arguments)), g2(e3) ? (m2(e3, function(e4) {
              t3.add(e4);
            }), t3) : (t3.data = w2(t3.data, v2(e3) ? e3 : L2(e3)), t3));
          }, remove: function(e3) {
            var t3 = this;
            return e3 == null ? t3 : e3 instanceof W2 ? (t3.data = S2(t3.data, e3.data), t3) : (arguments.length > 1 && (e3 = x2.call(arguments)), g2(e3) ? (m2(e3, function(e4) {
              t3.remove(e4);
            }), t3) : (t3.data = D2(t3.data, v2(e3) ? e3 : L2(e3)), t3));
          }, addRange: function(e3, t3) {
            var r3 = this;
            return r3.data = T2(r3.data, v2(e3) ? e3 : L2(e3), v2(t3) ? t3 : L2(t3)), r3;
          }, removeRange: function(e3, t3) {
            var r3 = this, n3 = v2(e3) ? e3 : L2(e3), s3 = v2(t3) ? t3 : L2(t3);
            return r3.data = A2(r3.data, n3, s3), r3;
          }, intersection: function(e3) {
            var t3 = this, r3 = e3 instanceof W2 ? F2(e3.data) : e3;
            return t3.data = function(e4, t4) {
              for (var r4, n3 = 0, s3 = t4.length, a3 = []; n3 < s3; )
                r4 = t4[n3], j2(e4, r4) && a3.push(r4), ++n3;
              return function(e5) {
                for (var t5, r5 = -1, n4 = e5.length, s4 = n4 - 1, a4 = [], i3 = true, o3 = 0; ++r5 < n4; )
                  if (t5 = e5[r5], i3)
                    a4.push(t5), o3 = t5, i3 = false;
                  else if (t5 == o3 + 1) {
                    if (r5 != s4) {
                      o3 = t5;
                      continue;
                    }
                    i3 = true, a4.push(t5 + 1);
                  } else
                    a4.push(o3 + 1, t5), o3 = t5;
                return i3 || a4.push(t5 + 1), a4;
              }(a3);
            }(t3.data, r3), t3;
          }, contains: function(e3) {
            return j2(this.data, v2(e3) ? e3 : L2(e3));
          }, clone: function() {
            var e3 = new W2();
            return e3.data = this.data.slice(0), e3;
          }, toString: function(e3) {
            var t3 = V2(this.data, !!e3 && e3.bmpOnly, !!e3 && e3.hasUnicodeFlag);
            return t3 ? t3.replace(d2, "\\0$1") : "[]";
          }, toRegExp: function(e3) {
            var t3 = this.toString(e3 && e3.indexOf("u") != -1 ? { hasUnicodeFlag: true } : null);
            return RegExp(t3, e3 || "");
          }, valueOf: function() {
            return F2(this.data);
          } }), H2.toArray = H2.valueOf, n2 && !n2.nodeType ? s2 ? s2.exports = W2 : n2.regenerate = W2 : r2.regenerate = W2;
        }($t);
      }, "/$$rollup_base$$/node_modules/regenerate"), aN = new Set(["General_Category", "Script", "Script_Extensions", "Alphabetic", "Any", "ASCII", "ASCII_Hex_Digit", "Assigned", "Bidi_Control", "Bidi_Mirrored", "Case_Ignorable", "Cased", "Changes_When_Casefolded", "Changes_When_Casemapped", "Changes_When_Lowercased", "Changes_When_NFKC_Casefolded", "Changes_When_Titlecased", "Changes_When_Uppercased", "Dash", "Default_Ignorable_Code_Point", "Deprecated", "Diacritic", "Emoji", "Emoji_Component", "Emoji_Modifier", "Emoji_Modifier_Base", "Emoji_Presentation", "Extended_Pictographic", "Extender", "Grapheme_Base", "Grapheme_Extend", "Hex_Digit", "ID_Continue", "ID_Start", "Ideographic", "IDS_Binary_Operator", "IDS_Trinary_Operator", "Join_Control", "Logical_Order_Exception", "Lowercase", "Math", "Noncharacter_Code_Point", "Pattern_Syntax", "Pattern_White_Space", "Quotation_Mark", "Radical", "Regional_Indicator", "Sentence_Terminal", "Soft_Dotted", "Terminal_Punctuation", "Unified_Ideograph", "Uppercase", "Variation_Selector", "White_Space", "XID_Continue", "XID_Start"]), iN = new Map([["scx", "Script_Extensions"], ["sc", "Script"], ["gc", "General_Category"], ["AHex", "ASCII_Hex_Digit"], ["Alpha", "Alphabetic"], ["Bidi_C", "Bidi_Control"], ["Bidi_M", "Bidi_Mirrored"], ["Cased", "Cased"], ["CI", "Case_Ignorable"], ["CWCF", "Changes_When_Casefolded"], ["CWCM", "Changes_When_Casemapped"], ["CWKCF", "Changes_When_NFKC_Casefolded"], ["CWL", "Changes_When_Lowercased"], ["CWT", "Changes_When_Titlecased"], ["CWU", "Changes_When_Uppercased"], ["Dash", "Dash"], ["Dep", "Deprecated"], ["DI", "Default_Ignorable_Code_Point"], ["Dia", "Diacritic"], ["Ext", "Extender"], ["Gr_Base", "Grapheme_Base"], ["Gr_Ext", "Grapheme_Extend"], ["Hex", "Hex_Digit"], ["IDC", "ID_Continue"], ["Ideo", "Ideographic"], ["IDS", "ID_Start"], ["IDSB", "IDS_Binary_Operator"], ["IDST", "IDS_Trinary_Operator"], ["Join_C", "Join_Control"], ["LOE", "Logical_Order_Exception"], ["Lower", "Lowercase"], ["Math", "Math"], ["NChar", "Noncharacter_Code_Point"], ["Pat_Syn", "Pattern_Syntax"], ["Pat_WS", "Pattern_White_Space"], ["QMark", "Quotation_Mark"], ["Radical", "Radical"], ["RI", "Regional_Indicator"], ["SD", "Soft_Dotted"], ["STerm", "Sentence_Terminal"], ["Term", "Terminal_Punctuation"], ["UIdeo", "Unified_Ideograph"], ["Upper", "Uppercase"], ["VS", "Variation_Selector"], ["WSpace", "White_Space"], ["space", "White_Space"], ["XIDC", "XID_Continue"], ["XIDS", "XID_Start"]]), oN = function(e2) {
        if (aN.has(e2))
          return e2;
        if (iN.has(e2))
          return iN.get(e2);
        throw new Error("Unknown property: " + e2);
      }, uN = new Map([["General_Category", new Map([["C", "Other"], ["Cc", "Control"], ["cntrl", "Control"], ["Cf", "Format"], ["Cn", "Unassigned"], ["Co", "Private_Use"], ["Cs", "Surrogate"], ["L", "Letter"], ["LC", "Cased_Letter"], ["Ll", "Lowercase_Letter"], ["Lm", "Modifier_Letter"], ["Lo", "Other_Letter"], ["Lt", "Titlecase_Letter"], ["Lu", "Uppercase_Letter"], ["M", "Mark"], ["Combining_Mark", "Mark"], ["Mc", "Spacing_Mark"], ["Me", "Enclosing_Mark"], ["Mn", "Nonspacing_Mark"], ["N", "Number"], ["Nd", "Decimal_Number"], ["digit", "Decimal_Number"], ["Nl", "Letter_Number"], ["No", "Other_Number"], ["P", "Punctuation"], ["punct", "Punctuation"], ["Pc", "Connector_Punctuation"], ["Pd", "Dash_Punctuation"], ["Pe", "Close_Punctuation"], ["Pf", "Final_Punctuation"], ["Pi", "Initial_Punctuation"], ["Po", "Other_Punctuation"], ["Ps", "Open_Punctuation"], ["S", "Symbol"], ["Sc", "Currency_Symbol"], ["Sk", "Modifier_Symbol"], ["Sm", "Math_Symbol"], ["So", "Other_Symbol"], ["Z", "Separator"], ["Zl", "Line_Separator"], ["Zp", "Paragraph_Separator"], ["Zs", "Space_Separator"], ["Other", "Other"], ["Control", "Control"], ["Format", "Format"], ["Unassigned", "Unassigned"], ["Private_Use", "Private_Use"], ["Surrogate", "Surrogate"], ["Letter", "Letter"], ["Cased_Letter", "Cased_Letter"], ["Lowercase_Letter", "Lowercase_Letter"], ["Modifier_Letter", "Modifier_Letter"], ["Other_Letter", "Other_Letter"], ["Titlecase_Letter", "Titlecase_Letter"], ["Uppercase_Letter", "Uppercase_Letter"], ["Mark", "Mark"], ["Spacing_Mark", "Spacing_Mark"], ["Enclosing_Mark", "Enclosing_Mark"], ["Nonspacing_Mark", "Nonspacing_Mark"], ["Number", "Number"], ["Decimal_Number", "Decimal_Number"], ["Letter_Number", "Letter_Number"], ["Other_Number", "Other_Number"], ["Punctuation", "Punctuation"], ["Connector_Punctuation", "Connector_Punctuation"], ["Dash_Punctuation", "Dash_Punctuation"], ["Close_Punctuation", "Close_Punctuation"], ["Final_Punctuation", "Final_Punctuation"], ["Initial_Punctuation", "Initial_Punctuation"], ["Other_Punctuation", "Other_Punctuation"], ["Open_Punctuation", "Open_Punctuation"], ["Symbol", "Symbol"], ["Currency_Symbol", "Currency_Symbol"], ["Modifier_Symbol", "Modifier_Symbol"], ["Math_Symbol", "Math_Symbol"], ["Other_Symbol", "Other_Symbol"], ["Separator", "Separator"], ["Line_Separator", "Line_Separator"], ["Paragraph_Separator", "Paragraph_Separator"], ["Space_Separator", "Space_Separator"]])], ["Script", new Map([["Adlm", "Adlam"], ["Aghb", "Caucasian_Albanian"], ["Ahom", "Ahom"], ["Arab", "Arabic"], ["Armi", "Imperial_Aramaic"], ["Armn", "Armenian"], ["Avst", "Avestan"], ["Bali", "Balinese"], ["Bamu", "Bamum"], ["Bass", "Bassa_Vah"], ["Batk", "Batak"], ["Beng", "Bengali"], ["Bhks", "Bhaiksuki"], ["Bopo", "Bopomofo"], ["Brah", "Brahmi"], ["Brai", "Braille"], ["Bugi", "Buginese"], ["Buhd", "Buhid"], ["Cakm", "Chakma"], ["Cans", "Canadian_Aboriginal"], ["Cari", "Carian"], ["Cham", "Cham"], ["Cher", "Cherokee"], ["Chrs", "Chorasmian"], ["Copt", "Coptic"], ["Qaac", "Coptic"], ["Cprt", "Cypriot"], ["Cyrl", "Cyrillic"], ["Deva", "Devanagari"], ["Diak", "Dives_Akuru"], ["Dogr", "Dogra"], ["Dsrt", "Deseret"], ["Dupl", "Duployan"], ["Egyp", "Egyptian_Hieroglyphs"], ["Elba", "Elbasan"], ["Elym", "Elymaic"], ["Ethi", "Ethiopic"], ["Geor", "Georgian"], ["Glag", "Glagolitic"], ["Gong", "Gunjala_Gondi"], ["Gonm", "Masaram_Gondi"], ["Goth", "Gothic"], ["Gran", "Grantha"], ["Grek", "Greek"], ["Gujr", "Gujarati"], ["Guru", "Gurmukhi"], ["Hang", "Hangul"], ["Hani", "Han"], ["Hano", "Hanunoo"], ["Hatr", "Hatran"], ["Hebr", "Hebrew"], ["Hira", "Hiragana"], ["Hluw", "Anatolian_Hieroglyphs"], ["Hmng", "Pahawh_Hmong"], ["Hmnp", "Nyiakeng_Puachue_Hmong"], ["Hrkt", "Katakana_Or_Hiragana"], ["Hung", "Old_Hungarian"], ["Ital", "Old_Italic"], ["Java", "Javanese"], ["Kali", "Kayah_Li"], ["Kana", "Katakana"], ["Khar", "Kharoshthi"], ["Khmr", "Khmer"], ["Khoj", "Khojki"], ["Kits", "Khitan_Small_Script"], ["Knda", "Kannada"], ["Kthi", "Kaithi"], ["Lana", "Tai_Tham"], ["Laoo", "Lao"], ["Latn", "Latin"], ["Lepc", "Lepcha"], ["Limb", "Limbu"], ["Lina", "Linear_A"], ["Linb", "Linear_B"], ["Lisu", "Lisu"], ["Lyci", "Lycian"], ["Lydi", "Lydian"], ["Mahj", "Mahajani"], ["Maka", "Makasar"], ["Mand", "Mandaic"], ["Mani", "Manichaean"], ["Marc", "Marchen"], ["Medf", "Medefaidrin"], ["Mend", "Mende_Kikakui"], ["Merc", "Meroitic_Cursive"], ["Mero", "Meroitic_Hieroglyphs"], ["Mlym", "Malayalam"], ["Modi", "Modi"], ["Mong", "Mongolian"], ["Mroo", "Mro"], ["Mtei", "Meetei_Mayek"], ["Mult", "Multani"], ["Mymr", "Myanmar"], ["Nand", "Nandinagari"], ["Narb", "Old_North_Arabian"], ["Nbat", "Nabataean"], ["Newa", "Newa"], ["Nkoo", "Nko"], ["Nshu", "Nushu"], ["Ogam", "Ogham"], ["Olck", "Ol_Chiki"], ["Orkh", "Old_Turkic"], ["Orya", "Oriya"], ["Osge", "Osage"], ["Osma", "Osmanya"], ["Palm", "Palmyrene"], ["Pauc", "Pau_Cin_Hau"], ["Perm", "Old_Permic"], ["Phag", "Phags_Pa"], ["Phli", "Inscriptional_Pahlavi"], ["Phlp", "Psalter_Pahlavi"], ["Phnx", "Phoenician"], ["Plrd", "Miao"], ["Prti", "Inscriptional_Parthian"], ["Rjng", "Rejang"], ["Rohg", "Hanifi_Rohingya"], ["Runr", "Runic"], ["Samr", "Samaritan"], ["Sarb", "Old_South_Arabian"], ["Saur", "Saurashtra"], ["Sgnw", "SignWriting"], ["Shaw", "Shavian"], ["Shrd", "Sharada"], ["Sidd", "Siddham"], ["Sind", "Khudawadi"], ["Sinh", "Sinhala"], ["Sogd", "Sogdian"], ["Sogo", "Old_Sogdian"], ["Sora", "Sora_Sompeng"], ["Soyo", "Soyombo"], ["Sund", "Sundanese"], ["Sylo", "Syloti_Nagri"], ["Syrc", "Syriac"], ["Tagb", "Tagbanwa"], ["Takr", "Takri"], ["Tale", "Tai_Le"], ["Talu", "New_Tai_Lue"], ["Taml", "Tamil"], ["Tang", "Tangut"], ["Tavt", "Tai_Viet"], ["Telu", "Telugu"], ["Tfng", "Tifinagh"], ["Tglg", "Tagalog"], ["Thaa", "Thaana"], ["Thai", "Thai"], ["Tibt", "Tibetan"], ["Tirh", "Tirhuta"], ["Ugar", "Ugaritic"], ["Vaii", "Vai"], ["Wara", "Warang_Citi"], ["Wcho", "Wancho"], ["Xpeo", "Old_Persian"], ["Xsux", "Cuneiform"], ["Yezi", "Yezidi"], ["Yiii", "Yi"], ["Zanb", "Zanabazar_Square"], ["Zinh", "Inherited"], ["Qaai", "Inherited"], ["Zyyy", "Common"], ["Zzzz", "Unknown"], ["Adlam", "Adlam"], ["Caucasian_Albanian", "Caucasian_Albanian"], ["Arabic", "Arabic"], ["Imperial_Aramaic", "Imperial_Aramaic"], ["Armenian", "Armenian"], ["Avestan", "Avestan"], ["Balinese", "Balinese"], ["Bamum", "Bamum"], ["Bassa_Vah", "Bassa_Vah"], ["Batak", "Batak"], ["Bengali", "Bengali"], ["Bhaiksuki", "Bhaiksuki"], ["Bopomofo", "Bopomofo"], ["Brahmi", "Brahmi"], ["Braille", "Braille"], ["Buginese", "Buginese"], ["Buhid", "Buhid"], ["Chakma", "Chakma"], ["Canadian_Aboriginal", "Canadian_Aboriginal"], ["Carian", "Carian"], ["Cherokee", "Cherokee"], ["Chorasmian", "Chorasmian"], ["Coptic", "Coptic"], ["Cypriot", "Cypriot"], ["Cyrillic", "Cyrillic"], ["Devanagari", "Devanagari"], ["Dives_Akuru", "Dives_Akuru"], ["Dogra", "Dogra"], ["Deseret", "Deseret"], ["Duployan", "Duployan"], ["Egyptian_Hieroglyphs", "Egyptian_Hieroglyphs"], ["Elbasan", "Elbasan"], ["Elymaic", "Elymaic"], ["Ethiopic", "Ethiopic"], ["Georgian", "Georgian"], ["Glagolitic", "Glagolitic"], ["Gunjala_Gondi", "Gunjala_Gondi"], ["Masaram_Gondi", "Masaram_Gondi"], ["Gothic", "Gothic"], ["Grantha", "Grantha"], ["Greek", "Greek"], ["Gujarati", "Gujarati"], ["Gurmukhi", "Gurmukhi"], ["Hangul", "Hangul"], ["Han", "Han"], ["Hanunoo", "Hanunoo"], ["Hatran", "Hatran"], ["Hebrew", "Hebrew"], ["Hiragana", "Hiragana"], ["Anatolian_Hieroglyphs", "Anatolian_Hieroglyphs"], ["Pahawh_Hmong", "Pahawh_Hmong"], ["Nyiakeng_Puachue_Hmong", "Nyiakeng_Puachue_Hmong"], ["Katakana_Or_Hiragana", "Katakana_Or_Hiragana"], ["Old_Hungarian", "Old_Hungarian"], ["Old_Italic", "Old_Italic"], ["Javanese", "Javanese"], ["Kayah_Li", "Kayah_Li"], ["Katakana", "Katakana"], ["Kharoshthi", "Kharoshthi"], ["Khmer", "Khmer"], ["Khojki", "Khojki"], ["Khitan_Small_Script", "Khitan_Small_Script"], ["Kannada", "Kannada"], ["Kaithi", "Kaithi"], ["Tai_Tham", "Tai_Tham"], ["Lao", "Lao"], ["Latin", "Latin"], ["Lepcha", "Lepcha"], ["Limbu", "Limbu"], ["Linear_A", "Linear_A"], ["Linear_B", "Linear_B"], ["Lycian", "Lycian"], ["Lydian", "Lydian"], ["Mahajani", "Mahajani"], ["Makasar", "Makasar"], ["Mandaic", "Mandaic"], ["Manichaean", "Manichaean"], ["Marchen", "Marchen"], ["Medefaidrin", "Medefaidrin"], ["Mende_Kikakui", "Mende_Kikakui"], ["Meroitic_Cursive", "Meroitic_Cursive"], ["Meroitic_Hieroglyphs", "Meroitic_Hieroglyphs"], ["Malayalam", "Malayalam"], ["Mongolian", "Mongolian"], ["Mro", "Mro"], ["Meetei_Mayek", "Meetei_Mayek"], ["Multani", "Multani"], ["Myanmar", "Myanmar"], ["Nandinagari", "Nandinagari"], ["Old_North_Arabian", "Old_North_Arabian"], ["Nabataean", "Nabataean"], ["Nko", "Nko"], ["Nushu", "Nushu"], ["Ogham", "Ogham"], ["Ol_Chiki", "Ol_Chiki"], ["Old_Turkic", "Old_Turkic"], ["Oriya", "Oriya"], ["Osage", "Osage"], ["Osmanya", "Osmanya"], ["Palmyrene", "Palmyrene"], ["Pau_Cin_Hau", "Pau_Cin_Hau"], ["Old_Permic", "Old_Permic"], ["Phags_Pa", "Phags_Pa"], ["Inscriptional_Pahlavi", "Inscriptional_Pahlavi"], ["Psalter_Pahlavi", "Psalter_Pahlavi"], ["Phoenician", "Phoenician"], ["Miao", "Miao"], ["Inscriptional_Parthian", "Inscriptional_Parthian"], ["Rejang", "Rejang"], ["Hanifi_Rohingya", "Hanifi_Rohingya"], ["Runic", "Runic"], ["Samaritan", "Samaritan"], ["Old_South_Arabian", "Old_South_Arabian"], ["Saurashtra", "Saurashtra"], ["SignWriting", "SignWriting"], ["Shavian", "Shavian"], ["Sharada", "Sharada"], ["Siddham", "Siddham"], ["Khudawadi", "Khudawadi"], ["Sinhala", "Sinhala"], ["Sogdian", "Sogdian"], ["Old_Sogdian", "Old_Sogdian"], ["Sora_Sompeng", "Sora_Sompeng"], ["Soyombo", "Soyombo"], ["Sundanese", "Sundanese"], ["Syloti_Nagri", "Syloti_Nagri"], ["Syriac", "Syriac"], ["Tagbanwa", "Tagbanwa"], ["Takri", "Takri"], ["Tai_Le", "Tai_Le"], ["New_Tai_Lue", "New_Tai_Lue"], ["Tamil", "Tamil"], ["Tangut", "Tangut"], ["Tai_Viet", "Tai_Viet"], ["Telugu", "Telugu"], ["Tifinagh", "Tifinagh"], ["Tagalog", "Tagalog"], ["Thaana", "Thaana"], ["Tibetan", "Tibetan"], ["Tirhuta", "Tirhuta"], ["Ugaritic", "Ugaritic"], ["Vai", "Vai"], ["Warang_Citi", "Warang_Citi"], ["Wancho", "Wancho"], ["Old_Persian", "Old_Persian"], ["Cuneiform", "Cuneiform"], ["Yezidi", "Yezidi"], ["Yi", "Yi"], ["Zanabazar_Square", "Zanabazar_Square"], ["Inherited", "Inherited"], ["Common", "Common"], ["Unknown", "Unknown"]])], ["Script_Extensions", new Map([["Adlm", "Adlam"], ["Aghb", "Caucasian_Albanian"], ["Ahom", "Ahom"], ["Arab", "Arabic"], ["Armi", "Imperial_Aramaic"], ["Armn", "Armenian"], ["Avst", "Avestan"], ["Bali", "Balinese"], ["Bamu", "Bamum"], ["Bass", "Bassa_Vah"], ["Batk", "Batak"], ["Beng", "Bengali"], ["Bhks", "Bhaiksuki"], ["Bopo", "Bopomofo"], ["Brah", "Brahmi"], ["Brai", "Braille"], ["Bugi", "Buginese"], ["Buhd", "Buhid"], ["Cakm", "Chakma"], ["Cans", "Canadian_Aboriginal"], ["Cari", "Carian"], ["Cham", "Cham"], ["Cher", "Cherokee"], ["Chrs", "Chorasmian"], ["Copt", "Coptic"], ["Qaac", "Coptic"], ["Cprt", "Cypriot"], ["Cyrl", "Cyrillic"], ["Deva", "Devanagari"], ["Diak", "Dives_Akuru"], ["Dogr", "Dogra"], ["Dsrt", "Deseret"], ["Dupl", "Duployan"], ["Egyp", "Egyptian_Hieroglyphs"], ["Elba", "Elbasan"], ["Elym", "Elymaic"], ["Ethi", "Ethiopic"], ["Geor", "Georgian"], ["Glag", "Glagolitic"], ["Gong", "Gunjala_Gondi"], ["Gonm", "Masaram_Gondi"], ["Goth", "Gothic"], ["Gran", "Grantha"], ["Grek", "Greek"], ["Gujr", "Gujarati"], ["Guru", "Gurmukhi"], ["Hang", "Hangul"], ["Hani", "Han"], ["Hano", "Hanunoo"], ["Hatr", "Hatran"], ["Hebr", "Hebrew"], ["Hira", "Hiragana"], ["Hluw", "Anatolian_Hieroglyphs"], ["Hmng", "Pahawh_Hmong"], ["Hmnp", "Nyiakeng_Puachue_Hmong"], ["Hrkt", "Katakana_Or_Hiragana"], ["Hung", "Old_Hungarian"], ["Ital", "Old_Italic"], ["Java", "Javanese"], ["Kali", "Kayah_Li"], ["Kana", "Katakana"], ["Khar", "Kharoshthi"], ["Khmr", "Khmer"], ["Khoj", "Khojki"], ["Kits", "Khitan_Small_Script"], ["Knda", "Kannada"], ["Kthi", "Kaithi"], ["Lana", "Tai_Tham"], ["Laoo", "Lao"], ["Latn", "Latin"], ["Lepc", "Lepcha"], ["Limb", "Limbu"], ["Lina", "Linear_A"], ["Linb", "Linear_B"], ["Lisu", "Lisu"], ["Lyci", "Lycian"], ["Lydi", "Lydian"], ["Mahj", "Mahajani"], ["Maka", "Makasar"], ["Mand", "Mandaic"], ["Mani", "Manichaean"], ["Marc", "Marchen"], ["Medf", "Medefaidrin"], ["Mend", "Mende_Kikakui"], ["Merc", "Meroitic_Cursive"], ["Mero", "Meroitic_Hieroglyphs"], ["Mlym", "Malayalam"], ["Modi", "Modi"], ["Mong", "Mongolian"], ["Mroo", "Mro"], ["Mtei", "Meetei_Mayek"], ["Mult", "Multani"], ["Mymr", "Myanmar"], ["Nand", "Nandinagari"], ["Narb", "Old_North_Arabian"], ["Nbat", "Nabataean"], ["Newa", "Newa"], ["Nkoo", "Nko"], ["Nshu", "Nushu"], ["Ogam", "Ogham"], ["Olck", "Ol_Chiki"], ["Orkh", "Old_Turkic"], ["Orya", "Oriya"], ["Osge", "Osage"], ["Osma", "Osmanya"], ["Palm", "Palmyrene"], ["Pauc", "Pau_Cin_Hau"], ["Perm", "Old_Permic"], ["Phag", "Phags_Pa"], ["Phli", "Inscriptional_Pahlavi"], ["Phlp", "Psalter_Pahlavi"], ["Phnx", "Phoenician"], ["Plrd", "Miao"], ["Prti", "Inscriptional_Parthian"], ["Rjng", "Rejang"], ["Rohg", "Hanifi_Rohingya"], ["Runr", "Runic"], ["Samr", "Samaritan"], ["Sarb", "Old_South_Arabian"], ["Saur", "Saurashtra"], ["Sgnw", "SignWriting"], ["Shaw", "Shavian"], ["Shrd", "Sharada"], ["Sidd", "Siddham"], ["Sind", "Khudawadi"], ["Sinh", "Sinhala"], ["Sogd", "Sogdian"], ["Sogo", "Old_Sogdian"], ["Sora", "Sora_Sompeng"], ["Soyo", "Soyombo"], ["Sund", "Sundanese"], ["Sylo", "Syloti_Nagri"], ["Syrc", "Syriac"], ["Tagb", "Tagbanwa"], ["Takr", "Takri"], ["Tale", "Tai_Le"], ["Talu", "New_Tai_Lue"], ["Taml", "Tamil"], ["Tang", "Tangut"], ["Tavt", "Tai_Viet"], ["Telu", "Telugu"], ["Tfng", "Tifinagh"], ["Tglg", "Tagalog"], ["Thaa", "Thaana"], ["Thai", "Thai"], ["Tibt", "Tibetan"], ["Tirh", "Tirhuta"], ["Ugar", "Ugaritic"], ["Vaii", "Vai"], ["Wara", "Warang_Citi"], ["Wcho", "Wancho"], ["Xpeo", "Old_Persian"], ["Xsux", "Cuneiform"], ["Yezi", "Yezidi"], ["Yiii", "Yi"], ["Zanb", "Zanabazar_Square"], ["Zinh", "Inherited"], ["Qaai", "Inherited"], ["Zyyy", "Common"], ["Zzzz", "Unknown"], ["Adlam", "Adlam"], ["Caucasian_Albanian", "Caucasian_Albanian"], ["Arabic", "Arabic"], ["Imperial_Aramaic", "Imperial_Aramaic"], ["Armenian", "Armenian"], ["Avestan", "Avestan"], ["Balinese", "Balinese"], ["Bamum", "Bamum"], ["Bassa_Vah", "Bassa_Vah"], ["Batak", "Batak"], ["Bengali", "Bengali"], ["Bhaiksuki", "Bhaiksuki"], ["Bopomofo", "Bopomofo"], ["Brahmi", "Brahmi"], ["Braille", "Braille"], ["Buginese", "Buginese"], ["Buhid", "Buhid"], ["Chakma", "Chakma"], ["Canadian_Aboriginal", "Canadian_Aboriginal"], ["Carian", "Carian"], ["Cherokee", "Cherokee"], ["Chorasmian", "Chorasmian"], ["Coptic", "Coptic"], ["Cypriot", "Cypriot"], ["Cyrillic", "Cyrillic"], ["Devanagari", "Devanagari"], ["Dives_Akuru", "Dives_Akuru"], ["Dogra", "Dogra"], ["Deseret", "Deseret"], ["Duployan", "Duployan"], ["Egyptian_Hieroglyphs", "Egyptian_Hieroglyphs"], ["Elbasan", "Elbasan"], ["Elymaic", "Elymaic"], ["Ethiopic", "Ethiopic"], ["Georgian", "Georgian"], ["Glagolitic", "Glagolitic"], ["Gunjala_Gondi", "Gunjala_Gondi"], ["Masaram_Gondi", "Masaram_Gondi"], ["Gothic", "Gothic"], ["Grantha", "Grantha"], ["Greek", "Greek"], ["Gujarati", "Gujarati"], ["Gurmukhi", "Gurmukhi"], ["Hangul", "Hangul"], ["Han", "Han"], ["Hanunoo", "Hanunoo"], ["Hatran", "Hatran"], ["Hebrew", "Hebrew"], ["Hiragana", "Hiragana"], ["Anatolian_Hieroglyphs", "Anatolian_Hieroglyphs"], ["Pahawh_Hmong", "Pahawh_Hmong"], ["Nyiakeng_Puachue_Hmong", "Nyiakeng_Puachue_Hmong"], ["Katakana_Or_Hiragana", "Katakana_Or_Hiragana"], ["Old_Hungarian", "Old_Hungarian"], ["Old_Italic", "Old_Italic"], ["Javanese", "Javanese"], ["Kayah_Li", "Kayah_Li"], ["Katakana", "Katakana"], ["Kharoshthi", "Kharoshthi"], ["Khmer", "Khmer"], ["Khojki", "Khojki"], ["Khitan_Small_Script", "Khitan_Small_Script"], ["Kannada", "Kannada"], ["Kaithi", "Kaithi"], ["Tai_Tham", "Tai_Tham"], ["Lao", "Lao"], ["Latin", "Latin"], ["Lepcha", "Lepcha"], ["Limbu", "Limbu"], ["Linear_A", "Linear_A"], ["Linear_B", "Linear_B"], ["Lycian", "Lycian"], ["Lydian", "Lydian"], ["Mahajani", "Mahajani"], ["Makasar", "Makasar"], ["Mandaic", "Mandaic"], ["Manichaean", "Manichaean"], ["Marchen", "Marchen"], ["Medefaidrin", "Medefaidrin"], ["Mende_Kikakui", "Mende_Kikakui"], ["Meroitic_Cursive", "Meroitic_Cursive"], ["Meroitic_Hieroglyphs", "Meroitic_Hieroglyphs"], ["Malayalam", "Malayalam"], ["Mongolian", "Mongolian"], ["Mro", "Mro"], ["Meetei_Mayek", "Meetei_Mayek"], ["Multani", "Multani"], ["Myanmar", "Myanmar"], ["Nandinagari", "Nandinagari"], ["Old_North_Arabian", "Old_North_Arabian"], ["Nabataean", "Nabataean"], ["Nko", "Nko"], ["Nushu", "Nushu"], ["Ogham", "Ogham"], ["Ol_Chiki", "Ol_Chiki"], ["Old_Turkic", "Old_Turkic"], ["Oriya", "Oriya"], ["Osage", "Osage"], ["Osmanya", "Osmanya"], ["Palmyrene", "Palmyrene"], ["Pau_Cin_Hau", "Pau_Cin_Hau"], ["Old_Permic", "Old_Permic"], ["Phags_Pa", "Phags_Pa"], ["Inscriptional_Pahlavi", "Inscriptional_Pahlavi"], ["Psalter_Pahlavi", "Psalter_Pahlavi"], ["Phoenician", "Phoenician"], ["Miao", "Miao"], ["Inscriptional_Parthian", "Inscriptional_Parthian"], ["Rejang", "Rejang"], ["Hanifi_Rohingya", "Hanifi_Rohingya"], ["Runic", "Runic"], ["Samaritan", "Samaritan"], ["Old_South_Arabian", "Old_South_Arabian"], ["Saurashtra", "Saurashtra"], ["SignWriting", "SignWriting"], ["Shavian", "Shavian"], ["Sharada", "Sharada"], ["Siddham", "Siddham"], ["Khudawadi", "Khudawadi"], ["Sinhala", "Sinhala"], ["Sogdian", "Sogdian"], ["Old_Sogdian", "Old_Sogdian"], ["Sora_Sompeng", "Sora_Sompeng"], ["Soyombo", "Soyombo"], ["Sundanese", "Sundanese"], ["Syloti_Nagri", "Syloti_Nagri"], ["Syriac", "Syriac"], ["Tagbanwa", "Tagbanwa"], ["Takri", "Takri"], ["Tai_Le", "Tai_Le"], ["New_Tai_Lue", "New_Tai_Lue"], ["Tamil", "Tamil"], ["Tangut", "Tangut"], ["Tai_Viet", "Tai_Viet"], ["Telugu", "Telugu"], ["Tifinagh", "Tifinagh"], ["Tagalog", "Tagalog"], ["Thaana", "Thaana"], ["Tibetan", "Tibetan"], ["Tirhuta", "Tirhuta"], ["Ugaritic", "Ugaritic"], ["Vai", "Vai"], ["Warang_Citi", "Warang_Citi"], ["Wancho", "Wancho"], ["Old_Persian", "Old_Persian"], ["Cuneiform", "Cuneiform"], ["Yezidi", "Yezidi"], ["Yi", "Yi"], ["Zanabazar_Square", "Zanabazar_Square"], ["Inherited", "Inherited"], ["Common", "Common"], ["Unknown", "Unknown"]])]]), lN = function(e2, t2) {
        var r2 = uN.get(e2);
        if (!r2)
          throw new Error("Unknown property `" + e2 + "`.");
        var n2 = r2.get(t2);
        if (n2)
          return n2;
        throw new Error("Unknown value `" + t2 + "` for property `" + e2 + "`.");
      }, cN = new Map([[75, 8490], [83, 383], [107, 8490], [115, 383], [181, 924], [197, 8491], [223, 7838], [229, 8491], [383, 83], [452, 453], [453, 452], [455, 456], [456, 455], [458, 459], [459, 458], [497, 498], [498, 497], [837, 8126], [914, 976], [917, 1013], [920, 1012], [921, 8126], [922, 1008], [924, 181], [928, 982], [929, 1009], [931, 962], [934, 981], [937, 8486], [952, 1012], [962, 931], [969, 8486], [976, 914], [977, 1012], [981, 934], [982, 928], [1008, 922], [1009, 929], [1012, [920, 977, 952]], [1013, 917], [1042, 7296], [1044, 7297], [1054, 7298], [1057, 7299], [1058, 7301], [1066, 7302], [1122, 7303], [7296, 1042], [7297, 1044], [7298, 1054], [7299, 1057], [7300, 7301], [7301, [1058, 7300]], [7302, 1066], [7303, 1122], [7304, 42570], [7776, 7835], [7835, 7776], [7838, 223], [8064, 8072], [8065, 8073], [8066, 8074], [8067, 8075], [8068, 8076], [8069, 8077], [8070, 8078], [8071, 8079], [8072, 8064], [8073, 8065], [8074, 8066], [8075, 8067], [8076, 8068], [8077, 8069], [8078, 8070], [8079, 8071], [8080, 8088], [8081, 8089], [8082, 8090], [8083, 8091], [8084, 8092], [8085, 8093], [8086, 8094], [8087, 8095], [8088, 8080], [8089, 8081], [8090, 8082], [8091, 8083], [8092, 8084], [8093, 8085], [8094, 8086], [8095, 8087], [8096, 8104], [8097, 8105], [8098, 8106], [8099, 8107], [8100, 8108], [8101, 8109], [8102, 8110], [8103, 8111], [8104, 8096], [8105, 8097], [8106, 8098], [8107, 8099], [8108, 8100], [8109, 8101], [8110, 8102], [8111, 8103], [8115, 8124], [8124, 8115], [8126, [837, 921]], [8131, 8140], [8140, 8131], [8179, 8188], [8188, 8179], [8486, [937, 969]], [8490, 75], [8491, [197, 229]], [42570, 7304], [66560, 66600], [66561, 66601], [66562, 66602], [66563, 66603], [66564, 66604], [66565, 66605], [66566, 66606], [66567, 66607], [66568, 66608], [66569, 66609], [66570, 66610], [66571, 66611], [66572, 66612], [66573, 66613], [66574, 66614], [66575, 66615], [66576, 66616], [66577, 66617], [66578, 66618], [66579, 66619], [66580, 66620], [66581, 66621], [66582, 66622], [66583, 66623], [66584, 66624], [66585, 66625], [66586, 66626], [66587, 66627], [66588, 66628], [66589, 66629], [66590, 66630], [66591, 66631], [66592, 66632], [66593, 66633], [66594, 66634], [66595, 66635], [66596, 66636], [66597, 66637], [66598, 66638], [66599, 66639], [66600, 66560], [66601, 66561], [66602, 66562], [66603, 66563], [66604, 66564], [66605, 66565], [66606, 66566], [66607, 66567], [66608, 66568], [66609, 66569], [66610, 66570], [66611, 66571], [66612, 66572], [66613, 66573], [66614, 66574], [66615, 66575], [66616, 66576], [66617, 66577], [66618, 66578], [66619, 66579], [66620, 66580], [66621, 66581], [66622, 66582], [66623, 66583], [66624, 66584], [66625, 66585], [66626, 66586], [66627, 66587], [66628, 66588], [66629, 66589], [66630, 66590], [66631, 66591], [66632, 66592], [66633, 66593], [66634, 66594], [66635, 66595], [66636, 66596], [66637, 66597], [66638, 66598], [66639, 66599], [66736, 66776], [66737, 66777], [66738, 66778], [66739, 66779], [66740, 66780], [66741, 66781], [66742, 66782], [66743, 66783], [66744, 66784], [66745, 66785], [66746, 66786], [66747, 66787], [66748, 66788], [66749, 66789], [66750, 66790], [66751, 66791], [66752, 66792], [66753, 66793], [66754, 66794], [66755, 66795], [66756, 66796], [66757, 66797], [66758, 66798], [66759, 66799], [66760, 66800], [66761, 66801], [66762, 66802], [66763, 66803], [66764, 66804], [66765, 66805], [66766, 66806], [66767, 66807], [66768, 66808], [66769, 66809], [66770, 66810], [66771, 66811], [66776, 66736], [66777, 66737], [66778, 66738], [66779, 66739], [66780, 66740], [66781, 66741], [66782, 66742], [66783, 66743], [66784, 66744], [66785, 66745], [66786, 66746], [66787, 66747], [66788, 66748], [66789, 66749], [66790, 66750], [66791, 66751], [66792, 66752], [66793, 66753], [66794, 66754], [66795, 66755], [66796, 66756], [66797, 66757], [66798, 66758], [66799, 66759], [66800, 66760], [66801, 66761], [66802, 66762], [66803, 66763], [66804, 66764], [66805, 66765], [66806, 66766], [66807, 66767], [66808, 66768], [66809, 66769], [66810, 66770], [66811, 66771], [68736, 68800], [68737, 68801], [68738, 68802], [68739, 68803], [68740, 68804], [68741, 68805], [68742, 68806], [68743, 68807], [68744, 68808], [68745, 68809], [68746, 68810], [68747, 68811], [68748, 68812], [68749, 68813], [68750, 68814], [68751, 68815], [68752, 68816], [68753, 68817], [68754, 68818], [68755, 68819], [68756, 68820], [68757, 68821], [68758, 68822], [68759, 68823], [68760, 68824], [68761, 68825], [68762, 68826], [68763, 68827], [68764, 68828], [68765, 68829], [68766, 68830], [68767, 68831], [68768, 68832], [68769, 68833], [68770, 68834], [68771, 68835], [68772, 68836], [68773, 68837], [68774, 68838], [68775, 68839], [68776, 68840], [68777, 68841], [68778, 68842], [68779, 68843], [68780, 68844], [68781, 68845], [68782, 68846], [68783, 68847], [68784, 68848], [68785, 68849], [68786, 68850], [68800, 68736], [68801, 68737], [68802, 68738], [68803, 68739], [68804, 68740], [68805, 68741], [68806, 68742], [68807, 68743], [68808, 68744], [68809, 68745], [68810, 68746], [68811, 68747], [68812, 68748], [68813, 68749], [68814, 68750], [68815, 68751], [68816, 68752], [68817, 68753], [68818, 68754], [68819, 68755], [68820, 68756], [68821, 68757], [68822, 68758], [68823, 68759], [68824, 68760], [68825, 68761], [68826, 68762], [68827, 68763], [68828, 68764], [68829, 68765], [68830, 68766], [68831, 68767], [68832, 68768], [68833, 68769], [68834, 68770], [68835, 68771], [68836, 68772], [68837, 68773], [68838, 68774], [68839, 68775], [68840, 68776], [68841, 68777], [68842, 68778], [68843, 68779], [68844, 68780], [68845, 68781], [68846, 68782], [68847, 68783], [68848, 68784], [68849, 68785], [68850, 68786], [71840, 71872], [71841, 71873], [71842, 71874], [71843, 71875], [71844, 71876], [71845, 71877], [71846, 71878], [71847, 71879], [71848, 71880], [71849, 71881], [71850, 71882], [71851, 71883], [71852, 71884], [71853, 71885], [71854, 71886], [71855, 71887], [71856, 71888], [71857, 71889], [71858, 71890], [71859, 71891], [71860, 71892], [71861, 71893], [71862, 71894], [71863, 71895], [71864, 71896], [71865, 71897], [71866, 71898], [71867, 71899], [71868, 71900], [71869, 71901], [71870, 71902], [71871, 71903], [71872, 71840], [71873, 71841], [71874, 71842], [71875, 71843], [71876, 71844], [71877, 71845], [71878, 71846], [71879, 71847], [71880, 71848], [71881, 71849], [71882, 71850], [71883, 71851], [71884, 71852], [71885, 71853], [71886, 71854], [71887, 71855], [71888, 71856], [71889, 71857], [71890, 71858], [71891, 71859], [71892, 71860], [71893, 71861], [71894, 71862], [71895, 71863], [71896, 71864], [71897, 71865], [71898, 71866], [71899, 71867], [71900, 71868], [71901, 71869], [71902, 71870], [71903, 71871], [93760, 93792], [93761, 93793], [93762, 93794], [93763, 93795], [93764, 93796], [93765, 93797], [93766, 93798], [93767, 93799], [93768, 93800], [93769, 93801], [93770, 93802], [93771, 93803], [93772, 93804], [93773, 93805], [93774, 93806], [93775, 93807], [93776, 93808], [93777, 93809], [93778, 93810], [93779, 93811], [93780, 93812], [93781, 93813], [93782, 93814], [93783, 93815], [93784, 93816], [93785, 93817], [93786, 93818], [93787, 93819], [93788, 93820], [93789, 93821], [93790, 93822], [93791, 93823], [93792, 93760], [93793, 93761], [93794, 93762], [93795, 93763], [93796, 93764], [93797, 93765], [93798, 93766], [93799, 93767], [93800, 93768], [93801, 93769], [93802, 93770], [93803, 93771], [93804, 93772], [93805, 93773], [93806, 93774], [93807, 93775], [93808, 93776], [93809, 93777], [93810, 93778], [93811, 93779], [93812, 93780], [93813, 93781], [93814, 93782], [93815, 93783], [93816, 93784], [93817, 93785], [93818, 93786], [93819, 93787], [93820, 93788], [93821, 93789], [93822, 93790], [93823, 93791], [125184, 125218], [125185, 125219], [125186, 125220], [125187, 125221], [125188, 125222], [125189, 125223], [125190, 125224], [125191, 125225], [125192, 125226], [125193, 125227], [125194, 125228], [125195, 125229], [125196, 125230], [125197, 125231], [125198, 125232], [125199, 125233], [125200, 125234], [125201, 125235], [125202, 125236], [125203, 125237], [125204, 125238], [125205, 125239], [125206, 125240], [125207, 125241], [125208, 125242], [125209, 125243], [125210, 125244], [125211, 125245], [125212, 125246], [125213, 125247], [125214, 125248], [125215, 125249], [125216, 125250], [125217, 125251], [125218, 125184], [125219, 125185], [125220, 125186], [125221, 125187], [125222, 125188], [125223, 125189], [125224, 125190], [125225, 125191], [125226, 125192], [125227, 125193], [125228, 125194], [125229, 125195], [125230, 125196], [125231, 125197], [125232, 125198], [125233, 125199], [125234, 125200], [125235, 125201], [125236, 125202], [125237, 125203], [125238, 125204], [125239, 125205], [125240, 125206], [125241, 125207], [125242, 125208], [125243, 125209], [125244, 125210], [125245, 125211], [125246, 125212], [125247, 125213], [125248, 125214], [125249, 125215], [125250, 125216], [125251, 125217]]), pN = { REGULAR: new Map([["d", sN().addRange(48, 57)], ["D", sN().addRange(0, 47).addRange(58, 65535)], ["s", sN(32, 160, 5760, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233)], ["S", sN().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 65535)], ["w", sN(95).addRange(48, 57).addRange(65, 90).addRange(97, 122)], ["W", sN(96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 65535)]]), UNICODE: new Map([["d", sN().addRange(48, 57)], ["D", sN().addRange(0, 47).addRange(58, 1114111)], ["s", sN(32, 160, 5760, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233)], ["S", sN().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 1114111)], ["w", sN(95).addRange(48, 57).addRange(65, 90).addRange(97, 122)], ["W", sN(96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 1114111)]]), UNICODE_IGNORE_CASE: new Map([["d", sN().addRange(48, 57)], ["D", sN().addRange(0, 47).addRange(58, 1114111)], ["s", sN(32, 160, 5760, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233)], ["S", sN().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 1114111)], ["w", sN(95, 383, 8490).addRange(48, 57).addRange(65, 90).addRange(97, 122)], ["W", sN(96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 382).addRange(384, 8489).addRange(8491, 1114111)]]) }, dN = rN.generate, fN = nN.parse, hN = sN().addRange(0, 1114111);
      sN().addRange(0, 65535);
      var mN = hN.clone().remove(10, 13, 8232, 8233), yN = function(e2, t2, r2) {
        return t2 ? r2 ? pN.UNICODE_IGNORE_CASE.get(e2) : pN.UNICODE.get(e2) : pN.REGULAR.get(e2);
      }, gN = function(e2, t2) {
        var r2 = t2 ? e2 + "/" + t2 : "Binary_Property/" + e2;
        try {
          return sr("regenerate-unicode-properties/" + r2 + ".js", "/$$rollup_base$$/node_modules/regexpu-core");
        } catch (r3) {
          throw new Error("Failed to recognize value `" + t2 + "` for property `" + e2 + "`.");
        }
      }, vN = function(e2, t2) {
        var r2, n2 = e2.split("="), s2 = n2[0];
        if (n2.length == 1)
          r2 = function(e3) {
            try {
              var t3 = "General_Category", r3 = lN(t3, e3);
              return gN(t3, r3);
            } catch (e4) {
            }
            var n3 = oN(e3);
            return gN(n3);
          }(s2);
        else {
          var a2 = oN(s2), i2 = lN(a2, n2[1]);
          r2 = gN(a2, i2);
        }
        return t2 ? hN.clone().remove(r2) : r2.clone();
      };
      sN.prototype.iuAddRange = function(e2, t2) {
        do {
          var r2 = xN(e2);
          r2 && this.add(r2);
        } while (++e2 <= t2);
        return this;
      };
      var bN = function(e2, t2) {
        var r2 = fN(t2, wN.useUnicodeFlag ? "u" : "");
        switch (r2.type) {
          case "characterClass":
          case "group":
          case "value":
            break;
          default:
            r2 = EN(r2, t2);
        }
        Object.assign(e2, r2);
      }, EN = function(e2, t2) {
        return { type: "group", behavior: "ignore", body: [e2], raw: "(?:" + t2 + ")" };
      }, xN = function(e2) {
        return cN.get(e2) || false;
      }, DN = function(e2, t2) {
        delete e2.name, e2.matchIndex = t2;
      }, AN = function e2(t2, r2, n2) {
        switch (t2.type) {
          case "dot":
            if (wN.useDotAllFlag)
              break;
            wN.unicode ? bN(t2, (p2 = wN.dotAll, p2 ? hN : mN).toString(r2)) : wN.dotAll && bN(t2, "[\\s\\S]");
            break;
          case "characterClass":
            t2 = function(e3, t3) {
              for (var r3, n3 = sN(), s3 = f(e3.body); !(r3 = s3()).done; ) {
                var a3 = r3.value;
                switch (a3.type) {
                  case "value":
                    if (n3.add(a3.codePoint), wN.ignoreCase && wN.unicode && !wN.useUnicodeFlag) {
                      var i3 = xN(a3.codePoint);
                      i3 && n3.add(i3);
                    }
                    break;
                  case "characterClassRange":
                    var o3 = a3.min.codePoint, u3 = a3.max.codePoint;
                    n3.addRange(o3, u3), wN.ignoreCase && wN.unicode && !wN.useUnicodeFlag && n3.iuAddRange(o3, u3);
                    break;
                  case "characterClassEscape":
                    n3.add(yN(a3.value, wN.unicode, wN.ignoreCase));
                    break;
                  case "unicodePropertyEscape":
                    n3.add(vN(a3.value, a3.negative));
                    break;
                  default:
                    throw new Error("Unknown term type: " + a3.type);
                }
              }
              return e3.negative ? bN(e3, "(?!" + n3.toString(t3) + ")[\\s\\S]") : bN(e3, n3.toString(t3)), e3;
            }(t2, r2);
            break;
          case "unicodePropertyEscape":
            wN.unicodePropertyEscape && bN(t2, vN(t2.value, t2.negative).toString(r2));
            break;
          case "characterClassEscape":
            bN(t2, yN(t2.value, wN.unicode, wN.ignoreCase).toString(r2));
            break;
          case "group":
            if (t2.behavior == "normal" && n2.lastIndex++, t2.name && wN.namedGroup) {
              var s2 = t2.name.value;
              if (n2.names[s2])
                throw new Error("Multiple groups with the same name (" + s2 + ") are not allowed.");
              var a2 = n2.lastIndex;
              delete t2.name, n2.names[s2] = a2, n2.onNamedGroup && n2.onNamedGroup.call(null, s2, a2), n2.unmatchedReferences[s2] && (n2.unmatchedReferences[s2].forEach(function(e3) {
                DN(e3, a2);
              }), delete n2.unmatchedReferences[s2]);
            }
          case "alternative":
          case "disjunction":
          case "quantifier":
            t2.body = t2.body.map(function(t3) {
              return e2(t3, r2, n2);
            });
            break;
          case "value":
            var i2 = t2.codePoint, o2 = sN(i2);
            if (wN.ignoreCase && wN.unicode && !wN.useUnicodeFlag) {
              var u2 = xN(i2);
              u2 && o2.add(u2);
            }
            bN(t2, o2.toString(r2));
            break;
          case "reference":
            if (t2.name) {
              var l2 = t2.name.value, c2 = n2.names[l2];
              if (c2) {
                DN(t2, c2);
                break;
              }
              n2.unmatchedReferences[l2] || (n2.unmatchedReferences[l2] = []), n2.unmatchedReferences[l2].push(t2);
            }
            break;
          case "anchor":
          case "empty":
          case "group":
            break;
          default:
            throw new Error("Unknown term type: " + t2.type);
        }
        var p2;
        return t2;
      }, wN = { ignoreCase: false, unicode: false, dotAll: false, useDotAllFlag: false, useUnicodeFlag: false, unicodePropertyEscape: false, namedGroup: false }, CN = function(e2, t2, r2) {
        wN.unicode = t2 && t2.includes("u");
        var n2 = { unicodePropertyEscape: wN.unicode, namedGroups: true, lookbehind: r2 && r2.lookbehind };
        wN.ignoreCase = t2 && t2.includes("i");
        var s2 = r2 && r2.dotAllFlag;
        if (wN.dotAll = s2 && t2 && t2.includes("s"), wN.namedGroup = r2 && r2.namedGroup, wN.useDotAllFlag = r2 && r2.useDotAllFlag, wN.useUnicodeFlag = r2 && r2.useUnicodeFlag, wN.unicodePropertyEscape = r2 && r2.unicodePropertyEscape, s2 && wN.useDotAllFlag)
          throw new Error("`useDotAllFlag` and `dotAllFlag` cannot both be true!");
        var a2 = { hasUnicodeFlag: wN.useUnicodeFlag, bmpOnly: !wN.unicode }, i2 = { onNamedGroup: r2 && r2.onNamedGroup, lastIndex: 0, names: Object.create(null), unmatchedReferences: Object.create(null) }, o2 = fN(e2, t2, n2);
        return AN(o2, a2, i2), function(e3) {
          var t3 = Object.keys(e3.unmatchedReferences);
          if (t3.length > 0)
            throw new Error("Unknown group names: " + t3);
        }(i2), dN(o2);
      }, SN = Object.freeze({ unicodeFlag: 1, dotAllFlag: 2, unicodePropertyEscape: 4, namedCaptureGroups: 8 }), TN = "@babel/plugin-regexp-features/featuresKey", jN = "@babel/plugin-regexp-features/runtimeKey";
      function PN(e2, t2) {
        return e2 | t2;
      }
      function IN(e2, t2) {
        return !!(e2 & t2);
      }
      function FN(e2, t2) {
        e2.flags = e2.flags.replace(t2, "");
      }
      var kN = "7.14.5".split(".").reduce(function(e2, t2) {
        return 1e5 * e2 + +t2;
      }, 0), ON = "@babel/plugin-regexp-features/version";
      function RN(e2) {
        var t2 = e2.name, r2 = e2.feature, n2 = e2.options, s2 = n2 === void 0 ? {} : n2;
        return { name: t2, pre: function() {
          var e3, t3 = this.file, n3 = (e3 = t3.get(TN)) != null ? e3 : 0, a2 = PN(n3, SN[r2]), i2 = s2.useUnicodeFlag, o2 = s2.runtime, u2 = o2 === void 0 || o2;
          i2 === false && (a2 = PN(a2, SN.unicodeFlag)), a2 !== n3 && t3.set(TN, a2), u2 || t3.set(jN, false), (!t3.has(ON) || t3.get(ON) < kN) && t3.set(ON, kN);
        }, visitor: { RegExpLiteral: function(e3) {
          var t3, r3 = e3.node, n3 = this.file, s3 = n3.get(TN), a2 = (t3 = n3.get(jN)) == null || t3, i2 = function(e4, t4) {
            var r4 = false, n4 = false, s4 = false, a3 = false, i3 = e4.flags, o3 = e4.pattern, u3 = i3.includes("u");
            return u3 && (IN(t4, SN.unicodeFlag) || (r4 = true), IN(t4, SN.unicodePropertyEscape) && /\\[pP]{/.test(o3) && (s4 = true)), IN(t4, SN.dotAllFlag) && i3.indexOf("s") >= 0 && (n4 = true), IN(t4, SN.namedCaptureGroups) && /\(\?<(?![=!])/.test(o3) && (a3 = true), a3 || s4 || n4 || u3 && !r4 ? (u3 && i3.indexOf("s") >= 0 && (n4 = true), { useUnicodeFlag: r4, onNamedGroup: function() {
            }, namedGroup: a3, unicodePropertyEscape: s4, dotAllFlag: n4, lookbehind: true }) : null;
          }(r3, s3);
          if (i2 !== null) {
            var o2 = {};
            if (i2.namedGroup && (i2.onNamedGroup = function(e4, t4) {
              o2[e4] = t4;
            }), r3.pattern = CN(r3.pattern, r3.flags, i2), i2.namedGroup && Object.keys(o2).length > 0 && a2 && !function(e4) {
              return e4.parentPath.isMemberExpression({ object: e4.node, computed: false }) && e4.parentPath.get("property").isIdentifier({ name: "test" });
            }(e3)) {
              var u2 = ls(this.addHelper("wrapRegExp"), [r3, mc(o2)]);
              ok(u2), e3.replaceWith(u2);
            }
            IN(s3, SN.unicodeFlag) && FN(r3, "u"), IN(s3, SN.dotAllFlag) && FN(r3, "s");
          }
        } } };
      }
      var NN, BN = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = t2.useUnicodeFlag, n2 = r2 === void 0 || r2;
        if (typeof n2 != "boolean")
          throw new Error(".useUnicodeFlag must be a boolean, or undefined");
        return RN({ name: "proposal-unicode-property-regex", feature: "unicodePropertyEscape", options: { useUnicodeFlag: n2 } });
      }), _N = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = t2.method, n2 = t2.module, s2 = e2.assumption("noNewArrows");
        return r2 && n2 ? { name: "transform-async-to-generator", visitor: { Function: function(e3, t3) {
          if (e3.node.async && !e3.node.generator) {
            var a2 = t3.methodWrapper;
            lk(e3, { wrapAsync: a2 = a2 ? Ju(a2) : t3.methodWrapper = DE(e3, r2, n2) }, s2);
          }
        } } } : { name: "transform-async-to-generator", visitor: { Function: function(e3, t3) {
          e3.node.async && !e3.node.generator && lk(e3, { wrapAsync: t3.addHelper("asyncToGenerator") }, s2);
        } } };
      }), LN = jF(function(e2, t2) {
        var r2;
        e2.assertVersion(7);
        var n2 = (r2 = e2.assumption("noNewArrows")) != null ? r2 : !t2.spec;
        return { name: "transform-arrow-functions", visitor: { ArrowFunctionExpression: function(e3) {
          e3.isArrowFunctionExpression() && e3.arrowFunctionToExpression({ allowInsertArrow: false, noNewArrows: n2, specCompliant: !n2 });
        } } };
      }), MN = jF(function(e2) {
        function t2(e3, t3) {
          for (var r2, n2 = f(t3.get(e3)); !(r2 = n2()).done; ) {
            var s2 = r2.value, a2 = s2.node;
            if (s2.isFunctionDeclaration()) {
              var i2 = Ks("let", [zs(a2.id, nc(a2))]);
              i2._blockHoist = 2, a2.id = null, s2.replaceWith(i2);
            }
          }
        }
        return e2.assertVersion(7), { name: "transform-block-scoped-functions", visitor: { BlockStatement: function(e3) {
          var r2 = e3.node, n2 = e3.parent;
          St(n2, { body: r2 }) || Bt(n2) || t2("body", e3);
        }, SwitchCase: function(e3) {
          t2("consequent", e3);
        } } };
      });
      function UN(e2, t2, r2) {
        var n2 = r2.letReferences.get(e2.name);
        return !!n2 && t2.getBindingIdentifier(e2.name) === n2;
      }
      var GN = new WeakSet(), VN = { ReferencedIdentifier: function(e2, t2) {
        if (t2.tdzEnabled) {
          var r2 = e2.node, n2 = e2.parent, s2 = e2.scope;
          if (!e2.parentPath.isFor({ left: r2 }) && UN(r2, s2, t2)) {
            var a2 = s2.getBinding(r2.name).path;
            if (!a2.isFunctionDeclaration()) {
              var i2 = function(e3, t3) {
                var r3 = t3._guessExecutionStatusRelativeTo(e3);
                return r3 === "before" ? "outside" : r3 === "after" ? "inside" : "maybe";
              }(e2, a2);
              if (i2 !== "outside")
                if (i2 === "maybe") {
                  if (GN.has(r2))
                    return;
                  GN.add(r2);
                  var o2 = function(e3, t3) {
                    return ls(t3.addHelper("temporalRef"), [e3, Cs(e3.name)]);
                  }(r2, t2);
                  if (a2.parent._tdzThis = true, e2.parentPath.isUpdateExpression()) {
                    if (n2._ignoreBlockScopingTDZ)
                      return;
                    e2.parentPath.replaceWith(Ms([o2, n2]));
                  } else
                    e2.replaceWith(o2);
                } else
                  i2 === "inside" && e2.replaceWith(Eg.ast(NN || (NN = u(["", '("', '")'])), t2.addHelper("tdz"), r2.name));
            }
          }
        }
      }, AssignmentExpression: { exit: function(e2, t2) {
        if (t2.tdzEnabled) {
          var r2 = e2.node;
          if (!r2._ignoreBlockScopingTDZ) {
            for (var n2 = [], s2 = e2.getBindingIdentifiers(), a2 = 0, i2 = Object.keys(s2); a2 < i2.length; a2++) {
              var o2 = s2[i2[a2]];
              UN(o2, e2.scope, t2) && n2.push(o2);
            }
            n2.length && (r2._ignoreBlockScopingTDZ = true, n2.push(r2), e2.replaceWithMultiple(n2.map(function(e3) {
              return ys(e3);
            })));
          }
        }
      } } }, WN = new WeakSet(), HN = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = t2.throwIfClosureRequired, n2 = r2 !== void 0 && r2, s2 = t2.tdz, a2 = s2 !== void 0 && s2;
        if (typeof n2 != "boolean")
          throw new Error(".throwIfClosureRequired must be a boolean, or undefined");
        if (typeof a2 != "boolean")
          throw new Error(".tdz must be a boolean, or undefined");
        return { name: "transform-block-scoping", visitor: { VariableDeclaration: function(e3) {
          var t3 = e3.node, r3 = e3.parent, n3 = e3.scope;
          if (qN(t3) && (KN(e3, null, r3, n3, true), t3._tdzThis)) {
            for (var s3 = [t3], a3 = 0; a3 < t3.declarations.length; a3++) {
              var i2 = t3.declarations[a3], o2 = rs("=", Ju(i2.id), i2.init || n3.buildUndefinedNode());
              o2._ignoreBlockScopingTDZ = true, s3.push(ys(o2)), i2.init = this.addHelper("temporalUndefined");
            }
            t3._blockHoist = 2, e3.isCompletionRecord() && s3.push(ys(n3.buildUndefinedNode())), e3.replaceWithMultiple(s3);
          }
        }, Loop: function(e3, t3) {
          var r3 = e3.parent, s3 = e3.scope;
          e3.ensureBlock();
          var i2 = new sB(e3, e3.get("body"), r3, s3, n2, a2, t3).run();
          i2 && e3.replaceWith(i2);
        }, CatchClause: function(e3, t3) {
          var r3 = e3.parent, s3 = e3.scope;
          new sB(null, e3.get("body"), r3, s3, n2, a2, t3).run();
        }, "BlockStatement|SwitchStatement|Program": function(e3, t3) {
          (function(e4) {
            return At(e4.parent) || x(e4.parent);
          })(e3) || new sB(null, e3, e3.parent, e3.scope, n2, a2, t3).run();
        } } };
      });
      var XN = Eg('\n  if (typeof RETURN === "object") return RETURN.v;\n');
      function qN(e2) {
        return !!Z(e2) && (!!e2[$r] || (e2.kind === "let" || e2.kind === "const"));
      }
      function $N(e2) {
        var t2 = e2.find(function(e3) {
          return e3.isLoop() || e3.isFunction();
        });
        return t2 == null ? void 0 : t2.isLoop();
      }
      function KN(e2, t2, r2, n2, s2) {
        if (s2 === void 0 && (s2 = false), t2 || (t2 = e2.node), $N(e2) && !wt(r2))
          for (var a2 = 0; a2 < t2.declarations.length; a2++) {
            var i2 = t2.declarations[a2];
            i2.init = i2.init || n2.buildUndefinedNode();
          }
        if (t2[$r] = true, t2.kind = "var", s2)
          for (var o2 = n2.getFunctionParent() || n2.getProgramParent(), u2 = 0, l2 = Object.keys(e2.getBindingIdentifiers()); u2 < l2.length; u2++) {
            var c2 = l2[u2], p2 = n2.getOwnBinding(c2);
            p2 && (p2.kind = "var"), n2.moveBindingTo(c2, o2);
          }
      }
      function zN(e2) {
        return Z(e2, { kind: "var" }) && !qN(e2);
      }
      var JN = vv.visitors.merge([{ Loop: { enter: function(e2, t2) {
        t2.loopDepth++;
      }, exit: function(e2, t2) {
        t2.loopDepth--;
      } }, FunctionParent: function(e2, t2) {
        return t2.loopDepth > 0 ? e2.traverse(YN, t2) : e2.traverse(VN, t2), e2.skip();
      } }, VN]), YN = vv.visitors.merge([{ ReferencedIdentifier: function(e2, t2) {
        var r2 = t2.letReferences.get(e2.node.name);
        if (r2) {
          var n2 = e2.scope.getBindingIdentifier(e2.node.name);
          n2 && n2 !== r2 || (t2.closurify = true);
        }
      } }, VN]), QN = { enter: function(e2, t2) {
        var r2 = e2.node;
        if (e2.parent, e2.isForStatement()) {
          if (zN(r2.init)) {
            var n2 = t2.pushDeclar(r2.init);
            n2.length === 1 ? r2.init = n2[0] : r2.init = Ms(n2);
          }
        } else if (e2.isFor())
          zN(r2.left) && (t2.pushDeclar(r2.left), r2.left = r2.left.declarations[0].id);
        else if (zN(r2))
          e2.replaceWithMultiple(t2.pushDeclar(r2).map(function(e3) {
            return ys(e3);
          }));
        else if (e2.isFunction())
          return e2.skip();
      } }, ZN = { LabeledStatement: function(e2, t2) {
        var r2 = e2.node;
        t2.innerLabels.push(r2.label.name);
      } }, eB = { enter: function(e2, t2) {
        if (e2.isAssignmentExpression() || e2.isUpdateExpression())
          for (var r2 = 0, n2 = Object.keys(e2.getBindingIdentifiers()); r2 < n2.length; r2++) {
            var s2 = n2[r2];
            t2.outsideReferences.get(s2) === e2.scope.getBindingIdentifier(s2) && (t2.reassignments[s2] = true);
          }
        else
          e2.isReturnStatement() && t2.returnStatements.push(e2);
      } };
      var tB = { Loop: function(e2, t2) {
        var r2 = t2.ignoreLabeless;
        t2.ignoreLabeless = true, e2.traverse(tB, t2), t2.ignoreLabeless = r2, e2.skip();
      }, Function: function(e2) {
        e2.skip();
      }, SwitchCase: function(e2, t2) {
        var r2 = t2.inSwitchCase;
        t2.inSwitchCase = true, e2.traverse(tB, t2), t2.inSwitchCase = r2, e2.skip();
      }, "BreakStatement|ContinueStatement|ReturnStatement": function(e2, t2) {
        var r2 = e2.node, n2 = e2.scope;
        if (!r2[this.LOOP_IGNORE]) {
          var s2, a2 = function(e3) {
            return b(e3) ? "break" : A(e3) ? "continue" : void 0;
          }(r2);
          if (a2) {
            if (r2.label) {
              if (t2.innerLabels.indexOf(r2.label.name) >= 0)
                return;
              a2 = a2 + "|" + r2.label.name;
            } else {
              if (t2.ignoreLabeless)
                return;
              if (b(r2) && t2.inSwitchCase)
                return;
            }
            t2.hasBreakContinue = true, t2.map[a2] = r2, s2 = Cs(a2);
          }
          e2.isReturnStatement() && (t2.hasReturn = true, s2 = Rs([Bs(Ds("v"), r2.argument || n2.buildUndefinedNode())])), s2 && ((s2 = Ls(s2))[this.LOOP_IGNORE] = true, e2.skip(), e2.replaceWith(yc(s2, r2)));
        }
      } };
      function rB(e2) {
        return !!e2.find(function(e3) {
          var t2 = e3.node;
          if (G(t2)) {
            if (t2.sourceType === "module")
              return true;
          } else if (!v(t2))
            return false;
          return t2.directives.some(function(e4) {
            return e4.value.value === "use strict";
          });
        });
      }
      var nB, sB = function() {
        function e2(e3, t3, r2, n2, s2, a2, i2) {
          this.parent = r2, this.scope = n2, this.state = i2, this.throwIfClosureRequired = s2, this.tdzEnabled = a2, this.blockPath = t3, this.block = t3.node, this.outsideLetReferences = new Map(), this.hasLetReferences = false, this.letReferences = new Map(), this.body = [], e3 && (this.loopParent = e3.parent, this.loopLabel = O(this.loopParent) && this.loopParent.label, this.loopPath = e3, this.loop = e3.node);
        }
        var t2 = e2.prototype;
        return t2.run = function() {
          var e3 = this.block;
          if (!WN.has(e3)) {
            WN.add(e3);
            var t3 = this.getLetReferences();
            if (this.checkConstants(), St(this.parent) || G(this.block))
              this.updateScopeInfo();
            else if (this.hasLetReferences)
              return t3 ? this.wrapClosure() : this.remap(), this.updateScopeInfo(t3), this.loopLabel && !O(this.loopParent) ? ws(this.loopLabel, this.loop) : void 0;
          }
        }, t2.checkConstants = function() {
          for (var e3 = this.scope, t3 = this.state, r2 = 0, n2 = Object.keys(e3.bindings); r2 < n2.length; r2++) {
            var s2 = n2[r2], a2 = e3.bindings[s2];
            if (a2.kind === "const")
              for (var i2 = 0, o2 = a2.constantViolations; i2 < o2.length; i2++) {
                var u2 = o2[i2], l2 = ls(t3.addHelper("readOnlyError"), [Cs(s2)]);
                if (u2.isAssignmentExpression()) {
                  var c2 = u2.node.operator;
                  c2 === "=" ? u2.replaceWith(Ms([u2.get("right").node, l2])) : ["&&=", "||=", "??="].includes(c2) ? u2.replaceWith(Is(c2.slice(0, -1), u2.get("left").node, Ms([u2.get("right").node, l2]))) : u2.replaceWith(Ms([ns(c2.slice(0, -1), u2.get("left").node, u2.get("right").node), l2]));
                } else
                  u2.isUpdateExpression() ? u2.replaceWith(Ms([qs("+", u2.get("argument").node), l2])) : u2.isForXStatement() && (u2.ensureBlock(), u2.get("left").replaceWith(Ks("var", [zs(u2.scope.generateUidIdentifier(s2))])), u2.node.body.body.unshift(ys(l2)));
              }
          }
        }, t2.updateScopeInfo = function(e3) {
          for (var t3, r2 = this.blockPath.scope, n2 = r2.getFunctionParent() || r2.getProgramParent(), s2 = this.letReferences, a2 = f(s2.keys()); !(t3 = a2()).done; ) {
            var i2 = t3.value, o2 = s2.get(i2), u2 = r2.getBinding(o2.name);
            u2 && (u2.kind !== "let" && u2.kind !== "const" || (u2.kind = "var", e3 ? r2.hasOwnBinding(o2.name) && r2.removeBinding(o2.name) : r2.moveBindingTo(o2.name, n2)));
          }
        }, t2.remap = function() {
          for (var e3, t3 = this.letReferences, r2 = this.outsideLetReferences, n2 = this.scope, s2 = this.blockPath.scope, a2 = f(t3.keys()); !(e3 = a2()).done; ) {
            var i2 = e3.value, o2 = t3.get(i2);
            if (n2.parentHasBinding(i2) || n2.hasGlobal(i2)) {
              var u2 = n2.getOwnBinding(i2);
              if (u2) {
                var l2 = n2.parent.getOwnBinding(i2);
                if (u2.kind === "hoisted" && !u2.path.node.async && !u2.path.node.generator && (!l2 || zN(l2.path.parent)) && !rB(u2.path.parentPath))
                  continue;
                n2.rename(o2.name);
              }
              s2.hasOwnBinding(i2) && s2.rename(o2.name);
            }
          }
          for (var c2, p2 = f(r2.keys()); !(c2 = p2()).done; ) {
            var d2 = c2.value, h2 = t3.get(d2);
            $N(this.blockPath) && s2.hasOwnBinding(d2) && s2.rename(h2.name);
          }
        }, t2.wrapClosure = function() {
          if (this.throwIfClosureRequired)
            throw this.blockPath.buildCodeFrameError("Compiling let/const in this block would add a closure (throwIfClosureRequired).");
          var e3 = this.block, t3 = this.outsideLetReferences;
          if (this.loop)
            for (var r2 = 0, n2 = Array.from(t3.keys()); r2 < n2.length; r2++) {
              var s2 = n2[r2], a2 = t3.get(s2);
              (this.scope.hasGlobal(a2.name) || this.scope.parentHasBinding(a2.name)) && (t3.delete(a2.name), this.letReferences.delete(a2.name), this.scope.rename(a2.name), this.letReferences.set(a2.name, a2), t3.set(a2.name, a2));
            }
          this.has = this.checkLoop(), this.hoistVarDeclarations();
          var i2 = Array.from(t3.values(), function(e4) {
            return Ju(e4);
          }), o2 = i2.map(function(e4) {
            return Ju(e4);
          }), u2 = this.blockPath.isSwitchStatement(), l2 = xs(null, o2, os(u2 ? [e3] : e3.body));
          this.addContinuations(l2);
          var c2, p2, d2, f2 = ls(Ts(), i2), h2 = ".callee";
          if (vv.hasType(l2.body, "YieldExpression", xl) && (l2.generator = true, f2 = xa(f2, true), h2 = ".argument" + h2), vv.hasType(l2.body, "AwaitExpression", xl) && (l2.async = true, f2 = Da(f2), h2 = ".argument" + h2), this.has.hasReturn || this.has.hasBreakContinue) {
            var m2 = this.scope.generateUid("ret");
            this.body.push(Ks("var", [zs(Ds(m2), f2)])), c2 = "declarations.0.init" + h2, p2 = this.body.length - 1, this.buildHas(m2);
          } else
            this.body.push(ys(f2)), c2 = "expression" + h2, p2 = this.body.length - 1;
          if (u2) {
            var y2 = this.blockPath, g2 = y2.parentPath, v2 = y2.listKey, b2 = y2.key;
            this.blockPath.replaceWithMultiple(this.body), d2 = g2.get(v2)[b2 + p2];
          } else
            e3.body = this.body, d2 = this.blockPath.get("body")[p2];
          var E2, x2 = d2.get(c2);
          if (this.loop) {
            var D2 = this.scope.generateUid("loop"), A2 = this.loopPath.insertBefore(Ks("var", [zs(Ds(D2), l2)]));
            x2.replaceWith(Ds(D2)), E2 = A2[0].get("declarations.0.init");
          } else
            x2.replaceWith(l2), E2 = x2;
          E2.unwrapFunctionEnvironment();
        }, t2.addContinuations = function(e3) {
          var t3 = this, r2 = { reassignments: {}, returnStatements: [], outsideReferences: this.outsideLetReferences };
          this.scope.traverse(e3, eB, r2);
          for (var n2 = function(n3) {
            var s3 = e3.params[n3];
            if (!r2.reassignments[s3.name])
              return "continue";
            var a2 = s3.name, i2 = t3.scope.generateUid(s3.name);
            e3.params[n3] = Ds(i2), t3.scope.rename(a2, i2, e3), r2.returnStatements.forEach(function(e4) {
              e4.insertBefore(ys(rs("=", Ds(a2), Ds(i2))));
            }), e3.body.body.push(ys(rs("=", Ds(a2), Ds(i2))));
          }, s2 = 0; s2 < e3.params.length; s2++)
            n2(s2);
        }, t2.getLetReferences = function() {
          var e3 = this, t3 = this.block, r2 = [];
          if (this.loop) {
            var n2 = this.loop.left || this.loop.init;
            if (qN(n2)) {
              r2.push(n2);
              for (var s2 = cc(n2), a2 = 0, i2 = Object.keys(s2); a2 < i2.length; a2++) {
                var o2 = i2[a2];
                this.outsideLetReferences.set(o2, s2[o2]);
              }
            }
          }
          var u2 = function n3(s3, a3) {
            if (oe(a3 = a3 || s3.node) || P(a3) || qN(a3))
              if (qN(a3) && KN(s3, a3, t3, e3.scope), a3.declarations)
                for (var i3 = 0; i3 < a3.declarations.length; i3++)
                  r2.push(a3.declarations[i3]);
              else
                r2.push(a3);
            O(a3) && n3(s3.get("body"), a3.body);
          };
          if (t3.body)
            for (var l2 = this.blockPath.get("body"), c2 = 0; c2 < t3.body.length; c2++)
              u2(l2[c2]);
          if (t3.cases)
            for (var p2 = this.blockPath.get("cases"), d2 = 0; d2 < t3.cases.length; d2++)
              for (var f2 = t3.cases[d2].consequent, h2 = 0; h2 < f2.length; h2++) {
                var m2 = f2[h2];
                u2(p2[d2], m2);
              }
          for (var y2 = 0; y2 < r2.length; y2++) {
            for (var g2 = cc(r2[y2], false, true), v2 = 0, b2 = Object.keys(g2); v2 < b2.length; v2++) {
              var E2 = b2[v2];
              this.letReferences.set(E2, g2[E2]);
            }
            this.hasLetReferences = true;
          }
          if (this.hasLetReferences) {
            var x2 = { letReferences: this.letReferences, closurify: false, loopDepth: 0, tdzEnabled: this.tdzEnabled, addHelper: function(t4) {
              return e3.state.addHelper(t4);
            } };
            return $N(this.blockPath) && x2.loopDepth++, this.blockPath.traverse(JN, x2), x2.closurify;
          }
        }, t2.checkLoop = function() {
          var e3 = { hasBreakContinue: false, ignoreLabeless: false, inSwitchCase: false, innerLabels: [], hasReturn: false, isLoop: !!this.loop, map: {}, LOOP_IGNORE: Symbol() };
          return this.blockPath.traverse(ZN, e3), this.blockPath.traverse(tB, e3), e3;
        }, t2.hoistVarDeclarations = function() {
          this.blockPath.traverse(QN, this);
        }, t2.pushDeclar = function(e3) {
          for (var t3 = [], r2 = cc(e3), n2 = 0, s2 = Object.keys(r2); n2 < s2.length; n2++) {
            var a2 = s2[n2];
            t3.push(zs(r2[a2]));
          }
          this.body.push(Ks(e3.kind, t3));
          for (var i2 = [], o2 = 0; o2 < e3.declarations.length; o2++) {
            var u2 = e3.declarations[o2];
            if (u2.init) {
              var l2 = rs("=", Ju(u2.id), Ju(u2.init));
              i2.push(yc(l2, u2));
            }
          }
          return i2;
        }, t2.buildHas = function(e3) {
          var t3 = this.body, r2 = this.has;
          if (r2.hasBreakContinue)
            for (var n2 = 0, s2 = Object.keys(r2.map); n2 < s2.length; n2++) {
              var a2 = s2[n2];
              t3.push(As(ns("===", Ds(e3), Cs(a2)), r2.map[a2]));
            }
          r2.hasReturn && t3.push(XN({ RETURN: Ds(e3) }));
        }, e2;
      }(), aB = { builtin: { Array: false, ArrayBuffer: false, Atomics: false, BigInt: false, BigInt64Array: false, BigUint64Array: false, Boolean: false, constructor: false, DataView: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Float32Array: false, Float64Array: false, Function: false, globalThis: false, hasOwnProperty: false, Infinity: false, Int16Array: false, Int32Array: false, Int8Array: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Map: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, Promise: false, propertyIsEnumerable: false, Proxy: false, RangeError: false, ReferenceError: false, Reflect: false, RegExp: false, Set: false, SharedArrayBuffer: false, String: false, Symbol: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, Uint16Array: false, Uint32Array: false, Uint8Array: false, Uint8ClampedArray: false, undefined: false, unescape: false, URIError: false, valueOf: false, WeakMap: false, WeakSet: false }, es5: { Array: false, Boolean: false, constructor: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Function: false, hasOwnProperty: false, Infinity: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, propertyIsEnumerable: false, RangeError: false, ReferenceError: false, RegExp: false, String: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, undefined: false, unescape: false, URIError: false, valueOf: false }, es2015: { Array: false, ArrayBuffer: false, Boolean: false, constructor: false, DataView: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Float32Array: false, Float64Array: false, Function: false, hasOwnProperty: false, Infinity: false, Int16Array: false, Int32Array: false, Int8Array: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Map: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, Promise: false, propertyIsEnumerable: false, Proxy: false, RangeError: false, ReferenceError: false, Reflect: false, RegExp: false, Set: false, String: false, Symbol: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, Uint16Array: false, Uint32Array: false, Uint8Array: false, Uint8ClampedArray: false, undefined: false, unescape: false, URIError: false, valueOf: false, WeakMap: false, WeakSet: false }, es2017: { Array: false, ArrayBuffer: false, Atomics: false, Boolean: false, constructor: false, DataView: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Float32Array: false, Float64Array: false, Function: false, hasOwnProperty: false, Infinity: false, Int16Array: false, Int32Array: false, Int8Array: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Map: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, Promise: false, propertyIsEnumerable: false, Proxy: false, RangeError: false, ReferenceError: false, Reflect: false, RegExp: false, Set: false, SharedArrayBuffer: false, String: false, Symbol: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, Uint16Array: false, Uint32Array: false, Uint8Array: false, Uint8ClampedArray: false, undefined: false, unescape: false, URIError: false, valueOf: false, WeakMap: false, WeakSet: false }, browser: { AbortController: false, AbortSignal: false, addEventListener: false, alert: false, AnalyserNode: false, Animation: false, AnimationEffectReadOnly: false, AnimationEffectTiming: false, AnimationEffectTimingReadOnly: false, AnimationEvent: false, AnimationPlaybackEvent: false, AnimationTimeline: false, applicationCache: false, ApplicationCache: false, ApplicationCacheErrorEvent: false, atob: false, Attr: false, Audio: false, AudioBuffer: false, AudioBufferSourceNode: false, AudioContext: false, AudioDestinationNode: false, AudioListener: false, AudioNode: false, AudioParam: false, AudioProcessingEvent: false, AudioScheduledSourceNode: false, "AudioWorkletGlobalScope ": false, AudioWorkletNode: false, AudioWorkletProcessor: false, BarProp: false, BaseAudioContext: false, BatteryManager: false, BeforeUnloadEvent: false, BiquadFilterNode: false, Blob: false, BlobEvent: false, blur: false, BroadcastChannel: false, btoa: false, BudgetService: false, ByteLengthQueuingStrategy: false, Cache: false, caches: false, CacheStorage: false, cancelAnimationFrame: false, cancelIdleCallback: false, CanvasCaptureMediaStreamTrack: false, CanvasGradient: false, CanvasPattern: false, CanvasRenderingContext2D: false, ChannelMergerNode: false, ChannelSplitterNode: false, CharacterData: false, clearInterval: false, clearTimeout: false, clientInformation: false, ClipboardEvent: false, close: false, closed: false, CloseEvent: false, Comment: false, CompositionEvent: false, confirm: false, console: false, ConstantSourceNode: false, ConvolverNode: false, CountQueuingStrategy: false, createImageBitmap: false, Credential: false, CredentialsContainer: false, crypto: false, Crypto: false, CryptoKey: false, CSS: false, CSSConditionRule: false, CSSFontFaceRule: false, CSSGroupingRule: false, CSSImportRule: false, CSSKeyframeRule: false, CSSKeyframesRule: false, CSSMediaRule: false, CSSNamespaceRule: false, CSSPageRule: false, CSSRule: false, CSSRuleList: false, CSSStyleDeclaration: false, CSSStyleRule: false, CSSStyleSheet: false, CSSSupportsRule: false, CustomElementRegistry: false, customElements: false, CustomEvent: false, DataTransfer: false, DataTransferItem: false, DataTransferItemList: false, defaultstatus: false, defaultStatus: false, DelayNode: false, DeviceMotionEvent: false, DeviceOrientationEvent: false, devicePixelRatio: false, dispatchEvent: false, document: false, Document: false, DocumentFragment: false, DocumentType: false, DOMError: false, DOMException: false, DOMImplementation: false, DOMMatrix: false, DOMMatrixReadOnly: false, DOMParser: false, DOMPoint: false, DOMPointReadOnly: false, DOMQuad: false, DOMRect: false, DOMRectReadOnly: false, DOMStringList: false, DOMStringMap: false, DOMTokenList: false, DragEvent: false, DynamicsCompressorNode: false, Element: false, ErrorEvent: false, event: false, Event: false, EventSource: false, EventTarget: false, external: false, fetch: false, File: false, FileList: false, FileReader: false, find: false, focus: false, FocusEvent: false, FontFace: false, FontFaceSetLoadEvent: false, FormData: false, frameElement: false, frames: false, GainNode: false, Gamepad: false, GamepadButton: false, GamepadEvent: false, getComputedStyle: false, getSelection: false, HashChangeEvent: false, Headers: false, history: false, History: false, HTMLAllCollection: false, HTMLAnchorElement: false, HTMLAreaElement: false, HTMLAudioElement: false, HTMLBaseElement: false, HTMLBodyElement: false, HTMLBRElement: false, HTMLButtonElement: false, HTMLCanvasElement: false, HTMLCollection: false, HTMLContentElement: false, HTMLDataElement: false, HTMLDataListElement: false, HTMLDetailsElement: false, HTMLDialogElement: false, HTMLDirectoryElement: false, HTMLDivElement: false, HTMLDListElement: false, HTMLDocument: false, HTMLElement: false, HTMLEmbedElement: false, HTMLFieldSetElement: false, HTMLFontElement: false, HTMLFormControlsCollection: false, HTMLFormElement: false, HTMLFrameElement: false, HTMLFrameSetElement: false, HTMLHeadElement: false, HTMLHeadingElement: false, HTMLHRElement: false, HTMLHtmlElement: false, HTMLIFrameElement: false, HTMLImageElement: false, HTMLInputElement: false, HTMLLabelElement: false, HTMLLegendElement: false, HTMLLIElement: false, HTMLLinkElement: false, HTMLMapElement: false, HTMLMarqueeElement: false, HTMLMediaElement: false, HTMLMenuElement: false, HTMLMetaElement: false, HTMLMeterElement: false, HTMLModElement: false, HTMLObjectElement: false, HTMLOListElement: false, HTMLOptGroupElement: false, HTMLOptionElement: false, HTMLOptionsCollection: false, HTMLOutputElement: false, HTMLParagraphElement: false, HTMLParamElement: false, HTMLPictureElement: false, HTMLPreElement: false, HTMLProgressElement: false, HTMLQuoteElement: false, HTMLScriptElement: false, HTMLSelectElement: false, HTMLShadowElement: false, HTMLSlotElement: false, HTMLSourceElement: false, HTMLSpanElement: false, HTMLStyleElement: false, HTMLTableCaptionElement: false, HTMLTableCellElement: false, HTMLTableColElement: false, HTMLTableElement: false, HTMLTableRowElement: false, HTMLTableSectionElement: false, HTMLTemplateElement: false, HTMLTextAreaElement: false, HTMLTimeElement: false, HTMLTitleElement: false, HTMLTrackElement: false, HTMLUListElement: false, HTMLUnknownElement: false, HTMLVideoElement: false, IDBCursor: false, IDBCursorWithValue: false, IDBDatabase: false, IDBFactory: false, IDBIndex: false, IDBKeyRange: false, IDBObjectStore: false, IDBOpenDBRequest: false, IDBRequest: false, IDBTransaction: false, IDBVersionChangeEvent: false, IdleDeadline: false, IIRFilterNode: false, Image: false, ImageBitmap: false, ImageBitmapRenderingContext: false, ImageCapture: false, ImageData: false, indexedDB: false, innerHeight: false, innerWidth: false, InputEvent: false, IntersectionObserver: false, IntersectionObserverEntry: false, Intl: false, isSecureContext: false, KeyboardEvent: false, KeyframeEffect: false, KeyframeEffectReadOnly: false, length: false, localStorage: false, location: true, Location: false, locationbar: false, matchMedia: false, MediaDeviceInfo: false, MediaDevices: false, MediaElementAudioSourceNode: false, MediaEncryptedEvent: false, MediaError: false, MediaKeyMessageEvent: false, MediaKeySession: false, MediaKeyStatusMap: false, MediaKeySystemAccess: false, MediaList: false, MediaQueryList: false, MediaQueryListEvent: false, MediaRecorder: false, MediaSettingsRange: false, MediaSource: false, MediaStream: false, MediaStreamAudioDestinationNode: false, MediaStreamAudioSourceNode: false, MediaStreamEvent: false, MediaStreamTrack: false, MediaStreamTrackEvent: false, menubar: false, MessageChannel: false, MessageEvent: false, MessagePort: false, MIDIAccess: false, MIDIConnectionEvent: false, MIDIInput: false, MIDIInputMap: false, MIDIMessageEvent: false, MIDIOutput: false, MIDIOutputMap: false, MIDIPort: false, MimeType: false, MimeTypeArray: false, MouseEvent: false, moveBy: false, moveTo: false, MutationEvent: false, MutationObserver: false, MutationRecord: false, name: false, NamedNodeMap: false, NavigationPreloadManager: false, navigator: false, Navigator: false, NetworkInformation: false, Node: false, NodeFilter: false, NodeIterator: false, NodeList: false, Notification: false, OfflineAudioCompletionEvent: false, OfflineAudioContext: false, offscreenBuffering: false, OffscreenCanvas: true, onabort: true, onafterprint: true, onanimationend: true, onanimationiteration: true, onanimationstart: true, onappinstalled: true, onauxclick: true, onbeforeinstallprompt: true, onbeforeprint: true, onbeforeunload: true, onblur: true, oncancel: true, oncanplay: true, oncanplaythrough: true, onchange: true, onclick: true, onclose: true, oncontextmenu: true, oncuechange: true, ondblclick: true, ondevicemotion: true, ondeviceorientation: true, ondeviceorientationabsolute: true, ondrag: true, ondragend: true, ondragenter: true, ondragleave: true, ondragover: true, ondragstart: true, ondrop: true, ondurationchange: true, onemptied: true, onended: true, onerror: true, onfocus: true, ongotpointercapture: true, onhashchange: true, oninput: true, oninvalid: true, onkeydown: true, onkeypress: true, onkeyup: true, onlanguagechange: true, onload: true, onloadeddata: true, onloadedmetadata: true, onloadstart: true, onlostpointercapture: true, onmessage: true, onmessageerror: true, onmousedown: true, onmouseenter: true, onmouseleave: true, onmousemove: true, onmouseout: true, onmouseover: true, onmouseup: true, onmousewheel: true, onoffline: true, ononline: true, onpagehide: true, onpageshow: true, onpause: true, onplay: true, onplaying: true, onpointercancel: true, onpointerdown: true, onpointerenter: true, onpointerleave: true, onpointermove: true, onpointerout: true, onpointerover: true, onpointerup: true, onpopstate: true, onprogress: true, onratechange: true, onrejectionhandled: true, onreset: true, onresize: true, onscroll: true, onsearch: true, onseeked: true, onseeking: true, onselect: true, onstalled: true, onstorage: true, onsubmit: true, onsuspend: true, ontimeupdate: true, ontoggle: true, ontransitionend: true, onunhandledrejection: true, onunload: true, onvolumechange: true, onwaiting: true, onwheel: true, open: false, openDatabase: false, opener: false, Option: false, origin: false, OscillatorNode: false, outerHeight: false, outerWidth: false, PageTransitionEvent: false, pageXOffset: false, pageYOffset: false, PannerNode: false, parent: false, Path2D: false, PaymentAddress: false, PaymentRequest: false, PaymentRequestUpdateEvent: false, PaymentResponse: false, performance: false, Performance: false, PerformanceEntry: false, PerformanceLongTaskTiming: false, PerformanceMark: false, PerformanceMeasure: false, PerformanceNavigation: false, PerformanceNavigationTiming: false, PerformanceObserver: false, PerformanceObserverEntryList: false, PerformancePaintTiming: false, PerformanceResourceTiming: false, PerformanceTiming: false, PeriodicWave: false, Permissions: false, PermissionStatus: false, personalbar: false, PhotoCapabilities: false, Plugin: false, PluginArray: false, PointerEvent: false, PopStateEvent: false, postMessage: false, Presentation: false, PresentationAvailability: false, PresentationConnection: false, PresentationConnectionAvailableEvent: false, PresentationConnectionCloseEvent: false, PresentationConnectionList: false, PresentationReceiver: false, PresentationRequest: false, print: false, ProcessingInstruction: false, ProgressEvent: false, PromiseRejectionEvent: false, prompt: false, PushManager: false, PushSubscription: false, PushSubscriptionOptions: false, queueMicrotask: false, RadioNodeList: false, Range: false, ReadableStream: false, registerProcessor: false, RemotePlayback: false, removeEventListener: false, Request: false, requestAnimationFrame: false, requestIdleCallback: false, resizeBy: false, ResizeObserver: false, ResizeObserverEntry: false, resizeTo: false, Response: false, RTCCertificate: false, RTCDataChannel: false, RTCDataChannelEvent: false, RTCDtlsTransport: false, RTCIceCandidate: false, RTCIceGatherer: false, RTCIceTransport: false, RTCPeerConnection: false, RTCPeerConnectionIceEvent: false, RTCRtpContributingSource: false, RTCRtpReceiver: false, RTCRtpSender: false, RTCSctpTransport: false, RTCSessionDescription: false, RTCStatsReport: false, RTCTrackEvent: false, screen: false, Screen: false, screenLeft: false, ScreenOrientation: false, screenTop: false, screenX: false, screenY: false, ScriptProcessorNode: false, scroll: false, scrollbars: false, scrollBy: false, scrollTo: false, scrollX: false, scrollY: false, SecurityPolicyViolationEvent: false, Selection: false, self: false, ServiceWorker: false, ServiceWorkerContainer: false, ServiceWorkerRegistration: false, sessionStorage: false, setInterval: false, setTimeout: false, ShadowRoot: false, SharedWorker: false, SourceBuffer: false, SourceBufferList: false, speechSynthesis: false, SpeechSynthesisEvent: false, SpeechSynthesisUtterance: false, StaticRange: false, status: false, statusbar: false, StereoPannerNode: false, stop: false, Storage: false, StorageEvent: false, StorageManager: false, styleMedia: false, StyleSheet: false, StyleSheetList: false, SubtleCrypto: false, SVGAElement: false, SVGAngle: false, SVGAnimatedAngle: false, SVGAnimatedBoolean: false, SVGAnimatedEnumeration: false, SVGAnimatedInteger: false, SVGAnimatedLength: false, SVGAnimatedLengthList: false, SVGAnimatedNumber: false, SVGAnimatedNumberList: false, SVGAnimatedPreserveAspectRatio: false, SVGAnimatedRect: false, SVGAnimatedString: false, SVGAnimatedTransformList: false, SVGAnimateElement: false, SVGAnimateMotionElement: false, SVGAnimateTransformElement: false, SVGAnimationElement: false, SVGCircleElement: false, SVGClipPathElement: false, SVGComponentTransferFunctionElement: false, SVGDefsElement: false, SVGDescElement: false, SVGDiscardElement: false, SVGElement: false, SVGEllipseElement: false, SVGFEBlendElement: false, SVGFEColorMatrixElement: false, SVGFEComponentTransferElement: false, SVGFECompositeElement: false, SVGFEConvolveMatrixElement: false, SVGFEDiffuseLightingElement: false, SVGFEDisplacementMapElement: false, SVGFEDistantLightElement: false, SVGFEDropShadowElement: false, SVGFEFloodElement: false, SVGFEFuncAElement: false, SVGFEFuncBElement: false, SVGFEFuncGElement: false, SVGFEFuncRElement: false, SVGFEGaussianBlurElement: false, SVGFEImageElement: false, SVGFEMergeElement: false, SVGFEMergeNodeElement: false, SVGFEMorphologyElement: false, SVGFEOffsetElement: false, SVGFEPointLightElement: false, SVGFESpecularLightingElement: false, SVGFESpotLightElement: false, SVGFETileElement: false, SVGFETurbulenceElement: false, SVGFilterElement: false, SVGForeignObjectElement: false, SVGGElement: false, SVGGeometryElement: false, SVGGradientElement: false, SVGGraphicsElement: false, SVGImageElement: false, SVGLength: false, SVGLengthList: false, SVGLinearGradientElement: false, SVGLineElement: false, SVGMarkerElement: false, SVGMaskElement: false, SVGMatrix: false, SVGMetadataElement: false, SVGMPathElement: false, SVGNumber: false, SVGNumberList: false, SVGPathElement: false, SVGPatternElement: false, SVGPoint: false, SVGPointList: false, SVGPolygonElement: false, SVGPolylineElement: false, SVGPreserveAspectRatio: false, SVGRadialGradientElement: false, SVGRect: false, SVGRectElement: false, SVGScriptElement: false, SVGSetElement: false, SVGStopElement: false, SVGStringList: false, SVGStyleElement: false, SVGSVGElement: false, SVGSwitchElement: false, SVGSymbolElement: false, SVGTextContentElement: false, SVGTextElement: false, SVGTextPathElement: false, SVGTextPositioningElement: false, SVGTitleElement: false, SVGTransform: false, SVGTransformList: false, SVGTSpanElement: false, SVGUnitTypes: false, SVGUseElement: false, SVGViewElement: false, TaskAttributionTiming: false, Text: false, TextDecoder: false, TextEncoder: false, TextEvent: false, TextMetrics: false, TextTrack: false, TextTrackCue: false, TextTrackCueList: false, TextTrackList: false, TimeRanges: false, toolbar: false, top: false, Touch: false, TouchEvent: false, TouchList: false, TrackEvent: false, TransitionEvent: false, TreeWalker: false, UIEvent: false, URL: false, URLSearchParams: false, ValidityState: false, visualViewport: false, VisualViewport: false, VTTCue: false, WaveShaperNode: false, WebAssembly: false, WebGL2RenderingContext: false, WebGLActiveInfo: false, WebGLBuffer: false, WebGLContextEvent: false, WebGLFramebuffer: false, WebGLProgram: false, WebGLQuery: false, WebGLRenderbuffer: false, WebGLRenderingContext: false, WebGLSampler: false, WebGLShader: false, WebGLShaderPrecisionFormat: false, WebGLSync: false, WebGLTexture: false, WebGLTransformFeedback: false, WebGLUniformLocation: false, WebGLVertexArrayObject: false, WebSocket: false, WheelEvent: false, window: false, Window: false, Worker: false, WritableStream: false, XMLDocument: false, XMLHttpRequest: false, XMLHttpRequestEventTarget: false, XMLHttpRequestUpload: false, XMLSerializer: false, XPathEvaluator: false, XPathExpression: false, XPathResult: false, XSLTProcessor: false }, worker: { addEventListener: false, applicationCache: false, atob: false, Blob: false, BroadcastChannel: false, btoa: false, Cache: false, caches: false, clearInterval: false, clearTimeout: false, close: true, console: false, fetch: false, FileReaderSync: false, FormData: false, Headers: false, IDBCursor: false, IDBCursorWithValue: false, IDBDatabase: false, IDBFactory: false, IDBIndex: false, IDBKeyRange: false, IDBObjectStore: false, IDBOpenDBRequest: false, IDBRequest: false, IDBTransaction: false, IDBVersionChangeEvent: false, ImageData: false, importScripts: true, indexedDB: false, location: false, MessageChannel: false, MessagePort: false, name: false, navigator: false, Notification: false, onclose: true, onconnect: true, onerror: true, onlanguagechange: true, onmessage: true, onoffline: true, ononline: true, onrejectionhandled: true, onunhandledrejection: true, performance: false, Performance: false, PerformanceEntry: false, PerformanceMark: false, PerformanceMeasure: false, PerformanceNavigation: false, PerformanceResourceTiming: false, PerformanceTiming: false, postMessage: true, Promise: false, queueMicrotask: false, removeEventListener: false, Request: false, Response: false, self: true, ServiceWorkerRegistration: false, setInterval: false, setTimeout: false, TextDecoder: false, TextEncoder: false, URL: false, URLSearchParams: false, WebSocket: false, Worker: false, WorkerGlobalScope: false, XMLHttpRequest: false }, node: { __dirname: false, __filename: false, Buffer: false, clearImmediate: false, clearInterval: false, clearTimeout: false, console: false, exports: true, global: false, Intl: false, module: false, process: false, queueMicrotask: false, require: false, setImmediate: false, setInterval: false, setTimeout: false, TextDecoder: false, TextEncoder: false, URL: false, URLSearchParams: false }, commonjs: { exports: true, global: false, module: false, require: false }, amd: { define: false, require: false }, mocha: { after: false, afterEach: false, before: false, beforeEach: false, context: false, describe: false, it: false, mocha: false, run: false, setup: false, specify: false, suite: false, suiteSetup: false, suiteTeardown: false, teardown: false, test: false, xcontext: false, xdescribe: false, xit: false, xspecify: false }, jasmine: { afterAll: false, afterEach: false, beforeAll: false, beforeEach: false, describe: false, expect: false, fail: false, fdescribe: false, fit: false, it: false, jasmine: false, pending: false, runs: false, spyOn: false, spyOnProperty: false, waits: false, waitsFor: false, xdescribe: false, xit: false }, jest: { afterAll: false, afterEach: false, beforeAll: false, beforeEach: false, describe: false, expect: false, fdescribe: false, fit: false, it: false, jest: false, pit: false, require: false, test: false, xdescribe: false, xit: false, xtest: false }, qunit: { asyncTest: false, deepEqual: false, equal: false, expect: false, module: false, notDeepEqual: false, notEqual: false, notOk: false, notPropEqual: false, notStrictEqual: false, ok: false, propEqual: false, QUnit: false, raises: false, start: false, stop: false, strictEqual: false, test: false, throws: false }, phantomjs: { console: true, exports: true, phantom: true, require: true, WebPage: true }, couch: { emit: false, exports: false, getRow: false, log: false, module: false, provides: false, require: false, respond: false, send: false, start: false, sum: false }, rhino: { defineClass: false, deserialize: false, gc: false, help: false, importClass: false, importPackage: false, java: false, load: false, loadClass: false, Packages: false, print: false, quit: false, readFile: false, readUrl: false, runCommand: false, seal: false, serialize: false, spawn: false, sync: false, toint32: false, version: false }, nashorn: { __DIR__: false, __FILE__: false, __LINE__: false, com: false, edu: false, exit: false, java: false, Java: false, javafx: false, JavaImporter: false, javax: false, JSAdapter: false, load: false, loadWithNewGlobal: false, org: false, Packages: false, print: false, quit: false }, wsh: { ActiveXObject: true, Enumerator: true, GetObject: true, ScriptEngine: true, ScriptEngineBuildVersion: true, ScriptEngineMajorVersion: true, ScriptEngineMinorVersion: true, VBArray: true, WScript: true, WSH: true, XDomainRequest: true }, jquery: { $: false, jQuery: false }, yui: { YAHOO: false, YAHOO_config: false, YUI: false, YUI_config: false }, shelljs: { cat: false, cd: false, chmod: false, config: false, cp: false, dirs: false, echo: false, env: false, error: false, exec: false, exit: false, find: false, grep: false, ln: false, ls: false, mkdir: false, mv: false, popd: false, pushd: false, pwd: false, rm: false, sed: false, set: false, target: false, tempdir: false, test: false, touch: false, which: false }, prototypejs: { $: false, $$: false, $A: false, $break: false, $continue: false, $F: false, $H: false, $R: false, $w: false, Abstract: false, Ajax: false, Autocompleter: false, Builder: false, Class: false, Control: false, Draggable: false, Draggables: false, Droppables: false, Effect: false, Element: false, Enumerable: false, Event: false, Field: false, Form: false, Hash: false, Insertion: false, ObjectRange: false, PeriodicalExecuter: false, Position: false, Prototype: false, Scriptaculous: false, Selector: false, Sortable: false, SortableObserver: false, Sound: false, Template: false, Toggle: false, Try: false }, meteor: { _: false, $: false, Accounts: false, AccountsClient: false, AccountsCommon: false, AccountsServer: false, App: false, Assets: false, Blaze: false, check: false, Cordova: false, DDP: false, DDPRateLimiter: false, DDPServer: false, Deps: false, EJSON: false, Email: false, HTTP: false, Log: false, Match: false, Meteor: false, Mongo: false, MongoInternals: false, Npm: false, Package: false, Plugin: false, process: false, Random: false, ReactiveDict: false, ReactiveVar: false, Router: false, ServiceConfiguration: false, Session: false, share: false, Spacebars: false, Template: false, Tinytest: false, Tracker: false, UI: false, Utils: false, WebApp: false, WebAppInternals: false }, mongo: { _isWindows: false, _rand: false, BulkWriteResult: false, cat: false, cd: false, connect: false, db: false, getHostName: false, getMemInfo: false, hostname: false, ISODate: false, listFiles: false, load: false, ls: false, md5sumFile: false, mkdir: false, Mongo: false, NumberInt: false, NumberLong: false, ObjectId: false, PlanCache: false, print: false, printjson: false, pwd: false, quit: false, removeFile: false, rs: false, sh: false, UUID: false, version: false, WriteResult: false }, applescript: { $: false, Application: false, Automation: false, console: false, delay: false, Library: false, ObjC: false, ObjectSpecifier: false, Path: false, Progress: false, Ref: false }, serviceworker: { addEventListener: false, applicationCache: false, atob: false, Blob: false, BroadcastChannel: false, btoa: false, Cache: false, caches: false, CacheStorage: false, clearInterval: false, clearTimeout: false, Client: false, clients: false, Clients: false, close: true, console: false, ExtendableEvent: false, ExtendableMessageEvent: false, fetch: false, FetchEvent: false, FileReaderSync: false, FormData: false, Headers: false, IDBCursor: false, IDBCursorWithValue: false, IDBDatabase: false, IDBFactory: false, IDBIndex: false, IDBKeyRange: false, IDBObjectStore: false, IDBOpenDBRequest: false, IDBRequest: false, IDBTransaction: false, IDBVersionChangeEvent: false, ImageData: false, importScripts: false, indexedDB: false, location: false, MessageChannel: false, MessagePort: false, name: false, navigator: false, Notification: false, onclose: true, onconnect: true, onerror: true, onfetch: true, oninstall: true, onlanguagechange: true, onmessage: true, onmessageerror: true, onnotificationclick: true, onnotificationclose: true, onoffline: true, ononline: true, onpush: true, onpushsubscriptionchange: true, onrejectionhandled: true, onsync: true, onunhandledrejection: true, performance: false, Performance: false, PerformanceEntry: false, PerformanceMark: false, PerformanceMeasure: false, PerformanceNavigation: false, PerformanceResourceTiming: false, PerformanceTiming: false, postMessage: true, Promise: false, queueMicrotask: false, registration: false, removeEventListener: false, Request: false, Response: false, self: false, ServiceWorker: false, ServiceWorkerContainer: false, ServiceWorkerGlobalScope: false, ServiceWorkerMessageEvent: false, ServiceWorkerRegistration: false, setInterval: false, setTimeout: false, skipWaiting: false, TextDecoder: false, TextEncoder: false, URL: false, URLSearchParams: false, WebSocket: false, WindowClient: false, Worker: false, WorkerGlobalScope: false, XMLHttpRequest: false }, atomtest: { advanceClock: false, fakeClearInterval: false, fakeClearTimeout: false, fakeSetInterval: false, fakeSetTimeout: false, resetTimeouts: false, waitsForPromise: false }, embertest: { andThen: false, click: false, currentPath: false, currentRouteName: false, currentURL: false, fillIn: false, find: false, findAll: false, findWithAssert: false, keyEvent: false, pauseTest: false, resumeTest: false, triggerEvent: false, visit: false, wait: false }, protractor: { $: false, $$: false, browser: false, by: false, By: false, DartObject: false, element: false, protractor: false }, "shared-node-browser": { clearInterval: false, clearTimeout: false, console: false, setInterval: false, setTimeout: false, URL: false, URLSearchParams: false }, webextensions: { browser: false, chrome: false, opr: false }, greasemonkey: { cloneInto: false, createObjectIn: false, exportFunction: false, GM: false, GM_addStyle: false, GM_deleteValue: false, GM_getResourceText: false, GM_getResourceURL: false, GM_getValue: false, GM_info: false, GM_listValues: false, GM_log: false, GM_openInTab: false, GM_registerMenuCommand: false, GM_setClipboard: false, GM_setValue: false, GM_xmlhttpRequest: false, unsafeWindow: false }, devtools: { $: false, $_: false, $$: false, $0: false, $1: false, $2: false, $3: false, $4: false, $x: false, chrome: false, clear: false, copy: false, debug: false, dir: false, dirxml: false, getEventListeners: false, inspect: false, keys: false, monitor: false, monitorEvents: false, profile: false, profileEnd: false, queryObjects: false, table: false, undebug: false, unmonitor: false, unmonitorEvents: false, values: false } }, iB = new WeakMap();
      function oB(e2) {
        if (iB.has(e2))
          return (Ju || Qu)(iB.get(e2));
        try {
          return e2.addHelper("createSuper");
        } catch (e3) {
        }
        var t2 = e2.scope.generateUidIdentifier("createSuper");
        iB.set(e2, t2);
        var r2 = lB({ CREATE_SUPER: t2, GET_PROTOTYPE_OF: e2.addHelper("getPrototypeOf"), POSSIBLE_CONSTRUCTOR_RETURN: e2.addHelper("possibleConstructorReturn") });
        return e2.path.unshiftContainer("body", [r2]), e2.scope.registerDeclaration(e2.path.get("body.0")), Ju(t2);
      }
      var uB, lB = Eg.statement(nB || (nB = u([`
  function CREATE_SUPER(Derived) {
    function isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;

      // core-js@3
      if (Reflect.construct.sham) return false;

      // Proxy can't be polyfilled. Every browser implemented
      // proxies before or at the same time as Reflect.construct,
      // so if they support Proxy they also support Reflect.construct.
      if (typeof Proxy === "function") return true;

      // Since Reflect.construct can't be properly polyfilled, some
      // implementations (e.g. core-js@2) don't set the correct internal slots.
      // Those polyfills don't allow us to subclass built-ins, so we need to
      // use our fallback implementation.
      try {
        // If the internal slots aren't set, this throws an error similar to
        //   TypeError: this is not a Date object.
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));
        return true;
      } catch (e) {
        return false;
      }
    }

    return function () {
      var Super = GET_PROTOTYPE_OF(Derived), result;
      if (isNativeReflectConstruct()) {
        // NOTE: This doesn't work if this.__proto__.constructor has been modified.
        var NewTarget = GET_PROTOTYPE_OF(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);
    }
  }
`])));
      function cB(e2, t2, r2) {
        var n2 = Es(Ju(e2), [], t2);
        return yc(n2, r2), n2;
      }
      function pB(e2, t2, r2, n2, s2) {
        var a2 = { parent: void 0, scope: void 0, node: void 0, path: void 0, file: void 0, classId: void 0, classRef: void 0, superFnId: void 0, superName: void 0, superReturns: [], isDerived: false, extendsNative: false, construct: void 0, constructorBody: void 0, userConstructor: void 0, userConstructorPath: void 0, hasConstructor: false, staticPropBody: [], body: [], superThises: [], pushedConstructor: false, pushedInherits: false, protoAlias: null, isLoose: false, methods: { instance: { hasComputed: false, list: [], map: new Map() }, static: { hasComputed: false, list: [], map: new Map() } } }, i2 = function(e3) {
          Object.assign(a2, e3);
        }, o2 = vv.visitors.merge([FE, { ThisExpression: function(e3) {
          a2.superThises.push(e3);
        } }]);
        function l2() {
          if (function() {
            for (var e4, t4 = false, r4 = f(a2.path.get("body.body")); !(e4 = r4()).done && !(t4 = e4.value.equals("kind", "constructor")); )
              ;
            if (!t4) {
              var n3, s3;
              if (a2.isDerived) {
                var i3 = Eg.expression.ast(uB || (uB = u(["\n        (function () {\n          super(...arguments);\n        })\n      "])));
                n3 = i3.params, s3 = i3.body;
              } else
                n3 = [], s3 = os([]);
              a2.path.get("body").unshiftContainer("body", ha("constructor", Ds("constructor"), n3, s3));
            }
          }(), function() {
            for (var e4, t4 = f(a2.path.get("body.body")); !(e4 = t4()).done; ) {
              var r4 = e4.value, n3 = r4.node;
              if (r4.isClassProperty())
                throw r4.buildCodeFrameError("Missing class properties transform.");
              if (n3.decorators)
                throw r4.buildCodeFrameError("Method has decorators, put the decorator plugin before the classes one.");
              ge(n3) && function() {
                var e5 = n3.kind === "constructor";
                new BE({ methodPath: r4, objectRef: a2.classRef, superRef: a2.superName, constantSuper: s2.constantSuper, file: a2.file, refToPreserve: a2.classRef }).replace();
                var t5 = [];
                r4.traverse(vv.visitors.merge([FE, { ReturnStatement: function(e6) {
                  e6.getFunctionParent().isArrowFunctionExpression() || t5.push(e6);
                } }])), e5 ? h2(t5, n3, r4) : d2(n3, r4);
              }();
            }
          }(), function() {
            if (!a2.isDerived)
              return;
            var e4 = a2.userConstructorPath, t4 = e4.get("body");
            e4.traverse(o2);
            for (var r4, n3 = function() {
              var t5 = e4.scope.generateDeclaredUidIdentifier("this");
              return n3 = function() {
                return Ju(t5);
              }, t5;
            }, s3 = f(a2.superThises); !(r4 = s3()).done; ) {
              var i3 = r4.value, u2 = i3.node;
              i3.parentPath.isMemberExpression({ object: u2 }) ? i3.replaceWith(n3()) : i3.replaceWith(ls(a2.file.addHelper("assertThisInitialized"), [n3()]));
            }
            var l3 = new Set();
            e4.traverse(vv.visitors.merge([FE, { Super: function(e5) {
              var t5 = e5.node, r5 = e5.parentPath;
              r5.isCallExpression({ callee: t5 }) && l3.add(r5);
            } }]));
            for (var c3, d3, h3 = !!l3.size, m3 = f(l3); !(c3 = m3()).done; ) {
              var y2 = c3.value;
              p2(y2, a2.superName, n3, t4), h3 && y2.find(function(t5) {
                return t5 === e4 || (t5.isLoop() || t5.isConditional() || t5.isArrowFunctionExpression() ? (h3 = false, true) : void 0);
              });
            }
            d3 = a2.isLoose ? function(e5) {
              var t5 = ls(a2.file.addHelper("assertThisInitialized"), [n3()]);
              return e5 ? Is("||", e5, t5) : t5;
            } : function(e5) {
              return ls(a2.file.addHelper("possibleConstructorReturn"), [n3()].concat(e5 || []));
            };
            var g2 = t4.get("body");
            g2.length && g2.pop().isReturnStatement() || t4.pushContainer("body", Ls(h3 ? n3() : d3()));
            for (var v2, b2 = f(a2.superReturns); !(v2 = b2()).done; ) {
              var E2 = v2.value;
              E2.get("argument").replaceWith(d3(E2.node.argument));
            }
          }(), a2.userConstructor) {
            var e3 = a2.constructorBody, t3 = a2.userConstructor, r3 = a2.construct;
            e3.body = e3.body.concat(t3.body.body), yc(r3, t3), yc(e3, t3.body);
          }
          c2();
        }
        function c2() {
          m2();
          for (var e3 = a2.body, t3 = { instance: null, static: null }, r3 = 0, n3 = ["static", "instance"]; r3 < n3.length; r3++) {
            var s3 = n3[r3];
            a2.methods[s3].list.length && (t3[s3] = a2.methods[s3].list.map(function(e4) {
              for (var t4 = Rs([Bs(Ds("key"), e4.key)]), r4 = 0, n4 = ["get", "set", "value"]; r4 < n4.length; r4++) {
                var s4 = n4[r4];
                e4[s4] != null && t4.properties.push(Bs(Ds(s4), e4[s4]));
              }
              return t4;
            }));
          }
          if (t3.instance || t3.static) {
            for (var i3 = [Ju(a2.classRef), t3.instance ? ts(t3.instance) : Ts(), t3.static ? ts(t3.static) : Ts()], o3 = 0, u2 = 0; u2 < i3.length; u2++)
              B(i3[u2]) || (o3 = u2);
            i3 = i3.slice(0, o3 + 1), e3.push(ys(ls(a2.file.addHelper("createClass"), i3)));
          }
        }
        function p2(e3, t3, r3, n3) {
          var i3, o3 = e3.node;
          s2.superIsCallableConstructor ? (o3.arguments.unshift(Ws()), o3.arguments.length === 2 && be(o3.arguments[1]) && F(o3.arguments[1].argument, { name: "arguments" }) ? (o3.arguments[1] = o3.arguments[1].argument, o3.callee = Fs2(Ju(t3), Ds("apply"))) : o3.callee = Fs2(Ju(t3), Ds("call")), i3 = Is("||", o3, Ws())) : i3 = PE(Ju(a2.superFnId), Ws(), o3.arguments, false), e3.parentPath.isExpressionStatement() && e3.parentPath.container === n3.node.body && n3.node.body.length - 1 === e3.parentPath.key ? (a2.superThises.length && (i3 = rs("=", r3(), i3)), e3.parentPath.replaceWith(Ls(i3))) : e3.replaceWith(rs("=", r3(), i3));
        }
        function d2(e3, t3) {
          var r3 = t3 ? t3.scope : a2.scope;
          if (e3.kind !== "method" || !function(e4, t4) {
            if (s2.setClassMethods && !e4.decorators) {
              var r4 = a2.classRef;
              e4.static || (!function() {
                if (a2.protoAlias === null) {
                  i2({ protoAlias: a2.scope.generateUidIdentifier("proto") });
                  var e5 = Fs2(a2.classRef, Ds("prototype")), t5 = Ks("var", [zs(a2.protoAlias, e5)]);
                  a2.body.push(t5);
                }
              }(), r4 = a2.protoAlias);
              var n4 = Fs2(Ju(r4), e4.key, e4.computed || Pt(e4.key)), o4 = xs(null, e4.params, e4.body, e4.generator, e4.async);
              yc(o4, e4);
              var u3 = rc(e4, e4.key);
              R(u3) && (o4 = Cg({ node: o4, id: u3, scope: t4 }));
              var l4 = ys(rs("=", n4, o4));
              return al(l4, e4), a2.body.push(l4), true;
            }
            return false;
          }(e3, r3)) {
            var n3, o3, u2 = e3.static ? "static" : "instance", l3 = a2.methods[u2], c3 = e3.kind === "method" ? "value" : e3.kind, p3 = N(e3.key) || Se(e3.key) ? Cs(String(e3.key.value)) : rc(e3), d3 = nc(e3);
            if (R(p3) ? e3.kind === "method" && (d3 = Cg({ id: p3, node: e3, scope: r3 })) : l3.hasComputed = true, !l3.hasComputed && l3.map.has(p3.value))
              (n3 = l3.map.get(p3.value))[c3] = d3, c3 === "value" ? (n3.get = null, n3.set = null) : n3.value = null;
            else
              (o3 = { key: p3 })[c3] = d3, n3 = o3, l3.list.push(n3), l3.hasComputed || l3.map.set(p3.value, n3);
          }
        }
        function h2(e3, t3, r3) {
          i2({ userConstructorPath: r3, userConstructor: t3, hasConstructor: true, superReturns: e3 });
          var n3 = a2.construct;
          al(n3, t3), n3.params = t3.params, yc(n3.body, t3.body), n3.body.directives = t3.body.directives, function() {
            if (a2.pushedConstructor)
              return;
            a2.pushedConstructor = true, (a2.hasInstanceDescriptors || a2.hasStaticDescriptors) && c2();
            a2.body.push(a2.construct), m2();
          }();
        }
        function m2() {
          if (a2.isDerived && !a2.pushedInherits) {
            var t3 = e2.scope.generateUidIdentifier("super");
            i2({ pushedInherits: true, superFnId: t3 }), s2.superIsCallableConstructor || a2.body.unshift(Ks("var", [zs(t3, ls(oB(a2.file), [Ju(a2.classRef)]))])), a2.body.unshift(ys(ls(a2.file.addHelper(a2.isLoose ? "inheritsLoose" : "inherits"), [Ju(a2.classRef), Ju(a2.superName)])));
          }
        }
        return function(e3, t3, r3, n3) {
          i2({ parent: e3.parent, scope: e3.scope, node: e3.node, path: e3, file: t3, isLoose: n3 }), i2({ classId: a2.node.id, classRef: a2.node.id ? Ds(a2.node.id.name) : a2.scope.generateUidIdentifier("class"), superName: a2.node.superClass, isDerived: !!a2.node.superClass, constructorBody: os([]) }), i2({ extendsNative: a2.isDerived && r3.has(a2.superName.name) && !a2.scope.hasBinding(a2.superName.name, true) });
          var o3 = a2.classRef, u2 = a2.node, c3 = a2.constructorBody;
          i2({ construct: cB(o3, c3, u2) });
          var p3 = a2.body, d3 = function() {
            var e4 = a2.superName, t4 = [], r4 = [];
            if (a2.isDerived) {
              var n4 = Ju(e4);
              a2.extendsNative && ok(n4 = ls(a2.file.addHelper("wrapNativeSuper"), [n4]));
              var s3 = a2.scope.generateUidIdentifierBasedOnNode(e4);
              t4.push(s3), r4.push(n4), i2({ superName: Ju(s3) });
            }
            return { closureParams: t4, closureArgs: r4 };
          }(), h3 = d3.closureParams, m3 = d3.closureArgs;
          l2(), s2.noClassCalls || c3.body.unshift(ys(ls(a2.file.addHelper("classCallCheck"), [Ws(), Ju(a2.classRef)]))), p3 = p3.concat(a2.staticPropBody.map(function(e4) {
            return e4(Ju(a2.classRef));
          }));
          var y2 = e3.isInStrictMode(), g2 = a2.classId && p3.length === 1;
          if (g2 && !y2)
            for (var v2, b2 = f(a2.construct.params); !(v2 = b2()).done; ) {
              if (!F(v2.value)) {
                g2 = false;
                break;
              }
            }
          var E2 = g2 ? p3[0].body.directives : [];
          return y2 || E2.push(as(is("use strict"))), g2 ? nc(p3[0]) : (p3.push(Ls(Ju(a2.classRef))), ls(ea(h3, os(p3, E2)), m3));
        }(e2, t2, r2, n2);
      }
      var dB = function(e2) {
        return Object.keys(aB[e2]).filter(function(e3) {
          return /^[A-Z]/.test(e3);
        });
      }, fB = new Set([].concat(c(dB("builtin")), c(dB("browser")))), hB = jF(function(e2, t2) {
        var r2, n2, s2, a2;
        e2.assertVersion(7);
        var i2 = t2.loose, o2 = (r2 = e2.assumption("setClassMethods")) != null ? r2 : t2.loose, u2 = (n2 = e2.assumption("constantSuper")) != null ? n2 : t2.loose, l2 = (s2 = e2.assumption("superIsCallableConstructor")) != null ? s2 : t2.loose, c2 = (a2 = e2.assumption("noClassCalls")) != null ? a2 : t2.loose, p2 = Symbol();
        return { name: "transform-classes", visitor: { ExportDefaultDeclaration: function(e3) {
          e3.get("declaration").isClassDeclaration() && Qc(e3);
        }, ClassDeclaration: function(e3) {
          var t3 = e3.node, r3 = t3.id || e3.scope.generateUidIdentifier("class");
          e3.replaceWith(Ks("let", [zs(r3, nc(t3))]));
        }, ClassExpression: function(e3, t3) {
          var r3 = e3.node;
          if (!r3[p2]) {
            var n3 = Cg(e3);
            if (n3 && n3 !== r3)
              e3.replaceWith(n3);
            else if (r3[p2] = true, e3.replaceWith(pB(e3, t3.file, fB, i2, { setClassMethods: o2, constantSuper: u2, superIsCallableConstructor: l2, noClassCalls: c2 })), e3.isCallExpression()) {
              ok(e3);
              var s3 = e3.get("callee");
              s3.isArrowFunctionExpression() && s3.arrowFunctionToExpression();
            }
          }
        } } };
      }), mB = jF(function(e2, t2) {
        var r2;
        e2.assertVersion(7);
        var n2 = ((r2 = e2.assumption("setComputedProperties")) != null ? r2 : t2.loose) ? function(e3) {
          for (var t3, r3 = f(e3.computedProps); !(t3 = r3()).done; ) {
            var n3 = t3.value;
            n3.kind === "get" || n3.kind === "set" ? o2(e3, n3) : i2(Ju(e3.objId), n3, e3.body);
          }
        } : function(e3) {
          for (var t3, r3 = e3.objId, n3 = e3.body, s3 = e3.computedProps, i3 = e3.state, u2 = f(s3); !(t3 = u2()).done; ) {
            var l2 = t3.value, c2 = rc(l2);
            if (l2.kind === "get" || l2.kind === "set")
              o2(e3, l2);
            else {
              if (s3.length === 1)
                return ls(i3.addHelper("defineProperty"), [e3.initPropExpression, c2, a2(l2)]);
              n3.push(ys(ls(i3.addHelper("defineProperty"), [Ju(r3), c2, a2(l2)])));
            }
          }
        }, s2 = Eg("\n    MUTATOR_MAP_REF[KEY] = MUTATOR_MAP_REF[KEY] || {};\n    MUTATOR_MAP_REF[KEY].KIND = VALUE;\n  ");
        function a2(e3) {
          return H(e3) ? e3.value : W(e3) ? xs(null, e3.params, e3.body, e3.generator, e3.async) : void 0;
        }
        function i2(e3, t3, r3) {
          t3.kind === "get" && t3.kind === "set" ? o2(e3, t3) : r3.push(ys(rs("=", Fs2(Ju(e3), t3.key, t3.computed || Pt(t3.key)), a2(t3))));
        }
        function o2(e3, t3) {
          var r3 = e3.body, n3 = e3.getMutatorId, i3 = e3.scope, o3 = !t3.computed && F(t3.key) ? Cs(t3.key.name) : t3.key, u2 = i3.maybeGenerateMemoised(o3);
          u2 && (r3.push(ys(rs("=", u2, o3))), o3 = u2), r3.push.apply(r3, c(s2({ MUTATOR_MAP_REF: n3(), KEY: Ju(o3), VALUE: a2(t3), KIND: Ds(t3.kind) })));
        }
        return { name: "transform-computed-properties", visitor: { ObjectExpression: { exit: function(e3, t3) {
          for (var r3 = e3.node, s3 = e3.parent, a3 = e3.scope, i3 = false, o3 = 0, u2 = r3.properties; o3 < u2.length; o3++) {
            if (i3 = u2[o3].computed === true)
              break;
          }
          if (i3) {
            for (var l2, c2 = [], p2 = [], d2 = false, h2 = f(r3.properties); !(l2 = h2()).done; ) {
              var m2 = l2.value;
              m2.computed && (d2 = true), d2 ? p2.push(m2) : c2.push(m2);
            }
            var y2, g2 = a3.generateUidIdentifierBasedOnNode(s3), v2 = Rs(c2), b2 = [];
            b2.push(Ks("var", [zs(g2, v2)]));
            var E2 = n2({ scope: a3, objId: g2, body: b2, computedProps: p2, initPropExpression: v2, getMutatorId: function() {
              return y2 || (y2 = a3.generateUidIdentifier("mutatorMap"), b2.push(Ks("var", [zs(y2, Rs([]))]))), Ju(y2);
            }, state: t3 });
            y2 && b2.push(ys(ls(t3.addHelper("defineEnumerableProperties"), [Ju(g2), Ju(y2)]))), E2 ? e3.replaceWith(E2) : (b2.push(ys(Ju(g2))), e3.replaceWithMultiple(b2));
          }
        } } } };
      }), yB = jF(function(e2, t2) {
        var r2, n2, s2;
        e2.assertVersion(7);
        var a2 = t2.useBuiltIns, i2 = a2 !== void 0 && a2, o2 = (r2 = e2.assumption("iterableIsArray")) != null ? r2 : t2.loose, u2 = (n2 = t2.allowArrayLike) != null ? n2 : e2.assumption("arrayLikeIsIterable"), l2 = (s2 = e2.assumption("objectRestNoSymbols")) != null ? s2 : t2.loose;
        function p2(e3) {
          for (var t3 = 0, r3 = e3.declarations; t3 < r3.length; t3++) {
            if (Ot(r3[t3].id))
              return true;
          }
          return false;
        }
        function d2(e3) {
          for (var t3 = 0, r3 = e3.elements; t3 < r3.length; t3++) {
            if (X(r3[t3]))
              return true;
          }
          return false;
        }
        var h2 = {}, y2 = function(e3, t3, r3) {
          if (t3.length && F(e3) && Ac(e3, t3[t3.length - 1]) && r3.bindings[e3.name])
            throw r3.deopt = true, h2;
        }, g2 = function() {
          function e3(e4) {
            this.blockHoist = e4.blockHoist, this.operator = e4.operator, this.arrays = {}, this.nodes = e4.nodes || [], this.scope = e4.scope, this.kind = e4.kind, this.iterableIsArray = e4.iterableIsArray, this.arrayLikeIsIterable = e4.arrayLikeIsIterable, this.addHelper = e4.addHelper;
          }
          var t3 = e3.prototype;
          return t3.buildVariableAssignment = function(e4, t4) {
            var r3, n3 = this.operator;
            return M(e4) && (n3 = "="), (r3 = n3 ? ys(rs(n3, e4, Ju(t4) || this.scope.buildUndefinedNode())) : Ks(this.kind, [zs(e4, Ju(t4))]))._blockHoist = this.blockHoist, r3;
          }, t3.buildVariableDeclaration = function(e4, t4) {
            var r3 = Ks("var", [zs(Ju(e4), Ju(t4))]);
            return r3._blockHoist = this.blockHoist, r3;
          }, t3.push = function(e4, t4) {
            var r3 = Ju(t4);
            ve(e4) ? this.pushObjectPattern(e4, r3) : ne(e4) ? this.pushArrayPattern(e4, r3) : re(e4) ? this.pushAssignmentPattern(e4, r3) : this.nodes.push(this.buildVariableAssignment(e4, r3));
          }, t3.toArray = function(e4, t4) {
            return this.iterableIsArray || F(e4) && this.arrays[e4.name] ? e4 : this.scope.toArray(e4, t4, this.arrayLikeIsIterable);
          }, t3.pushAssignmentPattern = function(e4, t4) {
            var r3 = e4.left, n3 = e4.right, s3 = this.scope.generateUidIdentifierBasedOnNode(t4);
            this.nodes.push(this.buildVariableDeclaration(s3, t4));
            var a3, i3, o3 = ps(ns("===", Ju(s3), this.scope.buildUndefinedNode()), n3, Ju(s3));
            Ot(r3) ? (this.kind === "const" || this.kind === "let" ? (a3 = this.scope.generateUidIdentifier(s3.name), i3 = this.buildVariableDeclaration(a3, o3)) : (a3 = s3, i3 = ys(rs("=", Ju(s3), o3))), this.nodes.push(i3), this.push(r3, a3)) : this.nodes.push(this.buildVariableAssignment(r3, o3));
          }, t3.pushObjectRest = function(e4, t4, r3, n3) {
            for (var s3, a3 = [], o3 = true, u3 = false, c2 = 0; c2 < e4.properties.length; c2++) {
              var p3 = e4.properties[c2];
              if (c2 >= n3)
                break;
              if (!X(p3)) {
                var d3 = p3.key;
                F(d3) && !p3.computed ? a3.push(Cs(d3.name)) : De(d3) ? (a3.push(Ju(d3)), u3 = true) : Pt(d3) ? a3.push(Cs(String(d3.value))) : (a3.push(Ju(d3)), o3 = false);
              }
            }
            if (a3.length === 0)
              s3 = ls(function(e5) {
                return i2 ? Fs2(Ds("Object"), Ds("assign")) : e5.addHelper("extends");
              }(this), [Rs([]), Ju(t4)]);
            else {
              var f2 = ts(a3);
              if (o3) {
                if (!u3 && !G(this.scope.block)) {
                  var h3 = this.scope.path.findParent(function(e5) {
                    return e5.isProgram();
                  }), m2 = this.scope.generateUidIdentifier("excluded");
                  h3.scope.push({ id: m2, init: f2, kind: "const" }), f2 = Ju(m2);
                }
              } else
                f2 = ls(Fs2(f2, Ds("map")), [this.addHelper("toPropertyKey")]);
              s3 = ls(this.addHelper("objectWithoutProperties" + (l2 ? "Loose" : "")), [Ju(t4), f2]);
            }
            this.nodes.push(this.buildVariableAssignment(r3.argument, s3));
          }, t3.pushObjectProperty = function(e4, t4) {
            Pt(e4.key) && (e4.computed = true);
            var r3 = e4.value, n3 = Fs2(Ju(t4), e4.key, e4.computed);
            Ot(r3) ? this.push(r3, n3) : this.nodes.push(this.buildVariableAssignment(r3, n3));
          }, t3.pushObjectPattern = function(e4, t4) {
            if (e4.properties.length || this.nodes.push(ys(ls(this.addHelper("objectDestructuringEmpty"), [t4]))), e4.properties.length > 1 && !this.scope.isStatic(t4)) {
              var r3 = this.scope.generateUidIdentifierBasedOnNode(t4);
              this.nodes.push(this.buildVariableDeclaration(r3, t4)), t4 = r3;
            }
            if (function(e5) {
              for (var t5 = 0, r4 = e5.properties; t5 < r4.length; t5++)
                if (X(r4[t5]))
                  return true;
              return false;
            }(e4))
              for (var n3, s3 = 0; s3 < e4.properties.length; s3++) {
                var a3 = e4.properties[s3];
                if (X(a3))
                  break;
                var i3 = a3.key;
                if (a3.computed && !this.scope.isPure(i3)) {
                  var o3 = this.scope.generateUidIdentifierBasedOnNode(i3);
                  this.nodes.push(this.buildVariableDeclaration(o3, i3)), n3 || (n3 = e4 = Object.assign({}, e4, { properties: e4.properties.slice() })), n3.properties[s3] = Object.assign({}, n3.properties[s3], { key: o3 });
                }
              }
            for (var u3 = 0; u3 < e4.properties.length; u3++) {
              var l3 = e4.properties[u3];
              X(l3) ? this.pushObjectRest(e4, t4, l3, u3) : this.pushObjectProperty(l3, t4);
            }
          }, t3.canUnpackArrayPattern = function(e4, t4) {
            if (!m(t4))
              return false;
            if (!(e4.elements.length > t4.elements.length)) {
              if (e4.elements.length < t4.elements.length && !d2(e4))
                return false;
              for (var r3 = 0, n3 = e4.elements; r3 < n3.length; r3++) {
                var s3 = n3[r3];
                if (!s3)
                  return false;
                if (M(s3))
                  return false;
              }
              for (var a3 = 0, i3 = t4.elements; a3 < i3.length; a3++) {
                var o3 = i3[a3];
                if (be(o3))
                  return false;
                if (E(o3))
                  return false;
                if (M(o3))
                  return false;
              }
              var u3 = { deopt: false, bindings: cc(e4) };
              try {
                vc(t4, y2, u3);
              } catch (e5) {
                if (e5 !== h2)
                  throw e5;
              }
              return !u3.deopt;
            }
          }, t3.pushUnpackedArrayPattern = function(e4, t4) {
            for (var r3 = 0; r3 < e4.elements.length; r3++) {
              var n3 = e4.elements[r3];
              X(n3) ? this.push(n3.argument, ts(t4.elements.slice(r3))) : this.push(n3, t4.elements[r3]);
            }
          }, t3.pushArrayPattern = function(e4, t4) {
            if (e4.elements) {
              if (this.canUnpackArrayPattern(e4, t4))
                return this.pushUnpackedArrayPattern(e4, t4);
              var r3 = !d2(e4) && e4.elements.length, n3 = this.toArray(t4, r3);
              F(n3) ? t4 = n3 : (t4 = this.scope.generateUidIdentifierBasedOnNode(t4), this.arrays[t4.name] = true, this.nodes.push(this.buildVariableDeclaration(t4, n3)));
              for (var s3 = 0; s3 < e4.elements.length; s3++) {
                var a3 = e4.elements[s3];
                if (a3) {
                  var i3 = void 0;
                  X(a3) ? (i3 = ls(Fs2(i3 = this.toArray(t4), Ds("slice")), [Ss(s3)]), a3 = a3.argument) : i3 = Fs2(t4, Ss(s3), true), this.push(a3, i3);
                }
              }
            }
          }, t3.init = function(e4, t4) {
            if (!m(t4) && !M(t4)) {
              var r3 = this.scope.maybeGenerateMemoised(t4, true);
              r3 && (this.nodes.push(this.buildVariableDeclaration(r3, Ju(t4))), t4 = r3);
            }
            return this.push(e4, t4), this.nodes;
          }, e3;
        }();
        return { name: "transform-destructuring", visitor: { ExportNamedDeclaration: function(e3) {
          var t3 = e3.get("declaration");
          if (t3.isVariableDeclaration() && p2(t3.node)) {
            for (var r3 = [], n3 = 0, s3 = Object.keys(e3.getOuterBindingIdentifiers(e3)); n3 < s3.length; n3++) {
              var a3 = s3[n3];
              r3.push(oa(Ds(a3), Ds(a3)));
            }
            e3.replaceWith(t3.node), e3.insertAfter(ia(null, r3));
          }
        }, ForXStatement: function(e3) {
          var t3 = this, r3 = e3.node, n3 = e3.scope, s3 = r3.left;
          if (Ot(s3)) {
            var a3 = n3.generateUidIdentifier("ref");
            return r3.left = Ks("var", [zs(a3)]), e3.ensureBlock(), r3.body.body.length === 0 && e3.isCompletionRecord() && r3.body.body.unshift(ys(n3.buildUndefinedNode())), void r3.body.body.unshift(ys(rs("=", s3, a3)));
          }
          if (Z(s3)) {
            var i3 = s3.declarations[0].id;
            if (Ot(i3)) {
              var l3 = n3.generateUidIdentifier("ref");
              r3.left = Ks(s3.kind, [zs(l3, null)]);
              var c2 = [];
              new g2({ kind: s3.kind, scope: n3, nodes: c2, iterableIsArray: o2, arrayLikeIsIterable: u2, addHelper: function(e4) {
                return t3.addHelper(e4);
              } }).init(i3, l3), e3.ensureBlock();
              var p3 = r3.body;
              p3.body = c2.concat(p3.body);
            }
          }
        }, CatchClause: function(e3) {
          var t3 = this, r3 = e3.node, n3 = e3.scope, s3 = r3.param;
          if (Ot(s3)) {
            var a3 = n3.generateUidIdentifier("ref");
            r3.param = a3;
            var i3 = [];
            new g2({ kind: "let", scope: n3, nodes: i3, iterableIsArray: o2, arrayLikeIsIterable: u2, addHelper: function(e4) {
              return t3.addHelper(e4);
            } }).init(s3, a3), r3.body.body = i3.concat(r3.body.body);
          }
        }, AssignmentExpression: function(e3) {
          var t3 = this, r3 = e3.node, n3 = e3.scope;
          if (Ot(r3.left)) {
            var s3, a3 = [], i3 = new g2({ operator: r3.operator, scope: n3, nodes: a3, iterableIsArray: o2, arrayLikeIsIterable: u2, addHelper: function(e4) {
              return t3.addHelper(e4);
            } });
            !e3.isCompletionRecord() && e3.parentPath.isExpressionStatement() || (s3 = n3.generateUidIdentifierBasedOnNode(r3.right, "ref"), a3.push(Ks("var", [zs(s3, r3.right)])), m(r3.right) && (i3.arrays[s3.name] = true)), i3.init(r3.left, s3 || r3.right), s3 && (e3.parentPath.isArrowFunctionExpression() ? (e3.replaceWith(os([])), a3.push(Ls(Ju(s3)))) : a3.push(ys(Ju(s3)))), e3.replaceWithMultiple(a3), e3.scope.crawl();
          }
        }, VariableDeclaration: function(e3) {
          var t3 = this, r3 = e3.node, n3 = e3.scope, s3 = e3.parent;
          if (!Ct(s3) && s3 && e3.container && p2(r3)) {
            for (var a3, i3 = r3.kind, l3 = r3.loc, d3 = [], h3 = 0; h3 < r3.declarations.length; h3++) {
              var m2 = (a3 = r3.declarations[h3]).init, y3 = a3.id, v2 = new g2({ blockHoist: r3._blockHoist, nodes: d3, scope: n3, kind: r3.kind, iterableIsArray: o2, arrayLikeIsIterable: u2, addHelper: function(e4) {
                return t3.addHelper(e4);
              } });
              Ot(y3) ? (v2.init(y3, m2), +h3 != r3.declarations.length - 1 && yc(d3[d3.length - 1], a3)) : d3.push(yc(v2.buildVariableAssignment(a3.id, Ju(a3.init)), a3));
            }
            for (var b2 = null, E2 = [], x2 = 0, D2 = d3; x2 < D2.length; x2++) {
              var A2, w2 = D2[x2];
              if (b2 !== null && Z(w2))
                (A2 = b2.declarations).push.apply(A2, c(w2.declarations));
              else
                w2.kind = i3, w2.loc || (w2.loc = l3), E2.push(w2), b2 = Z(w2) ? w2 : null;
            }
            for (var C2 = 0, S2 = E2; C2 < S2.length; C2++) {
              var T2 = S2[C2];
              if (T2.declarations)
                for (var j2, P2 = f(T2.declarations); !(j2 = P2()).done; ) {
                  var I2 = j2.value.id.name;
                  n3.bindings[I2] && (n3.bindings[I2].kind = T2.kind);
                }
            }
            E2.length === 1 ? e3.replaceWith(E2[0]) : e3.replaceWithMultiple(E2);
          }
        } } };
      }), gB = jF(function(e2) {
        return e2.assertVersion(7), RN({ name: "transform-dotall-regex", feature: "dotAllFlag" });
      });
      var vB = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-duplicate-keys", visitor: { ObjectExpression: function(e3) {
          for (var t2, r2, n2 = e3.node.properties.filter(function(e4) {
            return !be(e4) && !e4.computed;
          }), s2 = Object.create(null), a2 = Object.create(null), i2 = Object.create(null), o2 = f(n2); !(t2 = o2()).done; ) {
            var u2 = t2.value, l2 = F(r2 = u2.key) ? r2.name : r2.value.toString(), c2 = false;
            switch (u2.kind) {
              case "get":
                (s2[l2] || a2[l2]) && (c2 = true), a2[l2] = true;
                break;
              case "set":
                (s2[l2] || i2[l2]) && (c2 = true), i2[l2] = true;
                break;
              default:
                (s2[l2] || a2[l2] || i2[l2]) && (c2 = true), s2[l2] = true;
            }
            c2 && (u2.computed = true, u2.key = Cs(l2));
          }
        } } };
      });
      function bB(e2, t2, r2, n2, s2) {
        var a2, i2, o2;
        if (a2 = F(e2) && s2 ? e2 : function(e3, t3, r3) {
          var n3;
          if (F(e3)) {
            if (r3.hasBinding(e3.name))
              return e3;
            n3 = e3;
          } else {
            if (!M(e3))
              throw new Error("We can't explode this node type " + e3.type);
            if (Ee(n3 = e3.object) || F(n3) && r3.hasBinding(n3.name))
              return n3;
          }
          var s3 = r3.generateUidIdentifierBasedOnNode(n3);
          return r3.push({ id: s3 }), t3.push(rs("=", Ju(s3), Ju(n3))), s3;
        }(e2, t2, n2), F(e2))
          i2 = Ju(e2), o2 = a2;
        else {
          var u2 = function(e3, t3, r3) {
            var n3 = e3.property;
            if (ot(n3))
              throw new Error("We can't generate property ref for private name, please install `@babel/plugin-proposal-class-properties`");
            var s3 = rc(e3, n3);
            if (Pt(s3) && Tt(s3))
              return s3;
            var a3 = r3.generateUidIdentifierBasedOnNode(n3);
            return r3.push({ id: a3 }), t3.push(rs("=", Ju(a3), Ju(n3))), a3;
          }(e2, t2, n2), l2 = e2.computed || Pt(u2);
          o2 = Fs2(Ju(a2), Ju(u2), l2), i2 = Fs2(Ju(a2), Ju(u2), l2);
        }
        return { uid: o2, ref: i2 };
      }
      function EB(e2) {
        var t2 = e2.build, r2 = e2.operator;
        return { AssignmentExpression: function(e3) {
          var n2 = e3.node, s2 = e3.scope;
          if (n2.operator === r2 + "=") {
            var a2 = [], i2 = bB(n2.left, a2, 0, s2);
            a2.push(rs("=", i2.ref, t2(i2.uid, n2.right))), e3.replaceWith(Ms(a2));
          }
        }, BinaryExpression: function(e3) {
          var n2 = e3.node;
          n2.operator === r2 && e3.replaceWith(t2(n2.left, n2.right));
        } };
      }
      var xB = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-exponentiation-operator", visitor: EB({ operator: "**", build: function(e3, t2) {
          return ls(Fs2(Ds("Math"), Ds("pow")), [e3, t2]);
        } }) };
      }), DB = jF(function(e2) {
        function t2(e3) {
          return typeof e3 == "string" ? { type: "CommentBlock", value: e3 } : e3;
        }
        function r2(e3) {
          var r3, n3 = e3.ofPath, a3 = e3.toPath, i2 = e3.where, o2 = i2 === void 0 ? "trailing" : i2, u2 = e3.optional, l2 = u2 !== void 0 && u2, c2 = e3.comments, p2 = c2 === void 0 ? s2(n3, l2) : c2, d2 = e3.keepType, f2 = d2 !== void 0 && d2;
          if ((r3 = a3) != null && r3.node || (a3 = n3.getPrevSibling(), o2 = "trailing"), a3.node || (a3 = n3.getNextSibling(), o2 = "leading"), a3.node || (a3 = n3.parentPath, o2 = "inner"), Array.isArray(p2) || (p2 = [p2]), p2 = p2.map(t2), !f2 && n3 != null && n3.node) {
            var h2 = n3.node, m2 = n3.parentPath, y2 = n3.getPrevSibling(), g2 = n3.getNextSibling(), v2 = !(y2.node || g2.node), b2 = h2.leadingComments, E2 = h2.trailingComments;
            v2 && b2 && m2.addComments("inner", b2), a3.addComments(o2, p2), n3.remove(), v2 && E2 && m2.addComments("inner", E2);
          } else
            a3.addComments(o2, p2);
        }
        function n2(e3) {
          r2({ ofPath: e3, comments: s2(e3, e3.parent.optional) });
        }
        function s2(e3, t3) {
          var r3 = e3.getSource().replace(/\*-\//g, "*-ESCAPED/").replace(/\*\//g, "*-/");
          return t3 && (r3 = "?" + r3), r3[0] !== ":" && (r3 = ":: " + r3), r3;
        }
        function a2(e3) {
          return e3 === "type" || e3 === "typeof";
        }
        return e2.assertVersion(7), { name: "transform-flow-comments", inherits: VF, visitor: { TypeCastExpression: function(e3) {
          var t3 = e3.node;
          r2({ ofPath: e3.get("typeAnnotation"), toPath: e3.get("expression"), keepType: true }), e3.replaceWith(Us(t3.expression));
        }, Identifier: function(e3) {
          if (!e3.parentPath.isFlow()) {
            var t3 = e3.node;
            t3.typeAnnotation ? (r2({ ofPath: e3.get("typeAnnotation"), toPath: e3, optional: t3.optional || t3.typeAnnotation.optional }), t3.optional && (t3.optional = false)) : t3.optional && (r2({ toPath: e3, comments: ":: ?" }), t3.optional = false);
          }
        }, AssignmentPattern: { exit: function(e3) {
          var t3 = e3.node.left;
          t3.optional && (t3.optional = false);
        } }, Function: function(e3) {
          if (!e3.isDeclareFunction()) {
            var t3 = e3.node;
            t3.typeParameters && r2({ ofPath: e3.get("typeParameters"), toPath: e3.get("id"), optional: t3.typeParameters.optional }), t3.returnType && r2({ ofPath: e3.get("returnType"), toPath: e3.get("body"), where: "leading", optional: t3.returnType.typeAnnotation.optional });
          }
        }, ClassProperty: function(e3) {
          var t3 = e3.node;
          t3.value ? t3.typeAnnotation && r2({ ofPath: e3.get("typeAnnotation"), toPath: e3.get("key"), optional: t3.typeAnnotation.optional }) : n2(e3);
        }, ExportNamedDeclaration: function(e3) {
          var t3 = e3.node;
          (t3.exportKind === "type" || Lt(t3.declaration)) && n2(e3);
        }, ImportDeclaration: function(e3) {
          var t3 = e3.node;
          if (a2(t3.importKind))
            n2(e3);
          else {
            var s3 = t3.specifiers.filter(function(e4) {
              return a2(e4.importKind);
            }), i2 = t3.specifiers.filter(function(e4) {
              return !a2(e4.importKind);
            });
            if (t3.specifiers = i2, s3.length > 0) {
              var o2 = Ju(t3);
              o2.specifiers = s3;
              var u2 = ":: " + Bf(o2).code;
              i2.length > 0 ? r2({ toPath: e3, comments: u2 }) : r2({ ofPath: e3, comments: u2 });
            }
          }
        }, ObjectPattern: function(e3) {
          var t3 = e3.node;
          t3.typeAnnotation && r2({ ofPath: e3.get("typeAnnotation"), toPath: e3, optional: t3.optional || t3.typeAnnotation.optional });
        }, Flow: function(e3) {
          n2(e3);
        }, Class: function(e3) {
          var t3 = e3.node, n3 = [];
          if (t3.typeParameters) {
            var a3 = e3.get("typeParameters");
            n3.push(s2(a3, t3.typeParameters.optional));
            var i2, o2 = t3.typeParameters.trailingComments;
            if (o2)
              (i2 = n3).push.apply(i2, c(o2));
            a3.remove();
          }
          if (t3.superClass && (n3.length > 0 && (r2({ toPath: e3.get("id"), comments: n3 }), n3 = []), t3.superTypeParameters)) {
            var u2 = e3.get("superTypeParameters");
            n3.push(s2(u2, u2.node.optional)), u2.remove();
          }
          if (t3.implements) {
            var l2 = "implements " + e3.get("implements").map(function(e4) {
              return s2(e4).replace(/^:: /, "");
            }).join(", ");
            delete t3.implements, n3.length === 1 ? n3[0] += " " + l2 : n3.push(":: " + l2);
          }
          n3.length > 0 && r2({ toPath: e3.get("body"), where: "leading", comments: n3 });
        } } };
      }), AB = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = /(@flow(\s+(strict(-local)?|weak))?|@noflow)/, n2 = false, s2 = t2.requireDirective, a2 = s2 !== void 0 && s2, i2 = t2.allowDeclareFields, o2 = i2 !== void 0 && i2;
        return { name: "transform-flow-strip-types", inherits: VF, visitor: { Program: function(e3, t3) {
          var s3 = t3.file.ast.comments;
          n2 = false;
          var i3 = false;
          if (s3)
            for (var o3 = 0, u2 = s3; o3 < u2.length; o3++) {
              var l2 = u2[o3];
              r2.test(l2.value) && (i3 = true, l2.value = l2.value.replace(r2, ""), l2.value.replace(/\*/g, "").trim() || (l2.ignore = true));
            }
          !i3 && a2 && (n2 = true);
        }, ImportDeclaration: function(e3) {
          if (!n2 && e3.node.specifiers.length) {
            var t3 = 0;
            e3.node.specifiers.forEach(function(e4) {
              var r3 = e4.importKind;
              r3 !== "type" && r3 !== "typeof" || t3++;
            }), t3 === e3.node.specifiers.length && e3.remove();
          }
        }, Flow: function(e3) {
          if (n2)
            throw e3.buildCodeFrameError("A @flow directive is required when using Flow annotations with the `requireDirective` option.");
          e3.remove();
        }, ClassPrivateProperty: function(e3) {
          n2 || (e3.node.typeAnnotation = null);
        }, Class: function(e3) {
          n2 || (e3.node.implements = null, e3.get("body.body").forEach(function(e4) {
            if (e4.isClassProperty()) {
              var t3 = e4.node;
              if (!o2 && t3.declare)
                throw e4.buildCodeFrameError("The 'declare' modifier is only allowed when the 'allowDeclareFields' option of @babel/plugin-transform-flow-strip-types or @babel/preset-flow is enabled.");
              if (t3.declare)
                e4.remove();
              else {
                if (!o2 && !t3.value && !t3.decorators)
                  return void e4.remove();
                t3.variance = null, t3.typeAnnotation = null;
              }
            }
          }));
        }, AssignmentPattern: function(e3) {
          var t3 = e3.node;
          n2 || (t3.left.optional = false);
        }, Function: function(e3) {
          var t3 = e3.node;
          if (!n2) {
            t3.params.length > 0 && t3.params[0].type === "Identifier" && t3.params[0].name === "this" && t3.params.shift();
            for (var r3 = 0; r3 < t3.params.length; r3++) {
              var s3 = t3.params[r3];
              s3.optional = false, s3.type === "AssignmentPattern" && (s3.left.optional = false);
            }
            t3.predicate = null;
          }
        }, TypeCastExpression: function(e3) {
          if (!n2) {
            var t3 = e3.node;
            do {
              t3 = t3.expression;
            } while (Ve(t3));
            e3.replaceWith(t3);
          }
        }, CallExpression: function(e3) {
          var t3 = e3.node;
          n2 || (t3.typeArguments = null);
        }, OptionalCallExpression: function(e3) {
          var t3 = e3.node;
          n2 || (t3.typeArguments = null);
        }, NewExpression: function(e3) {
          var t3 = e3.node;
          n2 || (t3.typeArguments = null);
        } } };
      });
      var wB, CB, SB, TB = Eg("\n  for (var LOOP_OBJECT = OBJECT,\n          IS_ARRAY = Array.isArray(LOOP_OBJECT),\n          INDEX = 0,\n          LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n    INTERMEDIATE;\n    if (IS_ARRAY) {\n      if (INDEX >= LOOP_OBJECT.length) break;\n      ID = LOOP_OBJECT[INDEX++];\n    } else {\n      INDEX = LOOP_OBJECT.next();\n      if (INDEX.done) break;\n      ID = INDEX.value;\n    }\n  }\n"), jB = Eg("\n  var ITERATOR_COMPLETION = true;\n  var ITERATOR_HAD_ERROR_KEY = false;\n  var ITERATOR_ERROR_KEY = undefined;\n  try {\n    for (\n      var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY;\n      !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done);\n      ITERATOR_COMPLETION = true\n    ) {}\n  } catch (err) {\n    ITERATOR_HAD_ERROR_KEY = true;\n    ITERATOR_ERROR_KEY = err;\n  } finally {\n    try {\n      if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n        ITERATOR_KEY.return();\n      }\n    } finally {\n      if (ITERATOR_HAD_ERROR_KEY) {\n        throw ITERATOR_ERROR_KEY;\n      }\n    }\n  }\n");
      function PB(e2, t2) {
        var r2, n2, s2, a2 = e2.node, i2 = e2.scope, o2 = e2.parent, u2 = a2.left;
        if (F(u2) || Ot(u2) || M(u2))
          n2 = u2, s2 = null;
        else {
          if (!Z(u2))
            throw t2.buildCodeFrameError(u2, "Unknown node type " + u2.type + " in ForStatement");
          n2 = i2.generateUidIdentifier("ref"), r2 = Ks(u2.kind, [zs(u2.declarations[0].id, Ds(n2.name))]), s2 = Ks("var", [zs(Ds(n2.name))]);
        }
        var l2, c2 = i2.generateUidIdentifier("iterator"), p2 = i2.generateUidIdentifier("isArray"), d2 = TB({ LOOP_OBJECT: c2, IS_ARRAY: p2, OBJECT: a2.right, INDEX: i2.generateUidIdentifier("i"), ID: n2, INTERMEDIATE: s2 }), f2 = O(o2);
        return f2 && (l2 = ws(o2.label, d2)), { replaceParent: f2, declar: r2, node: l2 || d2, loop: d2 };
      }
      function IB(e2, t2) {
        var r2, n2 = e2.node, s2 = e2.scope, a2 = e2.parent, i2 = n2.left, o2 = s2.generateUid("step"), u2 = Fs2(Ds(o2), Ds("value"));
        if (F(i2) || Ot(i2) || M(i2))
          r2 = ys(rs("=", i2, u2));
        else {
          if (!Z(i2))
            throw t2.buildCodeFrameError(i2, "Unknown node type " + i2.type + " in ForStatement");
          r2 = Ks(i2.kind, [zs(i2.declarations[0].id, u2)]);
        }
        var l2 = jB({ ITERATOR_HAD_ERROR_KEY: s2.generateUidIdentifier("didIteratorError"), ITERATOR_COMPLETION: s2.generateUidIdentifier("iteratorNormalCompletion"), ITERATOR_ERROR_KEY: s2.generateUidIdentifier("iteratorError"), ITERATOR_KEY: s2.generateUidIdentifier("iterator"), STEP_KEY: Ds(o2), OBJECT: n2.right }), c2 = O(a2), p2 = l2[3].block.body, d2 = p2[0];
        return c2 && (p2[0] = ws(a2.label, d2)), { replaceParent: c2, declar: r2, loop: d2, node: l2 };
      }
      var FB = jF(function(e2, t2) {
        var r2, n2, s2;
        e2.assertVersion(7);
        var a2 = t2.assumeArray, i2 = t2.allowArrayLike;
        if (t2.loose === true && a2 === true)
          throw new Error("The loose and assumeArray options cannot be used together in @babel/plugin-transform-for-of");
        if (a2 === true && i2 === true)
          throw new Error("The assumeArray and allowArrayLike options cannot be used together in @babel/plugin-transform-for-of");
        if (i2 && /^7\.\d\./.test(e2.version))
          throw new Error("The allowArrayLike is only supported when using @babel/core@^7.10.0");
        var o2 = (r2 = t2.assumeArray) != null ? r2 : !t2.loose && e2.assumption("iterableIsArray"), l2 = (n2 = t2.allowArrayLike) != null ? n2 : e2.assumption("arrayLikeIsIterable"), c2 = (s2 = e2.assumption("skipForOfIteratorClosing")) != null ? s2 : t2.loose;
        if (o2 && l2)
          throw new Error('The "iterableIsArray" and "arrayLikeIsIterable" assumptions are not compatible.');
        if (o2)
          return { name: "transform-for-of", visitor: { ForOfStatement: function(e3) {
            var t3 = e3.scope, r3 = e3.node, n3 = r3.left, s3 = r3.right;
            if (!r3.await) {
              var a3 = t3.generateUidIdentifier("i"), i3 = t3.maybeGenerateMemoised(s3, true), o3 = [zs(a3, Ss(0))];
              i3 ? o3.push(zs(i3, s3)) : i3 = s3;
              var u2, l3, c3 = Fs2(Ju(i3), Ju(a3), true);
              Z(n3) ? (u2 = n3).declarations[0].init = c3 : u2 = ys(rs("=", n3, c3));
              var p3 = e3.get("body");
              p3.isBlockStatement() && Object.keys(e3.getBindingIdentifiers()).some(function(e4) {
                return p3.scope.hasOwnBinding(e4);
              }) ? l3 = os([u2, p3.node]) : (l3 = Ql(p3.node)).body.unshift(u2), e3.replaceWith(bs(Ks("let", o3), ns("<", Ju(a3), Fs2(Ju(i3), Ds("length"))), $s("++", Ju(a3)), l3));
            }
          } } };
        var p2 = Eg(wB || (wB = u(["\n    for (var KEY = 0, NAME = ARR; KEY < NAME.length; KEY++) BODY;\n  "]))), d2 = Eg.statements(CB || (CB = u(["\n    for (var ITERATOR_HELPER = CREATE_ITERATOR_HELPER(OBJECT, ARRAY_LIKE_IS_ITERABLE), STEP_KEY;\n        !(STEP_KEY = ITERATOR_HELPER()).done;) BODY;\n  "]))), f2 = Eg.statements(SB || (SB = u(["\n    var ITERATOR_HELPER = CREATE_ITERATOR_HELPER(OBJECT, ARRAY_LIKE_IS_ITERABLE), STEP_KEY;\n    try {\n      for (ITERATOR_HELPER.s(); !(STEP_KEY = ITERATOR_HELPER.n()).done;) BODY;\n    } catch (err) {\n      ITERATOR_HELPER.e(err);\n    } finally {\n      ITERATOR_HELPER.f();\n    }\n  "]))), h2 = c2 ? { build: d2, helper: "createForOfIteratorHelperLoose", getContainer: function(e3) {
          return e3;
        } } : { build: f2, helper: "createForOfIteratorHelper", getContainer: function(e3) {
          return e3[1].block.body;
        } };
        return { name: "transform-for-of", visitor: { ForOfStatement: function(e3, t3) {
          var r3 = e3.get("right");
          if (r3.isArrayExpression() || r3.isGenericType("Array") || Fe(r3.getTypeAnnotation()))
            e3.replaceWith(function(e4) {
              var t4 = e4.node, r4 = e4.scope, n4 = r4.generateUidIdentifierBasedOnNode(t4.right, "arr"), s4 = r4.generateUidIdentifier("i"), a4 = p2({ BODY: t4.body, KEY: s4, NAME: n4, ARR: t4.right });
              yc(a4, t4), Zl(a4);
              var i4 = Fs2(Ju(n4), Ju(s4), true), o4 = t4.left;
              return Z(o4) ? (o4.declarations[0].init = i4, a4.body.body.unshift(o4)) : a4.body.body.unshift(ys(rs("=", o4, i4))), a4;
            }(e3));
          else if (t3.availableHelper(h2.helper)) {
            var n3, s3 = e3.node, a3 = e3.parent, i3 = e3.scope, o3 = s3.left, u2 = i3.generateUid("step"), d3 = Fs2(Ds(u2), Ds("value"));
            n3 = Z(o3) ? Ks(o3.kind, [zs(o3.declarations[0].id, d3)]) : ys(rs("=", o3, d3)), e3.ensureBlock(), s3.body.body.unshift(n3);
            var f3 = h2.build({ CREATE_ITERATOR_HELPER: t3.addHelper(h2.helper), ITERATOR_HELPER: i3.generateUidIdentifier("iterator"), ARRAY_LIKE_IS_ITERABLE: l2 ? js(true) : null, STEP_KEY: Ds(u2), OBJECT: s3.right, BODY: s3.body }), m2 = h2.getContainer(f3);
            yc(m2[0], s3), yc(m2[0].body, s3.body), O(a3) ? (m2[0] = ws(a3.label, m2[0]), e3.parentPath.replaceWithMultiple(f3), e3.skip()) : e3.replaceWithMultiple(f3);
          } else
            !function(e4, t4, r4) {
              var n4 = e4 ? PB : IB, s4 = t4.node, a4 = n4(t4, r4), i4 = a4.declar, o4 = a4.loop, u3 = o4.body;
              t4.ensureBlock(), i4 && u3.body.push(i4), u3.body = u3.body.concat(s4.body.body), yc(o4, s4), yc(o4.body, s4.body), a4.replaceParent ? (t4.parentPath.replaceWithMultiple(a4.node), t4.remove()) : t4.replaceWithMultiple(a4.node);
            }(c2, e3, t3);
        } } };
      }), kB = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-function-name", visitor: { FunctionExpression: { exit: function(e3) {
          if (e3.key !== "value" && !e3.parentPath.isObjectProperty()) {
            var t2 = Cg(e3);
            t2 && e3.replaceWith(t2);
          }
        } }, ObjectProperty: function(e3) {
          var t2 = e3.get("value");
          if (t2.isFunction()) {
            var r2 = Cg(t2);
            r2 && t2.replaceWith(r2);
          }
        } } };
      }), OB = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-instanceof", visitor: { BinaryExpression: function(e3) {
          var t2 = e3.node;
          if (t2.operator === "instanceof") {
            var r2 = this.addHelper("instanceof");
            if (e3.findParent(function(e4) {
              return e4.isVariableDeclarator() && e4.node.id === r2 || e4.isFunctionDeclaration() && e4.node.id && e4.node.id.name === r2.name;
            }))
              return;
            e3.replaceWith(ls(r2, [t2.left, t2.right]));
          }
        } } };
      }), RB = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-jscript", visitor: { FunctionExpression: { exit: function(e3) {
          var t2 = e3.node;
          t2.id && e3.replaceWith(ls(xs(null, [], os([fc(t2), Ls(Ju(t2.id))])), []));
        } } } };
      }), NB = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-literals", visitor: { NumericLiteral: function(e3) {
          var t2 = e3.node;
          t2.extra && /^0[ob]/i.test(t2.extra.raw) && (t2.extra = void 0);
        }, StringLiteral: function(e3) {
          var t2 = e3.node;
          t2.extra && /\\[u]/gi.test(t2.extra.raw) && (t2.extra = void 0);
        } } };
      }), BB = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-member-expression-literals", visitor: { MemberExpression: { exit: function(e3) {
          var t2 = e3.node, r2 = t2.property;
          t2.computed || !F(r2) || Sc(r2.name) || (t2.property = Cs(r2.name), t2.computed = true);
        } } } };
      }), _B = function(e2, t2) {
        if (Array.isArray(e2))
          return e2;
        if (Symbol.iterator in Object(e2))
          return function(e3, t3) {
            var r2 = [], n2 = true, s2 = false, a2 = void 0;
            try {
              for (var i2, o2 = e3[Symbol.iterator](); !(n2 = (i2 = o2.next()).done) && (r2.push(i2.value), !t3 || r2.length !== t3); n2 = true)
                ;
            } catch (e4) {
              s2 = true, a2 = e4;
            } finally {
              try {
                !n2 && o2.return && o2.return();
              } finally {
                if (s2)
                  throw a2;
              }
            }
            return r2;
          }(e2, t2);
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }, LB = UB, MB = function(e2) {
        var t2 = e2.template, r2 = e2.types, n2 = { static: { interop: t2("Promise.resolve().then(() => INTEROP(require(SOURCE)))"), noInterop: t2("Promise.resolve().then(() => require(SOURCE))") }, dynamic: { interop: t2("Promise.resolve(SOURCE).then(s => INTEROP(require(s)))"), noInterop: t2("Promise.resolve(SOURCE).then(s => require(s))") } }, s2 = typeof WeakSet == "function" && new WeakSet();
        return function(e3, t3) {
          if (s2) {
            if (s2.has(t3))
              return;
            s2.add(t3);
          }
          var a2 = UB(r2, t3.parent), i2 = function(e4) {
            return r2.isStringLiteral(e4) || r2.isTemplateLiteral(e4) && e4.expressions.length === 0;
          }(a2) ? n2.static : n2.dynamic, o2 = e3.opts.noInterop ? i2.noInterop({ SOURCE: a2 }) : i2.interop({ SOURCE: a2, INTEROP: e3.addHelper("interopRequireWildcard") });
          t3.parentPath.replaceWith(o2);
        };
      };
      function UB(e2, t2) {
        var r2 = t2.arguments, n2 = _B(r2, 1)[0];
        return e2.isStringLiteral(n2) || e2.isTemplateLiteral(n2) ? (e2.removeComments(n2), n2) : e2.templateLiteral([e2.templateElement({ raw: "", cooked: "" }), e2.templateElement({ raw: "", cooked: "" }, true)], r2);
      }
      var GB, VB = Object.defineProperty({ getImportSource: LB, createDynamicImportTransform: MB }, "__esModule", { value: true }), WB = Eg("\n  define(MODULE_NAME, AMD_ARGUMENTS, function(IMPORT_NAMES) {\n  })\n"), HB = Eg('\n  define(["require"], function(REQUIRE) {\n  })\n');
      function XB(e2, t2) {
        var r2 = e2.node, n2 = r2.body, s2 = r2.directives;
        e2.node.directives = [], e2.node.body = [];
        var a2 = e2.pushContainer("body", t2)[0].get("expression.arguments").filter(function(e3) {
          return e3.isFunctionExpression();
        })[0].get("body");
        a2.pushContainer("directives", s2), a2.pushContainer("body", n2);
      }
      var qB = jF(function(e2, t2) {
        var r2, n2;
        e2.assertVersion(7);
        var s2 = t2.allowTopLevelThis, a2 = t2.strict, i2 = t2.strictMode, o2 = t2.importInterop, p2 = t2.noInterop, d2 = (r2 = e2.assumption("constantReexports")) != null ? r2 : t2.loose, h2 = (n2 = e2.assumption("enumerableModuleMeta")) != null ? n2 : t2.loose;
        return { name: "transform-modules-amd", pre: function() {
          this.file.set("@babel/plugin-transform-modules-*", "amd");
        }, visitor: { CallExpression: function(e3, t3) {
          if (this.file.has("@babel/plugin-proposal-dynamic-import") && e3.get("callee").isImport()) {
            var r3 = t3.requireId, n3 = t3.resolveId, s3 = t3.rejectId;
            r3 || (r3 = e3.scope.generateUidIdentifier("require"), t3.requireId = r3), n3 && s3 || (n3 = e3.scope.generateUidIdentifier("resolve"), s3 = e3.scope.generateUidIdentifier("reject"), t3.resolveId = n3, t3.rejectId = s3);
            var a3 = Ds("imported");
            p2 || (a3 = Fx(e3, a3, "namespace")), e3.replaceWith(Eg.expression.ast(GB || (GB = u(["\n            new Promise((", ", ", ") =>\n              ", "(\n                [", "],\n                imported => ", "(", "),\n                ", "\n              )\n            )"])), n3, s3, r3, VB.getImportSource(Pc, e3.node), Ju(n3), a3, Ju(s3)));
          }
        }, Program: { exit: function(e3, r3) {
          var n3 = r3.requireId;
          if (EE(e3)) {
            var u2 = [], m2 = [];
            n3 && (u2.push(Cs("require")), m2.push(Ju(n3)));
            var y2 = jx(this.file.opts, t2);
            y2 && (y2 = Cs(y2));
            var g2 = Px(e3, { enumerableModuleMeta: h2, constantReexports: d2, strict: a2, strictMode: i2, allowTopLevelThis: s2, importInterop: o2, noInterop: p2 }), v2 = g2.meta, b2 = g2.headers;
            ox(v2) && (u2.push(Cs("exports")), m2.push(Ds(v2.exportName)));
            for (var E2, x2 = f(v2.source); !(E2 = x2()).done; ) {
              var D2 = l(E2.value, 2), A2 = D2[0], w2 = D2[1];
              if (u2.push(Cs(A2)), m2.push(Ds(w2.name)), !ux(w2)) {
                var C2 = Fx(e3, Ds(w2.name), w2.interop);
                if (C2) {
                  var S2 = ys(rs("=", Ds(w2.name), C2));
                  S2.loc = w2.loc, b2.push(S2);
                }
              }
              b2.push.apply(b2, c(kx(v2, w2, d2)));
            }
            Ix(b2), e3.unshiftContainer("body", b2), XB(e3, WB({ MODULE_NAME: y2, AMD_ARGUMENTS: ts(u2), IMPORT_NAMES: m2 }));
          } else
            n3 && XB(e3, HB({ REQUIRE: Ju(n3) }));
        } } } };
      }), $B = function(e2, t2) {
        if (Array.isArray(e2))
          return e2;
        if (Symbol.iterator in Object(e2))
          return function(e3, t3) {
            var r2 = [], n2 = true, s2 = false, a2 = void 0;
            try {
              for (var i2, o2 = e3[Symbol.iterator](); !(n2 = (i2 = o2.next()).done) && (r2.push(i2.value), !t3 || r2.length !== t3); n2 = true)
                ;
            } catch (e4) {
              s2 = true, a2 = e4;
            } finally {
              try {
                !n2 && o2.return && o2.return();
              } finally {
                if (s2)
                  throw a2;
              }
            }
            return r2;
          }(e2, t2);
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }, KB = JB, zB = function(e2) {
        var t2 = e2.template, r2 = e2.types, n2 = { static: { interop: t2("Promise.resolve().then(() => INTEROP(require(SOURCE)))"), noInterop: t2("Promise.resolve().then(() => require(SOURCE))") }, dynamic: { interop: t2("Promise.resolve(SOURCE).then(s => INTEROP(require(s)))"), noInterop: t2("Promise.resolve(SOURCE).then(s => require(s))") } }, s2 = typeof WeakSet == "function" && new WeakSet();
        return function(e3, t3) {
          if (s2) {
            if (s2.has(t3))
              return;
            s2.add(t3);
          }
          var a2 = JB(r2, t3.parent), i2 = function(e4) {
            return r2.isStringLiteral(e4) || r2.isTemplateLiteral(e4) && e4.expressions.length === 0;
          }(a2) ? n2.static : n2.dynamic, o2 = e3.opts.noInterop ? i2.noInterop({ SOURCE: a2 }) : i2.interop({ SOURCE: a2, INTEROP: e3.addHelper("interopRequireWildcard") });
          t3.parentPath.replaceWith(o2);
        };
      };
      function JB(e2, t2) {
        var r2 = t2.arguments, n2 = $B(r2, 1)[0];
        return e2.isStringLiteral(n2) || e2.isTemplateLiteral(n2) ? (e2.removeComments(n2), n2) : e2.templateLiteral([e2.templateElement({ raw: "", cooked: "" }), e2.templateElement({ raw: "", cooked: "" }, true)], r2);
      }
      var YB, QB, ZB, e_ = Object.defineProperty({ getImportSource: KB, createDynamicImportTransform: zB }, "__esModule", { value: true }), t_ = jF(function(e2, t2) {
        var r2, n2;
        e2.assertVersion(7);
        var s2 = e_.createDynamicImportTransform(e2), a2 = t2.strictNamespace, i2 = a2 !== void 0 && a2, o2 = t2.mjsStrictNamespace, p2 = o2 === void 0 || o2, d2 = t2.allowTopLevelThis, h2 = t2.strict, m2 = t2.strictMode, y2 = t2.noInterop, g2 = t2.importInterop, v2 = t2.lazy, b2 = v2 !== void 0 && v2, E2 = t2.allowCommonJSExports, x2 = E2 === void 0 || E2, D2 = (r2 = e2.assumption("constantReexports")) != null ? r2 : t2.loose, A2 = (n2 = e2.assumption("enumerableModuleMeta")) != null ? n2 : t2.loose;
        if (!(typeof b2 == "boolean" || typeof b2 == "function" || Array.isArray(b2) && b2.every(function(e3) {
          return typeof e3 == "string";
        })))
          throw new Error(".lazy must be a boolean, array of strings, or a function");
        if (typeof i2 != "boolean")
          throw new Error(".strictNamespace must be a boolean, or undefined");
        if (typeof p2 != "boolean")
          throw new Error(".mjsStrictNamespace must be a boolean, or undefined");
        var w2 = function(e3) {
          return Eg.expression.ast(YB || (YB = u([`
    (function(){
      throw new Error(
        "The CommonJS '" + "`, `" + "' variable is not available in ES6 modules." +
        "Consider setting setting sourceType:script or sourceType:unambiguous in your " +
        "Babel config for this file.");
    })()
  `])), e3);
        }, C2 = { ReferencedIdentifier: function(e3) {
          var t3 = e3.node.name;
          if (t3 === "module" || t3 === "exports") {
            var r3 = e3.scope.getBinding(t3);
            this.scope.getBinding(t3) !== r3 || e3.parentPath.isObjectProperty({ value: e3.node }) && e3.parentPath.parentPath.isObjectPattern() || e3.parentPath.isAssignmentExpression({ left: e3.node }) || e3.isAssignmentExpression({ left: e3.node }) || e3.replaceWith(w2(t3));
          }
        }, AssignmentExpression: function(e3) {
          var t3 = this, r3 = e3.get("left");
          if (r3.isIdentifier()) {
            var n3 = e3.node.name;
            if (n3 !== "module" && n3 !== "exports")
              return;
            var s3 = e3.scope.getBinding(n3);
            if (this.scope.getBinding(n3) !== s3)
              return;
            var a3 = e3.get("right");
            a3.replaceWith(Ms([a3.node, w2(n3)]));
          } else if (r3.isPattern()) {
            var i3 = r3.getOuterBindingIdentifiers(), o3 = Object.keys(i3).filter(function(r4) {
              return (r4 === "module" || r4 === "exports") && t3.scope.getBinding(r4) === e3.scope.getBinding(r4);
            })[0];
            if (o3) {
              var u2 = e3.get("right");
              u2.replaceWith(Ms([u2.node, w2(o3)]));
            }
          }
        } };
        return { name: "transform-modules-commonjs", pre: function() {
          this.file.set("@babel/plugin-transform-modules-*", "commonjs");
        }, visitor: { CallExpression: function(e3) {
          if (this.file.has("@babel/plugin-proposal-dynamic-import") && e3.get("callee").isImport()) {
            var t3 = e3.scope;
            do {
              t3.rename("require");
            } while (t3 = t3.parent);
            s2(this, e3.get("callee"));
          }
        }, Program: { exit: function(e3, r3) {
          if (EE(e3)) {
            e3.scope.rename("exports"), e3.scope.rename("module"), e3.scope.rename("require"), e3.scope.rename("__filename"), e3.scope.rename("__dirname"), x2 || (ME(e3, new Set(["module", "exports"])), e3.traverse(C2, { scope: e3.scope }));
            var n3 = jx(this.file.opts, t2);
            n3 && (n3 = Cs(n3));
            for (var s3, a3 = Px(e3, { exportName: "exports", constantReexports: D2, enumerableModuleMeta: A2, strict: h2, strictMode: m2, allowTopLevelThis: d2, noInterop: y2, importInterop: g2, lazy: b2, esNamespaceOnly: typeof r3.filename == "string" && /\.mjs$/.test(r3.filename) ? p2 : i2 }), o3 = a3.meta, v3 = a3.headers, E3 = f(o3.source); !(s3 = E3()).done; ) {
              var w3 = l(s3.value, 2), S2 = w3[0], T2 = w3[1], j2 = ls(Ds("require"), [Cs(S2)]), P2 = void 0;
              if (ux(T2)) {
                if (T2.lazy)
                  throw new Error("Assertion failure");
                P2 = ys(j2);
              } else {
                var I2 = Fx(e3, j2, T2.interop) || j2;
                P2 = T2.lazy ? Eg.ast(QB || (QB = u(["\n                  function ", "() {\n                    const data = ", ";\n                    ", " = function(){ return data; };\n                    return data;\n                  }\n                "])), T2.name, I2, T2.name) : Eg.ast(ZB || (ZB = u(["\n                  var ", " = ", ";\n                "])), T2.name, I2);
              }
              P2.loc = T2.loc, v3.push(P2), v3.push.apply(v3, c(kx(o3, T2, D2)));
            }
            Ix(v3), e3.unshiftContainer("body", v3);
          }
        } } } };
      }), r_ = Eg('\n  SYSTEM_REGISTER(MODULE_NAME, SOURCES, function (EXPORT_IDENTIFIER, CONTEXT_IDENTIFIER) {\n    "use strict";\n    BEFORE_BODY;\n    return {\n      setters: SETTERS,\n      execute: EXECUTE,\n    };\n  });\n'), n_ = Eg('\n  for (var KEY in TARGET) {\n    if (KEY !== "default" && KEY !== "__esModule") EXPORT_OBJ[KEY] = TARGET[KEY];\n  }\n');
      function s_(e2, t2) {
        if (e2.type === "Identifier")
          return e2.name;
        if (e2.type === "StringLiteral") {
          var r2 = e2.value;
          return vr(r2) || t2.add(r2), r2;
        }
        throw new Error("Expected export specifier to be either Identifier or StringLiteral, got " + e2.type);
      }
      function a_(e2, t2, r2, n2, s2, a2) {
        var i2 = [];
        if (s2) {
          var o2 = e2.scope.generateUid("exportObj");
          i2.push(Ks("var", [zs(Ds(o2), Rs([]))])), i2.push(n_({ KEY: e2.scope.generateUidIdentifier("key"), EXPORT_OBJ: Ds(o2), TARGET: s2 }));
          for (var u2 = 0; u2 < r2.length; u2++) {
            var l2 = r2[u2], c2 = n2[u2];
            i2.push(ys(rs("=", Fs2(Ds(o2), Ds(l2)), c2)));
          }
          i2.push(ys(ls(t2, [Ds(o2)])));
        } else if (r2.length === 1)
          i2.push(ys(ls(t2, [Cs(r2[0]), n2[0]])));
        else {
          for (var p2 = [], d2 = 0; d2 < r2.length; d2++) {
            var f2 = r2[d2], h2 = n2[d2];
            p2.push(Bs(a2.has(f2) ? Cs(f2) : Ds(f2), h2));
          }
          i2.push(ys(ls(t2, [Rs(p2)])));
        }
        return i2;
      }
      var i_ = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = t2.systemGlobal, n2 = r2 === void 0 ? "System" : r2, s2 = t2.allowTopLevelThis, a2 = s2 !== void 0 && s2, i2 = Symbol(), o2 = { "AssignmentExpression|UpdateExpression": function(e3) {
          if (!e3.node[i2]) {
            e3.node[i2] = true;
            var t3 = e3.get(e3.isAssignmentExpression() ? "left" : "argument");
            if (t3.isObjectPattern() || t3.isArrayPattern()) {
              for (var r3 = [e3.node], n3 = 0, s3 = Object.keys(t3.getBindingIdentifiers()); n3 < s3.length; n3++) {
                var a3 = s3[n3];
                if (this.scope.getBinding(a3) !== e3.scope.getBinding(a3))
                  return;
                var o3 = this.exports[a3];
                if (!o3)
                  return;
                for (var u2, l2 = f(o3); !(u2 = l2()).done; ) {
                  var c2 = u2.value;
                  r3.push(this.buildCall(c2, Ds(a3)).expression);
                }
              }
              e3.replaceWith(Ms(r3));
            } else if (t3.isIdentifier()) {
              var p2 = t3.node.name;
              if (this.scope.getBinding(p2) === e3.scope.getBinding(p2)) {
                var d2 = this.exports[p2];
                if (d2) {
                  var h2 = e3.node, m2 = e3.isUpdateExpression({ prefix: false });
                  m2 && (h2 = ns(h2.operator[0], qs("+", Ju(h2.argument)), Ss(1)));
                  for (var y2, g2 = f(d2); !(y2 = g2()).done; ) {
                    var v2 = y2.value;
                    h2 = this.buildCall(v2, h2).expression;
                  }
                  m2 && (h2 = Ms([h2, e3.node])), e3.replaceWith(h2);
                }
              }
            }
          }
        } };
        return { name: "transform-modules-systemjs", pre: function() {
          this.file.set("@babel/plugin-transform-modules-*", "systemjs");
        }, visitor: { CallExpression: function(e3, t3) {
          Ce(e3.node.callee) && (this.file.has("@babel/plugin-proposal-dynamic-import") || console.warn("WARNING: Dynamic import() transformation must be enabled using the\n         @babel/plugin-proposal-dynamic-import plugin. Babel 8 will\n         no longer transform import() without using that plugin.\n"), e3.replaceWith(ls(Fs2(Ds(t3.contextIdent), Ds("import")), [VB.getImportSource(Pc, e3.node)])));
        }, MetaProperty: function(e3, t3) {
          e3.node.meta.name === "import" && e3.node.property.name === "meta" && e3.replaceWith(Fs2(Ds(t3.contextIdent), Ds("meta")));
        }, ReferencedIdentifier: function(e3, t3) {
          e3.node.name !== "__moduleName" || e3.scope.hasBinding("__moduleName") || e3.replaceWith(Fs2(Ds(t3.contextIdent), Ds("id")));
        }, Program: { enter: function(e3, t3) {
          t3.contextIdent = e3.scope.generateUid("context"), t3.stringSpecifiers = new Set(), a2 || _E(e3);
        }, exit: function(e3, r3) {
          var s3 = e3.scope, a3 = s3.generateUid("export"), i3 = r3.contextIdent, u2 = r3.stringSpecifiers, l2 = Object.create(null), c2 = [], p2 = [], d2 = [], h2 = [], m2 = [], y2 = [];
          function g2(e4, t3) {
            l2[e4] = l2[e4] || [], l2[e4].push(t3);
          }
          function v2(e4, t3, r4) {
            var n3;
            c2.forEach(function(t4) {
              t4.key === e4 && (n3 = t4);
            }), n3 || c2.push(n3 = { key: e4, imports: [], exports: [] }), n3[t3] = n3[t3].concat(r4);
          }
          function b2(e4, t3) {
            return ys(ls(Ds(a3), [Cs(e4), t3]));
          }
          for (var E2, x2 = [], D2 = [], A2 = f(e3.get("body")); !(E2 = A2()).done; ) {
            var w2 = E2.value;
            if (w2.isFunctionDeclaration())
              p2.push(w2.node), y2.push(w2);
            else if (w2.isClassDeclaration())
              m2.push(Ju(w2.node.id)), w2.replaceWith(ys(rs("=", Ju(w2.node.id), nc(w2.node))));
            else if (w2.isImportDeclaration()) {
              v2(w2.node.source.value, "imports", w2.node.specifiers);
              for (var C2 = 0, S2 = Object.keys(w2.getBindingIdentifiers()); C2 < S2.length; C2++) {
                var T2 = S2[C2];
                s3.removeBinding(T2), m2.push(Ds(T2));
              }
              w2.remove();
            } else if (w2.isExportAllDeclaration())
              v2(w2.node.source.value, "exports", w2.node), w2.remove();
            else if (w2.isExportDefaultDeclaration()) {
              var j2 = w2.get("declaration"), I2 = j2.node.id;
              j2.isClassDeclaration() ? I2 ? (x2.push("default"), D2.push(s3.buildUndefinedNode()), m2.push(Ju(I2)), g2(I2.name, "default"), w2.replaceWith(ys(rs("=", Ju(I2), nc(j2.node))))) : (x2.push("default"), D2.push(nc(j2.node)), y2.push(w2)) : j2.isFunctionDeclaration() ? (I2 ? (p2.push(j2.node), x2.push("default"), D2.push(Ju(I2)), g2(I2.name, "default")) : (x2.push("default"), D2.push(nc(j2.node))), y2.push(w2)) : w2.replaceWith(b2("default", j2.node));
            } else if (w2.isExportNamedDeclaration()) {
              var F2 = w2.get("declaration");
              if (F2.node)
                if (w2.replaceWith(F2), w2.isFunction()) {
                  var k2 = F2.node, O2 = k2.id.name;
                  g2(O2, O2), p2.push(k2), x2.push(O2), D2.push(Ju(k2.id)), y2.push(w2);
                } else if (w2.isClass()) {
                  var N2 = F2.node.id.name;
                  x2.push(N2), D2.push(s3.buildUndefinedNode()), m2.push(Ju(F2.node.id)), w2.replaceWith(ys(rs("=", Ju(F2.node.id), nc(F2.node)))), g2(N2, N2);
                } else
                  for (var B2 = 0, _2 = Object.keys(F2.getBindingIdentifiers()); B2 < _2.length; B2++) {
                    var L2 = _2[B2];
                    g2(L2, L2);
                  }
              else {
                var M2 = w2.node.specifiers;
                if (M2 != null && M2.length)
                  if (w2.node.source)
                    v2(w2.node.source.value, "exports", M2), w2.remove();
                  else {
                    for (var U2, G2 = [], V2 = f(M2); !(U2 = V2()).done; ) {
                      var W2 = U2.value, H2 = W2.local, X2 = W2.exported, q2 = s3.getBinding(H2.name), $2 = s_(X2, u2);
                      q2 && P(q2.path.node) ? (x2.push($2), D2.push(Ju(H2))) : q2 || G2.push(b2($2, H2)), g2(H2.name, $2);
                    }
                    w2.replaceWithMultiple(G2);
                  }
                else
                  w2.remove();
              }
            }
          }
          c2.forEach(function(t3) {
            for (var r4, n3 = [], i4 = s3.generateUid(t3.key), o3 = f(t3.imports); !(r4 = o3()).done; ) {
              var l3 = r4.value;
              if (me(l3) ? n3.push(ys(rs("=", l3.local, Ds(i4)))) : he(l3) && (l3 = da(l3.local, Ds("default"))), ye(l3)) {
                var c3 = l3.imported;
                n3.push(ys(rs("=", l3.local, Fs2(Ds(i4), l3.imported, c3.type === "StringLiteral"))));
              }
            }
            if (t3.exports.length) {
              for (var p3, m3 = [], y3 = [], g3 = false, v3 = f(t3.exports); !(p3 = v3()).done; ) {
                var b3 = p3.value;
                if (ue(b3))
                  g3 = true;
                else if (pe(b3)) {
                  var E3 = s_(b3.exported, u2);
                  m3.push(E3), y3.push(Fs2(Ds(i4), b3.local, R(b3.local)));
                }
              }
              n3 = n3.concat(a_(e3, Ds(a3), m3, y3, g3 ? Ds(i4) : null, u2));
            }
            h2.push(Cs(t3.key)), d2.push(xs(null, [Ds(i4)], os(n3)));
          });
          var K2 = jx(this.file.opts, t2);
          K2 && (K2 = Cs(K2)), Gy(e3, function(e4, t3, r4) {
            if (m2.push(e4), !r4 && t3 in l2)
              for (var n3, a4 = f(l2[t3]); !(n3 = a4()).done; ) {
                var i4 = n3.value;
                x2.push(i4), D2.push(s3.buildUndefinedNode());
              }
          }, null), m2.length && p2.unshift(Ks("var", m2.map(function(e4) {
            return zs(e4);
          }))), x2.length && (p2 = p2.concat(a_(e3, Ds(a3), x2, D2, null, u2))), e3.traverse(o2, { exports: l2, buildCall: b2, scope: s3 });
          for (var z2 = 0, J2 = y2; z2 < J2.length; z2++) {
            J2[z2].remove();
          }
          var Y2 = false;
          e3.traverse({ AwaitExpression: function(e4) {
            Y2 = true, e4.stop();
          }, Function: function(e4) {
            e4.skip();
          }, noScope: true }), e3.node.body = [r_({ SYSTEM_REGISTER: Fs2(Ds(n2), Ds("register")), BEFORE_BODY: p2, MODULE_NAME: K2, SETTERS: ts(d2), EXECUTE: xs(null, [], os(e3.node.body), false, Y2), SOURCES: ts(h2), EXPORT_IDENTIFIER: Ds(a3), CONTEXT_IDENTIFIER: Ds(i3) })];
        } } } };
      }), o_ = Eg("\n  GLOBAL_REFERENCE = GLOBAL_REFERENCE || {}\n"), u_ = Eg('\n  (function (global, factory) {\n    if (typeof define === "function" && define.amd) {\n      define(MODULE_NAME, AMD_ARGUMENTS, factory);\n    } else if (typeof exports !== "undefined") {\n      factory(COMMONJS_ARGUMENTS);\n    } else {\n      var mod = { exports: {} };\n      factory(BROWSER_ARGUMENTS);\n\n      GLOBAL_TO_ASSIGN;\n    }\n  })(\n    typeof globalThis !== "undefined" ? globalThis\n      : typeof self !== "undefined" ? self\n      : this,\n    function(IMPORT_NAMES) {\n  })\n'), l_ = jF(function(e2, t2) {
        var r2, n2;
        e2.assertVersion(7);
        var s2 = t2.globals, a2 = t2.exactGlobals, i2 = t2.allowTopLevelThis, o2 = t2.strict, u2 = t2.strictMode, p2 = t2.noInterop, d2 = t2.importInterop, h2 = (r2 = e2.assumption("constantReexports")) != null ? r2 : t2.loose, m2 = (n2 = e2.assumption("enumerableModuleMeta")) != null ? n2 : t2.loose;
        function y2(e3, t3, r3, n3) {
          var s3 = n3 ? n3.value : tx(r3, rx(r3)), a3 = Fs2(Ds("global"), Ds(ec(s3))), i3 = [];
          if (t3) {
            var o3 = e3[s3];
            if (o3) {
              i3 = [];
              var u3 = o3.split(".");
              a3 = u3.slice(1).reduce(function(e4, t4) {
                return i3.push(o_({ GLOBAL_REFERENCE: Ju(e4) })), Fs2(e4, Ds(t4));
              }, Fs2(Ds("global"), Ds(u3[0])));
            }
          }
          return i3.push(ys(rs("=", a3, Fs2(Ds("mod"), Ds("exports"))))), i3;
        }
        function g2(e3, t3, r3) {
          var n3;
          if (t3) {
            var s3 = e3[r3];
            n3 = s3 ? s3.split(".").reduce(function(e4, t4) {
              return Fs2(e4, Ds(t4));
            }, Ds("global")) : Fs2(Ds("global"), Ds(ec(r3)));
          } else {
            var a3 = tx(r3, rx(r3)), i3 = e3[a3] || a3;
            n3 = Fs2(Ds("global"), Ds(ec(i3)));
          }
          return n3;
        }
        return { name: "transform-modules-umd", visitor: { Program: { exit: function(e3) {
          if (EE(e3)) {
            var r3 = s2 || {}, n3 = jx(this.file.opts, t2);
            n3 && (n3 = Cs(n3));
            var v2 = Px(e3, { constantReexports: h2, enumerableModuleMeta: m2, strict: o2, strictMode: u2, allowTopLevelThis: i2, noInterop: p2, importInterop: d2 }), b2 = v2.meta, E2 = v2.headers, x2 = [], D2 = [], A2 = [], w2 = [];
            ox(b2) && (x2.push(Cs("exports")), D2.push(Ds("exports")), A2.push(Fs2(Ds("mod"), Ds("exports"))), w2.push(Ds(b2.exportName)));
            for (var C2, S2 = f(b2.source); !(C2 = S2()).done; ) {
              var T2 = l(C2.value, 2), j2 = T2[0], P2 = T2[1];
              if (x2.push(Cs(j2)), D2.push(ls(Ds("require"), [Cs(j2)])), A2.push(g2(r3, a2, j2)), w2.push(Ds(P2.name)), !ux(P2)) {
                var I2 = Fx(e3, Ds(P2.name), P2.interop);
                if (I2) {
                  var F2 = ys(rs("=", Ds(P2.name), I2));
                  F2.loc = b2.loc, E2.push(F2);
                }
              }
              E2.push.apply(E2, c(kx(b2, P2, h2)));
            }
            Ix(E2), e3.unshiftContainer("body", E2);
            var k2 = e3.node, O2 = k2.body, R2 = k2.directives;
            e3.node.directives = [], e3.node.body = [];
            var N2 = e3.pushContainer("body", [u_({ MODULE_NAME: n3, AMD_ARGUMENTS: ts(x2), COMMONJS_ARGUMENTS: D2, BROWSER_ARGUMENTS: A2, IMPORT_NAMES: w2, GLOBAL_TO_ASSIGN: y2(r3, a2, this.filename || "unknown", n3) })])[0].get("expression.arguments")[1].get("body");
            N2.pushContainer("directives", R2), N2.pushContainer("body", O2);
          }
        } } } };
      });
      function c_(e2, t2) {
        var r2 = t2.runtime, n2 = r2 === void 0 || r2;
        if (typeof n2 != "boolean")
          throw new Error("The 'runtime' option must be boolean");
        return RN({ name: "transform-named-capturing-groups-regex", feature: "namedCaptureGroups", options: { runtime: n2 } });
      }
      var p_ = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-new-target", visitor: { MetaProperty: function(e3) {
          var t2 = e3.get("meta"), r2 = e3.get("property"), n2 = e3.scope;
          if (t2.isIdentifier({ name: "new" }) && r2.isIdentifier({ name: "target" })) {
            var s2 = e3.findParent(function(e4) {
              return !!e4.isClass() || !(!e4.isFunction() || e4.isArrowFunctionExpression()) && !e4.isClassMethod({ kind: "constructor" });
            });
            if (!s2)
              throw e3.buildCodeFrameError("new.target must be under a (non-arrow) function or a class.");
            var a2 = s2.node;
            if (!a2.id) {
              if (s2.isMethod())
                return void e3.replaceWith(n2.buildUndefinedNode());
              a2.id = n2.generateUidIdentifier("target");
            }
            var i2 = Fs2(Ws(), Ds("constructor"));
            if (s2.isClass())
              return void e3.replaceWith(i2);
            e3.replaceWith(ps(ns("instanceof", Ws(), Ju(a2.id)), i2, n2.buildUndefinedNode()));
          }
        } } };
      }), d_ = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-object-assign", visitor: { CallExpression: function(e3, t2) {
          e3.get("callee").matchesPattern("Object.assign") && (e3.node.callee = t2.addHelper("extends"));
        } } };
      });
      var f_ = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-object-super", visitor: { ObjectExpression: function(e3, t2) {
          var r2, n2 = function() {
            return r2 = r2 || e3.scope.generateUidIdentifier("obj");
          };
          e3.get("properties").forEach(function(e4) {
            e4.isMethod() && function(e5, t3, r3) {
              new BE({ getObjectRef: t3, methodPath: e5, file: r3 }).replace();
            }(e4, n2, t2);
          }), r2 && (e3.scope.push({ id: Ju(r2) }), e3.replaceWith(rs("=", Ju(r2), e3.node)));
        } } };
      }), h_ = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-object-set-prototype-of-to-assign", visitor: { CallExpression: function(e3, t2) {
          e3.get("callee").matchesPattern("Object.setPrototypeOf") && (e3.node.callee = t2.addHelper("defaults"));
        } } };
      }), m_ = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-property-literals", visitor: { ObjectProperty: { exit: function(e3) {
          var t2 = e3.node, r2 = t2.key;
          t2.computed || !F(r2) || Sc(r2.name) || (t2.key = Cs(r2.name));
        } } } };
      });
      var y_ = Function.prototype.call.bind(Object.prototype.hasOwnProperty);
      function g_(e2, t2, r2, n2, s2) {
        var a2, i2, o2 = lc(t2), u2 = {};
        if (y_(e2, o2) && (u2 = e2[o2]), e2[o2] = u2, u2._inherits = u2._inherits || [], u2._inherits.push(t2), u2._key = t2.key, t2.computed && (u2._computed = true), t2.decorators) {
          var l2 = u2.decorators = u2.decorators || ts([]);
          l2.elements = l2.elements.concat(t2.decorators.map(function(e3) {
            return e3.expression;
          }).reverse());
        }
        if (u2.value || u2.initializer)
          throw n2.buildCodeFrameError(t2, "Key conflict with sibling node");
        (H(t2) || W(t2) || ge(t2)) && (a2 = rc(t2, t2.key)), Ft(t2) ? i2 = t2.value : (W(t2) || ge(t2)) && ((i2 = xs(null, t2.params, t2.body, t2.generator, t2.async)).returnType = t2.returnType);
        var c2 = function(e3) {
          return !ge(e3) && !W(e3) || e3.kind !== "get" && e3.kind !== "set" ? "value" : e3.kind;
        }(t2);
        return r2 && c2 === "value" || (r2 = c2), s2 && R(a2) && (r2 === "value" || r2 === "initializer") && I(i2) && (i2 = Cg({ id: a2, node: i2, scope: s2 })), i2 && (al(i2, t2), u2[r2] = i2), u2;
      }
      function v_(e2) {
        return Object.keys(e2).forEach(function(t2) {
          var r2 = e2[t2];
          r2.value && (r2.writable = js(true)), r2.configurable = js(true), r2.enumerable = js(true);
        }), function(e3) {
          var t2 = Rs([]);
          return Object.keys(e3).forEach(function(r2) {
            var n2 = e3[r2], s2 = Rs([]), a2 = Bs(n2._key, s2, n2._computed);
            Object.keys(n2).forEach(function(e4) {
              var t3 = n2[e4];
              if (e4[0] !== "_") {
                var r3 = Bs(Ds(e4), t3);
                al(r3, t3), il(t3), s2.properties.push(r3);
              }
            }), t2.properties.push(a2);
          }), t2;
        }(e2);
      }
      var b_, E_ = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-property-mutators", visitor: { ObjectExpression: function(e3, t2) {
          for (var r2 = e3.node, n2 = false, s2 = 0, a2 = r2.properties; s2 < a2.length; s2++) {
            var i2 = a2[s2];
            if (i2.kind === "get" || i2.kind === "set") {
              n2 = true;
              break;
            }
          }
          if (n2) {
            var o2 = {};
            r2.properties = r2.properties.filter(function(e4) {
              return !!(e4.computed || e4.kind !== "get" && e4.kind !== "set") || (g_(o2, e4, null, t2), false);
            }), e3.replaceWith(ls(Fs2(Ds("Object"), Ds("defineProperties")), [r2, v_(o2)]));
          }
        } } };
      }), x_ = jF(function(e2) {
        function t2(e3) {
          return Pt(rc(e3, e3.key), { value: "__proto__" });
        }
        function r2(e3) {
          var t3 = e3.left;
          return M(t3) && Pt(rc(t3, t3.property), { value: "__proto__" });
        }
        function n2(e3, t3, r3) {
          return ys(ls(r3.addHelper("defaults"), [t3, e3.right]));
        }
        return e2.assertVersion(7), { name: "transform-proto-to-assign", visitor: { AssignmentExpression: function(e3, t3) {
          if (r2(e3.node)) {
            var s2 = [], a2 = e3.node.left.object, i2 = e3.scope.maybeGenerateMemoised(a2);
            i2 && s2.push(ys(rs("=", i2, a2))), s2.push(n2(e3.node, Ju(i2 || a2), t3)), i2 && s2.push(Ju(i2)), e3.replaceWithMultiple(s2);
          }
        }, ExpressionStatement: function(e3, t3) {
          var s2 = e3.node.expression;
          y(s2, { operator: "=" }) && r2(s2) && e3.replaceWith(n2(s2, s2.left.object, t3));
        }, ObjectExpression: function(e3, r3) {
          for (var n3, s2 = e3.node, a2 = s2.properties, i2 = 0; i2 < a2.length; i2++) {
            var o2 = a2[i2];
            if (t2(o2)) {
              n3 = o2.value, a2.splice(i2, 1);
              break;
            }
          }
          if (n3) {
            var u2 = [Rs([]), n3];
            s2.properties.length && u2.push(s2), e3.replaceWith(ls(r3.addHelper("extends"), u2));
          }
        } } };
      }), D_ = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = t2.allowMutablePropsOnTags;
        if (r2 != null && !Array.isArray(r2))
          throw new Error(".allowMutablePropsOnTags must be an array, null, or undefined.");
        var n2 = new WeakMap();
        function s2(e3, t3) {
          if (Je(e3, { name: "this" }) || Je(e3, { name: "arguments" }) || Je(e3, { name: "super" }) || Je(e3, { name: "new" })) {
            var r3 = t3.path;
            return r3.isFunctionParent() && !r3.isArrowFunctionExpression();
          }
          return t3.hasOwnBinding(e3.name);
        }
        function a2(e3) {
          var t3 = e3.path;
          return t3.isFunctionParent() || t3.isLoop() || t3.isProgram();
        }
        function i2(e3) {
          for (; !a2(e3); )
            e3 = e3.parent;
          return e3;
        }
        var o2 = { enter: function(e3, t3) {
          var r3 = function() {
            t3.isImmutable = false, e3.stop();
          };
          if (e3.isJSXClosingElement())
            e3.skip();
          else {
            if (e3.isJSXIdentifier({ name: "ref" }) && e3.parentPath.isJSXAttribute({ name: e3.node }))
              return r3();
            if (!(e3.isJSXIdentifier() || e3.isJSXMemberExpression() || e3.isJSXNamespacedName())) {
              if (e3.isIdentifier()) {
                var n3 = e3.scope.getBinding(e3.node.name);
                if (n3 && n3.constant)
                  return;
              }
              if (!e3.isImmutable()) {
                if (e3.isPure()) {
                  var s3 = e3.evaluate();
                  if (s3.confident) {
                    var a3 = s3.value;
                    if (!(!t3.mutablePropsAllowed && a3 && typeof a3 == "object" || typeof a3 == "function"))
                      return void e3.skip();
                  } else if (F(s3.deopt))
                    return;
                }
                r3();
              }
            }
          }
        }, ReferencedIdentifier: function(e3, t3) {
          for (var r3 = e3.node, n3 = e3.scope; n3; ) {
            if (n3 === t3.targetScope)
              return;
            if (s2(r3, n3))
              break;
            n3 = n3.parent;
          }
          t3.targetScope = i2(n3);
        } };
        return { name: "transform-react-constant-elements", visitor: { JSXElement: function(e3) {
          if (!n2.has(e3.node)) {
            n2.set(e3.node, e3.scope);
            var t3 = e3.node.openingElement.name, s3 = false;
            if (r2 != null) {
              for (var a3 = t3; Ye(a3); )
                a3 = a3.property;
              var l2 = a3.name;
              s3 = r2.includes(l2);
            }
            var c2 = { isImmutable: true, mutablePropsAllowed: s3, targetScope: e3.scope.getProgramParent() };
            if (e3.traverse(o2, c2), c2.isImmutable) {
              var p2, d2 = c2.targetScope;
              n2.set(e3.node, d2);
              for (var f2 = e3; !p2 && f2.parentPath.isJSX(); )
                f2 = f2.parentPath, p2 = n2.get(f2.node);
              if (p2 != null || (p2 = i2(e3.scope)), d2 !== p2) {
                var h2 = e3.scope.generateUidBasedOnNode(t3);
                d2.push({ id: Ds(h2) });
                var m2 = Eg.expression.ast(b_ || (b_ = u(["\n          ", " || (", " = ", ")\n        "])), Ds(h2), Ds(h2), e3.node);
                (e3.parentPath.isJSXElement() || e3.parentPath.isJSXAttribute()) && (m2 = Wi(m2)), e3.replaceWith(m2);
              }
            }
          }
        } } };
      }), A_ = jF(function(e2) {
        function t2(e3, t3) {
          for (var r3 = t3.arguments[0].properties, n3 = true, s2 = 0; s2 < r3.length; s2++) {
            if (Pt(rc(r3[s2]), { value: "displayName" })) {
              n3 = false;
              break;
            }
          }
          n3 && r3.unshift(Bs(Ds("displayName"), Cs(e3)));
        }
        e2.assertVersion(7);
        var r2 = Vt("React.createClass");
        function n2(e3) {
          if (!e3 || !E(e3))
            return false;
          if (!r2(e3.callee) && e3.callee.name !== "createReactClass")
            return false;
          var t3 = e3.arguments;
          return t3.length === 1 && !!V(t3[0]);
        }
        return { name: "transform-react-display-name", visitor: { ExportDefaultDeclaration: function(e3, r3) {
          var s2 = e3.node;
          if (n2(s2.declaration)) {
            var a2 = r3.filename || "unknown", i2 = nx.basename(a2, nx.extname(a2));
            i2 === "index" && (i2 = nx.basename(nx.dirname(a2))), t2(i2, s2.declaration);
          }
        }, CallExpression: function(e3) {
          var r3, s2 = e3.node;
          n2(s2) && (e3.find(function(e4) {
            if (e4.isAssignmentExpression())
              r3 = e4.node.left;
            else if (e4.isObjectProperty())
              r3 = e4.node.key;
            else if (e4.isVariableDeclarator())
              r3 = e4.node.id;
            else if (e4.isStatement())
              return true;
            if (r3)
              return true;
          }), r3 && (M(r3) && (r3 = r3.property), F(r3) && t2(r3.name, s2)));
        } } };
      });
      function w_(e2) {
        var t2 = { JSXNamespacedName: function(t3) {
          if (e2.throwIfNamespace)
            throw t3.buildCodeFrameError("Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.");
        }, JSXSpreadChild: function(e3) {
          throw e3.buildCodeFrameError("Spread children are not supported in React.");
        } };
        return t2.JSXElement = { exit: function(t3, a2) {
          var i2 = function(t4, a3) {
            if (e2.filter && !e2.filter(t4.node, a3))
              return;
            var i3 = t4.get("openingElement");
            i3.parent.children = jc.buildChildren(i3.parent);
            var o2, u2 = r2(i3.node.name, i3.node), l2 = [];
            F(u2) ? o2 = u2.name : Pt(u2) && (o2 = u2.value);
            var p2 = { tagExpr: u2, tagName: o2, args: l2, pure: false };
            e2.pre && e2.pre(p2, a3);
            var d2 = i3.node.attributes;
            d2 = d2.length ? function(e3, t5) {
              var r3 = [], a4 = [], i4 = t5.opts.useSpread, o3 = i4 !== void 0 && i4;
              if (typeof o3 != "boolean")
                throw new Error("transform-react-jsx currently only accepts a boolean option for useSpread (defaults to false)");
              var u3 = t5.opts.useBuiltIns || false;
              if (typeof u3 != "boolean")
                throw new Error("transform-react-jsx currently only accepts a boolean option for useBuiltIns (defaults to false)");
              if (o3 && u3)
                throw new Error("transform-react-jsx currently only accepts useBuiltIns or useSpread but not both");
              if (o3) {
                return Rs(e3.map(n2));
              }
              for (; e3.length; ) {
                var l3 = e3.shift();
                Ze(l3) ? (r3 = s2(r3, a4), a4.push(l3.argument)) : r3.push(n2(l3));
              }
              if (s2(r3, a4), a4.length === 1)
                e3 = a4[0];
              else {
                V(a4[0]) || a4.unshift(Rs([])), e3 = ls(u3 ? Fs2(Ds("Object"), Ds("assign")) : t5.addHelper("extends"), a4);
              }
              return e3;
            }(d2, a3) : Ts();
            l2.push.apply(l2, [d2].concat(c(t4.node.children))), e2.post && e2.post(p2, a3);
            var f2 = p2.call || ls(p2.callee, l2);
            p2.pure && ok(f2);
            return f2;
          }(t3, a2);
          i2 && t3.replaceWith(yc(i2, t3.node));
        } }, t2.JSXFragment = { exit: function(t3, r3) {
          if (e2.compat)
            throw t3.buildCodeFrameError("Fragment tags are only supported in React 16 and up.");
          var n3 = function(t4, r4) {
            if (e2.filter && !e2.filter(t4.node, r4))
              return;
            var n4 = t4.get("openingElement");
            n4.parent.children = jc.buildChildren(n4.parent);
            var s3 = [], a2 = null, i2 = { tagExpr: r4.get("jsxFragIdentifier")(), tagName: a2, args: s3, pure: false };
            e2.pre && e2.pre(i2, r4);
            s3.push.apply(s3, [Ts()].concat(c(t4.node.children))), e2.post && e2.post(i2, r4);
            r4.set("usedFragment", true);
            var o2 = i2.call || ls(i2.callee, s3);
            i2.pure && ok(o2);
            return o2;
          }(t3, r3);
          n3 && t3.replaceWith(yc(n3, t3.node));
        } }, t2;
        function r2(e3, t3) {
          if (Je(e3)) {
            if (e3.name === "this" && Ac(e3, t3))
              return Ws();
            if (!Pr(e3.name, false))
              return Cs(e3.name);
            e3.type = "Identifier";
          } else {
            if (Ye(e3))
              return Fs2(r2(e3.object, e3), r2(e3.property, e3));
            if (Qe(e3))
              return Cs(e3.namespace.name + ":" + e3.name.name);
          }
          return e3;
        }
        function n2(e3) {
          var t3, r3 = function(e4) {
            return ze(e4) ? e4.expression : e4;
          }(e3.value || js(true));
          if (Ze(e3))
            return ya(e3.argument);
          R(r3) && !ze(e3.value) && (r3.value = r3.value.replace(/\n\s+/g, " "), (t3 = r3.extra) == null || delete t3.raw);
          return Qe(e3.name) ? e3.name = Cs(e3.name.namespace.name + ":" + e3.name.name.name) : Pr(e3.name.name, false) ? e3.name.type = "Identifier" : e3.name = Cs(e3.name.name), yc(Bs(e3.name, r3), e3);
        }
        function s2(e3, t3) {
          return e3.length ? (t3.push(Rs(e3)), []) : e3;
        }
      }
      var C_ = jF(function(e2) {
        function t2(e3, t3) {
          return qe(e3) && Je(e3.name, { name: t3 });
        }
        return e2.assertVersion(7), { name: "transform-react-inline-elements", visitor: w_({ filter: function(e3) {
          return e3.openingElement && !function(e4) {
            for (var r2 = 0; r2 < e4.length; r2++) {
              var n2 = e4[r2];
              if (Ze(n2))
                return true;
              if (t2(n2, "ref"))
                return true;
            }
            return false;
          }(e3.openingElement.attributes);
        }, pre: function(e3) {
          var t3 = e3.tagName, r2 = e3.args;
          jc.isCompatTag(t3) ? r2.push(Cs(t3)) : r2.push(e3.tagExpr);
        }, post: function(e3, t3) {
          e3.callee = t3.addHelper("jsx");
          var r2 = e3.args[1], n2 = false;
          if (V(r2)) {
            var s2 = r2.properties.findIndex(function(e4) {
              return F(e4.key, { name: "key" });
            });
            s2 > -1 && (e3.args.splice(2, 0, r2.properties[s2].value), r2.properties.splice(s2, 1), n2 = true);
          } else
            B(r2) && e3.args.splice(1, 1, Rs([]));
          !n2 && e3.args.length > 2 && e3.args.splice(2, 0, qs("void", Ss(0))), e3.pure = true;
        } }) };
      }), S_ = "react", T_ = "React.createElement", j_ = "React.Fragment", P_ = /\*?\s*@jsxImportSource\s+([^\s]+)/, I_ = /\*?\s*@jsxRuntime\s+([^\s]+)/, F_ = /\*?\s*@jsx\s+([^\s]+)/, k_ = /\*?\s*@jsxFrag\s+([^\s]+)/, O_ = function(e2, t2) {
        return e2.get("@babel/plugin-react-jsx/" + t2);
      }, R_ = function(e2, t2, r2) {
        return e2.set("@babel/plugin-react-jsx/" + t2, r2);
      };
      function N_(e2) {
        var t2 = e2.name, r2 = e2.development;
        return jF(function(e3, n2) {
          var s2 = n2.pure, a2 = n2.throwIfNamespace, i2 = a2 === void 0 || a2, o2 = n2.filter, u2 = n2.runtime, l2 = u2 === void 0 ? r2 ? "automatic" : "classic" : u2, p2 = n2.importSource, d2 = p2 === void 0 ? S_ : p2, h2 = n2.pragma, m2 = h2 === void 0 ? T_ : h2, y2 = n2.pragmaFrag, g2 = y2 === void 0 ? j_ : y2, v2 = n2.useSpread, b2 = v2 !== void 0 && v2, E2 = n2.useBuiltIns, x2 = E2 !== void 0 && E2;
          if (l2 === "classic") {
            if (typeof b2 != "boolean")
              throw new Error("transform-react-jsx currently only accepts a boolean option for useSpread (defaults to false)");
            if (typeof x2 != "boolean")
              throw new Error("transform-react-jsx currently only accepts a boolean option for useBuiltIns (defaults to false)");
            if (b2 && x2)
              throw new Error("transform-react-jsx currently only accepts useBuiltIns or useSpread but not both");
          }
          var D2 = { JSXOpeningElement: function(e4, t3) {
            for (var r3, n3 = f(e4.get("attributes")); !(r3 = n3()).done; ) {
              var s3 = r3.value;
              if (s3.isJSXElement()) {
                var a3 = s3.node.name.name;
                if (a3 === "__source" || a3 === "__self")
                  throw e4.buildCodeFrameError("__source and __self should not be defined in props and are reserved for internal usage.");
              }
            }
            var i3 = Mi(Xi("__self"), Wi(Ws())), o3 = Mi(Xi("__source"), Wi(function(e5, t4) {
              var r4 = e5.node.loc;
              if (!r4)
                return e5.scope.buildUndefinedNode();
              if (!t4.fileNameIdentifier) {
                var n4 = t4.filename, s4 = n4 === void 0 ? "" : n4, a4 = e5.scope.generateUidIdentifier("_jsxFileName"), i4 = e5.hub.getScope();
                i4 && i4.push({ id: a4, init: Cs(s4) }), t4.fileNameIdentifier = a4;
              }
              return function(e6, t5, r5) {
                var n5 = t5 != null ? Ss(t5) : Ts(), s5 = r5 != null ? Ss(r5 + 1) : Ts(), a5 = Bs(Ds("fileName"), e6), i5 = Bs(Ds("lineNumber"), n5), o4 = Bs(Ds("columnNumber"), s5);
                return Rs([a5, i5, o4]);
              }(Ju(t4.fileNameIdentifier), r4.start.line, r4.start.column);
            }(e4, t3)));
            e4.pushContainer("attributes", [i3, o3]);
          } };
          return { name: t2, inherits: $F, visitor: { JSXNamespacedName: function(e4) {
            if (i2)
              throw e4.buildCodeFrameError("Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.");
          }, JSXSpreadChild: function(e4) {
            throw e4.buildCodeFrameError("Spread children are not supported in React.");
          }, Program: { enter: function(e4, t3) {
            var s3 = t3.file, a3 = l2, i3 = d2, o3 = m2, u3 = g2, c2 = !!n2.importSource, p3 = !!n2.pragma, h3 = !!n2.pragmaFrag;
            if (s3.ast.comments)
              for (var y3, v3 = f(s3.ast.comments); !(y3 = v3()).done; ) {
                var b3 = y3.value, E3 = P_.exec(b3.value);
                E3 && (i3 = E3[1], c2 = true);
                var x3 = I_.exec(b3.value);
                x3 && (a3 = x3[1]);
                var A3 = F_.exec(b3.value);
                A3 && (o3 = A3[1], p3 = true);
                var w3 = k_.exec(b3.value);
                w3 && (u3 = w3[1], h3 = true);
              }
            if (R_(t3, "runtime", a3), a3 === "classic") {
              if (c2)
                throw e4.buildCodeFrameError("importSource cannot be set when runtime is classic.");
              var C3 = B_(o3), S3 = B_(u3);
              R_(t3, "id/createElement", function() {
                return Ju(C3);
              }), R_(t3, "id/fragment", function() {
                return Ju(S3);
              }), R_(t3, "defaultPure", o3 === T_);
            } else {
              if (a3 !== "automatic")
                throw e4.buildCodeFrameError('Runtime must be either "classic" or "automatic".');
              if (p3 || h3)
                throw e4.buildCodeFrameError("pragma and pragmaFrag cannot be set when runtime is automatic.");
              var T3 = function(n3, s4) {
                return R_(t3, n3, function(e5, t4, n4, s5) {
                  return function() {
                    var a4 = function(e6, t5) {
                      switch (t5) {
                        case "Fragment":
                          return e6 + "/" + (r2 ? "jsx-dev-runtime" : "jsx-runtime");
                        case "jsxDEV":
                          return e6 + "/jsx-dev-runtime";
                        case "jsx":
                        case "jsxs":
                          return e6 + "/jsx-runtime";
                        case "createElement":
                          return e6;
                      }
                    }(s5, n4);
                    if (EE(t4)) {
                      var i4 = O_(e5, "imports/" + n4);
                      return i4 ? Ju(i4) : (i4 = DE(t4, n4, a4, { importedInterop: "uncompiled", importPosition: "after" }), R_(e5, "imports/" + n4, i4), i4);
                    }
                    var o4 = O_(e5, "requires/" + a4);
                    return o4 ? o4 = Ju(o4) : (o4 = function(e6, t5, r3) {
                      return new xE(e6).addNamespace(t5, r3);
                    }(t4, a4, { importedInterop: "uncompiled" }), R_(e5, "requires/" + a4, o4)), Fs2(o4, Ds(n4));
                  };
                }(t3, e4, s4, i3));
              };
              T3("id/jsx", r2 ? "jsxDEV" : "jsx"), T3("id/jsxs", r2 ? "jsxDEV" : "jsxs"), T3("id/createElement", "createElement"), T3("id/fragment", "Fragment"), R_(t3, "defaultPure", i3 === S_);
            }
            r2 && e4.traverse(D2, t3);
          } }, JSXElement: { exit: function(e4, t3) {
            var n3;
            n3 = O_(t3, "runtime") === "classic" || function(e5) {
              for (var t4 = e5.get("openingElement").node.attributes, r3 = false, n4 = 0; n4 < t4.length; n4++) {
                var s3 = t4[n4];
                if (r3 && qe(s3) && s3.name.name === "key")
                  return true;
                Ze(s3) && (r3 = true);
              }
              return false;
            }(e4) ? function(e5, t4) {
              var r3 = e5.get("openingElement");
              return A2(t4, "createElement", [j2(r3), P2(t4, e5, r3.get("attributes"))].concat(c(jc.buildChildren(e5.node))));
            }(e4, t3) : function(e5, t4) {
              for (var n4, s3 = e5.get("openingElement"), a3 = [j2(s3)], i3 = [], o3 = Object.create(null), u3 = f(s3.get("attributes")); !(n4 = u3()).done; ) {
                var l3 = n4.value;
                if (l3.isJSXAttribute() && Je(l3.node.name)) {
                  var c2 = l3.node.name.name;
                  switch (c2) {
                    case "__source":
                    case "__self":
                      if (o3[c2])
                        throw __(e5, c2);
                    case "key":
                      var p3 = C2(l3.node.value);
                      if (p3 === null)
                        throw l3.buildCodeFrameError('Please provide an explicit key value. Using "key" as a shorthand for "key={true}" is not allowed.');
                      o3[c2] = p3;
                      break;
                    default:
                      i3.push(l3);
                  }
                } else
                  i3.push(l3);
              }
              var d3, h3, m3, y3, g3 = jc.buildChildren(e5.node);
              d3 = i3.length || g3.length ? function(e6, t5, r3) {
                var n5 = e6.reduce(S2, []);
                (r3 == null ? void 0 : r3.length) > 0 && n5.push(T2(r3));
                return Rs(n5);
              }(i3, 0, g3) : Rs([]);
              a3.push(d3), r2 ? a3.push((h3 = o3.key) != null ? h3 : e5.scope.buildUndefinedNode(), js(g3.length > 1), (m3 = o3.__source) != null ? m3 : e5.scope.buildUndefinedNode(), (y3 = o3.__self) != null ? y3 : Ws()) : o3.key !== void 0 && a3.push(o3.key);
              return A2(t4, g3.length > 1 ? "jsxs" : "jsx", a3);
            }(e4, t3), e4.replaceWith(yc(n3, e4.node));
          } }, JSXFragment: { exit: function(e4, t3) {
            var n3;
            n3 = O_(t3, "runtime") === "classic" ? function(e5, t4) {
              if (o2 && !o2(e5.node, t4))
                return;
              return A2(t4, "createElement", [O_(t4, "id/fragment")(), Ts()].concat(c(jc.buildChildren(e5.node))));
            }(e4, t3) : function(e5, t4) {
              var n4 = [O_(t4, "id/fragment")()], s3 = jc.buildChildren(e5.node);
              n4.push(Rs(s3.length > 0 ? [T2(s3)] : [])), r2 && n4.push(e5.scope.buildUndefinedNode(), js(s3.length > 1));
              return A2(t4, s3.length > 1 ? "jsxs" : "jsx", n4);
            }(e4, t3), e4.replaceWith(yc(n3, e4.node));
          } }, JSXAttribute: function(e4) {
            $e(e4.node.value) && (e4.node.value = Wi(e4.node.value));
          } } };
          function A2(e4, t3, r3) {
            var n3 = ls(O_(e4, "id/" + t3)(), r3);
            return (s2 != null ? s2 : O_(e4, "defaultPure")) && ok(n3), n3;
          }
          function w2(e4, t3) {
            if (Je(e4)) {
              if (e4.name === "this" && Ac(e4, t3))
                return Ws();
              if (!Pr(e4.name, false))
                return Cs(e4.name);
              e4.type = "Identifier";
            } else {
              if (Ye(e4))
                return Fs2(w2(e4.object, e4), w2(e4.property, e4));
              if (Qe(e4))
                return Cs(e4.namespace.name + ":" + e4.name.name);
            }
            return e4;
          }
          function C2(e4) {
            return ze(e4) ? e4.expression : e4;
          }
          function S2(e4, t3) {
            if (Ze(t3.node)) {
              var r3 = t3.node.argument;
              return V(r3) ? e4.push.apply(e4, c(r3.properties)) : e4.push(ya(r3)), e4;
            }
            var n3, s3 = C2(t3.node.name.name !== "key" ? t3.node.value || js(true) : t3.node.value);
            if (t3.node.name.name === "key" && s3 === null)
              throw t3.buildCodeFrameError('Please provide an explicit key value. Using "key" as a shorthand for "key={true}" is not allowed.');
            R(s3) && !ze(t3.node.value) && (s3.value = s3.value.replace(/\n\s+/g, " "), (n3 = s3.extra) == null || delete n3.raw);
            return Qe(t3.node.name) ? t3.node.name = Cs(t3.node.name.namespace.name + ":" + t3.node.name.name.name) : Pr(t3.node.name.name, false) ? t3.node.name.type = "Identifier" : t3.node.name = Cs(t3.node.name.name), e4.push(yc(Bs(t3.node.name, s3), t3.node)), e4;
          }
          function T2(e4) {
            var t3;
            if (e4.length === 1)
              t3 = e4[0];
            else {
              if (!(e4.length > 1))
                return;
              t3 = ts(e4);
            }
            return Bs(Ds("children"), t3);
          }
          function j2(e4) {
            var t3, r3 = w2(e4.node.name, e4.node);
            return F(r3) ? t3 = r3.name : Pt(r3) && (t3 = r3.value), jc.isCompatTag(t3) ? Cs(t3) : r3;
          }
          function P2(e4, t3, r3) {
            var n3 = O_(e4, "runtime");
            if (n3 !== "automatic") {
              var s3 = [], a3 = r3.reduce(S2, []);
              if (b2)
                a3.length && s3.push(Rs(a3));
              else {
                var i3 = 0;
                a3.forEach(function(e5, t4) {
                  be(e5) && (t4 > i3 && s3.push(Rs(a3.slice(i3, t4))), s3.push(e5.argument), i3 = t4 + 1);
                }), a3.length > i3 && s3.push(Rs(a3.slice(i3)));
              }
              return s3.length ? s3.length === 1 ? s3[0] : (V(s3[0]) || s3.unshift(Rs([])), ls(x2 ? Fs2(Ds("Object"), Ds("assign")) : e4.addHelper("extends"), s3)) : Ts();
            }
            for (var o3, u3 = [], l3 = Object.create(null), c2 = f(r3); !(o3 = c2()).done; ) {
              var p3 = o3.value, d3 = qe(p3) && Je(p3.name) && p3.name.name;
              if (n3 === "automatic" && (d3 === "__source" || d3 === "__self")) {
                if (l3[d3])
                  throw __(t3, d3);
                l3[d3] = true;
              }
              S2(u3, p3);
            }
            return u3.length === 1 && be(u3[0]) ? u3[0].argument : u3.length > 0 ? Rs(u3) : Ts();
          }
        });
      }
      function B_(e2) {
        return e2.split(".").map(function(e3) {
          return Ds(e3);
        }).reduce(function(e3, t2) {
          return Fs2(e3, t2);
        });
      }
      function __(e2, t2) {
        var r2 = "transform-react-jsx-" + t2.slice(2);
        return e2.buildCodeFrameError("Duplicate " + t2 + " prop found. You are most likely using the deprecated " + r2 + " Babel plugin. Both __source and __self are automatically set when using the automatic runtime. Please remove transform-react-jsx-source and transform-react-jsx-self from your Babel config.");
      }
      var L_ = N_({ name: "transform-react-jsx", development: false }), M_ = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-react-jsx-compat", manipulateOptions: function(e3, t2) {
          t2.plugins.push("jsx");
        }, visitor: w_({ pre: function(e3) {
          e3.callee = e3.tagExpr;
        }, post: function(e3) {
          jc.isCompatTag(e3.tagName) && (e3.call = ls(Fs2(Fs2(Ds("React"), Ds("DOM")), e3.tagExpr, Pt(e3.tagExpr)), e3.args));
        }, compat: true }) };
      }), U_ = N_({ name: "transform-react-jsx/development", development: true }), G_ = jF(function(e2) {
        e2.assertVersion(7);
        var t2 = { JSXOpeningElement: function(e3) {
          var t3 = e3.node, r2 = Xi("__self"), n2 = Ws();
          t3.attributes.push(Mi(r2, Wi(n2)));
        } };
        return { name: "transform-react-jsx-self", visitor: { Program: function(e3) {
          e3.traverse(t2);
        } } };
      }), V_ = "__source", W_ = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-react-jsx-source", visitor: { JSXOpeningElement: function(e3, t2) {
          var r2 = Xi(V_), n2 = e3.container.openingElement.loc;
          if (n2) {
            for (var s2 = e3.container.openingElement.attributes, a2 = 0; a2 < s2.length; a2++) {
              var i2 = s2[a2].name;
              if ((i2 == null ? void 0 : i2.name) === V_)
                return;
            }
            if (!t2.fileNameIdentifier) {
              var o2 = t2.filename || "", u2 = e3.scope.generateUidIdentifier("_jsxFileName"), l2 = e3.hub.getScope();
              l2 && l2.push({ id: u2, init: Cs(o2) }), t2.fileNameIdentifier = u2;
            }
            var c2 = function(e4, t3, r3) {
              var n3 = t3 != null ? Ss(t3) : Ts(), s3 = r3 != null ? Ss(r3 + 1) : Ts();
              return Rs([Bs(Ds("fileName"), e4), Bs(Ds("lineNumber"), n3), Bs(Ds("columnNumber"), s3)]);
            }(Ju(t2.fileNameIdentifier), n2.start.line, n2.start.column);
            s2.push(Mi(r2, Wi(c2)));
          }
        } } };
      }), H_ = zt(function(e2) {
        function t2(r2) {
          return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? (e2.exports = t2 = function(e3) {
            return typeof e3;
          }, e2.exports.default = e2.exports, e2.exports.__esModule = true) : (e2.exports = t2 = function(e3) {
            return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
          }, e2.exports.default = e2.exports, e2.exports.__esModule = true), t2(r2);
        }
        e2.exports = t2, e2.exports.default = e2.exports, e2.exports.__esModule = true;
      }, "/$$rollup_base$$/node_modules/@babel/runtime/helpers"), X_ = zt(function(e2) {
        var t2 = H_.default;
        function r2(e3) {
          if (typeof WeakMap != "function")
            return null;
          var t3 = new WeakMap(), n2 = new WeakMap();
          return (r2 = function(e4) {
            return e4 ? n2 : t3;
          })(e3);
        }
        e2.exports = function(e3, n2) {
          if (!n2 && e3 && e3.__esModule)
            return e3;
          if (e3 === null || t2(e3) !== "object" && typeof e3 != "function")
            return { default: e3 };
          var s2 = r2(n2);
          if (s2 && s2.has(e3))
            return s2.get(e3);
          var a2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var o2 in e3)
            if (o2 !== "default" && Object.prototype.hasOwnProperty.call(e3, o2)) {
              var u2 = i2 ? Object.getOwnPropertyDescriptor(e3, o2) : null;
              u2 && (u2.get || u2.set) ? Object.defineProperty(a2, o2, u2) : a2[o2] = e3[o2];
            }
          return a2.default = e3, s2 && s2.set(e3, a2), a2;
        }, e2.exports.default = e2.exports, e2.exports.__esModule = true;
      }, "/$$rollup_base$$/node_modules/@babel/runtime/helpers"), q_ = zt(function(e2) {
        e2.exports = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }, e2.exports.default = e2.exports, e2.exports.__esModule = true;
      }, "/$$rollup_base$$/node_modules/@babel/runtime/helpers"), $_ = function(e2, t2) {
        return function() {
          var r2 = Q_;
          Q_ = e2;
          try {
            for (var n2 = arguments.length, s2 = new Array(n2), a2 = 0; a2 < n2; a2++)
              s2[a2] = arguments[a2];
            return t2.apply(this, s2);
          } finally {
            Q_ = r2;
          }
        };
      }, K_ = Z_, z_ = function(e2) {
        var t2 = Z_();
        return t2.memberExpression(t2.identifier("regeneratorRuntime"), t2.identifier(e2), false);
      }, J_ = function(e2) {
        return e2.isReferenced() || e2.parentPath.isAssignmentExpression({ left: e2.node });
      }, Y_ = function(e2, t2) {
        t2 ? e2.replaceWith(t2) : e2.remove();
      }, Q_ = null;
      function Z_() {
        return Q_;
      }
      var eL = Object.defineProperty({ wrapWithTypes: $_, getTypes: K_, runtimeProperty: z_, isReference: J_, replaceWithOrRemove: Y_ }, "__esModule", { value: true }), tL = X_(eL), rL = Object.prototype.hasOwnProperty, nL = function(e2) {
        var t2 = tL.getTypes();
        t2.assertFunction(e2.node);
        var r2 = {};
        function n2(e3, n3) {
          var s3 = e3.node, a3 = e3.scope;
          t2.assertVariableDeclaration(s3);
          var i2 = [];
          return s3.declarations.forEach(function(e4) {
            r2[e4.id.name] = t2.identifier(e4.id.name), a3.removeBinding(e4.id.name), e4.init ? i2.push(t2.assignmentExpression("=", e4.id, e4.init)) : n3 && i2.push(e4.id);
          }), i2.length === 0 ? null : i2.length === 1 ? i2[0] : t2.sequenceExpression(i2);
        }
        e2.get("body").traverse({ VariableDeclaration: { exit: function(e3) {
          var r3 = n2(e3, false);
          r3 === null ? e3.remove() : tL.replaceWithOrRemove(e3, t2.expressionStatement(r3)), e3.skip();
        } }, ForStatement: function(e3) {
          var t3 = e3.get("init");
          t3.isVariableDeclaration() && tL.replaceWithOrRemove(t3, n2(t3, false));
        }, ForXStatement: function(e3) {
          var t3 = e3.get("left");
          t3.isVariableDeclaration() && tL.replaceWithOrRemove(t3, n2(t3, true));
        }, FunctionDeclaration: function(e3) {
          var n3 = e3.node;
          r2[n3.id.name] = n3.id;
          var s3 = t2.expressionStatement(t2.assignmentExpression("=", t2.clone(n3.id), t2.functionExpression(e3.scope.generateUidIdentifierBasedOnNode(n3), n3.params, n3.body, n3.generator, n3.expression)));
          e3.parentPath.isBlockStatement() ? (e3.parentPath.unshiftContainer("body", s3), e3.remove()) : tL.replaceWithOrRemove(e3, s3), e3.scope.removeBinding(n3.id.name), e3.skip();
        }, FunctionExpression: function(e3) {
          e3.skip();
        }, ArrowFunctionExpression: function(e3) {
          e3.skip();
        } });
        var s2 = {};
        e2.get("params").forEach(function(e3) {
          var r3 = e3.node;
          t2.isIdentifier(r3) && (s2[r3.name] = r3);
        });
        var a2 = [];
        return Object.keys(r2).forEach(function(e3) {
          rL.call(s2, e3) || a2.push(t2.variableDeclarator(r2[e3], null));
        }), a2.length === 0 ? null : t2.variableDeclaration("var", a2);
      }, sL = q_(vE);
      function aL() {
        sL.default.ok(this instanceof aL);
      }
      function iL(e2) {
        aL.call(this), (0, eL.getTypes)().assertLiteral(e2), this.returnLoc = e2;
      }
      (0, gE.inherits)(iL, aL);
      var oL = iL;
      function uL(e2, t2, r2) {
        aL.call(this);
        var n2 = (0, eL.getTypes)();
        n2.assertLiteral(e2), n2.assertLiteral(t2), r2 ? n2.assertIdentifier(r2) : r2 = null, this.breakLoc = e2, this.continueLoc = t2, this.label = r2;
      }
      (0, gE.inherits)(uL, aL);
      var lL = uL;
      function cL(e2) {
        aL.call(this), (0, eL.getTypes)().assertLiteral(e2), this.breakLoc = e2;
      }
      (0, gE.inherits)(cL, aL);
      var pL = cL;
      function dL(e2, t2, r2) {
        aL.call(this), (0, eL.getTypes)().assertLiteral(e2), t2 ? sL.default.ok(t2 instanceof hL) : t2 = null, r2 ? sL.default.ok(r2 instanceof yL) : r2 = null, sL.default.ok(t2 || r2), this.firstLoc = e2, this.catchEntry = t2, this.finallyEntry = r2;
      }
      (0, gE.inherits)(dL, aL);
      var fL = dL;
      function hL(e2, t2) {
        aL.call(this);
        var r2 = (0, eL.getTypes)();
        r2.assertLiteral(e2), r2.assertIdentifier(t2), this.firstLoc = e2, this.paramId = t2;
      }
      (0, gE.inherits)(hL, aL);
      var mL = hL;
      function yL(e2, t2) {
        aL.call(this);
        var r2 = (0, eL.getTypes)();
        r2.assertLiteral(e2), r2.assertLiteral(t2), this.firstLoc = e2, this.afterLoc = t2;
      }
      (0, gE.inherits)(yL, aL);
      var gL = yL;
      function vL(e2, t2) {
        aL.call(this);
        var r2 = (0, eL.getTypes)();
        r2.assertLiteral(e2), r2.assertIdentifier(t2), this.breakLoc = e2, this.label = t2;
      }
      (0, gE.inherits)(vL, aL);
      var bL = vL;
      function EL(e2) {
        sL.default.ok(this instanceof EL), sL.default.ok(e2 instanceof iM.Emitter), this.emitter = e2, this.entryStack = [new iL(e2.finalLoc)];
      }
      var xL = EL.prototype, DL = EL;
      xL.withEntry = function(e2, t2) {
        sL.default.ok(e2 instanceof aL), this.entryStack.push(e2);
        try {
          t2.call(this.emitter);
        } finally {
          var r2 = this.entryStack.pop();
          sL.default.strictEqual(r2, e2);
        }
      }, xL._findLeapLocation = function(e2, t2) {
        for (var r2 = this.entryStack.length - 1; r2 >= 0; --r2) {
          var n2 = this.entryStack[r2], s2 = n2[e2];
          if (s2) {
            if (t2) {
              if (n2.label && n2.label.name === t2.name)
                return s2;
            } else if (!(n2 instanceof vL))
              return s2;
          }
        }
        return null;
      }, xL.getBreakLoc = function(e2) {
        return this._findLeapLocation("breakLoc", e2);
      }, xL.getContinueLoc = function(e2) {
        return this._findLeapLocation("continueLoc", e2);
      };
      var AL = { FunctionEntry: oL, LoopEntry: lL, SwitchEntry: pL, TryEntry: fL, CatchEntry: mL, FinallyEntry: gL, LabeledEntry: bL, LeapManager: DL }, wL = Object, CL = Object.defineProperty, SL = Object.create;
      function TL(e2, t2, r2) {
        if (CL)
          try {
            CL.call(wL, e2, t2, { value: r2 });
          } catch (n2) {
            e2[t2] = r2;
          }
        else
          e2[t2] = r2;
      }
      function jL(e2) {
        return e2 && (TL(e2, "call", e2.call), TL(e2, "apply", e2.apply)), e2;
      }
      jL(CL), jL(SL);
      var PL = jL(Object.prototype.hasOwnProperty), IL = jL(Number.prototype.toString), FL = jL(String.prototype.slice), kL = function() {
      };
      function OL(e2) {
        return SL ? SL.call(wL, e2) : (kL.prototype = e2 || null, new kL());
      }
      var RL = Math.random, NL = OL(null);
      function BL() {
        do {
          var e2 = _L(FL.call(IL.call(RL(), 36), 2));
        } while (PL.call(NL, e2));
        return NL[e2] = e2;
      }
      function _L(e2) {
        var t2 = {};
        return t2[e2] = true, Object.keys(t2)[0];
      }
      var LL = Object.getOwnPropertyNames;
      function ML(e2) {
        return OL(null);
      }
      Object.getOwnPropertyNames = function(e2) {
        for (var t2 = LL(e2), r2 = 0, n2 = 0, s2 = t2.length; r2 < s2; ++r2)
          PL.call(NL, t2[r2]) || (r2 > n2 && (t2[n2] = t2[r2]), ++n2);
        return t2.length = n2, t2;
      };
      var UL = function(e2) {
        var t2 = BL(), r2 = OL(null);
        function n2(n3) {
          return PL.call(n3, t2) || function(n4) {
            var s2;
            TL(n4, t2, function(t3, a2) {
              if (t3 === r2)
                return a2 ? s2 = null : s2 || (s2 = e2(n4));
            });
          }(n3), n3[t2](r2);
        }
        return e2 = e2 || ML, n2.forget = function(e3) {
          PL.call(e3, t2) && e3[t2](r2, true);
        }, n2;
      }, GL = q_(vE), VL = UL(), WL = Object.prototype.hasOwnProperty;
      function HL(e2, t2) {
        function r2(e3) {
          var t3 = (0, eL.getTypes)();
          t3.assertNode(e3);
          var r3 = false;
          function s2(e4) {
            return r3 || (Array.isArray(e4) ? e4.some(s2) : t3.isNode(e4) && (GL.default.strictEqual(r3, false), r3 = n2(e4))), r3;
          }
          var a2 = t3.VISITOR_KEYS[e3.type];
          if (a2)
            for (var i2 = 0; i2 < a2.length; i2++) {
              s2(e3[a2[i2]]);
            }
          return r3;
        }
        function n2(n3) {
          (0, eL.getTypes)().assertNode(n3);
          var s2 = VL(n3);
          return WL.call(s2, e2) ? s2[e2] : WL.call(XL, n3.type) ? s2[e2] = false : WL.call(t2, n3.type) ? s2[e2] = true : s2[e2] = r2(n3);
        }
        return n2.onlyChildren = r2, n2;
      }
      var XL = { FunctionExpression: true, ArrowFunctionExpression: true }, qL = { CallExpression: true, ForInStatement: true, UnaryExpression: true, BinaryExpression: true, AssignmentExpression: true, UpdateExpression: true, NewExpression: true }, $L = { YieldExpression: true, BreakStatement: true, ContinueStatement: true, ReturnStatement: true, ThrowStatement: true };
      for (var KL in $L)
        WL.call($L, KL) && (qL[KL] = $L[KL]);
      var zL = { hasSideEffects: HL("hasSideEffects", qL), containsLeap: HL("containsLeap", $L) }, JL = q_(vE), YL = X_(AL), QL = X_(zL), ZL = X_(eL), eM = Object.prototype.hasOwnProperty;
      function tM(e2) {
        JL.default.ok(this instanceof tM), ZL.getTypes().assertIdentifier(e2), this.nextTempId = 0, this.contextId = e2, this.listing = [], this.marked = [true], this.insertedLocs = new Set(), this.finalLoc = this.loc(), this.tryEntries = [], this.leapManager = new YL.LeapManager(this);
      }
      var rM = tM.prototype, nM = tM;
      function sM(e2) {
        return new Error("all declarations should have been transformed into assignments before the Exploder began its work: " + JSON.stringify(e2));
      }
      rM.loc = function() {
        var e2 = ZL.getTypes().numericLiteral(-1);
        return this.insertedLocs.add(e2), e2;
      }, rM.getInsertedLocs = function() {
        return this.insertedLocs;
      }, rM.getContextId = function() {
        return ZL.getTypes().clone(this.contextId);
      }, rM.mark = function(e2) {
        ZL.getTypes().assertLiteral(e2);
        var t2 = this.listing.length;
        return e2.value === -1 ? e2.value = t2 : JL.default.strictEqual(e2.value, t2), this.marked[t2] = true, e2;
      }, rM.emit = function(e2) {
        var t2 = ZL.getTypes();
        t2.isExpression(e2) && (e2 = t2.expressionStatement(e2)), t2.assertStatement(e2), this.listing.push(e2);
      }, rM.emitAssign = function(e2, t2) {
        return this.emit(this.assign(e2, t2)), e2;
      }, rM.assign = function(e2, t2) {
        var r2 = ZL.getTypes();
        return r2.expressionStatement(r2.assignmentExpression("=", r2.cloneDeep(e2), t2));
      }, rM.contextProperty = function(e2, t2) {
        var r2 = ZL.getTypes();
        return r2.memberExpression(this.getContextId(), t2 ? r2.stringLiteral(e2) : r2.identifier(e2), !!t2);
      }, rM.stop = function(e2) {
        e2 && this.setReturnValue(e2), this.jump(this.finalLoc);
      }, rM.setReturnValue = function(e2) {
        ZL.getTypes().assertExpression(e2.value), this.emitAssign(this.contextProperty("rval"), this.explodeExpression(e2));
      }, rM.clearPendingException = function(e2, t2) {
        var r2 = ZL.getTypes();
        r2.assertLiteral(e2);
        var n2 = r2.callExpression(this.contextProperty("catch", true), [r2.clone(e2)]);
        t2 ? this.emitAssign(t2, n2) : this.emit(n2);
      }, rM.jump = function(e2) {
        this.emitAssign(this.contextProperty("next"), e2), this.emit(ZL.getTypes().breakStatement());
      }, rM.jumpIf = function(e2, t2) {
        var r2 = ZL.getTypes();
        r2.assertExpression(e2), r2.assertLiteral(t2), this.emit(r2.ifStatement(e2, r2.blockStatement([this.assign(this.contextProperty("next"), t2), r2.breakStatement()])));
      }, rM.jumpIfNot = function(e2, t2) {
        var r2, n2 = ZL.getTypes();
        n2.assertExpression(e2), n2.assertLiteral(t2), r2 = n2.isUnaryExpression(e2) && e2.operator === "!" ? e2.argument : n2.unaryExpression("!", e2), this.emit(n2.ifStatement(r2, n2.blockStatement([this.assign(this.contextProperty("next"), t2), n2.breakStatement()])));
      }, rM.makeTempVar = function() {
        return this.contextProperty("t" + this.nextTempId++);
      }, rM.getContextFunction = function(e2) {
        var t2 = ZL.getTypes();
        return t2.functionExpression(e2 || null, [this.getContextId()], t2.blockStatement([this.getDispatchLoop()]), false, false);
      }, rM.getDispatchLoop = function() {
        var e2, t2 = this, r2 = ZL.getTypes(), n2 = [], s2 = false;
        return t2.listing.forEach(function(a2, i2) {
          t2.marked.hasOwnProperty(i2) && (n2.push(r2.switchCase(r2.numericLiteral(i2), e2 = [])), s2 = false), s2 || (e2.push(a2), r2.isCompletionStatement(a2) && (s2 = true));
        }), this.finalLoc.value = this.listing.length, n2.push(r2.switchCase(this.finalLoc, []), r2.switchCase(r2.stringLiteral("end"), [r2.returnStatement(r2.callExpression(this.contextProperty("stop"), []))])), r2.whileStatement(r2.numericLiteral(1), r2.switchStatement(r2.assignmentExpression("=", this.contextProperty("prev"), this.contextProperty("next")), n2));
      }, rM.getTryLocsList = function() {
        if (this.tryEntries.length === 0)
          return null;
        var e2 = ZL.getTypes(), t2 = 0;
        return e2.arrayExpression(this.tryEntries.map(function(r2) {
          var n2 = r2.firstLoc.value;
          JL.default.ok(n2 >= t2, "try entries out of order"), t2 = n2;
          var s2 = r2.catchEntry, a2 = r2.finallyEntry, i2 = [r2.firstLoc, s2 ? s2.firstLoc : null];
          return a2 && (i2[2] = a2.firstLoc, i2[3] = a2.afterLoc), e2.arrayExpression(i2.map(function(t3) {
            return t3 && e2.clone(t3);
          }));
        }));
      }, rM.explode = function(e2, t2) {
        var r2 = ZL.getTypes(), n2 = e2.node, s2 = this;
        if (r2.assertNode(n2), r2.isDeclaration(n2))
          throw sM(n2);
        if (r2.isStatement(n2))
          return s2.explodeStatement(e2);
        if (r2.isExpression(n2))
          return s2.explodeExpression(e2, t2);
        switch (n2.type) {
          case "Program":
            return e2.get("body").map(s2.explodeStatement, s2);
          case "VariableDeclarator":
            throw sM(n2);
          case "Property":
          case "SwitchCase":
          case "CatchClause":
            throw new Error(n2.type + " nodes should be handled by their parents");
          default:
            throw new Error("unknown Node of type " + JSON.stringify(n2.type));
        }
      }, rM.explodeStatement = function(e2, t2) {
        var r2, n2, s2, a2 = ZL.getTypes(), i2 = e2.node, o2 = this;
        if (a2.assertStatement(i2), t2 ? a2.assertIdentifier(t2) : t2 = null, a2.isBlockStatement(i2))
          e2.get("body").forEach(function(e3) {
            o2.explodeStatement(e3);
          });
        else if (QL.containsLeap(i2))
          switch (i2.type) {
            case "ExpressionStatement":
              o2.explodeExpression(e2.get("expression"), true);
              break;
            case "LabeledStatement":
              n2 = this.loc(), o2.leapManager.withEntry(new YL.LabeledEntry(n2, i2.label), function() {
                o2.explodeStatement(e2.get("body"), i2.label);
              }), o2.mark(n2);
              break;
            case "WhileStatement":
              r2 = this.loc(), n2 = this.loc(), o2.mark(r2), o2.jumpIfNot(o2.explodeExpression(e2.get("test")), n2), o2.leapManager.withEntry(new YL.LoopEntry(n2, r2, t2), function() {
                o2.explodeStatement(e2.get("body"));
              }), o2.jump(r2), o2.mark(n2);
              break;
            case "DoWhileStatement":
              var u2 = this.loc(), l2 = this.loc();
              n2 = this.loc(), o2.mark(u2), o2.leapManager.withEntry(new YL.LoopEntry(n2, l2, t2), function() {
                o2.explode(e2.get("body"));
              }), o2.mark(l2), o2.jumpIf(o2.explodeExpression(e2.get("test")), u2), o2.mark(n2);
              break;
            case "ForStatement":
              s2 = this.loc();
              var c2 = this.loc();
              n2 = this.loc(), i2.init && o2.explode(e2.get("init"), true), o2.mark(s2), i2.test && o2.jumpIfNot(o2.explodeExpression(e2.get("test")), n2), o2.leapManager.withEntry(new YL.LoopEntry(n2, c2, t2), function() {
                o2.explodeStatement(e2.get("body"));
              }), o2.mark(c2), i2.update && o2.explode(e2.get("update"), true), o2.jump(s2), o2.mark(n2);
              break;
            case "TypeCastExpression":
              return o2.explodeExpression(e2.get("expression"));
            case "ForInStatement":
              s2 = this.loc(), n2 = this.loc();
              var p2 = o2.makeTempVar();
              o2.emitAssign(p2, a2.callExpression(ZL.runtimeProperty("keys"), [o2.explodeExpression(e2.get("right"))])), o2.mark(s2);
              var d2 = o2.makeTempVar();
              o2.jumpIf(a2.memberExpression(a2.assignmentExpression("=", d2, a2.callExpression(a2.cloneDeep(p2), [])), a2.identifier("done"), false), n2), o2.emitAssign(i2.left, a2.memberExpression(a2.cloneDeep(d2), a2.identifier("value"), false)), o2.leapManager.withEntry(new YL.LoopEntry(n2, s2, t2), function() {
                o2.explodeStatement(e2.get("body"));
              }), o2.jump(s2), o2.mark(n2);
              break;
            case "BreakStatement":
              o2.emitAbruptCompletion({ type: "break", target: o2.leapManager.getBreakLoc(i2.label) });
              break;
            case "ContinueStatement":
              o2.emitAbruptCompletion({ type: "continue", target: o2.leapManager.getContinueLoc(i2.label) });
              break;
            case "SwitchStatement":
              var f2 = o2.emitAssign(o2.makeTempVar(), o2.explodeExpression(e2.get("discriminant")));
              n2 = this.loc();
              for (var h2 = this.loc(), m2 = h2, y2 = [], g2 = i2.cases || [], v2 = g2.length - 1; v2 >= 0; --v2) {
                var b2 = g2[v2];
                a2.assertSwitchCase(b2), b2.test ? m2 = a2.conditionalExpression(a2.binaryExpression("===", a2.cloneDeep(f2), b2.test), y2[v2] = this.loc(), m2) : y2[v2] = h2;
              }
              var E2 = e2.get("discriminant");
              ZL.replaceWithOrRemove(E2, m2), o2.jump(o2.explodeExpression(E2)), o2.leapManager.withEntry(new YL.SwitchEntry(n2), function() {
                e2.get("cases").forEach(function(e3) {
                  var t3 = e3.key;
                  o2.mark(y2[t3]), e3.get("consequent").forEach(function(e4) {
                    o2.explodeStatement(e4);
                  });
                });
              }), o2.mark(n2), h2.value === -1 && (o2.mark(h2), JL.default.strictEqual(n2.value, h2.value));
              break;
            case "IfStatement":
              var x2 = i2.alternate && this.loc();
              n2 = this.loc(), o2.jumpIfNot(o2.explodeExpression(e2.get("test")), x2 || n2), o2.explodeStatement(e2.get("consequent")), x2 && (o2.jump(n2), o2.mark(x2), o2.explodeStatement(e2.get("alternate"))), o2.mark(n2);
              break;
            case "ReturnStatement":
              o2.emitAbruptCompletion({ type: "return", value: o2.explodeExpression(e2.get("argument")) });
              break;
            case "WithStatement":
              throw new Error("WithStatement not supported in generator functions.");
            case "TryStatement":
              n2 = this.loc();
              var D2 = i2.handler, A2 = D2 && this.loc(), w2 = A2 && new YL.CatchEntry(A2, D2.param), C2 = i2.finalizer && this.loc(), S2 = C2 && new YL.FinallyEntry(C2, n2), T2 = new YL.TryEntry(o2.getUnmarkedCurrentLoc(), w2, S2);
              o2.tryEntries.push(T2), o2.updateContextPrevLoc(T2.firstLoc), o2.leapManager.withEntry(T2, function() {
                if (o2.explodeStatement(e2.get("block")), A2) {
                  C2 ? o2.jump(C2) : o2.jump(n2), o2.updateContextPrevLoc(o2.mark(A2));
                  var t3 = e2.get("handler.body"), r3 = o2.makeTempVar();
                  o2.clearPendingException(T2.firstLoc, r3), t3.traverse(aM, { getSafeParam: function() {
                    return a2.cloneDeep(r3);
                  }, catchParamName: D2.param.name }), o2.leapManager.withEntry(w2, function() {
                    o2.explodeStatement(t3);
                  });
                }
                C2 && (o2.updateContextPrevLoc(o2.mark(C2)), o2.leapManager.withEntry(S2, function() {
                  o2.explodeStatement(e2.get("finalizer"));
                }), o2.emit(a2.returnStatement(a2.callExpression(o2.contextProperty("finish"), [S2.firstLoc]))));
              }), o2.mark(n2);
              break;
            case "ThrowStatement":
              o2.emit(a2.throwStatement(o2.explodeExpression(e2.get("argument"))));
              break;
            default:
              throw new Error("unknown Statement of type " + JSON.stringify(i2.type));
          }
        else
          o2.emit(i2);
      };
      var aM = { Identifier: function(e2, t2) {
        e2.node.name === t2.catchParamName && ZL.isReference(e2) && ZL.replaceWithOrRemove(e2, t2.getSafeParam());
      }, Scope: function(e2, t2) {
        e2.scope.hasOwnBinding(t2.catchParamName) && e2.skip();
      } };
      rM.emitAbruptCompletion = function(e2) {
        (function(e3) {
          var t3 = e3.type;
          if (t3 === "normal")
            return !eM.call(e3, "target");
          if (t3 === "break" || t3 === "continue")
            return !eM.call(e3, "value") && ZL.getTypes().isLiteral(e3.target);
          if (t3 === "return" || t3 === "throw")
            return eM.call(e3, "value") && !eM.call(e3, "target");
          return false;
        })(e2) || JL.default.ok(false, "invalid completion record: " + JSON.stringify(e2)), JL.default.notStrictEqual(e2.type, "normal", "normal completions are not abrupt");
        var t2 = ZL.getTypes(), r2 = [t2.stringLiteral(e2.type)];
        e2.type === "break" || e2.type === "continue" ? (t2.assertLiteral(e2.target), r2[1] = this.insertedLocs.has(e2.target) ? e2.target : t2.cloneDeep(e2.target)) : e2.type !== "return" && e2.type !== "throw" || e2.value && (t2.assertExpression(e2.value), r2[1] = this.insertedLocs.has(e2.value) ? e2.value : t2.cloneDeep(e2.value)), this.emit(t2.returnStatement(t2.callExpression(this.contextProperty("abrupt"), r2)));
      }, rM.getUnmarkedCurrentLoc = function() {
        return ZL.getTypes().numericLiteral(this.listing.length);
      }, rM.updateContextPrevLoc = function(e2) {
        var t2 = ZL.getTypes();
        e2 ? (t2.assertLiteral(e2), e2.value === -1 ? e2.value = this.listing.length : JL.default.strictEqual(e2.value, this.listing.length)) : e2 = this.getUnmarkedCurrentLoc(), this.emitAssign(this.contextProperty("prev"), e2);
      }, rM.explodeExpression = function(e2, t2) {
        var r2 = ZL.getTypes(), n2 = e2.node;
        if (!n2)
          return n2;
        r2.assertExpression(n2);
        var s2, a2, i2 = this;
        function o2(e3) {
          if (r2.assertExpression(e3), !t2)
            return e3;
          i2.emit(e3);
        }
        if (!QL.containsLeap(n2))
          return o2(n2);
        var u2 = QL.containsLeap.onlyChildren(n2);
        function l2(e3, t3, n3) {
          JL.default.ok(!n3 || !e3, "Ignoring the result of a child expression but forcing it to be assigned to a temporary variable?");
          var s3 = i2.explodeExpression(t3, n3);
          return n3 || (e3 || u2 && !r2.isLiteral(s3)) && (s3 = i2.emitAssign(e3 || i2.makeTempVar(), s3)), s3;
        }
        switch (n2.type) {
          case "MemberExpression":
            return o2(r2.memberExpression(i2.explodeExpression(e2.get("object")), n2.computed ? l2(null, e2.get("property")) : n2.property, n2.computed));
          case "CallExpression":
            var c2, p2 = e2.get("callee"), d2 = e2.get("arguments"), f2 = [], h2 = false;
            if (d2.forEach(function(e3) {
              h2 = h2 || QL.containsLeap(e3.node);
            }), r2.isMemberExpression(p2.node))
              if (h2) {
                var m2 = l2(i2.makeTempVar(), p2.get("object")), y2 = p2.node.computed ? l2(null, p2.get("property")) : p2.node.property;
                f2.unshift(m2), c2 = r2.memberExpression(r2.memberExpression(r2.cloneDeep(m2), y2, p2.node.computed), r2.identifier("call"), false);
              } else
                c2 = i2.explodeExpression(p2);
            else
              c2 = l2(null, p2), r2.isMemberExpression(c2) && (c2 = r2.sequenceExpression([r2.numericLiteral(0), r2.cloneDeep(c2)]));
            return d2.forEach(function(e3) {
              f2.push(l2(null, e3));
            }), o2(r2.callExpression(c2, f2.map(function(e3) {
              return r2.cloneDeep(e3);
            })));
          case "NewExpression":
            return o2(r2.newExpression(l2(null, e2.get("callee")), e2.get("arguments").map(function(e3) {
              return l2(null, e3);
            })));
          case "ObjectExpression":
            return o2(r2.objectExpression(e2.get("properties").map(function(e3) {
              return e3.isObjectProperty() ? r2.objectProperty(e3.node.key, l2(null, e3.get("value")), e3.node.computed) : e3.node;
            })));
          case "ArrayExpression":
            return o2(r2.arrayExpression(e2.get("elements").map(function(e3) {
              return l2(null, e3);
            })));
          case "SequenceExpression":
            var g2 = n2.expressions.length - 1;
            return e2.get("expressions").forEach(function(e3) {
              e3.key === g2 ? s2 = i2.explodeExpression(e3, t2) : i2.explodeExpression(e3, true);
            }), s2;
          case "LogicalExpression":
            a2 = this.loc(), t2 || (s2 = i2.makeTempVar());
            var v2 = l2(s2, e2.get("left"));
            return n2.operator === "&&" ? i2.jumpIfNot(v2, a2) : (JL.default.strictEqual(n2.operator, "||"), i2.jumpIf(v2, a2)), l2(s2, e2.get("right"), t2), i2.mark(a2), s2;
          case "ConditionalExpression":
            var b2 = this.loc();
            a2 = this.loc();
            var E2 = i2.explodeExpression(e2.get("test"));
            return i2.jumpIfNot(E2, b2), t2 || (s2 = i2.makeTempVar()), l2(s2, e2.get("consequent"), t2), i2.jump(a2), i2.mark(b2), l2(s2, e2.get("alternate"), t2), i2.mark(a2), s2;
          case "UnaryExpression":
            return o2(r2.unaryExpression(n2.operator, i2.explodeExpression(e2.get("argument")), !!n2.prefix));
          case "BinaryExpression":
            return o2(r2.binaryExpression(n2.operator, l2(null, e2.get("left")), l2(null, e2.get("right"))));
          case "AssignmentExpression":
            if (n2.operator === "=")
              return o2(r2.assignmentExpression(n2.operator, i2.explodeExpression(e2.get("left")), i2.explodeExpression(e2.get("right"))));
            var x2 = i2.explodeExpression(e2.get("left")), D2 = i2.emitAssign(i2.makeTempVar(), x2);
            return o2(r2.assignmentExpression("=", r2.cloneDeep(x2), r2.assignmentExpression(n2.operator, r2.cloneDeep(D2), i2.explodeExpression(e2.get("right")))));
          case "UpdateExpression":
            return o2(r2.updateExpression(n2.operator, i2.explodeExpression(e2.get("argument")), n2.prefix));
          case "YieldExpression":
            a2 = this.loc();
            var A2 = n2.argument && i2.explodeExpression(e2.get("argument"));
            if (A2 && n2.delegate) {
              var w2 = i2.makeTempVar(), C2 = r2.returnStatement(r2.callExpression(i2.contextProperty("delegateYield"), [A2, r2.stringLiteral(w2.property.name), a2]));
              return C2.loc = n2.loc, i2.emit(C2), i2.mark(a2), w2;
            }
            i2.emitAssign(i2.contextProperty("next"), a2);
            var S2 = r2.returnStatement(r2.cloneDeep(A2) || null);
            return S2.loc = n2.loc, i2.emit(S2), i2.mark(a2), i2.contextProperty("sent");
          default:
            throw new Error("unknown Expression of type " + JSON.stringify(n2.type));
        }
      };
      var iM = { Emitter: nM }, oM = zt(function(e2, t2) {
        t2.__esModule = true, t2.default = function(e3) {
          var t3 = r2.getTypes();
          if (!e3.node || !t3.isFunction(e3.node))
            throw new Error("replaceShorthandObjectMethod can only be called on Function AST node paths.");
          if (!t3.isObjectMethod(e3.node))
            return e3;
          if (!e3.node.generator)
            return e3;
          var n2 = e3.node.params.map(function(e4) {
            return t3.cloneDeep(e4);
          }), s2 = t3.functionExpression(null, n2, t3.cloneDeep(e3.node.body), e3.node.generator, e3.node.async);
          return r2.replaceWithOrRemove(e3, t3.objectProperty(t3.cloneDeep(e3.node.key), s2, e3.node.computed, false)), e3.get("value");
        };
        var r2 = X_(eL);
      }, "/$$rollup_base$$/node_modules/regenerator-transform/lib"), uM = q_(vE), lM = q_(oM), cM = X_(eL);
      function pM(e2, t2) {
        return e2.generator ? e2.async ? t2.opts.asyncGenerators !== false : t2.opts.generators !== false : !!e2.async && t2.opts.async !== false;
      }
      var dM = UL();
      var fM = { "FunctionExpression|FunctionDeclaration|Method": function(e2) {
        e2.skip();
      }, Identifier: function(e2, t2) {
        e2.node.name === "arguments" && cM.isReference(e2) && (cM.replaceWithOrRemove(e2, t2.getArgsId()), t2.usesArguments = true);
      }, ThisExpression: function(e2, t2) {
        t2.usesThis = true;
      } }, hM = { MetaProperty: function(e2) {
        var t2 = e2.node;
        if (t2.meta.name === "function" && t2.property.name === "sent") {
          var r2 = cM.getTypes();
          cM.replaceWithOrRemove(e2, r2.memberExpression(r2.clone(this.context), r2.identifier("_sent")));
        }
      } }, mM = { Function: function(e2) {
        e2.skip();
      }, AwaitExpression: function(e2) {
        var t2 = cM.getTypes(), r2 = e2.node.argument;
        cM.replaceWithOrRemove(e2, t2.yieldExpression(t2.callExpression(cM.runtimeProperty("awrap"), [r2]), false));
      } }, yM = function(e2) {
        var t2 = e2.types;
        return { Method: function(e3, r2) {
          var n2 = e3.node;
          if (pM(n2, r2)) {
            var s2 = t2.functionExpression(null, [], t2.cloneNode(n2.body, false), n2.generator, n2.async);
            e3.get("body").set("body", [t2.returnStatement(t2.callExpression(s2, []))]), n2.async = false, n2.generator = false, e3.get("body.body.0.argument.callee").unwrapFunctionEnvironment();
          }
        }, Function: { exit: cM.wrapWithTypes(t2, function(e3, r2) {
          var n2 = e3.node;
          if (pM(n2, r2)) {
            n2 = (e3 = (0, lM.default)(e3)).node;
            var s2 = e3.scope.generateUidIdentifier("context"), a2 = e3.scope.generateUidIdentifier("args");
            e3.ensureBlock();
            var i2 = e3.get("body");
            n2.async && i2.traverse(mM), i2.traverse(hM, { context: s2 });
            var o2 = [], u2 = [];
            i2.get("body").forEach(function(e4) {
              var r3 = e4.node;
              t2.isExpressionStatement(r3) && t2.isStringLiteral(r3.expression) || r3 && r3._blockHoist != null ? o2.push(r3) : u2.push(r3);
            }), o2.length > 0 && (i2.node.body = u2);
            var l2 = function(e4) {
              var t3 = cM.getTypes(), r3 = e4.node;
              t3.assertFunction(r3), r3.id || (r3.id = e4.scope.parent.generateUidIdentifier("callee"));
              if (r3.generator && t3.isFunctionDeclaration(r3))
                return function(e5) {
                  var t4 = cM.getTypes(), r4 = e5.node;
                  t4.assertIdentifier(r4.id);
                  var n3 = e5.findParent(function(e6) {
                    return e6.isProgram() || e6.isBlockStatement();
                  });
                  if (!n3)
                    return r4.id;
                  var s3 = n3.node;
                  uM.default.ok(Array.isArray(s3.body));
                  var a3 = dM(s3);
                  a3.decl || (a3.decl = t4.variableDeclaration("var", []), n3.unshiftContainer("body", a3.decl), a3.declPath = n3.get("body.0"));
                  uM.default.strictEqual(a3.declPath.node, a3.decl);
                  var i3 = n3.scope.generateUidIdentifier("marked"), o3 = t4.callExpression(cM.runtimeProperty("mark"), [t4.clone(r4.id)]), u3 = a3.decl.declarations.push(t4.variableDeclarator(i3, o3)) - 1, l3 = a3.declPath.get("declarations." + u3 + ".init");
                  return uM.default.strictEqual(l3.node, o3), l3.addComment("leading", "#__PURE__"), t4.clone(i3);
                }(e4);
              return t3.clone(r3.id);
            }(e3);
            t2.assertIdentifier(n2.id);
            var c2 = t2.identifier(n2.id.name + "$"), p2 = nL(e3), d2 = { usesThis: false, usesArguments: false, getArgsId: function() {
              return t2.clone(a2);
            } };
            if (e3.traverse(fM, d2), d2.usesArguments) {
              p2 = p2 || t2.variableDeclaration("var", []);
              var f2 = t2.identifier("arguments");
              f2._shadowedFunctionLiteral = e3, p2.declarations.push(t2.variableDeclarator(t2.clone(a2), f2));
            }
            var h2 = new iM.Emitter(s2);
            h2.explode(e3.get("body")), p2 && p2.declarations.length > 0 && o2.push(p2);
            var m2 = [h2.getContextFunction(c2)], y2 = h2.getTryLocsList();
            if (n2.generator ? m2.push(l2) : (d2.usesThis || y2 || n2.async) && m2.push(t2.nullLiteral()), d2.usesThis ? m2.push(t2.thisExpression()) : (y2 || n2.async) && m2.push(t2.nullLiteral()), y2 ? m2.push(y2) : n2.async && m2.push(t2.nullLiteral()), n2.async) {
              var g2 = e3.scope;
              do {
                g2.hasOwnBinding("Promise") && g2.rename("Promise");
              } while (g2 = g2.parent);
              m2.push(t2.identifier("Promise"));
            }
            var v2 = t2.callExpression(cM.runtimeProperty(n2.async ? "async" : "wrap"), m2);
            o2.push(t2.returnStatement(v2)), n2.body = t2.blockStatement(o2), e3.get("body.body").forEach(function(e4) {
              return e4.scope.registerDeclaration(e4);
            });
            var b2 = i2.node.directives;
            b2 && (n2.body.directives = b2);
            var E2 = n2.generator;
            E2 && (n2.generator = false), n2.async && (n2.async = false), E2 && t2.isExpression(n2) && (cM.replaceWithOrRemove(e3, t2.callExpression(cM.runtimeProperty("mark"), [n2])), e3.addComment("leading", "#__PURE__"));
            var x2 = h2.getInsertedLocs();
            e3.traverse({ NumericLiteral: function(e4) {
              x2.has(e4.node) && e4.replaceWith(t2.numericLiteral(e4.node.value));
            } }), e3.requeue();
          }
        }) } };
      }, gM = zt(function(e2, t2) {
        t2.__esModule = true, t2.default = function(e3) {
          var t3 = { visitor: yM(e3) }, r2 = e3 && e3.version;
          r2 && parseInt(r2, 10) >= 7 && (t3.name = "regenerator-transform");
          return t3;
        };
      }, "/$$rollup_base$$/node_modules/regenerator-transform/lib").default, vM = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-reserved-words", visitor: { "BindingIdentifier|ReferencedIdentifier": function(e3) {
          Sc(e3.node.name) || e3.scope.rename(e3.node.name);
        } } };
      }), bM = { SEMVER_SPEC_VERSION: "2.0.0", MAX_LENGTH: 256, MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991, MAX_SAFE_COMPONENT_LENGTH: 16 }, EM = typeof ar == "object" && ar.env && ar.env.NODE_DEBUG && /\bsemver\b/i.test(ar.env.NODE_DEBUG) ? function() {
        for (var e2, t2 = arguments.length, r2 = new Array(t2), n2 = 0; n2 < t2; n2++)
          r2[n2] = arguments[n2];
        return (e2 = console).error.apply(e2, ["SEMVER"].concat(r2));
      } : function() {
      }, xM = zt(function(e2, t2) {
        var r2 = bM.MAX_SAFE_COMPONENT_LENGTH, n2 = (t2 = e2.exports = {}).re = [], s2 = t2.src = [], a2 = t2.t = {}, i2 = 0, o2 = function(e3, t3, r3) {
          var o3 = i2++;
          EM(o3, t3), a2[e3] = o3, s2[o3] = t3, n2[o3] = new RegExp(t3, r3 ? "g" : void 0);
        };
        o2("NUMERICIDENTIFIER", "0|[1-9]\\d*"), o2("NUMERICIDENTIFIERLOOSE", "[0-9]+"), o2("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*"), o2("MAINVERSION", "(" + s2[a2.NUMERICIDENTIFIER] + ")\\.(" + s2[a2.NUMERICIDENTIFIER] + ")\\.(" + s2[a2.NUMERICIDENTIFIER] + ")"), o2("MAINVERSIONLOOSE", "(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")"), o2("PRERELEASEIDENTIFIER", "(?:" + s2[a2.NUMERICIDENTIFIER] + "|" + s2[a2.NONNUMERICIDENTIFIER] + ")"), o2("PRERELEASEIDENTIFIERLOOSE", "(?:" + s2[a2.NUMERICIDENTIFIERLOOSE] + "|" + s2[a2.NONNUMERICIDENTIFIER] + ")"), o2("PRERELEASE", "(?:-(" + s2[a2.PRERELEASEIDENTIFIER] + "(?:\\." + s2[a2.PRERELEASEIDENTIFIER] + ")*))"), o2("PRERELEASELOOSE", "(?:-?(" + s2[a2.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + s2[a2.PRERELEASEIDENTIFIERLOOSE] + ")*))"), o2("BUILDIDENTIFIER", "[0-9A-Za-z-]+"), o2("BUILD", "(?:\\+(" + s2[a2.BUILDIDENTIFIER] + "(?:\\." + s2[a2.BUILDIDENTIFIER] + ")*))"), o2("FULLPLAIN", "v?" + s2[a2.MAINVERSION] + s2[a2.PRERELEASE] + "?" + s2[a2.BUILD] + "?"), o2("FULL", "^" + s2[a2.FULLPLAIN] + "$"), o2("LOOSEPLAIN", "[v=\\s]*" + s2[a2.MAINVERSIONLOOSE] + s2[a2.PRERELEASELOOSE] + "?" + s2[a2.BUILD] + "?"), o2("LOOSE", "^" + s2[a2.LOOSEPLAIN] + "$"), o2("GTLT", "((?:<|>)?=?)"), o2("XRANGEIDENTIFIERLOOSE", s2[a2.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*"), o2("XRANGEIDENTIFIER", s2[a2.NUMERICIDENTIFIER] + "|x|X|\\*"), o2("XRANGEPLAIN", "[v=\\s]*(" + s2[a2.XRANGEIDENTIFIER] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIER] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIER] + ")(?:" + s2[a2.PRERELEASE] + ")?" + s2[a2.BUILD] + "?)?)?"), o2("XRANGEPLAINLOOSE", "[v=\\s]*(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:" + s2[a2.PRERELEASELOOSE] + ")?" + s2[a2.BUILD] + "?)?)?"), o2("XRANGE", "^" + s2[a2.GTLT] + "\\s*" + s2[a2.XRANGEPLAIN] + "$"), o2("XRANGELOOSE", "^" + s2[a2.GTLT] + "\\s*" + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("COERCE", "(^|[^\\d])(\\d{1," + r2 + "})(?:\\.(\\d{1," + r2 + "}))?(?:\\.(\\d{1," + r2 + "}))?(?:$|[^\\d])"), o2("COERCERTL", s2[a2.COERCE], true), o2("LONETILDE", "(?:~>?)"), o2("TILDETRIM", "(\\s*)" + s2[a2.LONETILDE] + "\\s+", true), t2.tildeTrimReplace = "$1~", o2("TILDE", "^" + s2[a2.LONETILDE] + s2[a2.XRANGEPLAIN] + "$"), o2("TILDELOOSE", "^" + s2[a2.LONETILDE] + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("LONECARET", "(?:\\^)"), o2("CARETTRIM", "(\\s*)" + s2[a2.LONECARET] + "\\s+", true), t2.caretTrimReplace = "$1^", o2("CARET", "^" + s2[a2.LONECARET] + s2[a2.XRANGEPLAIN] + "$"), o2("CARETLOOSE", "^" + s2[a2.LONECARET] + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("COMPARATORLOOSE", "^" + s2[a2.GTLT] + "\\s*(" + s2[a2.LOOSEPLAIN] + ")$|^$"), o2("COMPARATOR", "^" + s2[a2.GTLT] + "\\s*(" + s2[a2.FULLPLAIN] + ")$|^$"), o2("COMPARATORTRIM", "(\\s*)" + s2[a2.GTLT] + "\\s*(" + s2[a2.LOOSEPLAIN] + "|" + s2[a2.XRANGEPLAIN] + ")", true), t2.comparatorTrimReplace = "$1$2$3", o2("HYPHENRANGE", "^\\s*(" + s2[a2.XRANGEPLAIN] + ")\\s+-\\s+(" + s2[a2.XRANGEPLAIN] + ")\\s*$"), o2("HYPHENRANGELOOSE", "^\\s*(" + s2[a2.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + s2[a2.XRANGEPLAINLOOSE] + ")\\s*$"), o2("STAR", "(<|>)?=?\\s*\\*"), o2("GTE0", "^\\s*>=\\s*0.0.0\\s*$"), o2("GTE0PRE", "^\\s*>=\\s*0.0.0-0\\s*$");
      }, "/$$rollup_base$$/node_modules/semver-BABEL_8_BREAKING-true/internal"), DM = ["includePrerelease", "loose", "rtl"], AM = function(e2) {
        return e2 ? typeof e2 != "object" ? { loose: true } : DM.filter(function(t2) {
          return e2[t2];
        }).reduce(function(e3, t2) {
          return e3[t2] = true, e3;
        }, {}) : {};
      }, wM = /^[0-9]+$/, CM = function(e2, t2) {
        var r2 = wM.test(e2), n2 = wM.test(t2);
        return r2 && n2 && (e2 = +e2, t2 = +t2), e2 === t2 ? 0 : r2 && !n2 ? -1 : n2 && !r2 ? 1 : e2 < t2 ? -1 : 1;
      }, SM = CM, TM = bM.MAX_LENGTH, jM = bM.MAX_SAFE_INTEGER, PM = xM.re, IM = xM.t, FM = SM, kM = function() {
        function e2(t3, r2) {
          if (r2 = AM(r2), t3 instanceof e2) {
            if (t3.loose === !!r2.loose && t3.includePrerelease === !!r2.includePrerelease)
              return t3;
            t3 = t3.version;
          } else if (typeof t3 != "string")
            throw new TypeError("Invalid Version: " + t3);
          if (t3.length > TM)
            throw new TypeError("version is longer than " + TM + " characters");
          EM("SemVer", t3, r2), this.options = r2, this.loose = !!r2.loose, this.includePrerelease = !!r2.includePrerelease;
          var n2 = t3.trim().match(r2.loose ? PM[IM.LOOSE] : PM[IM.FULL]);
          if (!n2)
            throw new TypeError("Invalid Version: " + t3);
          if (this.raw = t3, this.major = +n2[1], this.minor = +n2[2], this.patch = +n2[3], this.major > jM || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > jM || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > jM || this.patch < 0)
            throw new TypeError("Invalid patch version");
          n2[4] ? this.prerelease = n2[4].split(".").map(function(e3) {
            if (/^[0-9]+$/.test(e3)) {
              var t4 = +e3;
              if (t4 >= 0 && t4 < jM)
                return t4;
            }
            return e3;
          }) : this.prerelease = [], this.build = n2[5] ? n2[5].split(".") : [], this.format();
        }
        var t2 = e2.prototype;
        return t2.format = function() {
          return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version;
        }, t2.toString = function() {
          return this.version;
        }, t2.compare = function(t3) {
          if (EM("SemVer.compare", this.version, this.options, t3), !(t3 instanceof e2)) {
            if (typeof t3 == "string" && t3 === this.version)
              return 0;
            t3 = new e2(t3, this.options);
          }
          return t3.version === this.version ? 0 : this.compareMain(t3) || this.comparePre(t3);
        }, t2.compareMain = function(t3) {
          return t3 instanceof e2 || (t3 = new e2(t3, this.options)), FM(this.major, t3.major) || FM(this.minor, t3.minor) || FM(this.patch, t3.patch);
        }, t2.comparePre = function(t3) {
          if (t3 instanceof e2 || (t3 = new e2(t3, this.options)), this.prerelease.length && !t3.prerelease.length)
            return -1;
          if (!this.prerelease.length && t3.prerelease.length)
            return 1;
          if (!this.prerelease.length && !t3.prerelease.length)
            return 0;
          var r2 = 0;
          do {
            var n2 = this.prerelease[r2], s2 = t3.prerelease[r2];
            if (EM("prerelease compare", r2, n2, s2), n2 === void 0 && s2 === void 0)
              return 0;
            if (s2 === void 0)
              return 1;
            if (n2 === void 0)
              return -1;
            if (n2 !== s2)
              return FM(n2, s2);
          } while (++r2);
        }, t2.compareBuild = function(t3) {
          t3 instanceof e2 || (t3 = new e2(t3, this.options));
          var r2 = 0;
          do {
            var n2 = this.build[r2], s2 = t3.build[r2];
            if (EM("prerelease compare", r2, n2, s2), n2 === void 0 && s2 === void 0)
              return 0;
            if (s2 === void 0)
              return 1;
            if (n2 === void 0)
              return -1;
            if (n2 !== s2)
              return FM(n2, s2);
          } while (++r2);
        }, t2.inc = function(e3, t3) {
          switch (e3) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t3);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t3);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "prerelease":
              this.prerelease.length === 0 && this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "major":
              this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              this.prerelease.length === 0 && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (this.prerelease.length === 0)
                this.prerelease = [0];
              else {
                for (var r2 = this.prerelease.length; --r2 >= 0; )
                  typeof this.prerelease[r2] == "number" && (this.prerelease[r2]++, r2 = -2);
                r2 === -1 && this.prerelease.push(0);
              }
              t3 && (this.prerelease[0] === t3 ? isNaN(this.prerelease[1]) && (this.prerelease = [t3, 0]) : this.prerelease = [t3, 0]);
              break;
            default:
              throw new Error("invalid increment argument: " + e3);
          }
          return this.format(), this.raw = this.version, this;
        }, e2;
      }(), OM = (xM.re, xM.t, function(e2, t2, r2) {
        return new kM(e2, r2).compare(new kM(t2, r2));
      }), RM = function(e2, t2, r2) {
        return OM(e2, t2, r2) === 0;
      }, NM = function(e2, t2, r2) {
        return OM(e2, t2, r2) > 0;
      }, BM = function(e2, t2, r2) {
        return OM(e2, t2, r2) < 0;
      }, _M = function(e2, t2, r2) {
        return OM(e2, t2, r2) !== 0;
      }, LM = function(e2, t2, r2) {
        return OM(e2, t2, r2) >= 0;
      }, MM = function(e2, t2, r2) {
        return OM(e2, t2, r2) <= 0;
      }, UM = function(e2, t2, r2, n2) {
        switch (t2) {
          case "===":
            return typeof e2 == "object" && (e2 = e2.version), typeof r2 == "object" && (r2 = r2.version), e2 === r2;
          case "!==":
            return typeof e2 == "object" && (e2 = e2.version), typeof r2 == "object" && (r2 = r2.version), e2 !== r2;
          case "":
          case "=":
          case "==":
            return RM(e2, r2, n2);
          case "!=":
            return _M(e2, r2, n2);
          case ">":
            return NM(e2, r2, n2);
          case ">=":
            return LM(e2, r2, n2);
          case "<":
            return BM(e2, r2, n2);
          case "<=":
            return MM(e2, r2, n2);
          default:
            throw new TypeError("Invalid operator: " + t2);
        }
      }, GM = (xM.re, xM.t, VM);
      function VM(e2) {
        var t2 = this;
        if (t2 instanceof VM || (t2 = new VM()), t2.tail = null, t2.head = null, t2.length = 0, e2 && typeof e2.forEach == "function")
          e2.forEach(function(e3) {
            t2.push(e3);
          });
        else if (arguments.length > 0)
          for (var r2 = 0, n2 = arguments.length; r2 < n2; r2++)
            t2.push(arguments[r2]);
        return t2;
      }
      function WM(e2, t2, r2) {
        var n2 = t2 === e2.head ? new qM(r2, null, t2, e2) : new qM(r2, t2, t2.next, e2);
        return n2.next === null && (e2.tail = n2), n2.prev === null && (e2.head = n2), e2.length++, n2;
      }
      function HM(e2, t2) {
        e2.tail = new qM(t2, e2.tail, null, e2), e2.head || (e2.head = e2.tail), e2.length++;
      }
      function XM(e2, t2) {
        e2.head = new qM(t2, null, e2.head, e2), e2.tail || (e2.tail = e2.head), e2.length++;
      }
      function qM(e2, t2, r2, n2) {
        if (!(this instanceof qM))
          return new qM(e2, t2, r2, n2);
        this.list = n2, this.value = e2, t2 ? (t2.next = this, this.prev = t2) : this.prev = null, r2 ? (r2.prev = this, this.next = r2) : this.next = null;
      }
      VM.Node = qM, VM.create = VM, VM.prototype.removeNode = function(e2) {
        if (e2.list !== this)
          throw new Error("removing node which does not belong to this list");
        var t2 = e2.next, r2 = e2.prev;
        return t2 && (t2.prev = r2), r2 && (r2.next = t2), e2 === this.head && (this.head = t2), e2 === this.tail && (this.tail = r2), e2.list.length--, e2.next = null, e2.prev = null, e2.list = null, t2;
      }, VM.prototype.unshiftNode = function(e2) {
        if (e2 !== this.head) {
          e2.list && e2.list.removeNode(e2);
          var t2 = this.head;
          e2.list = this, e2.next = t2, t2 && (t2.prev = e2), this.head = e2, this.tail || (this.tail = e2), this.length++;
        }
      }, VM.prototype.pushNode = function(e2) {
        if (e2 !== this.tail) {
          e2.list && e2.list.removeNode(e2);
          var t2 = this.tail;
          e2.list = this, e2.prev = t2, t2 && (t2.next = e2), this.tail = e2, this.head || (this.head = e2), this.length++;
        }
      }, VM.prototype.push = function() {
        for (var e2 = 0, t2 = arguments.length; e2 < t2; e2++)
          HM(this, arguments[e2]);
        return this.length;
      }, VM.prototype.unshift = function() {
        for (var e2 = 0, t2 = arguments.length; e2 < t2; e2++)
          XM(this, arguments[e2]);
        return this.length;
      }, VM.prototype.pop = function() {
        if (this.tail) {
          var e2 = this.tail.value;
          return this.tail = this.tail.prev, this.tail ? this.tail.next = null : this.head = null, this.length--, e2;
        }
      }, VM.prototype.shift = function() {
        if (this.head) {
          var e2 = this.head.value;
          return this.head = this.head.next, this.head ? this.head.prev = null : this.tail = null, this.length--, e2;
        }
      }, VM.prototype.forEach = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = this.head, n2 = 0; r2 !== null; n2++)
          e2.call(t2, r2.value, n2, this), r2 = r2.next;
      }, VM.prototype.forEachReverse = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = this.tail, n2 = this.length - 1; r2 !== null; n2--)
          e2.call(t2, r2.value, n2, this), r2 = r2.prev;
      }, VM.prototype.get = function(e2) {
        for (var t2 = 0, r2 = this.head; r2 !== null && t2 < e2; t2++)
          r2 = r2.next;
        if (t2 === e2 && r2 !== null)
          return r2.value;
      }, VM.prototype.getReverse = function(e2) {
        for (var t2 = 0, r2 = this.tail; r2 !== null && t2 < e2; t2++)
          r2 = r2.prev;
        if (t2 === e2 && r2 !== null)
          return r2.value;
      }, VM.prototype.map = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = new VM(), n2 = this.head; n2 !== null; )
          r2.push(e2.call(t2, n2.value, this)), n2 = n2.next;
        return r2;
      }, VM.prototype.mapReverse = function(e2, t2) {
        t2 = t2 || this;
        for (var r2 = new VM(), n2 = this.tail; n2 !== null; )
          r2.push(e2.call(t2, n2.value, this)), n2 = n2.prev;
        return r2;
      }, VM.prototype.reduce = function(e2, t2) {
        var r2, n2 = this.head;
        if (arguments.length > 1)
          r2 = t2;
        else {
          if (!this.head)
            throw new TypeError("Reduce of empty list with no initial value");
          n2 = this.head.next, r2 = this.head.value;
        }
        for (var s2 = 0; n2 !== null; s2++)
          r2 = e2(r2, n2.value, s2), n2 = n2.next;
        return r2;
      }, VM.prototype.reduceReverse = function(e2, t2) {
        var r2, n2 = this.tail;
        if (arguments.length > 1)
          r2 = t2;
        else {
          if (!this.tail)
            throw new TypeError("Reduce of empty list with no initial value");
          n2 = this.tail.prev, r2 = this.tail.value;
        }
        for (var s2 = this.length - 1; n2 !== null; s2--)
          r2 = e2(r2, n2.value, s2), n2 = n2.prev;
        return r2;
      }, VM.prototype.toArray = function() {
        for (var e2 = new Array(this.length), t2 = 0, r2 = this.head; r2 !== null; t2++)
          e2[t2] = r2.value, r2 = r2.next;
        return e2;
      }, VM.prototype.toArrayReverse = function() {
        for (var e2 = new Array(this.length), t2 = 0, r2 = this.tail; r2 !== null; t2++)
          e2[t2] = r2.value, r2 = r2.prev;
        return e2;
      }, VM.prototype.slice = function(e2, t2) {
        (t2 = t2 || this.length) < 0 && (t2 += this.length), (e2 = e2 || 0) < 0 && (e2 += this.length);
        var r2 = new VM();
        if (t2 < e2 || t2 < 0)
          return r2;
        e2 < 0 && (e2 = 0), t2 > this.length && (t2 = this.length);
        for (var n2 = 0, s2 = this.head; s2 !== null && n2 < e2; n2++)
          s2 = s2.next;
        for (; s2 !== null && n2 < t2; n2++, s2 = s2.next)
          r2.push(s2.value);
        return r2;
      }, VM.prototype.sliceReverse = function(e2, t2) {
        (t2 = t2 || this.length) < 0 && (t2 += this.length), (e2 = e2 || 0) < 0 && (e2 += this.length);
        var r2 = new VM();
        if (t2 < e2 || t2 < 0)
          return r2;
        e2 < 0 && (e2 = 0), t2 > this.length && (t2 = this.length);
        for (var n2 = this.length, s2 = this.tail; s2 !== null && n2 > t2; n2--)
          s2 = s2.prev;
        for (; s2 !== null && n2 > e2; n2--, s2 = s2.prev)
          r2.push(s2.value);
        return r2;
      }, VM.prototype.splice = function(e2, t2) {
        e2 > this.length && (e2 = this.length - 1), e2 < 0 && (e2 = this.length + e2);
        for (var r2 = 0, n2 = this.head; n2 !== null && r2 < e2; r2++)
          n2 = n2.next;
        var s2 = [];
        for (r2 = 0; n2 && r2 < t2; r2++)
          s2.push(n2.value), n2 = this.removeNode(n2);
        n2 === null && (n2 = this.tail), n2 !== this.head && n2 !== this.tail && (n2 = n2.prev);
        for (r2 = 0; r2 < (arguments.length <= 2 ? 0 : arguments.length - 2); r2++)
          n2 = WM(this, n2, r2 + 2 < 2 || arguments.length <= r2 + 2 ? void 0 : arguments[r2 + 2]);
        return s2;
      }, VM.prototype.reverse = function() {
        for (var e2 = this.head, t2 = this.tail, r2 = e2; r2 !== null; r2 = r2.prev) {
          var n2 = r2.prev;
          r2.prev = r2.next, r2.next = n2;
        }
        return this.head = t2, this.tail = e2, this;
      };
      try {
        !function(e2) {
          e2.prototype[Symbol.iterator] = bh.mark(function e3() {
            var t2;
            return bh.wrap(function(e4) {
              for (; ; )
                switch (e4.prev = e4.next) {
                  case 0:
                    t2 = this.head;
                  case 1:
                    if (!t2) {
                      e4.next = 7;
                      break;
                    }
                    return e4.next = 4, t2.value;
                  case 4:
                    t2 = t2.next, e4.next = 1;
                    break;
                  case 7:
                  case "end":
                    return e4.stop();
                }
            }, e3, this);
          });
        }(VM);
      } catch (e2) {
      }
      var $M = Symbol("max"), KM = Symbol("length"), zM = Symbol("lengthCalculator"), JM = Symbol("allowStale"), YM = Symbol("maxAge"), QM = Symbol("dispose"), ZM = Symbol("noDisposeOnSet"), eU = Symbol("lruList"), tU = Symbol("cache"), rU = Symbol("updateAgeOnGet"), nU = function() {
        return 1;
      }, sU = function() {
        function e2(e3) {
          if (typeof e3 == "number" && (e3 = { max: e3 }), e3 || (e3 = {}), e3.max && (typeof e3.max != "number" || e3.max < 0))
            throw new TypeError("max must be a non-negative number");
          this[$M] = e3.max || 1 / 0;
          var t3 = e3.length || nU;
          if (this[zM] = typeof t3 != "function" ? nU : t3, this[JM] = e3.stale || false, e3.maxAge && typeof e3.maxAge != "number")
            throw new TypeError("maxAge must be a number");
          this[YM] = e3.maxAge || 0, this[QM] = e3.dispose, this[ZM] = e3.noDisposeOnSet || false, this[rU] = e3.updateAgeOnGet || false, this.reset();
        }
        var t2 = e2.prototype;
        return t2.rforEach = function(e3, t3) {
          t3 = t3 || this;
          for (var r2 = this[eU].tail; r2 !== null; ) {
            var n2 = r2.prev;
            cU(this, e3, r2, t3), r2 = n2;
          }
        }, t2.forEach = function(e3, t3) {
          t3 = t3 || this;
          for (var r2 = this[eU].head; r2 !== null; ) {
            var n2 = r2.next;
            cU(this, e3, r2, t3), r2 = n2;
          }
        }, t2.keys = function() {
          return this[eU].toArray().map(function(e3) {
            return e3.key;
          });
        }, t2.values = function() {
          return this[eU].toArray().map(function(e3) {
            return e3.value;
          });
        }, t2.reset = function() {
          var e3 = this;
          this[QM] && this[eU] && this[eU].length && this[eU].forEach(function(t3) {
            return e3[QM](t3.key, t3.value);
          }), this[tU] = new Map(), this[eU] = new GM(), this[KM] = 0;
        }, t2.dump = function() {
          var e3 = this;
          return this[eU].map(function(t3) {
            return !iU(e3, t3) && { k: t3.key, v: t3.value, e: t3.now + (t3.maxAge || 0) };
          }).toArray().filter(function(e4) {
            return e4;
          });
        }, t2.dumpLru = function() {
          return this[eU];
        }, t2.set = function(e3, t3, r2) {
          if ((r2 = r2 || this[YM]) && typeof r2 != "number")
            throw new TypeError("maxAge must be a number");
          var n2 = r2 ? Date.now() : 0, s2 = this[zM](t3, e3);
          if (this[tU].has(e3)) {
            if (s2 > this[$M])
              return uU(this, this[tU].get(e3)), false;
            var a2 = this[tU].get(e3).value;
            return this[QM] && (this[ZM] || this[QM](e3, a2.value)), a2.now = n2, a2.maxAge = r2, a2.value = t3, this[KM] += s2 - a2.length, a2.length = s2, this.get(e3), oU(this), true;
          }
          var i2 = new lU(e3, t3, s2, n2, r2);
          return i2.length > this[$M] ? (this[QM] && this[QM](e3, t3), false) : (this[KM] += i2.length, this[eU].unshift(i2), this[tU].set(e3, this[eU].head), oU(this), true);
        }, t2.has = function(e3) {
          if (!this[tU].has(e3))
            return false;
          var t3 = this[tU].get(e3).value;
          return !iU(this, t3);
        }, t2.get = function(e3) {
          return aU(this, e3, true);
        }, t2.peek = function(e3) {
          return aU(this, e3, false);
        }, t2.pop = function() {
          var e3 = this[eU].tail;
          return e3 ? (uU(this, e3), e3.value) : null;
        }, t2.del = function(e3) {
          uU(this, this[tU].get(e3));
        }, t2.load = function(e3) {
          this.reset();
          for (var t3 = Date.now(), r2 = e3.length - 1; r2 >= 0; r2--) {
            var n2 = e3[r2], s2 = n2.e || 0;
            if (s2 === 0)
              this.set(n2.k, n2.v);
            else {
              var a2 = s2 - t3;
              a2 > 0 && this.set(n2.k, n2.v, a2);
            }
          }
        }, t2.prune = function() {
          var e3 = this;
          this[tU].forEach(function(t3, r2) {
            return aU(e3, r2, false);
          });
        }, n(e2, [{ key: "max", get: function() {
          return this[$M];
        }, set: function(e3) {
          if (typeof e3 != "number" || e3 < 0)
            throw new TypeError("max must be a non-negative number");
          this[$M] = e3 || 1 / 0, oU(this);
        } }, { key: "allowStale", get: function() {
          return this[JM];
        }, set: function(e3) {
          this[JM] = !!e3;
        } }, { key: "maxAge", get: function() {
          return this[YM];
        }, set: function(e3) {
          if (typeof e3 != "number")
            throw new TypeError("maxAge must be a non-negative number");
          this[YM] = e3, oU(this);
        } }, { key: "lengthCalculator", get: function() {
          return this[zM];
        }, set: function(e3) {
          var t3 = this;
          typeof e3 != "function" && (e3 = nU), e3 !== this[zM] && (this[zM] = e3, this[KM] = 0, this[eU].forEach(function(e4) {
            e4.length = t3[zM](e4.value, e4.key), t3[KM] += e4.length;
          })), oU(this);
        } }, { key: "length", get: function() {
          return this[KM];
        } }, { key: "itemCount", get: function() {
          return this[eU].length;
        } }]), e2;
      }(), aU = function(e2, t2, r2) {
        var n2 = e2[tU].get(t2);
        if (n2) {
          var s2 = n2.value;
          if (iU(e2, s2)) {
            if (uU(e2, n2), !e2[JM])
              return;
          } else
            r2 && (e2[rU] && (n2.value.now = Date.now()), e2[eU].unshiftNode(n2));
          return s2.value;
        }
      }, iU = function(e2, t2) {
        if (!t2 || !t2.maxAge && !e2[YM])
          return false;
        var r2 = Date.now() - t2.now;
        return t2.maxAge ? r2 > t2.maxAge : e2[YM] && r2 > e2[YM];
      }, oU = function(e2) {
        if (e2[KM] > e2[$M])
          for (var t2 = e2[eU].tail; e2[KM] > e2[$M] && t2 !== null; ) {
            var r2 = t2.prev;
            uU(e2, t2), t2 = r2;
          }
      }, uU = function(e2, t2) {
        if (t2) {
          var r2 = t2.value;
          e2[QM] && e2[QM](r2.key, r2.value), e2[KM] -= r2.length, e2[tU].delete(r2.key), e2[eU].removeNode(t2);
        }
      }, lU = function(e2, t2, r2, n2, s2) {
        this.key = e2, this.value = t2, this.length = r2, this.now = n2, this.maxAge = s2 || 0;
      }, cU = function(e2, t2, r2, n2) {
        var s2 = r2.value;
        iU(e2, s2) && (uU(e2, r2), e2[JM] || (s2 = void 0)), s2 && t2.call(n2, s2.value, s2.key, e2);
      }, pU = sU, dU = function() {
        function e2(t3, r2) {
          var n2 = this;
          if (r2 = AM(r2), t3 instanceof e2)
            return t3.loose === !!r2.loose && t3.includePrerelease === !!r2.includePrerelease ? t3 : new e2(t3.raw, r2);
          if (t3 instanceof NU)
            return this.raw = t3.value, this.set = [[t3]], this.format(), this;
          if (this.options = r2, this.loose = !!r2.loose, this.includePrerelease = !!r2.includePrerelease, this.raw = t3, this.set = t3.split(/\s*\|\|\s*/).map(function(e3) {
            return n2.parseRange(e3.trim());
          }).filter(function(e3) {
            return e3.length;
          }), !this.set.length)
            throw new TypeError("Invalid SemVer Range: " + t3);
          if (this.set.length > 1) {
            var s2 = this.set[0];
            if (this.set = this.set.filter(function(e3) {
              return !bU(e3[0]);
            }), this.set.length === 0)
              this.set = [s2];
            else if (this.set.length > 1)
              for (var a2, i2 = f(this.set); !(a2 = i2()).done; ) {
                var o2 = a2.value;
                if (o2.length === 1 && EU(o2[0])) {
                  this.set = [o2];
                  break;
                }
              }
          }
          this.format();
        }
        var t2 = e2.prototype;
        return t2.format = function() {
          return this.range = this.set.map(function(e3) {
            return e3.join(" ").trim();
          }).join("||").trim(), this.range;
        }, t2.toString = function() {
          return this.range;
        }, t2.parseRange = function(e3) {
          var t3 = this;
          e3 = e3.trim();
          var r2 = "parseRange:" + Object.keys(this.options).join(",") + ":" + e3, n2 = fU.get(r2);
          if (n2)
            return n2;
          var s2 = this.options.loose, a2 = s2 ? hU[mU.HYPHENRANGELOOSE] : hU[mU.HYPHENRANGE];
          e3 = e3.replace(a2, kU(this.options.includePrerelease)), EM("hyphen replace", e3), e3 = e3.replace(hU[mU.COMPARATORTRIM], yU), EM("comparator trim", e3, hU[mU.COMPARATORTRIM]), e3 = (e3 = (e3 = e3.replace(hU[mU.TILDETRIM], gU)).replace(hU[mU.CARETTRIM], vU)).split(/\s+/).join(" ");
          var i2 = s2 ? hU[mU.COMPARATORLOOSE] : hU[mU.COMPARATOR], o2 = e3.split(" ").map(function(e4) {
            return DU(e4, t3.options);
          }).join(" ").split(/\s+/).map(function(e4) {
            return FU(e4, t3.options);
          }).filter(this.options.loose ? function(e4) {
            return !!e4.match(i2);
          } : function() {
            return true;
          }).map(function(e4) {
            return new NU(e4, t3.options);
          });
          o2.length;
          for (var u2, l2 = new Map(), p2 = f(o2); !(u2 = p2()).done; ) {
            var d2 = u2.value;
            if (bU(d2))
              return [d2];
            l2.set(d2.value, d2);
          }
          l2.size > 1 && l2.has("") && l2.delete("");
          var h2 = c(l2.values());
          return fU.set(r2, h2), h2;
        }, t2.intersects = function(t3, r2) {
          if (!(t3 instanceof e2))
            throw new TypeError("a Range is required");
          return this.set.some(function(e3) {
            return xU(e3, r2) && t3.set.some(function(t4) {
              return xU(t4, r2) && e3.every(function(e4) {
                return t4.every(function(t5) {
                  return e4.intersects(t5, r2);
                });
              });
            });
          });
        }, t2.test = function(e3) {
          if (!e3)
            return false;
          if (typeof e3 == "string")
            try {
              e3 = new kM(e3, this.options);
            } catch (e4) {
              return false;
            }
          for (var t3 = 0; t3 < this.set.length; t3++)
            if (OU(this.set[t3], e3, this.options))
              return true;
          return false;
        }, e2;
      }(), fU = new pU({ max: 1e3 }), hU = xM.re, mU = xM.t, yU = xM.comparatorTrimReplace, gU = xM.tildeTrimReplace, vU = xM.caretTrimReplace, bU = function(e2) {
        return e2.value === "<0.0.0-0";
      }, EU = function(e2) {
        return e2.value === "";
      }, xU = function(e2, t2) {
        for (var r2 = true, n2 = e2.slice(), s2 = n2.pop(); r2 && n2.length; )
          r2 = n2.every(function(e3) {
            return s2.intersects(e3, t2);
          }), s2 = n2.pop();
        return r2;
      }, DU = function(e2, t2) {
        return EM("comp", e2, t2), e2 = SU(e2, t2), EM("caret", e2), e2 = wU(e2, t2), EM("tildes", e2), e2 = jU(e2, t2), EM("xrange", e2), e2 = IU(e2, t2), EM("stars", e2), e2;
      }, AU = function(e2) {
        return !e2 || e2.toLowerCase() === "x" || e2 === "*";
      }, wU = function(e2, t2) {
        return e2.trim().split(/\s+/).map(function(e3) {
          return CU(e3, t2);
        }).join(" ");
      }, CU = function(e2, t2) {
        var r2 = t2.loose ? hU[mU.TILDELOOSE] : hU[mU.TILDE];
        return e2.replace(r2, function(t3, r3, n2, s2, a2) {
          var i2;
          return EM("tilde", e2, t3, r3, n2, s2, a2), AU(r3) ? i2 = "" : AU(n2) ? i2 = ">=" + r3 + ".0.0 <" + (+r3 + 1) + ".0.0-0" : AU(s2) ? i2 = ">=" + r3 + "." + n2 + ".0 <" + r3 + "." + (+n2 + 1) + ".0-0" : a2 ? (EM("replaceTilde pr", a2), i2 = ">=" + r3 + "." + n2 + "." + s2 + "-" + a2 + " <" + r3 + "." + (+n2 + 1) + ".0-0") : i2 = ">=" + r3 + "." + n2 + "." + s2 + " <" + r3 + "." + (+n2 + 1) + ".0-0", EM("tilde return", i2), i2;
        });
      }, SU = function(e2, t2) {
        return e2.trim().split(/\s+/).map(function(e3) {
          return TU(e3, t2);
        }).join(" ");
      }, TU = function(e2, t2) {
        EM("caret", e2, t2);
        var r2 = t2.loose ? hU[mU.CARETLOOSE] : hU[mU.CARET], n2 = t2.includePrerelease ? "-0" : "";
        return e2.replace(r2, function(t3, r3, s2, a2, i2) {
          var o2;
          return EM("caret", e2, t3, r3, s2, a2, i2), AU(r3) ? o2 = "" : AU(s2) ? o2 = ">=" + r3 + ".0.0" + n2 + " <" + (+r3 + 1) + ".0.0-0" : AU(a2) ? o2 = r3 === "0" ? ">=" + r3 + "." + s2 + ".0" + n2 + " <" + r3 + "." + (+s2 + 1) + ".0-0" : ">=" + r3 + "." + s2 + ".0" + n2 + " <" + (+r3 + 1) + ".0.0-0" : i2 ? (EM("replaceCaret pr", i2), o2 = r3 === "0" ? s2 === "0" ? ">=" + r3 + "." + s2 + "." + a2 + "-" + i2 + " <" + r3 + "." + s2 + "." + (+a2 + 1) + "-0" : ">=" + r3 + "." + s2 + "." + a2 + "-" + i2 + " <" + r3 + "." + (+s2 + 1) + ".0-0" : ">=" + r3 + "." + s2 + "." + a2 + "-" + i2 + " <" + (+r3 + 1) + ".0.0-0") : (EM("no pr"), o2 = r3 === "0" ? s2 === "0" ? ">=" + r3 + "." + s2 + "." + a2 + n2 + " <" + r3 + "." + s2 + "." + (+a2 + 1) + "-0" : ">=" + r3 + "." + s2 + "." + a2 + n2 + " <" + r3 + "." + (+s2 + 1) + ".0-0" : ">=" + r3 + "." + s2 + "." + a2 + " <" + (+r3 + 1) + ".0.0-0"), EM("caret return", o2), o2;
        });
      }, jU = function(e2, t2) {
        return EM("replaceXRanges", e2, t2), e2.split(/\s+/).map(function(e3) {
          return PU(e3, t2);
        }).join(" ");
      }, PU = function(e2, t2) {
        e2 = e2.trim();
        var r2 = t2.loose ? hU[mU.XRANGELOOSE] : hU[mU.XRANGE];
        return e2.replace(r2, function(r3, n2, s2, a2, i2, o2) {
          EM("xRange", e2, r3, n2, s2, a2, i2, o2);
          var u2 = AU(s2), l2 = u2 || AU(a2), c2 = l2 || AU(i2), p2 = c2;
          return n2 === "=" && p2 && (n2 = ""), o2 = t2.includePrerelease ? "-0" : "", u2 ? r3 = n2 === ">" || n2 === "<" ? "<0.0.0-0" : "*" : n2 && p2 ? (l2 && (a2 = 0), i2 = 0, n2 === ">" ? (n2 = ">=", l2 ? (s2 = +s2 + 1, a2 = 0, i2 = 0) : (a2 = +a2 + 1, i2 = 0)) : n2 === "<=" && (n2 = "<", l2 ? s2 = +s2 + 1 : a2 = +a2 + 1), n2 === "<" && (o2 = "-0"), r3 = n2 + s2 + "." + a2 + "." + i2 + o2) : l2 ? r3 = ">=" + s2 + ".0.0" + o2 + " <" + (+s2 + 1) + ".0.0-0" : c2 && (r3 = ">=" + s2 + "." + a2 + ".0" + o2 + " <" + s2 + "." + (+a2 + 1) + ".0-0"), EM("xRange return", r3), r3;
        });
      }, IU = function(e2, t2) {
        return EM("replaceStars", e2, t2), e2.trim().replace(hU[mU.STAR], "");
      }, FU = function(e2, t2) {
        return EM("replaceGTE0", e2, t2), e2.trim().replace(hU[t2.includePrerelease ? mU.GTE0PRE : mU.GTE0], "");
      }, kU = function(e2) {
        return function(t2, r2, n2, s2, a2, i2, o2, u2, l2, c2, p2, d2, f2) {
          return ((r2 = AU(n2) ? "" : AU(s2) ? ">=" + n2 + ".0.0" + (e2 ? "-0" : "") : AU(a2) ? ">=" + n2 + "." + s2 + ".0" + (e2 ? "-0" : "") : i2 ? ">=" + r2 : ">=" + r2 + (e2 ? "-0" : "")) + " " + (u2 = AU(l2) ? "" : AU(c2) ? "<" + (+l2 + 1) + ".0.0-0" : AU(p2) ? "<" + l2 + "." + (+c2 + 1) + ".0-0" : d2 ? "<=" + l2 + "." + c2 + "." + p2 + "-" + d2 : e2 ? "<" + l2 + "." + c2 + "." + (+p2 + 1) + "-0" : "<=" + u2)).trim();
        };
      }, OU = function(e2, t2, r2) {
        for (var n2 = 0; n2 < e2.length; n2++)
          if (!e2[n2].test(t2))
            return false;
        if (t2.prerelease.length && !r2.includePrerelease) {
          for (var s2 = 0; s2 < e2.length; s2++)
            if (EM(e2[s2].semver), e2[s2].semver !== NU.ANY && e2[s2].semver.prerelease.length > 0) {
              var a2 = e2[s2].semver;
              if (a2.major === t2.major && a2.minor === t2.minor && a2.patch === t2.patch)
                return true;
            }
          return false;
        }
        return true;
      }, RU = Symbol("SemVer ANY"), NU = function() {
        function e2(t3, r2) {
          if (r2 = AM(r2), t3 instanceof e2) {
            if (t3.loose === !!r2.loose)
              return t3;
            t3 = t3.value;
          }
          EM("comparator", t3, r2), this.options = r2, this.loose = !!r2.loose, this.parse(t3), this.semver === RU ? this.value = "" : this.value = this.operator + this.semver.version, EM("comp", this);
        }
        var t2 = e2.prototype;
        return t2.parse = function(e3) {
          var t3 = this.options.loose ? BU[_U.COMPARATORLOOSE] : BU[_U.COMPARATOR], r2 = e3.match(t3);
          if (!r2)
            throw new TypeError("Invalid comparator: " + e3);
          this.operator = r2[1] !== void 0 ? r2[1] : "", this.operator === "=" && (this.operator = ""), r2[2] ? this.semver = new kM(r2[2], this.options.loose) : this.semver = RU;
        }, t2.toString = function() {
          return this.value;
        }, t2.test = function(e3) {
          if (EM("Comparator.test", e3, this.options.loose), this.semver === RU || e3 === RU)
            return true;
          if (typeof e3 == "string")
            try {
              e3 = new kM(e3, this.options);
            } catch (e4) {
              return false;
            }
          return UM(e3, this.operator, this.semver, this.options);
        }, t2.intersects = function(t3, r2) {
          if (!(t3 instanceof e2))
            throw new TypeError("a Comparator is required");
          if (r2 && typeof r2 == "object" || (r2 = { loose: !!r2, includePrerelease: false }), this.operator === "")
            return this.value === "" || new dU(t3.value, r2).test(this.value);
          if (t3.operator === "")
            return t3.value === "" || new dU(this.value, r2).test(t3.semver);
          var n2 = !(this.operator !== ">=" && this.operator !== ">" || t3.operator !== ">=" && t3.operator !== ">"), s2 = !(this.operator !== "<=" && this.operator !== "<" || t3.operator !== "<=" && t3.operator !== "<"), a2 = this.semver.version === t3.semver.version, i2 = !(this.operator !== ">=" && this.operator !== "<=" || t3.operator !== ">=" && t3.operator !== "<="), o2 = UM(this.semver, "<", t3.semver, r2) && (this.operator === ">=" || this.operator === ">") && (t3.operator === "<=" || t3.operator === "<"), u2 = UM(this.semver, ">", t3.semver, r2) && (this.operator === "<=" || this.operator === "<") && (t3.operator === ">=" || t3.operator === ">");
          return n2 || s2 || a2 && i2 || o2 || u2;
        }, n(e2, null, [{ key: "ANY", get: function() {
          return RU;
        } }]), e2;
      }(), BU = xM.re, _U = xM.t;
      NU.ANY, NU.ANY;
      xM.re, xM.src, xM.t;
      var LU = zt(function(e2, t2) {
        var r2;
        t2 = e2.exports = p2, r2 = typeof ar == "object" && ar.env && ar.env.NODE_DEBUG && /\bsemver\b/i.test(ar.env.NODE_DEBUG) ? function() {
          var e3 = Array.prototype.slice.call(arguments, 0);
          e3.unshift("SEMVER"), console.log.apply(console, e3);
        } : function() {
        }, t2.SEMVER_SPEC_VERSION = "2.0.0";
        var n2 = Number.MAX_SAFE_INTEGER || 9007199254740991, s2 = t2.re = [], a2 = t2.src = [], i2 = t2.tokens = {}, o2 = 0;
        function u2(e3) {
          i2[e3] = o2++;
        }
        u2("NUMERICIDENTIFIER"), a2[i2.NUMERICIDENTIFIER] = "0|[1-9]\\d*", u2("NUMERICIDENTIFIERLOOSE"), a2[i2.NUMERICIDENTIFIERLOOSE] = "[0-9]+", u2("NONNUMERICIDENTIFIER"), a2[i2.NONNUMERICIDENTIFIER] = "\\d*[a-zA-Z-][a-zA-Z0-9-]*", u2("MAINVERSION"), a2[i2.MAINVERSION] = "(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")", u2("MAINVERSIONLOOSE"), a2[i2.MAINVERSIONLOOSE] = "(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")", u2("PRERELEASEIDENTIFIER"), a2[i2.PRERELEASEIDENTIFIER] = "(?:" + a2[i2.NUMERICIDENTIFIER] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASEIDENTIFIERLOOSE"), a2[i2.PRERELEASEIDENTIFIERLOOSE] = "(?:" + a2[i2.NUMERICIDENTIFIERLOOSE] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASE"), a2[i2.PRERELEASE] = "(?:-(" + a2[i2.PRERELEASEIDENTIFIER] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIER] + ")*))", u2("PRERELEASELOOSE"), a2[i2.PRERELEASELOOSE] = "(?:-?(" + a2[i2.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIERLOOSE] + ")*))", u2("BUILDIDENTIFIER"), a2[i2.BUILDIDENTIFIER] = "[0-9A-Za-z-]+", u2("BUILD"), a2[i2.BUILD] = "(?:\\+(" + a2[i2.BUILDIDENTIFIER] + "(?:\\." + a2[i2.BUILDIDENTIFIER] + ")*))", u2("FULL"), u2("FULLPLAIN"), a2[i2.FULLPLAIN] = "v?" + a2[i2.MAINVERSION] + a2[i2.PRERELEASE] + "?" + a2[i2.BUILD] + "?", a2[i2.FULL] = "^" + a2[i2.FULLPLAIN] + "$", u2("LOOSEPLAIN"), a2[i2.LOOSEPLAIN] = "[v=\\s]*" + a2[i2.MAINVERSIONLOOSE] + a2[i2.PRERELEASELOOSE] + "?" + a2[i2.BUILD] + "?", u2("LOOSE"), a2[i2.LOOSE] = "^" + a2[i2.LOOSEPLAIN] + "$", u2("GTLT"), a2[i2.GTLT] = "((?:<|>)?=?)", u2("XRANGEIDENTIFIERLOOSE"), a2[i2.XRANGEIDENTIFIERLOOSE] = a2[i2.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*", u2("XRANGEIDENTIFIER"), a2[i2.XRANGEIDENTIFIER] = a2[i2.NUMERICIDENTIFIER] + "|x|X|\\*", u2("XRANGEPLAIN"), a2[i2.XRANGEPLAIN] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:" + a2[i2.PRERELEASE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGEPLAINLOOSE"), a2[i2.XRANGEPLAINLOOSE] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:" + a2[i2.PRERELEASELOOSE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGE"), a2[i2.XRANGE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAIN] + "$", u2("XRANGELOOSE"), a2[i2.XRANGELOOSE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COERCE"), a2[i2.COERCE] = "(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])", u2("COERCERTL"), s2[i2.COERCERTL] = new RegExp(a2[i2.COERCE], "g"), u2("LONETILDE"), a2[i2.LONETILDE] = "(?:~>?)", u2("TILDETRIM"), a2[i2.TILDETRIM] = "(\\s*)" + a2[i2.LONETILDE] + "\\s+", s2[i2.TILDETRIM] = new RegExp(a2[i2.TILDETRIM], "g");
        u2("TILDE"), a2[i2.TILDE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAIN] + "$", u2("TILDELOOSE"), a2[i2.TILDELOOSE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("LONECARET"), a2[i2.LONECARET] = "(?:\\^)", u2("CARETTRIM"), a2[i2.CARETTRIM] = "(\\s*)" + a2[i2.LONECARET] + "\\s+", s2[i2.CARETTRIM] = new RegExp(a2[i2.CARETTRIM], "g");
        u2("CARET"), a2[i2.CARET] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAIN] + "$", u2("CARETLOOSE"), a2[i2.CARETLOOSE] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COMPARATORLOOSE"), a2[i2.COMPARATORLOOSE] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + ")$|^$", u2("COMPARATOR"), a2[i2.COMPARATOR] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.FULLPLAIN] + ")$|^$", u2("COMPARATORTRIM"), a2[i2.COMPARATORTRIM] = "(\\s*)" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + "|" + a2[i2.XRANGEPLAIN] + ")", s2[i2.COMPARATORTRIM] = new RegExp(a2[i2.COMPARATORTRIM], "g");
        u2("HYPHENRANGE"), a2[i2.HYPHENRANGE] = "^\\s*(" + a2[i2.XRANGEPLAIN] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAIN] + ")\\s*$", u2("HYPHENRANGELOOSE"), a2[i2.HYPHENRANGELOOSE] = "^\\s*(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s*$", u2("STAR"), a2[i2.STAR] = "(<|>)?=?\\s*\\*";
        for (var l2 = 0; l2 < o2; l2++)
          r2(l2, a2[l2]), s2[l2] || (s2[l2] = new RegExp(a2[l2]));
        function c2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2)
            return e3;
          if (typeof e3 != "string")
            return null;
          if (e3.length > 256)
            return null;
          if (!(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]).test(e3))
            return null;
          try {
            return new p2(e3, t3);
          } catch (e4) {
            return null;
          }
        }
        function p2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2) {
            if (e3.loose === t3.loose)
              return e3;
            e3 = e3.version;
          } else if (typeof e3 != "string")
            throw new TypeError("Invalid Version: " + e3);
          if (e3.length > 256)
            throw new TypeError("version is longer than 256 characters");
          if (!(this instanceof p2))
            return new p2(e3, t3);
          r2("SemVer", e3, t3), this.options = t3, this.loose = !!t3.loose;
          var a3 = e3.trim().match(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]);
          if (!a3)
            throw new TypeError("Invalid Version: " + e3);
          if (this.raw = e3, this.major = +a3[1], this.minor = +a3[2], this.patch = +a3[3], this.major > n2 || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > n2 || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > n2 || this.patch < 0)
            throw new TypeError("Invalid patch version");
          a3[4] ? this.prerelease = a3[4].split(".").map(function(e4) {
            if (/^[0-9]+$/.test(e4)) {
              var t4 = +e4;
              if (t4 >= 0 && t4 < n2)
                return t4;
            }
            return e4;
          }) : this.prerelease = [], this.build = a3[5] ? a3[5].split(".") : [], this.format();
        }
        t2.parse = c2, t2.valid = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 ? r3.version : null;
        }, t2.clean = function(e3, t3) {
          var r3 = c2(e3.trim().replace(/^[=v]+/, ""), t3);
          return r3 ? r3.version : null;
        }, t2.SemVer = p2, p2.prototype.format = function() {
          return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version;
        }, p2.prototype.toString = function() {
          return this.version;
        }, p2.prototype.compare = function(e3) {
          return r2("SemVer.compare", this.version, this.options, e3), e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.compareMain(e3) || this.comparePre(e3);
        }, p2.prototype.compareMain = function(e3) {
          return e3 instanceof p2 || (e3 = new p2(e3, this.options)), f2(this.major, e3.major) || f2(this.minor, e3.minor) || f2(this.patch, e3.patch);
        }, p2.prototype.comparePre = function(e3) {
          if (e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.prerelease.length && !e3.prerelease.length)
            return -1;
          if (!this.prerelease.length && e3.prerelease.length)
            return 1;
          if (!this.prerelease.length && !e3.prerelease.length)
            return 0;
          var t3 = 0;
          do {
            var n3 = this.prerelease[t3], s3 = e3.prerelease[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.compareBuild = function(e3) {
          e3 instanceof p2 || (e3 = new p2(e3, this.options));
          var t3 = 0;
          do {
            var n3 = this.build[t3], s3 = e3.build[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.inc = function(e3, t3) {
          switch (e3) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t3);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t3);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "prerelease":
              this.prerelease.length === 0 && this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "major":
              this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              this.prerelease.length === 0 && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (this.prerelease.length === 0)
                this.prerelease = [0];
              else {
                for (var r3 = this.prerelease.length; --r3 >= 0; )
                  typeof this.prerelease[r3] == "number" && (this.prerelease[r3]++, r3 = -2);
                r3 === -1 && this.prerelease.push(0);
              }
              t3 && (this.prerelease[0] === t3 ? isNaN(this.prerelease[1]) && (this.prerelease = [t3, 0]) : this.prerelease = [t3, 0]);
              break;
            default:
              throw new Error("invalid increment argument: " + e3);
          }
          return this.format(), this.raw = this.version, this;
        }, t2.inc = function(e3, t3, r3, n3) {
          typeof r3 == "string" && (n3 = r3, r3 = void 0);
          try {
            return new p2(e3, r3).inc(t3, n3).version;
          } catch (e4) {
            return null;
          }
        }, t2.diff = function(e3, t3) {
          if (g2(e3, t3))
            return null;
          var r3 = c2(e3), n3 = c2(t3), s3 = "";
          if (r3.prerelease.length || n3.prerelease.length) {
            s3 = "pre";
            var a3 = "prerelease";
          }
          for (var i3 in r3)
            if ((i3 === "major" || i3 === "minor" || i3 === "patch") && r3[i3] !== n3[i3])
              return s3 + i3;
          return a3;
        }, t2.compareIdentifiers = f2;
        var d2 = /^[0-9]+$/;
        function f2(e3, t3) {
          var r3 = d2.test(e3), n3 = d2.test(t3);
          return r3 && n3 && (e3 = +e3, t3 = +t3), e3 === t3 ? 0 : r3 && !n3 ? -1 : n3 && !r3 ? 1 : e3 < t3 ? -1 : 1;
        }
        function h2(e3, t3, r3) {
          return new p2(e3, r3).compare(new p2(t3, r3));
        }
        function m2(e3, t3, r3) {
          return h2(e3, t3, r3) > 0;
        }
        function y2(e3, t3, r3) {
          return h2(e3, t3, r3) < 0;
        }
        function g2(e3, t3, r3) {
          return h2(e3, t3, r3) === 0;
        }
        function v2(e3, t3, r3) {
          return h2(e3, t3, r3) !== 0;
        }
        function b2(e3, t3, r3) {
          return h2(e3, t3, r3) >= 0;
        }
        function E2(e3, t3, r3) {
          return h2(e3, t3, r3) <= 0;
        }
        function x2(e3, t3, r3, n3) {
          switch (t3) {
            case "===":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 === r3;
            case "!==":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 !== r3;
            case "":
            case "=":
            case "==":
              return g2(e3, r3, n3);
            case "!=":
              return v2(e3, r3, n3);
            case ">":
              return m2(e3, r3, n3);
            case ">=":
              return b2(e3, r3, n3);
            case "<":
              return y2(e3, r3, n3);
            case "<=":
              return E2(e3, r3, n3);
            default:
              throw new TypeError("Invalid operator: " + t3);
          }
        }
        function D2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof D2) {
            if (e3.loose === !!t3.loose)
              return e3;
            e3 = e3.value;
          }
          if (!(this instanceof D2))
            return new D2(e3, t3);
          r2("comparator", e3, t3), this.options = t3, this.loose = !!t3.loose, this.parse(e3), this.semver === A2 ? this.value = "" : this.value = this.operator + this.semver.version, r2("comp", this);
        }
        t2.rcompareIdentifiers = function(e3, t3) {
          return f2(t3, e3);
        }, t2.major = function(e3, t3) {
          return new p2(e3, t3).major;
        }, t2.minor = function(e3, t3) {
          return new p2(e3, t3).minor;
        }, t2.patch = function(e3, t3) {
          return new p2(e3, t3).patch;
        }, t2.compare = h2, t2.compareLoose = function(e3, t3) {
          return h2(e3, t3, true);
        }, t2.compareBuild = function(e3, t3, r3) {
          var n3 = new p2(e3, r3), s3 = new p2(t3, r3);
          return n3.compare(s3) || n3.compareBuild(s3);
        }, t2.rcompare = function(e3, t3, r3) {
          return h2(t3, e3, r3);
        }, t2.sort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(e4, n3, r3);
          });
        }, t2.rsort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(n3, e4, r3);
          });
        }, t2.gt = m2, t2.lt = y2, t2.eq = g2, t2.neq = v2, t2.gte = b2, t2.lte = E2, t2.cmp = x2, t2.Comparator = D2;
        var A2 = {};
        function w2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof w2)
            return e3.loose === !!t3.loose && e3.includePrerelease === !!t3.includePrerelease ? e3 : new w2(e3.raw, t3);
          if (e3 instanceof D2)
            return new w2(e3.value, t3);
          if (!(this instanceof w2))
            return new w2(e3, t3);
          if (this.options = t3, this.loose = !!t3.loose, this.includePrerelease = !!t3.includePrerelease, this.raw = e3, this.set = e3.split(/\s*\|\|\s*/).map(function(e4) {
            return this.parseRange(e4.trim());
          }, this).filter(function(e4) {
            return e4.length;
          }), !this.set.length)
            throw new TypeError("Invalid SemVer Range: " + e3);
          this.format();
        }
        function C2(e3, t3) {
          for (var r3 = true, n3 = e3.slice(), s3 = n3.pop(); r3 && n3.length; )
            r3 = n3.every(function(e4) {
              return s3.intersects(e4, t3);
            }), s3 = n3.pop();
          return r3;
        }
        function S2(e3) {
          return !e3 || e3.toLowerCase() === "x" || e3 === "*";
        }
        function T2(e3, t3, r3, n3, s3, a3, i3, o3, u3, l3, c3, p3, d3) {
          return ((t3 = S2(r3) ? "" : S2(n3) ? ">=" + r3 + ".0.0" : S2(s3) ? ">=" + r3 + "." + n3 + ".0" : ">=" + t3) + " " + (o3 = S2(u3) ? "" : S2(l3) ? "<" + (+u3 + 1) + ".0.0" : S2(c3) ? "<" + u3 + "." + (+l3 + 1) + ".0" : p3 ? "<=" + u3 + "." + l3 + "." + c3 + "-" + p3 : "<=" + o3)).trim();
        }
        function j2(e3, t3, n3) {
          for (var s3 = 0; s3 < e3.length; s3++)
            if (!e3[s3].test(t3))
              return false;
          if (t3.prerelease.length && !n3.includePrerelease) {
            for (s3 = 0; s3 < e3.length; s3++)
              if (r2(e3[s3].semver), e3[s3].semver !== A2 && e3[s3].semver.prerelease.length > 0) {
                var a3 = e3[s3].semver;
                if (a3.major === t3.major && a3.minor === t3.minor && a3.patch === t3.patch)
                  return true;
              }
            return false;
          }
          return true;
        }
        function P2(e3, t3, r3) {
          try {
            t3 = new w2(t3, r3);
          } catch (e4) {
            return false;
          }
          return t3.test(e3);
        }
        function I2(e3, t3, r3, n3) {
          var s3, a3, i3, o3, u3;
          switch (e3 = new p2(e3, n3), t3 = new w2(t3, n3), r3) {
            case ">":
              s3 = m2, a3 = E2, i3 = y2, o3 = ">", u3 = ">=";
              break;
            case "<":
              s3 = y2, a3 = b2, i3 = m2, o3 = "<", u3 = "<=";
              break;
            default:
              throw new TypeError('Must provide a hilo val of "<" or ">"');
          }
          if (P2(e3, t3, n3))
            return false;
          for (var l3 = 0; l3 < t3.set.length; ++l3) {
            var c3 = t3.set[l3], d3 = null, f3 = null;
            if (c3.forEach(function(e4) {
              e4.semver === A2 && (e4 = new D2(">=0.0.0")), d3 = d3 || e4, f3 = f3 || e4, s3(e4.semver, d3.semver, n3) ? d3 = e4 : i3(e4.semver, f3.semver, n3) && (f3 = e4);
            }), d3.operator === o3 || d3.operator === u3)
              return false;
            if ((!f3.operator || f3.operator === o3) && a3(e3, f3.semver))
              return false;
            if (f3.operator === u3 && i3(e3, f3.semver))
              return false;
          }
          return true;
        }
        D2.prototype.parse = function(e3) {
          var t3 = this.options.loose ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], r3 = e3.match(t3);
          if (!r3)
            throw new TypeError("Invalid comparator: " + e3);
          this.operator = r3[1] !== void 0 ? r3[1] : "", this.operator === "=" && (this.operator = ""), r3[2] ? this.semver = new p2(r3[2], this.options.loose) : this.semver = A2;
        }, D2.prototype.toString = function() {
          return this.value;
        }, D2.prototype.test = function(e3) {
          if (r2("Comparator.test", e3, this.options.loose), this.semver === A2 || e3 === A2)
            return true;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          return x2(e3, this.operator, this.semver, this.options);
        }, D2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof D2))
            throw new TypeError("a Comparator is required");
          var r3;
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), this.operator === "")
            return this.value === "" || (r3 = new w2(e3.value, t3), P2(this.value, r3, t3));
          if (e3.operator === "")
            return e3.value === "" || (r3 = new w2(this.value, t3), P2(e3.semver, r3, t3));
          var n3 = !(this.operator !== ">=" && this.operator !== ">" || e3.operator !== ">=" && e3.operator !== ">"), s3 = !(this.operator !== "<=" && this.operator !== "<" || e3.operator !== "<=" && e3.operator !== "<"), a3 = this.semver.version === e3.semver.version, i3 = !(this.operator !== ">=" && this.operator !== "<=" || e3.operator !== ">=" && e3.operator !== "<="), o3 = x2(this.semver, "<", e3.semver, t3) && (this.operator === ">=" || this.operator === ">") && (e3.operator === "<=" || e3.operator === "<"), u3 = x2(this.semver, ">", e3.semver, t3) && (this.operator === "<=" || this.operator === "<") && (e3.operator === ">=" || e3.operator === ">");
          return n3 || s3 || a3 && i3 || o3 || u3;
        }, t2.Range = w2, w2.prototype.format = function() {
          return this.range = this.set.map(function(e3) {
            return e3.join(" ").trim();
          }).join("||").trim(), this.range;
        }, w2.prototype.toString = function() {
          return this.range;
        }, w2.prototype.parseRange = function(e3) {
          var t3 = this.options.loose;
          e3 = e3.trim();
          var n3 = t3 ? s2[i2.HYPHENRANGELOOSE] : s2[i2.HYPHENRANGE];
          e3 = e3.replace(n3, T2), r2("hyphen replace", e3), e3 = e3.replace(s2[i2.COMPARATORTRIM], "$1$2$3"), r2("comparator trim", e3, s2[i2.COMPARATORTRIM]), e3 = (e3 = (e3 = e3.replace(s2[i2.TILDETRIM], "$1~")).replace(s2[i2.CARETTRIM], "$1^")).split(/\s+/).join(" ");
          var a3 = t3 ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], o3 = e3.split(" ").map(function(e4) {
            return function(e5, t4) {
              return r2("comp", e5, t4), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    r2("caret", e8, t6);
                    var n4 = t6.loose ? s2[i2.CARETLOOSE] : s2[i2.CARET];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("caret", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = n5 === "0" ? ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + ".0 <" + (+n5 + 1) + ".0.0" : i3 ? (r2("replaceCaret pr", i3), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + (+n5 + 1) + ".0.0") : (r2("no pr"), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + " <" + (+n5 + 1) + ".0.0"), r2("caret return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("caret", e5), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    var n4 = t6.loose ? s2[i2.TILDELOOSE] : s2[i2.TILDE];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("tilde", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : i3 ? (r2("replaceTilde pr", i3), o4 = ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0") : o4 = ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0", r2("tilde return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("tildes", e5), e5 = function(e6, t5) {
                return r2("replaceXRanges", e6, t5), e6.split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    e8 = e8.trim();
                    var n4 = t6.loose ? s2[i2.XRANGELOOSE] : s2[i2.XRANGE];
                    return e8.replace(n4, function(n5, s3, a4, i3, o4, u3) {
                      r2("xRange", e8, n5, s3, a4, i3, o4, u3);
                      var l3 = S2(a4), c3 = l3 || S2(i3), p3 = c3 || S2(o4), d3 = p3;
                      return s3 === "=" && d3 && (s3 = ""), u3 = t6.includePrerelease ? "-0" : "", l3 ? n5 = s3 === ">" || s3 === "<" ? "<0.0.0-0" : "*" : s3 && d3 ? (c3 && (i3 = 0), o4 = 0, s3 === ">" ? (s3 = ">=", c3 ? (a4 = +a4 + 1, i3 = 0, o4 = 0) : (i3 = +i3 + 1, o4 = 0)) : s3 === "<=" && (s3 = "<", c3 ? a4 = +a4 + 1 : i3 = +i3 + 1), n5 = s3 + a4 + "." + i3 + "." + o4 + u3) : c3 ? n5 = ">=" + a4 + ".0.0" + u3 + " <" + (+a4 + 1) + ".0.0" + u3 : p3 && (n5 = ">=" + a4 + "." + i3 + ".0" + u3 + " <" + a4 + "." + (+i3 + 1) + ".0" + u3), r2("xRange return", n5), n5;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("xrange", e5), e5 = function(e6, t5) {
                return r2("replaceStars", e6, t5), e6.trim().replace(s2[i2.STAR], "");
              }(e5, t4), r2("stars", e5), e5;
            }(e4, this.options);
          }, this).join(" ").split(/\s+/);
          return this.options.loose && (o3 = o3.filter(function(e4) {
            return !!e4.match(a3);
          })), o3 = o3.map(function(e4) {
            return new D2(e4, this.options);
          }, this);
        }, w2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof w2))
            throw new TypeError("a Range is required");
          return this.set.some(function(r3) {
            return C2(r3, t3) && e3.set.some(function(e4) {
              return C2(e4, t3) && r3.every(function(r4) {
                return e4.every(function(e5) {
                  return r4.intersects(e5, t3);
                });
              });
            });
          });
        }, t2.toComparators = function(e3, t3) {
          return new w2(e3, t3).set.map(function(e4) {
            return e4.map(function(e5) {
              return e5.value;
            }).join(" ").trim().split(" ");
          });
        }, w2.prototype.test = function(e3) {
          if (!e3)
            return false;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          for (var t3 = 0; t3 < this.set.length; t3++)
            if (j2(this.set[t3], e3, this.options))
              return true;
          return false;
        }, t2.satisfies = P2, t2.maxSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== -1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== 1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minVersion = function(e3, t3) {
          e3 = new w2(e3, t3);
          var r3 = new p2("0.0.0");
          if (e3.test(r3))
            return r3;
          if (r3 = new p2("0.0.0-0"), e3.test(r3))
            return r3;
          r3 = null;
          for (var n3 = 0; n3 < e3.set.length; ++n3) {
            e3.set[n3].forEach(function(e4) {
              var t4 = new p2(e4.semver.version);
              switch (e4.operator) {
                case ">":
                  t4.prerelease.length === 0 ? t4.patch++ : t4.prerelease.push(0), t4.raw = t4.format();
                case "":
                case ">=":
                  r3 && !m2(r3, t4) || (r3 = t4);
                  break;
                case "<":
                case "<=":
                  break;
                default:
                  throw new Error("Unexpected operation: " + e4.operator);
              }
            });
          }
          if (r3 && e3.test(r3))
            return r3;
          return null;
        }, t2.validRange = function(e3, t3) {
          try {
            return new w2(e3, t3).range || "*";
          } catch (e4) {
            return null;
          }
        }, t2.ltr = function(e3, t3, r3) {
          return I2(e3, t3, "<", r3);
        }, t2.gtr = function(e3, t3, r3) {
          return I2(e3, t3, ">", r3);
        }, t2.outside = I2, t2.prerelease = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 && r3.prerelease.length ? r3.prerelease : null;
        }, t2.intersects = function(e3, t3, r3) {
          return e3 = new w2(e3, r3), t3 = new w2(t3, r3), e3.intersects(t3);
        }, t2.coerce = function(e3, t3) {
          if (e3 instanceof p2)
            return e3;
          typeof e3 == "number" && (e3 = String(e3));
          if (typeof e3 != "string")
            return null;
          var r3 = null;
          if ((t3 = t3 || {}).rtl) {
            for (var n3; (n3 = s2[i2.COERCERTL].exec(e3)) && (!r3 || r3.index + r3[0].length !== e3.length); )
              r3 && n3.index + n3[0].length === r3.index + r3[0].length || (r3 = n3), s2[i2.COERCERTL].lastIndex = n3.index + n3[1].length + n3[2].length;
            s2[i2.COERCERTL].lastIndex = -1;
          } else
            r3 = e3.match(s2[i2.COERCE]);
          if (r3 === null)
            return null;
          return c2(r3[2] + "." + (r3[3] || "0") + "." + (r3[4] || "0"), t3);
        };
      }, "/$$rollup_base$$/node_modules/semver-BABEL_8_BREAKING-false");
      var MU, UU, GU, VU = zt(function(e2, t2) {
        var r2;
        t2 = e2.exports = p2, r2 = typeof ar == "object" && ar.env && ar.env.NODE_DEBUG && /\bsemver\b/i.test(ar.env.NODE_DEBUG) ? function() {
          var e3 = Array.prototype.slice.call(arguments, 0);
          e3.unshift("SEMVER"), console.log.apply(console, e3);
        } : function() {
        }, t2.SEMVER_SPEC_VERSION = "2.0.0";
        var n2 = Number.MAX_SAFE_INTEGER || 9007199254740991, s2 = t2.re = [], a2 = t2.src = [], i2 = t2.tokens = {}, o2 = 0;
        function u2(e3) {
          i2[e3] = o2++;
        }
        u2("NUMERICIDENTIFIER"), a2[i2.NUMERICIDENTIFIER] = "0|[1-9]\\d*", u2("NUMERICIDENTIFIERLOOSE"), a2[i2.NUMERICIDENTIFIERLOOSE] = "[0-9]+", u2("NONNUMERICIDENTIFIER"), a2[i2.NONNUMERICIDENTIFIER] = "\\d*[a-zA-Z-][a-zA-Z0-9-]*", u2("MAINVERSION"), a2[i2.MAINVERSION] = "(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")", u2("MAINVERSIONLOOSE"), a2[i2.MAINVERSIONLOOSE] = "(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")", u2("PRERELEASEIDENTIFIER"), a2[i2.PRERELEASEIDENTIFIER] = "(?:" + a2[i2.NUMERICIDENTIFIER] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASEIDENTIFIERLOOSE"), a2[i2.PRERELEASEIDENTIFIERLOOSE] = "(?:" + a2[i2.NUMERICIDENTIFIERLOOSE] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASE"), a2[i2.PRERELEASE] = "(?:-(" + a2[i2.PRERELEASEIDENTIFIER] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIER] + ")*))", u2("PRERELEASELOOSE"), a2[i2.PRERELEASELOOSE] = "(?:-?(" + a2[i2.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIERLOOSE] + ")*))", u2("BUILDIDENTIFIER"), a2[i2.BUILDIDENTIFIER] = "[0-9A-Za-z-]+", u2("BUILD"), a2[i2.BUILD] = "(?:\\+(" + a2[i2.BUILDIDENTIFIER] + "(?:\\." + a2[i2.BUILDIDENTIFIER] + ")*))", u2("FULL"), u2("FULLPLAIN"), a2[i2.FULLPLAIN] = "v?" + a2[i2.MAINVERSION] + a2[i2.PRERELEASE] + "?" + a2[i2.BUILD] + "?", a2[i2.FULL] = "^" + a2[i2.FULLPLAIN] + "$", u2("LOOSEPLAIN"), a2[i2.LOOSEPLAIN] = "[v=\\s]*" + a2[i2.MAINVERSIONLOOSE] + a2[i2.PRERELEASELOOSE] + "?" + a2[i2.BUILD] + "?", u2("LOOSE"), a2[i2.LOOSE] = "^" + a2[i2.LOOSEPLAIN] + "$", u2("GTLT"), a2[i2.GTLT] = "((?:<|>)?=?)", u2("XRANGEIDENTIFIERLOOSE"), a2[i2.XRANGEIDENTIFIERLOOSE] = a2[i2.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*", u2("XRANGEIDENTIFIER"), a2[i2.XRANGEIDENTIFIER] = a2[i2.NUMERICIDENTIFIER] + "|x|X|\\*", u2("XRANGEPLAIN"), a2[i2.XRANGEPLAIN] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:" + a2[i2.PRERELEASE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGEPLAINLOOSE"), a2[i2.XRANGEPLAINLOOSE] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:" + a2[i2.PRERELEASELOOSE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGE"), a2[i2.XRANGE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAIN] + "$", u2("XRANGELOOSE"), a2[i2.XRANGELOOSE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COERCE"), a2[i2.COERCE] = "(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])", u2("COERCERTL"), s2[i2.COERCERTL] = new RegExp(a2[i2.COERCE], "g"), u2("LONETILDE"), a2[i2.LONETILDE] = "(?:~>?)", u2("TILDETRIM"), a2[i2.TILDETRIM] = "(\\s*)" + a2[i2.LONETILDE] + "\\s+", s2[i2.TILDETRIM] = new RegExp(a2[i2.TILDETRIM], "g");
        u2("TILDE"), a2[i2.TILDE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAIN] + "$", u2("TILDELOOSE"), a2[i2.TILDELOOSE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("LONECARET"), a2[i2.LONECARET] = "(?:\\^)", u2("CARETTRIM"), a2[i2.CARETTRIM] = "(\\s*)" + a2[i2.LONECARET] + "\\s+", s2[i2.CARETTRIM] = new RegExp(a2[i2.CARETTRIM], "g");
        u2("CARET"), a2[i2.CARET] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAIN] + "$", u2("CARETLOOSE"), a2[i2.CARETLOOSE] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COMPARATORLOOSE"), a2[i2.COMPARATORLOOSE] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + ")$|^$", u2("COMPARATOR"), a2[i2.COMPARATOR] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.FULLPLAIN] + ")$|^$", u2("COMPARATORTRIM"), a2[i2.COMPARATORTRIM] = "(\\s*)" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + "|" + a2[i2.XRANGEPLAIN] + ")", s2[i2.COMPARATORTRIM] = new RegExp(a2[i2.COMPARATORTRIM], "g");
        u2("HYPHENRANGE"), a2[i2.HYPHENRANGE] = "^\\s*(" + a2[i2.XRANGEPLAIN] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAIN] + ")\\s*$", u2("HYPHENRANGELOOSE"), a2[i2.HYPHENRANGELOOSE] = "^\\s*(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s*$", u2("STAR"), a2[i2.STAR] = "(<|>)?=?\\s*\\*";
        for (var l2 = 0; l2 < o2; l2++)
          r2(l2, a2[l2]), s2[l2] || (s2[l2] = new RegExp(a2[l2]));
        function c2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2)
            return e3;
          if (typeof e3 != "string")
            return null;
          if (e3.length > 256)
            return null;
          if (!(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]).test(e3))
            return null;
          try {
            return new p2(e3, t3);
          } catch (e4) {
            return null;
          }
        }
        function p2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2) {
            if (e3.loose === t3.loose)
              return e3;
            e3 = e3.version;
          } else if (typeof e3 != "string")
            throw new TypeError("Invalid Version: " + e3);
          if (e3.length > 256)
            throw new TypeError("version is longer than 256 characters");
          if (!(this instanceof p2))
            return new p2(e3, t3);
          r2("SemVer", e3, t3), this.options = t3, this.loose = !!t3.loose;
          var a3 = e3.trim().match(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]);
          if (!a3)
            throw new TypeError("Invalid Version: " + e3);
          if (this.raw = e3, this.major = +a3[1], this.minor = +a3[2], this.patch = +a3[3], this.major > n2 || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > n2 || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > n2 || this.patch < 0)
            throw new TypeError("Invalid patch version");
          a3[4] ? this.prerelease = a3[4].split(".").map(function(e4) {
            if (/^[0-9]+$/.test(e4)) {
              var t4 = +e4;
              if (t4 >= 0 && t4 < n2)
                return t4;
            }
            return e4;
          }) : this.prerelease = [], this.build = a3[5] ? a3[5].split(".") : [], this.format();
        }
        t2.parse = c2, t2.valid = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 ? r3.version : null;
        }, t2.clean = function(e3, t3) {
          var r3 = c2(e3.trim().replace(/^[=v]+/, ""), t3);
          return r3 ? r3.version : null;
        }, t2.SemVer = p2, p2.prototype.format = function() {
          return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version;
        }, p2.prototype.toString = function() {
          return this.version;
        }, p2.prototype.compare = function(e3) {
          return r2("SemVer.compare", this.version, this.options, e3), e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.compareMain(e3) || this.comparePre(e3);
        }, p2.prototype.compareMain = function(e3) {
          return e3 instanceof p2 || (e3 = new p2(e3, this.options)), f2(this.major, e3.major) || f2(this.minor, e3.minor) || f2(this.patch, e3.patch);
        }, p2.prototype.comparePre = function(e3) {
          if (e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.prerelease.length && !e3.prerelease.length)
            return -1;
          if (!this.prerelease.length && e3.prerelease.length)
            return 1;
          if (!this.prerelease.length && !e3.prerelease.length)
            return 0;
          var t3 = 0;
          do {
            var n3 = this.prerelease[t3], s3 = e3.prerelease[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.compareBuild = function(e3) {
          e3 instanceof p2 || (e3 = new p2(e3, this.options));
          var t3 = 0;
          do {
            var n3 = this.build[t3], s3 = e3.build[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.inc = function(e3, t3) {
          switch (e3) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t3);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t3);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "prerelease":
              this.prerelease.length === 0 && this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "major":
              this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              this.prerelease.length === 0 && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (this.prerelease.length === 0)
                this.prerelease = [0];
              else {
                for (var r3 = this.prerelease.length; --r3 >= 0; )
                  typeof this.prerelease[r3] == "number" && (this.prerelease[r3]++, r3 = -2);
                r3 === -1 && this.prerelease.push(0);
              }
              t3 && (this.prerelease[0] === t3 ? isNaN(this.prerelease[1]) && (this.prerelease = [t3, 0]) : this.prerelease = [t3, 0]);
              break;
            default:
              throw new Error("invalid increment argument: " + e3);
          }
          return this.format(), this.raw = this.version, this;
        }, t2.inc = function(e3, t3, r3, n3) {
          typeof r3 == "string" && (n3 = r3, r3 = void 0);
          try {
            return new p2(e3, r3).inc(t3, n3).version;
          } catch (e4) {
            return null;
          }
        }, t2.diff = function(e3, t3) {
          if (g2(e3, t3))
            return null;
          var r3 = c2(e3), n3 = c2(t3), s3 = "";
          if (r3.prerelease.length || n3.prerelease.length) {
            s3 = "pre";
            var a3 = "prerelease";
          }
          for (var i3 in r3)
            if ((i3 === "major" || i3 === "minor" || i3 === "patch") && r3[i3] !== n3[i3])
              return s3 + i3;
          return a3;
        }, t2.compareIdentifiers = f2;
        var d2 = /^[0-9]+$/;
        function f2(e3, t3) {
          var r3 = d2.test(e3), n3 = d2.test(t3);
          return r3 && n3 && (e3 = +e3, t3 = +t3), e3 === t3 ? 0 : r3 && !n3 ? -1 : n3 && !r3 ? 1 : e3 < t3 ? -1 : 1;
        }
        function h2(e3, t3, r3) {
          return new p2(e3, r3).compare(new p2(t3, r3));
        }
        function m2(e3, t3, r3) {
          return h2(e3, t3, r3) > 0;
        }
        function y2(e3, t3, r3) {
          return h2(e3, t3, r3) < 0;
        }
        function g2(e3, t3, r3) {
          return h2(e3, t3, r3) === 0;
        }
        function v2(e3, t3, r3) {
          return h2(e3, t3, r3) !== 0;
        }
        function b2(e3, t3, r3) {
          return h2(e3, t3, r3) >= 0;
        }
        function E2(e3, t3, r3) {
          return h2(e3, t3, r3) <= 0;
        }
        function x2(e3, t3, r3, n3) {
          switch (t3) {
            case "===":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 === r3;
            case "!==":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 !== r3;
            case "":
            case "=":
            case "==":
              return g2(e3, r3, n3);
            case "!=":
              return v2(e3, r3, n3);
            case ">":
              return m2(e3, r3, n3);
            case ">=":
              return b2(e3, r3, n3);
            case "<":
              return y2(e3, r3, n3);
            case "<=":
              return E2(e3, r3, n3);
            default:
              throw new TypeError("Invalid operator: " + t3);
          }
        }
        function D2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof D2) {
            if (e3.loose === !!t3.loose)
              return e3;
            e3 = e3.value;
          }
          if (!(this instanceof D2))
            return new D2(e3, t3);
          r2("comparator", e3, t3), this.options = t3, this.loose = !!t3.loose, this.parse(e3), this.semver === A2 ? this.value = "" : this.value = this.operator + this.semver.version, r2("comp", this);
        }
        t2.rcompareIdentifiers = function(e3, t3) {
          return f2(t3, e3);
        }, t2.major = function(e3, t3) {
          return new p2(e3, t3).major;
        }, t2.minor = function(e3, t3) {
          return new p2(e3, t3).minor;
        }, t2.patch = function(e3, t3) {
          return new p2(e3, t3).patch;
        }, t2.compare = h2, t2.compareLoose = function(e3, t3) {
          return h2(e3, t3, true);
        }, t2.compareBuild = function(e3, t3, r3) {
          var n3 = new p2(e3, r3), s3 = new p2(t3, r3);
          return n3.compare(s3) || n3.compareBuild(s3);
        }, t2.rcompare = function(e3, t3, r3) {
          return h2(t3, e3, r3);
        }, t2.sort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(e4, n3, r3);
          });
        }, t2.rsort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(n3, e4, r3);
          });
        }, t2.gt = m2, t2.lt = y2, t2.eq = g2, t2.neq = v2, t2.gte = b2, t2.lte = E2, t2.cmp = x2, t2.Comparator = D2;
        var A2 = {};
        function w2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof w2)
            return e3.loose === !!t3.loose && e3.includePrerelease === !!t3.includePrerelease ? e3 : new w2(e3.raw, t3);
          if (e3 instanceof D2)
            return new w2(e3.value, t3);
          if (!(this instanceof w2))
            return new w2(e3, t3);
          if (this.options = t3, this.loose = !!t3.loose, this.includePrerelease = !!t3.includePrerelease, this.raw = e3, this.set = e3.split(/\s*\|\|\s*/).map(function(e4) {
            return this.parseRange(e4.trim());
          }, this).filter(function(e4) {
            return e4.length;
          }), !this.set.length)
            throw new TypeError("Invalid SemVer Range: " + e3);
          this.format();
        }
        function C2(e3, t3) {
          for (var r3 = true, n3 = e3.slice(), s3 = n3.pop(); r3 && n3.length; )
            r3 = n3.every(function(e4) {
              return s3.intersects(e4, t3);
            }), s3 = n3.pop();
          return r3;
        }
        function S2(e3) {
          return !e3 || e3.toLowerCase() === "x" || e3 === "*";
        }
        function T2(e3, t3, r3, n3, s3, a3, i3, o3, u3, l3, c3, p3, d3) {
          return ((t3 = S2(r3) ? "" : S2(n3) ? ">=" + r3 + ".0.0" : S2(s3) ? ">=" + r3 + "." + n3 + ".0" : ">=" + t3) + " " + (o3 = S2(u3) ? "" : S2(l3) ? "<" + (+u3 + 1) + ".0.0" : S2(c3) ? "<" + u3 + "." + (+l3 + 1) + ".0" : p3 ? "<=" + u3 + "." + l3 + "." + c3 + "-" + p3 : "<=" + o3)).trim();
        }
        function j2(e3, t3, n3) {
          for (var s3 = 0; s3 < e3.length; s3++)
            if (!e3[s3].test(t3))
              return false;
          if (t3.prerelease.length && !n3.includePrerelease) {
            for (s3 = 0; s3 < e3.length; s3++)
              if (r2(e3[s3].semver), e3[s3].semver !== A2 && e3[s3].semver.prerelease.length > 0) {
                var a3 = e3[s3].semver;
                if (a3.major === t3.major && a3.minor === t3.minor && a3.patch === t3.patch)
                  return true;
              }
            return false;
          }
          return true;
        }
        function P2(e3, t3, r3) {
          try {
            t3 = new w2(t3, r3);
          } catch (e4) {
            return false;
          }
          return t3.test(e3);
        }
        function I2(e3, t3, r3, n3) {
          var s3, a3, i3, o3, u3;
          switch (e3 = new p2(e3, n3), t3 = new w2(t3, n3), r3) {
            case ">":
              s3 = m2, a3 = E2, i3 = y2, o3 = ">", u3 = ">=";
              break;
            case "<":
              s3 = y2, a3 = b2, i3 = m2, o3 = "<", u3 = "<=";
              break;
            default:
              throw new TypeError('Must provide a hilo val of "<" or ">"');
          }
          if (P2(e3, t3, n3))
            return false;
          for (var l3 = 0; l3 < t3.set.length; ++l3) {
            var c3 = t3.set[l3], d3 = null, f3 = null;
            if (c3.forEach(function(e4) {
              e4.semver === A2 && (e4 = new D2(">=0.0.0")), d3 = d3 || e4, f3 = f3 || e4, s3(e4.semver, d3.semver, n3) ? d3 = e4 : i3(e4.semver, f3.semver, n3) && (f3 = e4);
            }), d3.operator === o3 || d3.operator === u3)
              return false;
            if ((!f3.operator || f3.operator === o3) && a3(e3, f3.semver))
              return false;
            if (f3.operator === u3 && i3(e3, f3.semver))
              return false;
          }
          return true;
        }
        D2.prototype.parse = function(e3) {
          var t3 = this.options.loose ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], r3 = e3.match(t3);
          if (!r3)
            throw new TypeError("Invalid comparator: " + e3);
          this.operator = r3[1] !== void 0 ? r3[1] : "", this.operator === "=" && (this.operator = ""), r3[2] ? this.semver = new p2(r3[2], this.options.loose) : this.semver = A2;
        }, D2.prototype.toString = function() {
          return this.value;
        }, D2.prototype.test = function(e3) {
          if (r2("Comparator.test", e3, this.options.loose), this.semver === A2 || e3 === A2)
            return true;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          return x2(e3, this.operator, this.semver, this.options);
        }, D2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof D2))
            throw new TypeError("a Comparator is required");
          var r3;
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), this.operator === "")
            return this.value === "" || (r3 = new w2(e3.value, t3), P2(this.value, r3, t3));
          if (e3.operator === "")
            return e3.value === "" || (r3 = new w2(this.value, t3), P2(e3.semver, r3, t3));
          var n3 = !(this.operator !== ">=" && this.operator !== ">" || e3.operator !== ">=" && e3.operator !== ">"), s3 = !(this.operator !== "<=" && this.operator !== "<" || e3.operator !== "<=" && e3.operator !== "<"), a3 = this.semver.version === e3.semver.version, i3 = !(this.operator !== ">=" && this.operator !== "<=" || e3.operator !== ">=" && e3.operator !== "<="), o3 = x2(this.semver, "<", e3.semver, t3) && (this.operator === ">=" || this.operator === ">") && (e3.operator === "<=" || e3.operator === "<"), u3 = x2(this.semver, ">", e3.semver, t3) && (this.operator === "<=" || this.operator === "<") && (e3.operator === ">=" || e3.operator === ">");
          return n3 || s3 || a3 && i3 || o3 || u3;
        }, t2.Range = w2, w2.prototype.format = function() {
          return this.range = this.set.map(function(e3) {
            return e3.join(" ").trim();
          }).join("||").trim(), this.range;
        }, w2.prototype.toString = function() {
          return this.range;
        }, w2.prototype.parseRange = function(e3) {
          var t3 = this.options.loose;
          e3 = e3.trim();
          var n3 = t3 ? s2[i2.HYPHENRANGELOOSE] : s2[i2.HYPHENRANGE];
          e3 = e3.replace(n3, T2), r2("hyphen replace", e3), e3 = e3.replace(s2[i2.COMPARATORTRIM], "$1$2$3"), r2("comparator trim", e3, s2[i2.COMPARATORTRIM]), e3 = (e3 = (e3 = e3.replace(s2[i2.TILDETRIM], "$1~")).replace(s2[i2.CARETTRIM], "$1^")).split(/\s+/).join(" ");
          var a3 = t3 ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], o3 = e3.split(" ").map(function(e4) {
            return function(e5, t4) {
              return r2("comp", e5, t4), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    r2("caret", e8, t6);
                    var n4 = t6.loose ? s2[i2.CARETLOOSE] : s2[i2.CARET];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("caret", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = n5 === "0" ? ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + ".0 <" + (+n5 + 1) + ".0.0" : i3 ? (r2("replaceCaret pr", i3), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + (+n5 + 1) + ".0.0") : (r2("no pr"), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + " <" + (+n5 + 1) + ".0.0"), r2("caret return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("caret", e5), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    var n4 = t6.loose ? s2[i2.TILDELOOSE] : s2[i2.TILDE];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("tilde", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : i3 ? (r2("replaceTilde pr", i3), o4 = ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0") : o4 = ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0", r2("tilde return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("tildes", e5), e5 = function(e6, t5) {
                return r2("replaceXRanges", e6, t5), e6.split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    e8 = e8.trim();
                    var n4 = t6.loose ? s2[i2.XRANGELOOSE] : s2[i2.XRANGE];
                    return e8.replace(n4, function(n5, s3, a4, i3, o4, u3) {
                      r2("xRange", e8, n5, s3, a4, i3, o4, u3);
                      var l3 = S2(a4), c3 = l3 || S2(i3), p3 = c3 || S2(o4), d3 = p3;
                      return s3 === "=" && d3 && (s3 = ""), u3 = t6.includePrerelease ? "-0" : "", l3 ? n5 = s3 === ">" || s3 === "<" ? "<0.0.0-0" : "*" : s3 && d3 ? (c3 && (i3 = 0), o4 = 0, s3 === ">" ? (s3 = ">=", c3 ? (a4 = +a4 + 1, i3 = 0, o4 = 0) : (i3 = +i3 + 1, o4 = 0)) : s3 === "<=" && (s3 = "<", c3 ? a4 = +a4 + 1 : i3 = +i3 + 1), n5 = s3 + a4 + "." + i3 + "." + o4 + u3) : c3 ? n5 = ">=" + a4 + ".0.0" + u3 + " <" + (+a4 + 1) + ".0.0" + u3 : p3 && (n5 = ">=" + a4 + "." + i3 + ".0" + u3 + " <" + a4 + "." + (+i3 + 1) + ".0" + u3), r2("xRange return", n5), n5;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("xrange", e5), e5 = function(e6, t5) {
                return r2("replaceStars", e6, t5), e6.trim().replace(s2[i2.STAR], "");
              }(e5, t4), r2("stars", e5), e5;
            }(e4, this.options);
          }, this).join(" ").split(/\s+/);
          return this.options.loose && (o3 = o3.filter(function(e4) {
            return !!e4.match(a3);
          })), o3 = o3.map(function(e4) {
            return new D2(e4, this.options);
          }, this);
        }, w2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof w2))
            throw new TypeError("a Range is required");
          return this.set.some(function(r3) {
            return C2(r3, t3) && e3.set.some(function(e4) {
              return C2(e4, t3) && r3.every(function(r4) {
                return e4.every(function(e5) {
                  return r4.intersects(e5, t3);
                });
              });
            });
          });
        }, t2.toComparators = function(e3, t3) {
          return new w2(e3, t3).set.map(function(e4) {
            return e4.map(function(e5) {
              return e5.value;
            }).join(" ").trim().split(" ");
          });
        }, w2.prototype.test = function(e3) {
          if (!e3)
            return false;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          for (var t3 = 0; t3 < this.set.length; t3++)
            if (j2(this.set[t3], e3, this.options))
              return true;
          return false;
        }, t2.satisfies = P2, t2.maxSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== -1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== 1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minVersion = function(e3, t3) {
          e3 = new w2(e3, t3);
          var r3 = new p2("0.0.0");
          if (e3.test(r3))
            return r3;
          if (r3 = new p2("0.0.0-0"), e3.test(r3))
            return r3;
          r3 = null;
          for (var n3 = 0; n3 < e3.set.length; ++n3) {
            e3.set[n3].forEach(function(e4) {
              var t4 = new p2(e4.semver.version);
              switch (e4.operator) {
                case ">":
                  t4.prerelease.length === 0 ? t4.patch++ : t4.prerelease.push(0), t4.raw = t4.format();
                case "":
                case ">=":
                  r3 && !m2(r3, t4) || (r3 = t4);
                  break;
                case "<":
                case "<=":
                  break;
                default:
                  throw new Error("Unexpected operation: " + e4.operator);
              }
            });
          }
          if (r3 && e3.test(r3))
            return r3;
          return null;
        }, t2.validRange = function(e3, t3) {
          try {
            return new w2(e3, t3).range || "*";
          } catch (e4) {
            return null;
          }
        }, t2.ltr = function(e3, t3, r3) {
          return I2(e3, t3, "<", r3);
        }, t2.gtr = function(e3, t3, r3) {
          return I2(e3, t3, ">", r3);
        }, t2.outside = I2, t2.prerelease = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 && r3.prerelease.length ? r3.prerelease : null;
        }, t2.intersects = function(e3, t3, r3) {
          return e3 = new w2(e3, r3), t3 = new w2(t3, r3), e3.intersects(t3);
        }, t2.coerce = function(e3, t3) {
          if (e3 instanceof p2)
            return e3;
          typeof e3 == "number" && (e3 = String(e3));
          if (typeof e3 != "string")
            return null;
          var r3 = null;
          if ((t3 = t3 || {}).rtl) {
            for (var n3; (n3 = s2[i2.COERCERTL].exec(e3)) && (!r3 || r3.index + r3[0].length !== e3.length); )
              r3 && n3.index + n3[0].length === r3.index + r3[0].length || (r3 = n3), s2[i2.COERCERTL].lastIndex = n3.index + n3[1].length + n3[2].length;
            s2[i2.COERCERTL].lastIndex = -1;
          } else
            r3 = e3.match(s2[i2.COERCE]);
          if (r3 === null)
            return null;
          return c2(r3[2] + "." + (r3[3] || "0") + "." + (r3[4] || "0"), t3);
        };
      }, "/$$rollup_base$$/packages/babel-plugin-transform-runtime/node_modules/babel-plugin-polyfill-corejs2/node_modules/semver"), WU = ["method", "targets", "ignoreBrowserslistConfig", "configPath", "debug", "shouldInjectPolyfill", "absoluteImports"], HU = t, XU = HU.types, qU = HU.template;
      function $U(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }
      function KU(e2) {
        if (e2.isIdentifier() && !e2.scope.hasBinding(e2.node.name, true))
          return e2.node.name;
        var t2 = e2.evaluate().deopt;
        return t2 && t2.isIdentifier() ? t2.node.name : void 0;
      }
      function zU(e2, t2) {
        t2 === void 0 && (t2 = false);
        var r2 = e2.node, n2 = e2.parent, s2 = e2.scope;
        if (e2.isStringLiteral())
          return r2.value;
        var a2 = r2.name, i2 = e2.isIdentifier();
        if (i2 && !t2 && !n2.computed)
          return a2;
        if (t2 && e2.isMemberExpression() && e2.get("object").isIdentifier({ name: "Symbol" }) && !s2.hasBinding("Symbol", true)) {
          var o2 = zU(e2.get("property"), e2.node.computed);
          if (o2)
            return "Symbol." + o2;
        }
        if (!i2 || s2.hasBinding(a2, true)) {
          var u2 = e2.evaluate().value;
          if (typeof u2 == "string")
            return u2;
        }
      }
      function JU(e2) {
        if (e2.isMemberExpression() && e2.get("property").isIdentifier({ name: "prototype" })) {
          var t2 = KU(e2.get("object"));
          return t2 ? { id: t2, placement: "prototype" } : { id: null, placement: null };
        }
        var r2 = KU(e2);
        if (r2)
          return { id: r2, placement: "static" };
        var n2, s2 = e2.evaluate().value;
        return s2 !== void 0 ? { id: (n2 = s2, Object.prototype.toString.call(n2).slice(8, -1)), placement: "prototype" } : e2.isRegExpLiteral() ? { id: "RegExp", placement: "prototype" } : e2.isFunction() ? { id: "Function", placement: "prototype" } : { id: null, placement: null };
      }
      function YU(e2) {
        return e2._blockHoist = 3, e2;
      }
      var QU = t.types, ZU = function() {
        function e2(e3) {
          this._imports = new WeakMap(), this._anonymousImports = new WeakMap(), this._lastImports = new WeakMap(), this._resolver = e3;
        }
        var t2 = e2.prototype;
        return t2.storeAnonymous = function(e3, t3, r2) {
          var n2 = this._normalizeKey(e3, t3), s2 = this._ensure(this._anonymousImports, e3, Set);
          if (!s2.has(n2)) {
            var a2 = r2(e3.node.sourceType === "script", QU.stringLiteral(this._resolver(t3)));
            s2.add(n2), this._injectImport(e3, a2);
          }
        }, t2.storeNamed = function(e3, t3, r2, n2) {
          var s2 = this._normalizeKey(e3, t3, r2), a2 = this._ensure(this._imports, e3, Map);
          if (!a2.has(s2)) {
            var i2 = n2(e3.node.sourceType === "script", QU.stringLiteral(this._resolver(t3)), QU.identifier(r2)), o2 = i2.node, u2 = i2.name;
            a2.set(s2, u2), this._injectImport(e3, o2);
          }
          return QU.identifier(a2.get(s2));
        }, t2._injectImport = function(e3, t3) {
          var r2 = this._lastImports.get(e3);
          r2 = (r2 = r2 && r2.node && r2.parent === e3.node && r2.container === e3.node.body ? r2.insertAfter(t3) : e3.unshiftContainer("body", t3))[r2.length - 1], this._lastImports.set(e3, r2);
        }, t2._ensure = function(e3, t3, r2) {
          var n2 = e3.get(t3);
          return n2 || (n2 = new r2(), e3.set(t3, n2)), n2;
        }, t2._normalizeKey = function(e3, t3, r2) {
          r2 === void 0 && (r2 = "");
          var n2 = e3.node.sourceType;
          return (r2 && n2) + "::" + t3 + "::" + r2;
        }, e2;
      }();
      function eG(e2, t2) {
        return t2.length ? '  - The following "' + e2 + `" patterns didn't match any polyfill:
` + t2.map(function(e3) {
          return "    " + String(e3) + "\n";
        }).join("") : "";
      }
      function tG(e2, t2, r2, n2) {
        var s2, a2, i2, o2, u2 = function(e3) {
          var r3 = function(e4) {
            if (e4 instanceof RegExp)
              return e4;
            try {
              return new RegExp("^" + e4 + "$");
            } catch (e5) {
              return null;
            }
          }(e3);
          if (!r3)
            return false;
          for (var n3, a3 = false, i3 = f(t2); !(n3 = i3()).done; ) {
            var o3 = n3.value;
            r3.test(o3) && (a3 = true, s2.add(o3));
          }
          return !a3;
        }, l2 = s2 = new Set(), c2 = Array.from(r2).filter(u2), p2 = s2 = new Set(), d2 = Array.from(n2).filter(u2), h2 = (a2 = l2, i2 = p2, o2 = new Set(), a2.forEach(function(e3) {
          return i2.has(e3) && o2.add(e3);
        }), o2);
        if (h2.size > 0 || c2.length > 0 || d2.length > 0)
          throw new Error('Error while validating the "' + e2 + '" provider options:\n' + eG("include", c2) + eG("exclude", d2) + function(e3) {
            return e3.size ? '  - The following polyfills were matched both by "include" and "exclude" patterns:\n' + Array.from(e3, function(e4) {
              return "    " + e4 + "\n";
            }).join("") : "";
          }(h2));
        return { include: l2, exclude: p2 };
      }
      var rG = function(e2) {
        function t2(t3, r2, n2, s2) {
          return e2({ kind: "property", object: t3, key: r2, placement: n2 }, s2);
        }
        return { ReferencedIdentifier: function(t3) {
          var r2 = t3.node.name;
          t3.scope.getBindingIdentifier(r2) || e2({ kind: "global", name: r2 }, t3);
        }, MemberExpression: function(e3) {
          var r2 = zU(e3.get("property"), e3.node.computed);
          if (r2 && r2 !== "prototype") {
            var n2 = e3.get("object"), s2 = n2.scope.getBinding(n2.node.name);
            if (!s2 || !s2.path.isImportNamespaceSpecifier()) {
              var a2 = JU(n2);
              return t2(a2.id, r2, a2.placement, e3);
            }
          }
        }, ObjectPattern: function(e3) {
          var r2, n2 = e3.parentPath, s2 = e3.parent;
          if (n2.isVariableDeclarator())
            r2 = n2.get("init");
          else if (n2.isAssignmentExpression())
            r2 = n2.get("right");
          else if (n2.isFunction()) {
            var a2 = n2.parentPath;
            (a2.isCallExpression() || a2.isNewExpression()) && a2.node.callee === s2 && (r2 = a2.get("arguments")[e3.key]);
          }
          var i2 = null, o2 = null;
          if (r2) {
            var u2 = JU(r2);
            i2 = u2.id, o2 = u2.placement;
          }
          for (var l2, c2 = f(e3.get("properties")); !(l2 = c2()).done; ) {
            var p2 = l2.value;
            if (p2.isObjectProperty()) {
              var d2 = zU(p2.get("key"));
              d2 && t2(i2, d2, o2, p2);
            }
          }
        }, BinaryExpression: function(t3) {
          if (t3.node.operator === "in") {
            var r2 = JU(t3.get("right")), n2 = zU(t3.get("left"), true);
            n2 && e2({ kind: "in", object: r2.id, key: n2, placement: r2.placement }, t3);
          }
        } };
      }, nG = function(e2) {
        return { ImportDeclaration: function(t2) {
          var r2 = function(e3) {
            var t3 = e3.node;
            if (t3.specifiers.length === 0)
              return t3.source.value;
          }(t2);
          r2 && e2({ kind: "import", source: r2 }, t2);
        }, Program: function(t2) {
          t2.get("body").forEach(function(t3) {
            var r2 = function(e3) {
              var t4 = e3.node;
              if (XU.isExpressionStatement(t4)) {
                var r3 = t4.expression;
                return XU.isCallExpression(r3) && XU.isIdentifier(r3.callee) && r3.callee.name === "require" && r3.arguments.length === 1 && XU.isStringLiteral(r3.arguments[0]) ? r3.arguments[0].value : void 0;
              }
            }(t3);
            r2 && e2({ kind: "import", source: r2 }, t3);
          });
        } };
      };
      var sG = new Set(["global", "globalThis", "self", "window"]);
      function aG(e2) {
        var t2 = e2.static, r2 = e2.instance, n2 = e2.global;
        return function(e3) {
          if (e3.kind === "global" && n2 && $U(n2, e3.name))
            return { kind: "global", desc: n2[e3.name], name: e3.name };
          if (e3.kind === "property" || e3.kind === "in") {
            var s2 = e3.placement, a2 = e3.object, i2 = e3.key;
            if (a2 && s2 === "static") {
              if (n2 && sG.has(a2) && $U(n2, i2))
                return { kind: "global", desc: n2[i2], name: i2 };
              if (t2 && $U(t2, a2) && $U(t2[a2], i2))
                return { kind: "static", desc: t2[a2][i2], name: a2 + "$" + i2 };
            }
            if (r2 && $U(r2, i2))
              return { kind: "instance", desc: r2[i2], name: "" + i2 };
          }
        };
      }
      var iG = sT.default || sT;
      function oG(e2, t2, r2, n2, s2, a2) {
        var i2, l2, c2, p2, d2, f2 = function(e3, t3) {
          var r3, n3, s3 = e3.method, a3 = e3.targets, i3 = e3.ignoreBrowserslistConfig, u2 = e3.configPath, l3 = e3.debug, c3 = e3.shouldInjectPolyfill, p3 = e3.absoluteImports, d3 = o(e3, WU);
          if (s3 === "usage-global")
            r3 = "usageGlobal";
          else if (s3 === "entry-global")
            r3 = "entryGlobal";
          else {
            if (s3 !== "usage-pure")
              throw typeof s3 != "string" ? new Error(".method must be a string") : new Error('.method must be one of "entry-global", "usage-global" or "usage-pure" (received ' + JSON.stringify(s3) + ")");
            r3 = "usagePure";
          }
          if (typeof c3 == "function") {
            if (e3.include || e3.exclude)
              throw new Error(".include and .exclude are not supported when using the .shouldInjectPolyfill function.");
          } else if (c3 != null)
            throw new Error(".shouldInjectPolyfill must be a function, or undefined (received " + JSON.stringify(c3) + ")");
          if (p3 != null && typeof p3 != "boolean" && typeof p3 != "string")
            throw new Error(".absoluteImports must be a boolean, a string, or undefined (received " + JSON.stringify(p3) + ")");
          if (a3 || u2 || i3) {
            var f3 = typeof a3 == "string" || Array.isArray(a3) ? { browsers: a3 } : a3;
            n3 = iG(f3, { ignoreBrowserslistConfig: i3, configPath: u2 });
          } else
            n3 = t3.targets();
          return { method: s3, methodName: r3, targets: n3, absoluteImports: p3 != null && p3, shouldInjectPolyfill: c3, debug: !!l3, providerOptions: d3 };
        }(t2, a2), h2 = f2.method, m2 = f2.methodName, y2 = f2.targets, g2 = f2.debug, v2 = f2.shouldInjectPolyfill, b2 = f2.providerOptions, E2 = f2.absoluteImports, x2 = function(e3) {
          return function(t3) {
            var r3 = t3.findParent(function(e4) {
              return e4.isProgram();
            });
            return { injectGlobalImport: function(t4) {
              e3.storeAnonymous(r3, t4, function(e4, t5) {
                return e4 ? qU.statement.ast(MU || (MU = u(["require(", ")"])), t5) : XU.importDeclaration([], t5);
              });
            }, injectNamedImport: function(t4, n3, s3) {
              return s3 === void 0 && (s3 = n3), e3.storeNamed(r3, t4, n3, function(e4, t5, n4) {
                var a3 = r3.scope.generateUidIdentifier(s3);
                return { node: e4 ? YU(qU.statement.ast(UU || (UU = u(["\n                  var ", " = require(", ").", "\n                "])), a3, t5, n4)) : XU.importDeclaration([XU.importSpecifier(a3, n4)], t5), name: a3.name };
              });
            }, injectDefaultImport: function(t4, n3) {
              return n3 === void 0 && (n3 = t4), e3.storeNamed(r3, t4, "default", function(e4, t5) {
                var s3 = r3.scope.generateUidIdentifier(n3);
                return { node: e4 ? YU(qU.statement.ast(GU || (GU = u(["var ", " = require(", ")"])), s3, t5)) : XU.importDeclaration([XU.importDefaultSpecifier(s3)], t5), name: s3.name };
              });
            } };
          };
        }(new ZU(function(e3) {
          return function(e4, t3, r3) {
            if (r3 === false)
              return t3;
            throw new Error('"absoluteImports" is not supported in bundles prepared for the browser.');
          }(0, e3, E2);
        })), D2 = new Map(), A2 = { babel: a2, getUtils: x2, method: t2.method, targets: y2, createMetaResolver: aG, shouldInjectPolyfill: function(t3) {
          if (p2 === void 0)
            throw new Error("Internal error in the " + e2.name + " provider: shouldInjectPolyfill() can't be called during initialization.");
          if (p2.has(t3) || console.warn("Internal error in the " + w2.name + ' provider: unknown polyfill "' + t3 + '".'), d2 && !d2(t3))
            return false;
          var r3 = YS(t3, y2, { compatData: c2, includes: i2, excludes: l2 });
          if (v2 && typeof (r3 = v2(t3, r3)) != "boolean")
            throw new Error(".shouldInjectPolyfill must return a boolean.");
          return r3;
        }, debug: function(e3) {
          s2().found = true, g2 && e3 && (s2().polyfills.has(w2.name) || s2().polyfills.set(e3, c2 && e3 && c2[e3]));
        }, assertDependency: function(e3, t3) {
          if (t3 === void 0 && (t3 = "*"), r2 !== false && !E2) {
            var a3 = t3 === "*" ? e3 : e3 + "@^" + t3;
            !r2.all && function(e4, t4, r3) {
              var n3 = e4.get(t4);
              n3 === void 0 && (n3 = r3(), e4.set(t4, n3));
              return n3;
            }(D2, e3 + " :: " + n2, function() {
              return true;
            }) || s2().missingDeps.add(a3);
          }
        } }, w2 = e2(A2, b2, n2);
        if (typeof w2[m2] != "function")
          throw new Error('The "' + (w2.name || e2.name) + `" provider doesn't support the "` + h2 + '" polyfilling method.');
        Array.isArray(w2.polyfills) ? (p2 = new Set(w2.polyfills), d2 = w2.filterPolyfills) : w2.polyfills ? (p2 = new Set(Object.keys(w2.polyfills)), c2 = w2.polyfills, d2 = w2.filterPolyfills) : p2 = new Set();
        var C2 = tG(w2.name || e2.name, p2, b2.include || [], b2.exclude || []);
        return i2 = C2.include, l2 = C2.exclude, { debug: g2, method: h2, targets: y2, provider: w2, callProvider: function(e3, t3) {
          var r3 = x2(t3);
          w2[m2](e3, r3, t3);
        } };
      }
      function uG(e2) {
        return jF(function(t2, r2, n2) {
          t2.assertVersion(7);
          var s2, a2 = t2.traverse, i2 = function(e3, t3) {
            var r3 = e3.missingDependencies, n3 = r3 === void 0 ? {} : r3;
            if (n3 === false)
              return false;
            var s3 = t3.caller(function(e4) {
              return e4 == null ? void 0 : e4.name;
            }), a3 = n3.log, i3 = a3 === void 0 ? "deferred" : a3, o3 = n3.inject, u3 = o3 === void 0 ? s3 === "rollup-plugin-babel" ? "throw" : "import" : o3, l2 = n3.all;
            return { log: i3, inject: u3, all: l2 !== void 0 && l2 };
          }(r2, t2), o2 = oG(e2, r2, i2, n2, function() {
            return s2;
          }, t2), u2 = o2.debug, c2 = o2.method, p2 = o2.targets, d2 = o2.provider, h2 = o2.callProvider, m2 = c2 === "entry-global" ? nG : rG, y2 = d2.visitor ? a2.visitors.merge([m2(h2), d2.visitor]) : m2(h2);
          return u2 && u2 !== "#__secret_key__@babel/preset-env__don't_log_debug_header_and_resolved_targets" && (console.log(d2.name + ": `DEBUG` option"), console.log("\nUsing targets: " + function(e3) {
            return JSON.stringify(KS(e3), null, 2);
          }(p2)), console.log("\nUsing polyfills with `" + c2 + "` method:")), { name: "inject-polyfills", visitor: y2, pre: function() {
            var e3;
            s2 = { polyfills: new Map(), found: false, providers: new Set(), missingDeps: new Set() }, (e3 = d2.pre) == null || e3.apply(this, arguments);
          }, post: function() {
            var e3;
            if ((e3 = d2.post) == null || e3.apply(this, arguments), i2 !== false && (i2.log, s2.missingDeps), u2)
              if (this.filename && console.log("\n[" + this.filename + "]"), s2.polyfills.size !== 0) {
                c2 === "entry-global" ? console.log("The " + d2.name + " polyfill entry has been replaced with the following polyfills:") : console.log("The " + d2.name + " polyfill added the following polyfills:");
                for (var t3, r3 = f(s2.polyfills); !(t3 = r3()).done; ) {
                  var n3 = l(t3.value, 2), a3 = n3[0], o3 = n3[1];
                  if (o3) {
                    var h3 = zS(a3, p2, o3), m3 = JSON.stringify(h3).replace(/,/g, ", ").replace(/^\{"/, '{ "').replace(/"\}$/, '" }');
                    console.log("  " + a3 + " " + m3);
                  } else
                    console.log("  " + a3);
                }
              } else
                console.log(c2 === "entry-global" ? s2.found ? "Based on your targets, the " + d2.name + " polyfill did not add any polyfill." : "The entry point for the " + d2.name + " polyfill has not been found." : "Based on your code and targets, the " + d2.name + " polyfill did not add any polyfill.");
          } };
        });
      }
      var lG = function(e2, t2, r2, n2) {
        return r2 === void 0 && (r2 = []), { name: e2, pure: t2, global: r2, meta: n2 };
      }, cG = function(e2, t2, r2) {
        return r2 === void 0 && (r2 = null), lG(t2[0], e2, t2, { minRuntimeVersion: r2 });
      }, pG = function(e2) {
        return lG(e2[0], null, e2);
      }, dG = function(e2, t2) {
        return lG(t2, e2, []);
      }, fG = ["es6.object.to-string", "es6.array.iterator", "web.dom.iterable"], hG = ["es6.string.iterator"].concat(fG), mG = ["es6.object.to-string", "es6.promise"], yG = { DataView: pG(["es6.typed.data-view"]), Float32Array: pG(["es6.typed.float32-array"]), Float64Array: pG(["es6.typed.float64-array"]), Int8Array: pG(["es6.typed.int8-array"]), Int16Array: pG(["es6.typed.int16-array"]), Int32Array: pG(["es6.typed.int32-array"]), Map: cG("map", ["es6.map"].concat(c(hG))), Number: pG(["es6.number.constructor"]), Promise: cG("promise", mG), RegExp: pG(["es6.regexp.constructor"]), Set: cG("set", ["es6.set"].concat(c(hG))), Symbol: cG("symbol", ["es6.symbol"]), Uint8Array: pG(["es6.typed.uint8-array"]), Uint8ClampedArray: pG(["es6.typed.uint8-clamped-array"]), Uint16Array: pG(["es6.typed.uint16-array"]), Uint32Array: pG(["es6.typed.uint32-array"]), WeakMap: cG("weak-map", ["es6.weak-map"].concat(c(hG))), WeakSet: cG("weak-set", ["es6.weak-set"].concat(c(hG))), setImmediate: dG("set-immediate", "web.immediate"), clearImmediate: dG("clear-immediate", "web.immediate"), parseFloat: dG("parse-float", "es6.parse-float"), parseInt: dG("parse-int", "es6.parse-int") }, gG = { __defineGetter__: pG(["es7.object.define-getter"]), __defineSetter__: pG(["es7.object.define-setter"]), __lookupGetter__: pG(["es7.object.lookup-getter"]), __lookupSetter__: pG(["es7.object.lookup-setter"]), anchor: pG(["es6.string.anchor"]), big: pG(["es6.string.big"]), bind: pG(["es6.function.bind"]), blink: pG(["es6.string.blink"]), bold: pG(["es6.string.bold"]), codePointAt: pG(["es6.string.code-point-at"]), copyWithin: pG(["es6.array.copy-within"]), endsWith: pG(["es6.string.ends-with"]), entries: pG(fG), every: pG(["es6.array.every"]), fill: pG(["es6.array.fill"]), filter: pG(["es6.array.filter"]), finally: pG(["es7.promise.finally"].concat(mG)), find: pG(["es6.array.find"]), findIndex: pG(["es6.array.find-index"]), fixed: pG(["es6.string.fixed"]), flags: pG(["es6.regexp.flags"]), flatMap: pG(["es7.array.flat-map"]), fontcolor: pG(["es6.string.fontcolor"]), fontsize: pG(["es6.string.fontsize"]), forEach: pG(["es6.array.for-each"]), includes: pG(["es6.string.includes", "es7.array.includes"]), indexOf: pG(["es6.array.index-of"]), italics: pG(["es6.string.italics"]), keys: pG(fG), lastIndexOf: pG(["es6.array.last-index-of"]), link: pG(["es6.string.link"]), map: pG(["es6.array.map"]), match: pG(["es6.regexp.match"]), name: pG(["es6.function.name"]), padStart: pG(["es7.string.pad-start"]), padEnd: pG(["es7.string.pad-end"]), reduce: pG(["es6.array.reduce"]), reduceRight: pG(["es6.array.reduce-right"]), repeat: pG(["es6.string.repeat"]), replace: pG(["es6.regexp.replace"]), search: pG(["es6.regexp.search"]), small: pG(["es6.string.small"]), some: pG(["es6.array.some"]), sort: pG(["es6.array.sort"]), split: pG(["es6.regexp.split"]), startsWith: pG(["es6.string.starts-with"]), strike: pG(["es6.string.strike"]), sub: pG(["es6.string.sub"]), sup: pG(["es6.string.sup"]), toISOString: pG(["es6.date.to-iso-string"]), toJSON: pG(["es6.date.to-json"]), toString: pG(["es6.object.to-string", "es6.date.to-string", "es6.regexp.to-string"]), trim: pG(["es6.string.trim"]), trimEnd: pG(["es7.string.trim-right"]), trimLeft: pG(["es7.string.trim-left"]), trimRight: pG(["es7.string.trim-right"]), trimStart: pG(["es7.string.trim-left"]), values: pG(fG) };
      "es6.array.slice" in TR && (gG.slice = pG(["es6.array.slice"]));
      var vG = { Array: { from: cG("array/from", ["es6.symbol", "es6.array.from"].concat(c(hG))), isArray: cG("array/is-array", ["es6.array.is-array"]), of: cG("array/of", ["es6.array.of"]) }, Date: { now: cG("date/now", ["es6.date.now"]) }, JSON: { stringify: dG("json/stringify", "es6.symbol") }, Math: { acosh: cG("math/acosh", ["es6.math.acosh"], "7.0.1"), asinh: cG("math/asinh", ["es6.math.asinh"], "7.0.1"), atanh: cG("math/atanh", ["es6.math.atanh"], "7.0.1"), cbrt: cG("math/cbrt", ["es6.math.cbrt"], "7.0.1"), clz32: cG("math/clz32", ["es6.math.clz32"], "7.0.1"), cosh: cG("math/cosh", ["es6.math.cosh"], "7.0.1"), expm1: cG("math/expm1", ["es6.math.expm1"], "7.0.1"), fround: cG("math/fround", ["es6.math.fround"], "7.0.1"), hypot: cG("math/hypot", ["es6.math.hypot"], "7.0.1"), imul: cG("math/imul", ["es6.math.imul"], "7.0.1"), log1p: cG("math/log1p", ["es6.math.log1p"], "7.0.1"), log10: cG("math/log10", ["es6.math.log10"], "7.0.1"), log2: cG("math/log2", ["es6.math.log2"], "7.0.1"), sign: cG("math/sign", ["es6.math.sign"], "7.0.1"), sinh: cG("math/sinh", ["es6.math.sinh"], "7.0.1"), tanh: cG("math/tanh", ["es6.math.tanh"], "7.0.1"), trunc: cG("math/trunc", ["es6.math.trunc"], "7.0.1") }, Number: { EPSILON: cG("number/epsilon", ["es6.number.epsilon"]), MIN_SAFE_INTEGER: cG("number/min-safe-integer", ["es6.number.min-safe-integer"]), MAX_SAFE_INTEGER: cG("number/max-safe-integer", ["es6.number.max-safe-integer"]), isFinite: cG("number/is-finite", ["es6.number.is-finite"]), isInteger: cG("number/is-integer", ["es6.number.is-integer"]), isSafeInteger: cG("number/is-safe-integer", ["es6.number.is-safe-integer"]), isNaN: cG("number/is-nan", ["es6.number.is-nan"]), parseFloat: cG("number/parse-float", ["es6.number.parse-float"]), parseInt: cG("number/parse-int", ["es6.number.parse-int"]) }, Object: { assign: cG("object/assign", ["es6.object.assign"]), create: cG("object/create", ["es6.object.create"]), defineProperties: cG("object/define-properties", ["es6.object.define-properties"]), defineProperty: cG("object/define-property", ["es6.object.define-property"]), entries: cG("object/entries", ["es7.object.entries"]), freeze: cG("object/freeze", ["es6.object.freeze"]), getOwnPropertyDescriptor: cG("object/get-own-property-descriptor", ["es6.object.get-own-property-descriptor"]), getOwnPropertyDescriptors: cG("object/get-own-property-descriptors", ["es7.object.get-own-property-descriptors"]), getOwnPropertyNames: cG("object/get-own-property-names", ["es6.object.get-own-property-names"]), getOwnPropertySymbols: cG("object/get-own-property-symbols", ["es6.symbol"]), getPrototypeOf: cG("object/get-prototype-of", ["es6.object.get-prototype-of"]), is: cG("object/is", ["es6.object.is"]), isExtensible: cG("object/is-extensible", ["es6.object.is-extensible"]), isFrozen: cG("object/is-frozen", ["es6.object.is-frozen"]), isSealed: cG("object/is-sealed", ["es6.object.is-sealed"]), keys: cG("object/keys", ["es6.object.keys"]), preventExtensions: cG("object/prevent-extensions", ["es6.object.prevent-extensions"]), seal: cG("object/seal", ["es6.object.seal"]), setPrototypeOf: cG("object/set-prototype-of", ["es6.object.set-prototype-of"]), values: cG("object/values", ["es7.object.values"]) }, Promise: { all: pG(hG), race: pG(hG) }, Reflect: { apply: cG("reflect/apply", ["es6.reflect.apply"]), construct: cG("reflect/construct", ["es6.reflect.construct"]), defineProperty: cG("reflect/define-property", ["es6.reflect.define-property"]), deleteProperty: cG("reflect/delete-property", ["es6.reflect.delete-property"]), get: cG("reflect/get", ["es6.reflect.get"]), getOwnPropertyDescriptor: cG("reflect/get-own-property-descriptor", ["es6.reflect.get-own-property-descriptor"]), getPrototypeOf: cG("reflect/get-prototype-of", ["es6.reflect.get-prototype-of"]), has: cG("reflect/has", ["es6.reflect.has"]), isExtensible: cG("reflect/is-extensible", ["es6.reflect.is-extensible"]), ownKeys: cG("reflect/own-keys", ["es6.reflect.own-keys"]), preventExtensions: cG("reflect/prevent-extensions", ["es6.reflect.prevent-extensions"]), set: cG("reflect/set", ["es6.reflect.set"]), setPrototypeOf: cG("reflect/set-prototype-of", ["es6.reflect.set-prototype-of"]) }, String: { at: dG("string/at", "es7.string.at"), fromCodePoint: cG("string/from-code-point", ["es6.string.from-code-point"]), raw: cG("string/raw", ["es6.string.raw"]) }, Symbol: { asyncIterator: pG(["es6.symbol", "es7.symbol.async-iterator"]), for: dG("symbol/for", "es6.symbol"), hasInstance: dG("symbol/has-instance", "es6.symbol"), isConcatSpreadable: dG("symbol/is-concat-spreadable", "es6.symbol"), iterator: lG("es6.symbol", "symbol/iterator", hG), keyFor: dG("symbol/key-for", "es6.symbol"), match: cG("symbol/match", ["es6.regexp.match"]), replace: dG("symbol/replace", "es6.symbol"), search: dG("symbol/search", "es6.symbol"), species: dG("symbol/species", "es6.symbol"), split: dG("symbol/split", "es6.symbol"), toPrimitive: dG("symbol/to-primitive", "es6.symbol"), toStringTag: dG("symbol/to-string-tag", "es6.symbol"), unscopables: dG("symbol/unscopables", "es6.symbol") } }, bG = { "web.timers": {}, "web.immediate": {}, "web.dom.iterable": {} }, EG = { "es6.parse-float": {}, "es6.parse-int": {}, "es7.string.at": {} };
      var xG = t.types, DG = Function.call.bind(Object.hasOwnProperty), AG = uG(function(e2, t2) {
        var r2 = t2["#__secret_key__@babel/preset-env__compatibility"], n2 = (r2 = r2 === void 0 ? {} : r2).entryInjectRegenerator, s2 = t2["#__secret_key__@babel/runtime__compatibility"], a2 = (s2 = s2 === void 0 ? {} : s2).useBabelRuntime, i2 = s2.runtimeVersion, o2 = s2.ext, u2 = o2 === void 0 ? ".js" : o2, l2 = e2.createMetaResolver({ global: yG, static: vG, instance: gG }), c2 = e2.debug, p2 = e2.shouldInjectPolyfill, d2 = e2.method, f2 = function(e3, t3, r3) {
          var n3 = Object.keys(e3), s3 = !n3.length, a3 = n3.some(function(e4) {
            return e4 !== "node";
          });
          return Object.assign(Object.assign(Object.assign({}, r3), t3 === "usage-pure" ? EG : null), s3 || a3 ? bG : null);
        }(e2.targets, d2, TR), h2 = a2 ? a2 + "/core-js" : d2 === "usage-pure" ? "core-js/library/fn" : "core-js/modules";
        function m2(e3, t3) {
          typeof e3 != "string" ? e3.forEach(function(e4) {
            return m2(e4, t3);
          }) : DG(f2, e3) && p2(e3) && (c2(e3), t3.injectGlobalImport(h2 + "/" + e3 + ".js"));
        }
        function y2(e3, t3, r3) {
          var n3 = e3.pure, s3 = e3.meta, a3 = e3.name;
          if (n3 && p2(a3) && (!(i2 && s3 && s3.minRuntimeVersion) || function(e4, t4) {
            return !(t4 && e4 && (VU.valid(t4) && (t4 = "^" + t4), VU.intersects("<" + e4, t4) || VU.intersects(">=8.0.0", t4)));
          }(s3 && s3.minRuntimeVersion, i2)))
            return r3.injectDefaultImport(h2 + "/" + n3 + u2, t3);
        }
        return { name: "corejs2", polyfills: f2, entryGlobal: function(e3, t3, r3) {
          e3.kind === "import" && e3.source === "core-js" && (c2(null), m2(Object.keys(f2), t3), n2 && t3.injectGlobalImport("regenerator-runtime/runtime.js"), r3.remove());
        }, usageGlobal: function(e3, t3) {
          var r3 = l2(e3);
          if (r3) {
            var n3 = r3.desc.global;
            if (r3.kind !== "global" && e3.object && e3.placement === "prototype") {
              var s3 = e3.object.toLowerCase();
              n3 = n3.filter(function(e4) {
                return e4.includes(s3);
              });
            }
            m2(n3, t3);
          }
        }, usagePure: function(e3, t3, r3) {
          if (e3.kind !== "in") {
            if (!r3.parentPath.isUnaryExpression({ operator: "delete" })) {
              if (e3.kind === "property") {
                if (!r3.isMemberExpression())
                  return;
                if (!r3.isReferenced())
                  return;
                if (e3.key === "Symbol.iterator" && p2("es6.symbol") && r3.parentPath.isCallExpression({ callee: r3.node }) && r3.parent.arguments.length === 0)
                  return r3.parentPath.replaceWith(xG.callExpression(t3.injectDefaultImport(h2 + "/get-iterator" + u2, "getIterator"), [r3.node.object])), void r3.skip();
              }
              var n3 = l2(e3);
              if (n3) {
                var s3 = y2(n3.desc, n3.name, t3);
                s3 && r3.replaceWith(s3);
              }
            }
          } else
            e3.key === "Symbol.iterator" && r3.replaceWith(xG.callExpression(t3.injectDefaultImport(h2 + "/is-iterable" + u2, "isIterable"), [r3.node.right]));
        }, visitor: d2 === "usage-global" && { YieldExpression: function(t3) {
          t3.node.delegate && m2("web.dom.iterable", e2.getUtils(t3));
        }, "ForOfStatement|ArrayPattern": function(t3) {
          hG.forEach(function(r3) {
            return m2(r3, e2.getUtils(t3));
          });
        } } };
      }), wG = { "es.symbol": { android: "49", chrome: "49", edge: "15", electron: "0.37", firefox: "51", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.symbol.description": { android: "70", chrome: "70", edge: "74", electron: "5.0", firefox: "63", ios: "12.2", node: "11.0", opera: "57", opera_mobile: "49", safari: "12.1", samsung: "10.0" }, "es.symbol.async-iterator": { android: "63", chrome: "63", edge: "74", electron: "3.0", firefox: "55", ios: "12.0", node: "10.0", opera: "50", opera_mobile: "46", safari: "12.0", samsung: "8.0" }, "es.symbol.has-instance": { android: "50", chrome: "50", edge: "15", electron: "1.1", firefox: "49", ios: "10.0", node: "6.0", opera: "37", opera_mobile: "37", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.symbol.is-concat-spreadable": { android: "48", chrome: "48", edge: "15", electron: "0.37", firefox: "48", ios: "10.0", node: "6.0", opera: "35", opera_mobile: "35", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.symbol.iterator": { android: "41", chrome: "41", edge: "13", electron: "0.21", firefox: "36", ios: "9.0", node: "1.0", opera: "28", opera_mobile: "28", rhino: "1.7.13", safari: "9.0", samsung: "3.4" }, "es.symbol.match": { android: "50", chrome: "50", edge: "74", electron: "1.1", firefox: "40", ios: "10.0", node: "6.0", opera: "37", opera_mobile: "37", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.symbol.match-all": { android: "73", chrome: "73", edge: "74", electron: "5.0", firefox: "67", ios: "13.0", node: "12.0", opera: "60", opera_mobile: "52", safari: "13", samsung: "11.0" }, "es.symbol.replace": { android: "50", chrome: "50", edge: "74", electron: "1.1", firefox: "49", ios: "10.0", node: "6.0", opera: "37", opera_mobile: "37", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.symbol.search": { android: "50", chrome: "50", edge: "74", electron: "1.1", firefox: "49", ios: "10.0", node: "6.0", opera: "37", opera_mobile: "37", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.symbol.species": { android: "51", chrome: "51", edge: "13", electron: "1.2", firefox: "41", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.symbol.split": { android: "50", chrome: "50", edge: "74", electron: "1.1", firefox: "49", ios: "10.0", node: "6.0", opera: "37", opera_mobile: "37", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.symbol.to-primitive": { android: "47", chrome: "47", edge: "15", electron: "0.36", firefox: "44", ios: "10.0", node: "6.0", opera: "34", opera_mobile: "34", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.symbol.to-string-tag": { android: "49", chrome: "49", edge: "15", electron: "0.37", firefox: "51", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.symbol.unscopables": { android: "41", chrome: "41", edge: "13", electron: "0.21", firefox: "48", ios: "9.0", node: "1.0", opera: "28", opera_mobile: "28", rhino: "1.7.13", safari: "9.0", samsung: "3.4" }, "es.aggregate-error": { android: "85", chrome: "85", edge: "85", electron: "10.0", firefox: "79", ios: "14.0", node: "15.0", opera: "71", opera_mobile: "60", safari: "14.0", samsung: "14.0" }, "es.array.concat": { android: "51", chrome: "51", edge: "15", electron: "1.2", firefox: "48", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.array.copy-within": { android: "45", chrome: "45", edge: "12", electron: "0.31", firefox: "48", ios: "9.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "9.0", samsung: "5.0" }, "es.array.every": { android: "4.4", chrome: "26", edge: "12", electron: "0.20", firefox: "4", ie: "9", ios: "9.0", node: "0.11.0", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "8.0", samsung: "1.5" }, "es.array.fill": { android: "45", chrome: "45", edge: "12", electron: "0.31", firefox: "48", ios: "9.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "9.0", samsung: "5.0" }, "es.array.filter": { android: "51", chrome: "51", edge: "15", electron: "1.2", firefox: "48", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.array.find": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "48", ios: "9.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "9.0", samsung: "5.0" }, "es.array.find-index": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "48", ios: "9.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "9.0", samsung: "5.0" }, "es.array.flat": { android: "69", chrome: "69", edge: "74", electron: "4.0", firefox: "62", ios: "12.0", node: "11.0", opera: "56", opera_mobile: "48", safari: "12.0", samsung: "10.0" }, "es.array.flat-map": { android: "69", chrome: "69", edge: "74", electron: "4.0", firefox: "62", ios: "12.0", node: "11.0", opera: "56", opera_mobile: "48", safari: "12.0", samsung: "10.0" }, "es.array.for-each": { android: "4.4", chrome: "26", edge: "12", electron: "0.20", firefox: "4", ie: "9", ios: "9.0", node: "0.11.0", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "8.0", samsung: "1.5" }, "es.array.from": { android: "51", chrome: "51", edge: "15", electron: "1.2", firefox: "53", ios: "9.0", node: "6.5", opera: "38", opera_mobile: "38", rhino: "1.7.13", safari: "9.0", samsung: "5.0" }, "es.array.includes": { android: "53", chrome: "53", edge: "14", electron: "1.4", firefox: "48", ios: "10.0", node: "7.0", opera: "40", opera_mobile: "40", safari: "10.0", samsung: "6.0" }, "es.array.index-of": { android: "51", chrome: "51", edge: "12", electron: "1.2", firefox: "4", ie: "9", ios: "9.0", node: "6.5", opera: "38", opera_mobile: "38", rhino: "1.7.13", safari: "8.0", samsung: "5.0" }, "es.array.is-array": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "4", ie: "9", ios: "3.2", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "4.0", samsung: "1.0" }, "es.array.iterator": { android: "66", chrome: "66", edge: "15", electron: "3.0", firefox: "60", ios: "10.0", node: "10.0", opera: "53", opera_mobile: "47", safari: "10.0", samsung: "9.0" }, "es.array.join": { android: "4.4", chrome: "26", edge: "13", electron: "0.20", firefox: "4", ios: "8.0", node: "0.11.0", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "7.1", samsung: "1.5" }, "es.array.last-index-of": { android: "51", chrome: "51", edge: "12", electron: "1.2", firefox: "4", ie: "9", ios: "9.0", node: "6.5", opera: "38", opera_mobile: "38", rhino: "1.7.13", safari: "8.0", samsung: "5.0" }, "es.array.map": { android: "51", chrome: "51", edge: "13", electron: "1.2", firefox: "50", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.array.of": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "25", ios: "9.0", node: "4.0", opera: "32", opera_mobile: "32", rhino: "1.7.13", safari: "9.0", samsung: "5.0" }, "es.array.reduce": { android: "83", chrome: "83", edge: "12", electron: "9.0", firefox: "4", ie: "9", ios: "9.0", node: "6.0", opera: "69", opera_mobile: "59", rhino: "1.7.13", safari: "8.0", samsung: "13.0" }, "es.array.reduce-right": { android: "83", chrome: "83", edge: "12", electron: "9.0", firefox: "4", ie: "9", ios: "9.0", node: "6.0", opera: "69", opera_mobile: "59", rhino: "1.7.13", safari: "8.0", samsung: "13.0" }, "es.array.reverse": { android: "3.0", chrome: "1", edge: "12", electron: "0.20", firefox: "1", ie: "5.5", ios: "12.2", node: "0.0.3", opera: "10.50", opera_mobile: "10.50", rhino: "1.7.13", safari: "12.0.2", samsung: "1.0" }, "es.array.slice": { android: "51", chrome: "51", edge: "13", electron: "1.2", firefox: "48", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.array.some": { android: "4.4", chrome: "26", edge: "12", electron: "0.20", firefox: "4", ie: "9", ios: "9.0", node: "0.11.0", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "8.0", samsung: "1.5" }, "es.array.sort": { android: "70", chrome: "70", edge: "74", electron: "5.0", firefox: "4", ios: "12.0", node: "11.0", opera: "57", opera_mobile: "49", safari: "12.0", samsung: "10.0" }, "es.array.species": { android: "51", chrome: "51", edge: "13", electron: "1.2", firefox: "48", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.array.splice": { android: "51", chrome: "51", edge: "13", electron: "1.2", firefox: "49", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.array.unscopables.flat": { android: "73", chrome: "73", edge: "74", electron: "5.0", firefox: "67", ios: "13.0", node: "12.0", opera: "60", opera_mobile: "52", safari: "13", samsung: "11.0" }, "es.array.unscopables.flat-map": { android: "73", chrome: "73", edge: "74", electron: "5.0", firefox: "67", ios: "13.0", node: "12.0", opera: "60", opera_mobile: "52", safari: "13", samsung: "11.0" }, "es.array-buffer.constructor": { android: "4.4", chrome: "26", edge: "14", electron: "0.20", firefox: "44", ios: "12.0", node: "0.11.0", opera: "16", opera_mobile: "16", safari: "12.0", samsung: "1.5" }, "es.array-buffer.is-view": { android: "4.4.3", chrome: "32", edge: "12", electron: "0.20", firefox: "29", ie: "11", ios: "8.0", node: "0.11.9", opera: "19", opera_mobile: "19", safari: "7.1", samsung: "2.0" }, "es.array-buffer.slice": { android: "4.4.3", chrome: "31", edge: "12", electron: "0.20", firefox: "46", ie: "11", ios: "12.2", node: "0.11.8", opera: "18", opera_mobile: "18", rhino: "1.7.13", safari: "12.1", samsung: "2.0" }, "es.data-view": { android: "4.4", chrome: "26", edge: "12", electron: "0.20", firefox: "15", ie: "10", ios: "8.0", node: "0.11.0", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "7.1", samsung: "1.5" }, "es.date.get-year": { android: "3.0", chrome: "1", edge: "12", electron: "0.20", firefox: "1", ie: "3", ios: "1.0", node: "0.0.3", opera: "3", opera_mobile: "3", phantom: "1.9", rhino: "1.7.13", safari: "1", samsung: "1.0" }, "es.date.now": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ie: "9", ios: "3.2", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "4.0", samsung: "1.0" }, "es.date.set-year": { android: "3.0", chrome: "1", edge: "12", electron: "0.20", firefox: "1", ie: "3", ios: "1.0", node: "0.0.3", opera: "3", opera_mobile: "3", phantom: "1.9", rhino: "1.7.13", safari: "1", samsung: "1.0" }, "es.date.to-gmt-string": { android: "3.0", chrome: "1", edge: "12", electron: "0.20", firefox: "1", ie: "3", ios: "1.0", node: "0.0.3", opera: "3", opera_mobile: "3", phantom: "1.9", rhino: "1.7.13", safari: "1", samsung: "1.0" }, "es.date.to-iso-string": { android: "4.4", chrome: "26", edge: "12", electron: "0.20", firefox: "7", ie: "9", ios: "8.0", node: "0.11.0", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "7.1", samsung: "1.5" }, "es.date.to-json": { android: "4.4", chrome: "26", edge: "12", electron: "0.20", firefox: "4", ie: "9", ios: "10.0", node: "0.11.0", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "10.0", samsung: "1.5" }, "es.date.to-primitive": { android: "47", chrome: "47", edge: "15", electron: "0.36", firefox: "44", ios: "10.0", node: "6.0", opera: "34", opera_mobile: "34", safari: "10.0", samsung: "5.0" }, "es.date.to-string": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ie: "9", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.escape": { android: "3.0", chrome: "1", edge: "12", electron: "0.20", firefox: "1", ie: "3", ios: "1.0", node: "0.0.3", opera: "3", opera_mobile: "3", phantom: "1.9", rhino: "1.7.13", safari: "1", samsung: "1.0" }, "es.function.bind": { android: "3.0", chrome: "7", edge: "12", electron: "0.20", firefox: "4", ie: "9", ios: "5.1", node: "0.1.101", opera: "12", opera_mobile: "12", phantom: "2.0", rhino: "1.7.13", safari: "5.1", samsung: "1.0" }, "es.function.has-instance": { android: "51", chrome: "51", edge: "15", electron: "1.2", firefox: "50", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.function.name": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "3.2", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "4.0", samsung: "1.0" }, "es.global-this": { android: "71", chrome: "71", edge: "74", electron: "5.0", firefox: "65", ios: "12.2", node: "12.0", opera: "58", opera_mobile: "50", safari: "12.1", samsung: "10.0" }, "es.json.stringify": { android: "72", chrome: "72", edge: "74", electron: "5.0", firefox: "64", ios: "12.2", node: "12.0", opera: "59", opera_mobile: "51", safari: "12.1", samsung: "11.0" }, "es.json.to-string-tag": { android: "50", chrome: "50", edge: "15", electron: "1.1", firefox: "51", ios: "10.0", node: "6.0", opera: "37", opera_mobile: "37", safari: "10.0", samsung: "5.0" }, "es.map": { android: "51", chrome: "51", edge: "15", electron: "1.2", firefox: "53", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.math.acosh": { android: "54", chrome: "54", edge: "13", electron: "1.4", firefox: "25", ios: "8.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "7.1", samsung: "6.0" }, "es.math.asinh": { android: "38", chrome: "38", edge: "13", electron: "0.20", firefox: "25", ios: "8.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.math.atanh": { android: "38", chrome: "38", edge: "13", electron: "0.20", firefox: "25", ios: "8.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.math.cbrt": { android: "38", chrome: "38", edge: "12", electron: "0.20", firefox: "25", ios: "8.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.math.clz32": { android: "38", chrome: "38", edge: "12", electron: "0.20", firefox: "31", ios: "9.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "9.0", samsung: "3.0" }, "es.math.cosh": { android: "39", chrome: "39", edge: "13", electron: "0.20", firefox: "25", ios: "8.0", node: "1.0", opera: "26", opera_mobile: "26", rhino: "1.7.13", safari: "7.1", samsung: "3.4" }, "es.math.expm1": { android: "39", chrome: "39", edge: "13", electron: "0.20", firefox: "46", ios: "8.0", node: "1.0", opera: "26", opera_mobile: "26", rhino: "1.7.13", safari: "7.1", samsung: "3.4" }, "es.math.fround": { android: "38", chrome: "38", edge: "12", electron: "0.20", firefox: "26", ios: "8.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.math.hypot": { android: "78", chrome: "78", edge: "12", electron: "7.0", firefox: "27", ios: "8.0", node: "13.0", opera: "65", opera_mobile: "56", rhino: "1.7.13", safari: "7.1", samsung: "12.0" }, "es.math.imul": { android: "4.4", chrome: "28", edge: "13", electron: "0.20", firefox: "20", ios: "9.0", node: "0.11.1", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "9.0", samsung: "1.5" }, "es.math.log10": { android: "38", chrome: "38", edge: "12", electron: "0.20", firefox: "25", ios: "8.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.math.log1p": { android: "38", chrome: "38", edge: "12", electron: "0.20", firefox: "25", ios: "8.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.math.log2": { android: "38", chrome: "38", edge: "12", electron: "0.20", firefox: "25", ios: "8.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.math.sign": { android: "38", chrome: "38", edge: "12", electron: "0.20", firefox: "25", ios: "9.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "9.0", samsung: "3.0" }, "es.math.sinh": { android: "39", chrome: "39", edge: "13", electron: "0.20", firefox: "25", ios: "8.0", node: "1.0", opera: "26", opera_mobile: "26", rhino: "1.7.13", safari: "7.1", samsung: "3.4" }, "es.math.tanh": { android: "38", chrome: "38", edge: "12", electron: "0.20", firefox: "25", ios: "8.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.math.to-string-tag": { android: "50", chrome: "50", edge: "15", electron: "1.1", firefox: "51", ios: "10.0", node: "6.0", opera: "37", opera_mobile: "37", safari: "10.0", samsung: "5.0" }, "es.math.trunc": { android: "38", chrome: "38", edge: "12", electron: "0.20", firefox: "25", ios: "8.0", node: "0.11.15", opera: "25", opera_mobile: "25", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.number.constructor": { android: "41", chrome: "41", edge: "13", electron: "0.21", firefox: "46", ios: "9.0", node: "1.0", opera: "28", opera_mobile: "28", rhino: "1.7.13", safari: "9.0", samsung: "3.4" }, "es.number.epsilon": { android: "37", chrome: "34", edge: "12", electron: "0.20", firefox: "25", ios: "9.0", node: "0.11.13", opera: "21", opera_mobile: "21", safari: "9.0", samsung: "2.0" }, "es.number.is-finite": { android: "4.1", chrome: "19", edge: "12", electron: "0.20", firefox: "16", ios: "9.0", node: "0.7.3", opera: "15", opera_mobile: "15", rhino: "1.7.13", safari: "9.0", samsung: "1.5" }, "es.number.is-integer": { android: "37", chrome: "34", edge: "12", electron: "0.20", firefox: "16", ios: "9.0", node: "0.11.13", opera: "21", opera_mobile: "21", rhino: "1.7.13", safari: "9.0", samsung: "2.0" }, "es.number.is-nan": { android: "4.1", chrome: "19", edge: "12", electron: "0.20", firefox: "15", ios: "9.0", node: "0.7.3", opera: "15", opera_mobile: "15", rhino: "1.7.13", safari: "9.0", samsung: "1.5" }, "es.number.is-safe-integer": { android: "37", chrome: "34", edge: "12", electron: "0.20", firefox: "32", ios: "9.0", node: "0.11.13", opera: "21", opera_mobile: "21", rhino: "1.7.13", safari: "9.0", samsung: "2.0" }, "es.number.max-safe-integer": { android: "37", chrome: "34", edge: "12", electron: "0.20", firefox: "31", ios: "9.0", node: "0.11.13", opera: "21", opera_mobile: "21", rhino: "1.7.13", safari: "9.0", samsung: "2.0" }, "es.number.min-safe-integer": { android: "37", chrome: "34", edge: "12", electron: "0.20", firefox: "31", ios: "9.0", node: "0.11.13", opera: "21", opera_mobile: "21", rhino: "1.7.13", safari: "9.0", samsung: "2.0" }, "es.number.parse-float": { android: "37", chrome: "35", edge: "13", electron: "0.20", firefox: "39", ios: "11.0", node: "0.11.13", opera: "22", opera_mobile: "22", safari: "11.0", samsung: "3.0" }, "es.number.parse-int": { android: "37", chrome: "35", edge: "13", electron: "0.20", firefox: "39", ios: "9.0", node: "0.11.13", opera: "22", opera_mobile: "22", safari: "9.0", samsung: "3.0" }, "es.number.to-fixed": { android: "4.4", chrome: "26", edge: "74", electron: "0.20", firefox: "4", ios: "8.0", node: "0.11.0", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "7.1", samsung: "1.5" }, "es.number.to-precision": { android: "4.4", chrome: "26", edge: "12", electron: "0.20", firefox: "4", ie: "8", ios: "8.0", node: "0.11.0", opera: "16", opera_mobile: "16", rhino: "1.7.13", safari: "7.1", samsung: "1.5" }, "es.object.assign": { android: "49", chrome: "49", edge: "74", electron: "0.37", firefox: "36", ios: "9.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "9.0", samsung: "5.0" }, "es.object.create": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "4", ie: "9", ios: "3.2", node: "0.1.27", opera: "12", opera_mobile: "12", phantom: "1.9", rhino: "1.7.13", safari: "4.0", samsung: "1.0" }, "es.object.define-getter": { android: "62", chrome: "62", edge: "16", electron: "3.0", firefox: "48", ios: "8.0", node: "8.10", opera: "49", opera_mobile: "46", rhino: "1.7.13", safari: "7.1", samsung: "8.0" }, "es.object.define-properties": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "4", ie: "9", ios: "5.1", node: "0.1.27", opera: "12", opera_mobile: "12", phantom: "2.0", rhino: "1.7.13", safari: "5.1", samsung: "1.0" }, "es.object.define-property": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "4", ie: "9", ios: "5.1", node: "0.1.27", opera: "12", opera_mobile: "12", phantom: "2.0", rhino: "1.7.13", safari: "5.1", samsung: "1.0" }, "es.object.define-setter": { android: "62", chrome: "62", edge: "16", electron: "3.0", firefox: "48", ios: "8.0", node: "8.10", opera: "49", opera_mobile: "46", rhino: "1.7.13", safari: "7.1", samsung: "8.0" }, "es.object.entries": { android: "54", chrome: "54", edge: "14", electron: "1.4", firefox: "47", ios: "10.3", node: "7.0", opera: "41", opera_mobile: "41", safari: "10.1", samsung: "6.0" }, "es.object.freeze": { android: "44", chrome: "44", edge: "13", electron: "0.30", firefox: "35", ios: "9.0", node: "3.0", opera: "31", opera_mobile: "31", rhino: "1.7.13", safari: "9.0", samsung: "4.0" }, "es.object.from-entries": { android: "73", chrome: "73", edge: "74", electron: "5.0", firefox: "63", ios: "12.2", node: "12.0", opera: "60", opera_mobile: "52", safari: "12.1", samsung: "11.0" }, "es.object.get-own-property-descriptor": { android: "44", chrome: "44", edge: "13", electron: "0.30", firefox: "35", ios: "9.0", node: "3.0", opera: "31", opera_mobile: "31", rhino: "1.7.13", safari: "9.0", samsung: "4.0" }, "es.object.get-own-property-descriptors": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "50", ios: "10.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "10.0", samsung: "6.0" }, "es.object.get-own-property-names": { android: "40", chrome: "40", edge: "13", electron: "0.21", firefox: "34", ios: "9.0", node: "1.0", opera: "27", opera_mobile: "27", rhino: "1.7.13", safari: "9.0", samsung: "3.4" }, "es.object.get-prototype-of": { android: "44", chrome: "44", edge: "13", electron: "0.30", firefox: "35", ios: "9.0", node: "3.0", opera: "31", opera_mobile: "31", rhino: "1.7.13", safari: "9.0", samsung: "4.0" }, "es.object.is": { android: "4.1", chrome: "19", edge: "12", electron: "0.20", firefox: "22", ios: "9.0", node: "0.7.3", opera: "15", opera_mobile: "15", rhino: "1.7.13", safari: "9.0", samsung: "1.5" }, "es.object.is-extensible": { android: "44", chrome: "44", edge: "13", electron: "0.30", firefox: "35", ios: "9.0", node: "3.0", opera: "31", opera_mobile: "31", rhino: "1.7.13", safari: "9.0", samsung: "4.0" }, "es.object.is-frozen": { android: "44", chrome: "44", edge: "13", electron: "0.30", firefox: "35", ios: "9.0", node: "3.0", opera: "31", opera_mobile: "31", rhino: "1.7.13", safari: "9.0", samsung: "4.0" }, "es.object.is-sealed": { android: "44", chrome: "44", edge: "13", electron: "0.30", firefox: "35", ios: "9.0", node: "3.0", opera: "31", opera_mobile: "31", rhino: "1.7.13", safari: "9.0", samsung: "4.0" }, "es.object.keys": { android: "40", chrome: "40", edge: "13", electron: "0.21", firefox: "35", ios: "9.0", node: "1.0", opera: "27", opera_mobile: "27", rhino: "1.7.13", safari: "9.0", samsung: "3.4" }, "es.object.lookup-getter": { android: "62", chrome: "62", edge: "16", electron: "3.0", firefox: "48", ios: "8.0", node: "8.10", opera: "49", opera_mobile: "46", rhino: "1.7.13", safari: "7.1", samsung: "8.0" }, "es.object.lookup-setter": { android: "62", chrome: "62", edge: "16", electron: "3.0", firefox: "48", ios: "8.0", node: "8.10", opera: "49", opera_mobile: "46", rhino: "1.7.13", safari: "7.1", samsung: "8.0" }, "es.object.prevent-extensions": { android: "44", chrome: "44", edge: "13", electron: "0.30", firefox: "35", ios: "9.0", node: "3.0", opera: "31", opera_mobile: "31", rhino: "1.7.13", safari: "9.0", samsung: "4.0" }, "es.object.seal": { android: "44", chrome: "44", edge: "13", electron: "0.30", firefox: "35", ios: "9.0", node: "3.0", opera: "31", opera_mobile: "31", rhino: "1.7.13", safari: "9.0", samsung: "4.0" }, "es.object.set-prototype-of": { android: "37", chrome: "34", edge: "12", electron: "0.20", firefox: "31", ie: "11", ios: "9.0", node: "0.11.13", opera: "21", opera_mobile: "21", rhino: "1.7.13", safari: "9.0", samsung: "2.0" }, "es.object.to-string": { android: "49", chrome: "49", edge: "15", electron: "0.37", firefox: "51", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.object.values": { android: "54", chrome: "54", edge: "14", electron: "1.4", firefox: "47", ios: "10.3", node: "7.0", opera: "41", opera_mobile: "41", safari: "10.1", samsung: "6.0" }, "es.parse-float": { android: "37", chrome: "35", edge: "12", electron: "0.20", firefox: "8", ie: "8", ios: "8.0", node: "0.11.13", opera: "22", opera_mobile: "22", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.parse-int": { android: "37", chrome: "35", edge: "12", electron: "0.20", firefox: "21", ie: "9", ios: "8.0", node: "0.11.13", opera: "22", opera_mobile: "22", rhino: "1.7.13", safari: "7.1", samsung: "3.0" }, "es.promise": { android: "67", chrome: "67", edge: "74", electron: "4.0", firefox: "69", ios: "11.0", node: "10.4", opera: "54", opera_mobile: "48", safari: "11.0", samsung: "9.0" }, "es.promise.all-settled": { android: "76", chrome: "76", edge: "76", electron: "6.0", firefox: "71", ios: "13.0", node: "12.9", opera: "63", opera_mobile: "54", safari: "13", samsung: "12.0" }, "es.promise.any": { android: "85", chrome: "85", edge: "85", electron: "10.0", firefox: "79", ios: "14.0", node: "15.0", opera: "71", opera_mobile: "60", safari: "14.0", samsung: "14.0" }, "es.promise.finally": { android: "67", chrome: "67", edge: "74", electron: "4.0", firefox: "69", ios: "13.2.3", node: "10.4", opera: "54", opera_mobile: "48", safari: "13.0.3", samsung: "9.0" }, "es.reflect.apply": { android: "49", chrome: "49", edge: "15", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.construct": { android: "49", chrome: "49", edge: "15", electron: "0.37", firefox: "44", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.define-property": { android: "49", chrome: "49", edge: "13", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.delete-property": { android: "49", chrome: "49", edge: "12", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.get": { android: "49", chrome: "49", edge: "12", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.get-own-property-descriptor": { android: "49", chrome: "49", edge: "12", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.get-prototype-of": { android: "49", chrome: "49", edge: "12", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.has": { android: "49", chrome: "49", edge: "12", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.is-extensible": { android: "49", chrome: "49", edge: "12", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.own-keys": { android: "49", chrome: "49", edge: "12", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.prevent-extensions": { android: "49", chrome: "49", edge: "12", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.set": { android: "49", chrome: "49", edge: "74", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.set-prototype-of": { android: "49", chrome: "49", edge: "12", electron: "0.37", firefox: "42", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.reflect.to-string-tag": { android: "86", chrome: "86", edge: "86", electron: "11.0", firefox: "82", ios: "14.0", node: "15.0", opera: "72", opera_mobile: "61", safari: "14.0", samsung: "14.0" }, "es.regexp.constructor": { android: "64", chrome: "64", edge: "74", electron: "3.0", firefox: "78", ios: "11.3", node: "10.0", opera: "51", opera_mobile: "47", safari: "11.1", samsung: "9.0" }, "es.regexp.dot-all": { android: "62", chrome: "62", edge: "74", electron: "3.0", firefox: "78", ios: "11.3", node: "8.10", opera: "49", opera_mobile: "46", safari: "11.1", samsung: "8.0" }, "es.regexp.exec": { android: "64", chrome: "64", edge: "74", electron: "3.0", firefox: "78", ios: "11.3", node: "10.0", opera: "51", opera_mobile: "47", safari: "11.1", samsung: "9.0" }, "es.regexp.flags": { android: "62", chrome: "62", edge: "74", electron: "3.0", firefox: "78", ios: "11.3", node: "8.10", opera: "49", opera_mobile: "46", safari: "11.1", samsung: "8.0" }, "es.regexp.sticky": { android: "49", chrome: "49", edge: "13", electron: "0.37", firefox: "3", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.regexp.test": { android: "51", chrome: "51", edge: "74", electron: "1.2", firefox: "46", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.regexp.to-string": { android: "50", chrome: "50", edge: "74", electron: "1.1", firefox: "46", ios: "10.0", node: "6.0", opera: "37", opera_mobile: "37", safari: "10.0", samsung: "5.0" }, "es.set": { android: "51", chrome: "51", edge: "15", electron: "1.2", firefox: "53", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.string.code-point-at": { android: "41", chrome: "41", edge: "13", electron: "0.21", firefox: "29", ios: "9.0", node: "1.0", opera: "28", opera_mobile: "28", rhino: "1.7.13", safari: "9.0", samsung: "3.4" }, "es.string.ends-with": { android: "51", chrome: "51", edge: "74", electron: "1.2", firefox: "40", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.string.from-code-point": { android: "41", chrome: "41", edge: "13", electron: "0.21", firefox: "29", ios: "9.0", node: "1.0", opera: "28", opera_mobile: "28", rhino: "1.7.13", safari: "9.0", samsung: "3.4" }, "es.string.includes": { android: "51", chrome: "51", edge: "74", electron: "1.2", firefox: "40", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.string.iterator": { android: "41", chrome: "41", edge: "13", electron: "0.21", firefox: "36", ios: "9.0", node: "1.0", opera: "28", opera_mobile: "28", rhino: "1.7.13", safari: "9.0", samsung: "3.4" }, "es.string.match": { android: "51", chrome: "51", edge: "74", electron: "1.2", firefox: "49", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.string.match-all": { android: "80", chrome: "80", edge: "80", electron: "8.0", firefox: "73", ios: "13.4", node: "14.0", opera: "67", opera_mobile: "57", safari: "13.1", samsung: "13.0" }, "es.string.pad-end": { android: "57", chrome: "57", edge: "15", electron: "1.7", firefox: "48", ios: "11.0", node: "8.0", opera: "44", opera_mobile: "43", rhino: "1.7.13", safari: "11.0", samsung: "7.0" }, "es.string.pad-start": { android: "57", chrome: "57", edge: "15", electron: "1.7", firefox: "48", ios: "11.0", node: "8.0", opera: "44", opera_mobile: "43", rhino: "1.7.13", safari: "11.0", samsung: "7.0" }, "es.string.raw": { android: "41", chrome: "41", edge: "13", electron: "0.21", firefox: "34", ios: "9.0", node: "1.0", opera: "28", opera_mobile: "28", safari: "9.0", samsung: "3.4" }, "es.string.repeat": { android: "41", chrome: "41", edge: "13", electron: "0.21", firefox: "24", ios: "9.0", node: "1.0", opera: "28", opera_mobile: "28", rhino: "1.7.13", safari: "9.0", samsung: "3.4" }, "es.string.replace": { android: "64", chrome: "64", edge: "74", electron: "3.0", firefox: "78", ios: "14.0", node: "10.0", opera: "51", opera_mobile: "47", safari: "14.0", samsung: "9.0" }, "es.string.replace-all": { android: "85", chrome: "85", edge: "85", electron: "10.0", firefox: "77", ios: "13.4", node: "15.0", opera: "71", opera_mobile: "60", safari: "13.1", samsung: "14.0" }, "es.string.search": { android: "51", chrome: "51", edge: "74", electron: "1.2", firefox: "49", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.string.split": { android: "54", chrome: "54", edge: "74", electron: "1.4", firefox: "49", ios: "10.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "10.0", samsung: "6.0" }, "es.string.starts-with": { android: "51", chrome: "51", edge: "74", electron: "1.2", firefox: "40", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.string.substr": { android: "3.0", chrome: "1", edge: "12", electron: "0.20", firefox: "1", ie: "4", ios: "1.0", node: "0.0.3", opera: "4", opera_mobile: "4", phantom: "1.9", rhino: "1.7.13", safari: "1", samsung: "1.0" }, "es.string.trim": { android: "59", chrome: "59", edge: "15", electron: "1.8", firefox: "52", ios: "12.2", node: "8.3", opera: "46", opera_mobile: "43", rhino: "1.7.13", safari: "12.1", samsung: "7.0" }, "es.string.trim-end": { android: "66", chrome: "66", edge: "74", electron: "3.0", firefox: "61", ios: "12.2", node: "10.0", opera: "53", opera_mobile: "47", safari: "12.1", samsung: "9.0" }, "es.string.trim-start": { android: "66", chrome: "66", edge: "74", electron: "3.0", firefox: "61", ios: "12.0", node: "10.0", opera: "53", opera_mobile: "47", safari: "12.0", samsung: "9.0" }, "es.string.anchor": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "17", ios: "6.0", node: "0.1.27", opera: "15", opera_mobile: "15", phantom: "2.0", safari: "6.0", samsung: "1.0" }, "es.string.big": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.string.blink": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.string.bold": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.string.fixed": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.string.fontcolor": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "17", ios: "6.0", node: "0.1.27", opera: "15", opera_mobile: "15", phantom: "2.0", safari: "6.0", samsung: "1.0" }, "es.string.fontsize": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "17", ios: "6.0", node: "0.1.27", opera: "15", opera_mobile: "15", phantom: "2.0", safari: "6.0", samsung: "1.0" }, "es.string.italics": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.string.link": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "17", ios: "6.0", node: "0.1.27", opera: "15", opera_mobile: "15", phantom: "2.0", safari: "6.0", samsung: "1.0" }, "es.string.small": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.string.strike": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.string.sub": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.string.sup": { android: "3.0", chrome: "5", edge: "12", electron: "0.20", firefox: "2", ios: "2.0", node: "0.1.27", opera: "10.50", opera_mobile: "10.50", phantom: "1.9", rhino: "1.7.13", safari: "3.1", samsung: "1.0" }, "es.typed-array.float32-array": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.float64-array": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.int8-array": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.int16-array": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.int32-array": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.uint8-array": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.uint8-clamped-array": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.uint16-array": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.uint32-array": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.copy-within": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "34", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.every": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.fill": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.filter": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "38", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.find": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.find-index": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.for-each": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "38", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.from": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.includes": { android: "49", chrome: "49", edge: "14", electron: "0.37", firefox: "43", ios: "10.0", node: "6.0", opera: "36", opera_mobile: "36", safari: "10.0", samsung: "5.0" }, "es.typed-array.index-of": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.iterator": { android: "47", chrome: "47", edge: "13", electron: "0.36", firefox: "37", ios: "10.0", node: "6.0", opera: "34", opera_mobile: "34", safari: "10.0", samsung: "5.0" }, "es.typed-array.join": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.last-index-of": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.map": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "38", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.of": { android: "54", chrome: "54", edge: "15", electron: "1.4", firefox: "55", ios: "14.0", node: "7.0", opera: "41", opera_mobile: "41", safari: "14.0", samsung: "6.0" }, "es.typed-array.reduce": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.reduce-right": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.reverse": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.set": { android: "4.4", chrome: "26", edge: "13", electron: "0.20", firefox: "15", ios: "8.0", node: "0.11.0", opera: "16", opera_mobile: "16", safari: "7.1", samsung: "1.5" }, "es.typed-array.slice": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "38", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.some": { android: "45", chrome: "45", edge: "13", electron: "0.31", firefox: "37", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.sort": { android: "74", chrome: "74", edge: "74", electron: "6.0", firefox: "67", ios: "14.5", node: "12.0", opera: "61", opera_mobile: "53", safari: "14.1", samsung: "11.0" }, "es.typed-array.subarray": { android: "4.4", chrome: "26", edge: "13", electron: "0.20", firefox: "15", ios: "8.0", node: "0.11.0", opera: "16", opera_mobile: "16", safari: "7.1", samsung: "1.5" }, "es.typed-array.to-locale-string": { android: "45", chrome: "45", edge: "74", electron: "0.31", firefox: "51", ios: "10.0", node: "4.0", opera: "32", opera_mobile: "32", safari: "10.0", samsung: "5.0" }, "es.typed-array.to-string": { android: "51", chrome: "51", edge: "13", electron: "1.2", firefox: "51", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", safari: "10.0", samsung: "5.0" }, "es.unescape": { android: "3.0", chrome: "1", edge: "12", electron: "0.20", firefox: "1", ie: "3", ios: "1.0", node: "0.0.3", opera: "3", opera_mobile: "3", phantom: "1.9", rhino: "1.7.13", safari: "1", samsung: "1.0" }, "es.weak-map": { android: "51", chrome: "51", edge: "15", electron: "1.2", firefox: "53", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "es.weak-set": { android: "51", chrome: "51", edge: "15", electron: "1.2", firefox: "53", ios: "10.0", node: "6.5", opera: "38", opera_mobile: "38", rhino: "1.7.13", safari: "10.0", samsung: "5.0" }, "esnext.aggregate-error": { android: "85", chrome: "85", edge: "85", electron: "10.0", firefox: "79", ios: "14.0", node: "15.0", opera: "71", opera_mobile: "60", safari: "14.0", samsung: "14.0" }, "esnext.array.at": { android: "92", chrome: "92", edge: "92", electron: "14.0", firefox: "90", opera: "78" }, "esnext.array.filter-out": {}, "esnext.array.find-last": {}, "esnext.array.find-last-index": {}, "esnext.array.is-template-object": {}, "esnext.array.last-index": {}, "esnext.array.last-item": {}, "esnext.array.unique-by": {}, "esnext.async-iterator.constructor": {}, "esnext.async-iterator.as-indexed-pairs": {}, "esnext.async-iterator.drop": {}, "esnext.async-iterator.every": {}, "esnext.async-iterator.filter": {}, "esnext.async-iterator.find": {}, "esnext.async-iterator.flat-map": {}, "esnext.async-iterator.for-each": {}, "esnext.async-iterator.from": {}, "esnext.async-iterator.map": {}, "esnext.async-iterator.reduce": {}, "esnext.async-iterator.some": {}, "esnext.async-iterator.take": {}, "esnext.async-iterator.to-array": {}, "esnext.bigint.range": {}, "esnext.composite-key": {}, "esnext.composite-symbol": {}, "esnext.global-this": { android: "71", chrome: "71", edge: "74", electron: "5.0", firefox: "65", ios: "12.2", node: "12.0", opera: "58", opera_mobile: "50", safari: "12.1", samsung: "10.0" }, "esnext.iterator.constructor": {}, "esnext.iterator.as-indexed-pairs": {}, "esnext.iterator.drop": {}, "esnext.iterator.every": {}, "esnext.iterator.filter": {}, "esnext.iterator.find": {}, "esnext.iterator.flat-map": {}, "esnext.iterator.for-each": {}, "esnext.iterator.from": {}, "esnext.iterator.map": {}, "esnext.iterator.reduce": {}, "esnext.iterator.some": {}, "esnext.iterator.take": {}, "esnext.iterator.to-array": {}, "esnext.map.delete-all": {}, "esnext.map.emplace": {}, "esnext.map.every": {}, "esnext.map.filter": {}, "esnext.map.find": {}, "esnext.map.find-key": {}, "esnext.map.from": {}, "esnext.map.group-by": {}, "esnext.map.includes": {}, "esnext.map.key-by": {}, "esnext.map.key-of": {}, "esnext.map.map-keys": {}, "esnext.map.map-values": {}, "esnext.map.merge": {}, "esnext.map.of": {}, "esnext.map.reduce": {}, "esnext.map.some": {}, "esnext.map.update": {}, "esnext.map.update-or-insert": {}, "esnext.map.upsert": {}, "esnext.math.clamp": {}, "esnext.math.deg-per-rad": {}, "esnext.math.degrees": {}, "esnext.math.fscale": {}, "esnext.math.iaddh": {}, "esnext.math.imulh": {}, "esnext.math.isubh": {}, "esnext.math.rad-per-deg": {}, "esnext.math.radians": {}, "esnext.math.scale": {}, "esnext.math.seeded-prng": {}, "esnext.math.signbit": {}, "esnext.math.umulh": {}, "esnext.number.from-string": {}, "esnext.number.range": {}, "esnext.object.has-own": {}, "esnext.object.iterate-entries": {}, "esnext.object.iterate-keys": {}, "esnext.object.iterate-values": {}, "esnext.observable": {}, "esnext.promise.all-settled": { android: "76", chrome: "76", edge: "76", electron: "6.0", firefox: "71", ios: "13.0", node: "12.9", opera: "63", opera_mobile: "54", safari: "13", samsung: "12.0" }, "esnext.promise.any": { android: "85", chrome: "85", edge: "85", electron: "10.0", firefox: "79", ios: "14.0", node: "15.0", opera: "71", opera_mobile: "60", safari: "14.0", samsung: "14.0" }, "esnext.promise.try": {}, "esnext.reflect.define-metadata": {}, "esnext.reflect.delete-metadata": {}, "esnext.reflect.get-metadata": {}, "esnext.reflect.get-metadata-keys": {}, "esnext.reflect.get-own-metadata": {}, "esnext.reflect.get-own-metadata-keys": {}, "esnext.reflect.has-metadata": {}, "esnext.reflect.has-own-metadata": {}, "esnext.reflect.metadata": {}, "esnext.set.add-all": {}, "esnext.set.delete-all": {}, "esnext.set.difference": {}, "esnext.set.every": {}, "esnext.set.filter": {}, "esnext.set.find": {}, "esnext.set.from": {}, "esnext.set.intersection": {}, "esnext.set.is-disjoint-from": {}, "esnext.set.is-subset-of": {}, "esnext.set.is-superset-of": {}, "esnext.set.join": {}, "esnext.set.map": {}, "esnext.set.of": {}, "esnext.set.reduce": {}, "esnext.set.some": {}, "esnext.set.symmetric-difference": {}, "esnext.set.union": {}, "esnext.string.at": {}, "esnext.string.code-points": {}, "esnext.string.match-all": { android: "80", chrome: "80", edge: "80", electron: "8.0", firefox: "73", ios: "13.4", node: "14.0", opera: "67", opera_mobile: "57", safari: "13.1", samsung: "13.0" }, "esnext.string.replace-all": { android: "85", chrome: "85", edge: "85", electron: "10.0", firefox: "77", ios: "13.4", node: "15.0", opera: "71", opera_mobile: "60", safari: "13.1", samsung: "14.0" }, "esnext.symbol.async-dispose": {}, "esnext.symbol.dispose": {}, "esnext.symbol.matcher": {}, "esnext.symbol.metadata": {}, "esnext.symbol.observable": {}, "esnext.symbol.pattern-match": {}, "esnext.symbol.replace-all": {}, "esnext.typed-array.at": { android: "92", chrome: "92", edge: "92", electron: "14.0", firefox: "90", opera: "78" }, "esnext.typed-array.filter-out": {}, "esnext.typed-array.find-last": {}, "esnext.typed-array.find-last-index": {}, "esnext.typed-array.unique-by": {}, "esnext.weak-map.delete-all": {}, "esnext.weak-map.from": {}, "esnext.weak-map.of": {}, "esnext.weak-map.emplace": {}, "esnext.weak-map.upsert": {}, "esnext.weak-set.add-all": {}, "esnext.weak-set.delete-all": {}, "esnext.weak-set.from": {}, "esnext.weak-set.of": {}, "web.dom-collections.for-each": { android: "58", chrome: "58", edge: "16", electron: "1.7", firefox: "50", ios: "10.0", node: "0.0.1", opera: "45", opera_mobile: "43", rhino: "1.7.13", safari: "10.0", samsung: "7.0" }, "web.dom-collections.iterator": { android: "66", chrome: "66", edge: "74", electron: "3.0", firefox: "60", ios: "13.4", node: "0.0.1", opera: "53", opera_mobile: "47", rhino: "1.7.13", safari: "13.1", samsung: "9.0" }, "web.immediate": { ie: "10", node: "0.9.1" }, "web.queue-microtask": { android: "71", chrome: "71", edge: "74", electron: "5.0", firefox: "69", ios: "12.2", node: "12.0", opera: "58", opera_mobile: "50", safari: "12.1", samsung: "10.0" }, "web.timers": { android: "1.5", chrome: "1", edge: "12", electron: "0.20", firefox: "1", ie: "10", ios: "1.0", node: "0.0.1", opera: "7", opera_mobile: "7", phantom: "1.9", rhino: "1.7.13", safari: "1.0", samsung: "1.0" }, "web.url": { android: "67", chrome: "67", edge: "74", electron: "4.0", firefox: "57", ios: "14.0", node: "10.0", opera: "54", opera_mobile: "48", safari: "14.0", samsung: "9.0" }, "web.url.to-json": { android: "71", chrome: "71", edge: "74", electron: "5.0", firefox: "57", ios: "14.0", node: "10.0", opera: "58", opera_mobile: "50", safari: "14.0", samsung: "10.0" }, "web.url-search-params": { android: "67", chrome: "67", edge: "74", electron: "4.0", firefox: "57", ios: "14.0", node: "10.0", opera: "54", opera_mobile: "48", safari: "14.0", samsung: "9.0" } }, CG = wG, SG = typeof ar == "object" && ar.env && ar.env.NODE_DEBUG && /\bsemver\b/i.test(ar.env.NODE_DEBUG) ? function() {
        for (var e2, t2 = arguments.length, r2 = new Array(t2), n2 = 0; n2 < t2; n2++)
          r2[n2] = arguments[n2];
        return (e2 = console).error.apply(e2, ["SEMVER"].concat(r2));
      } : function() {
      }, TG = { SEMVER_SPEC_VERSION: "2.0.0", MAX_LENGTH: 256, MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991, MAX_SAFE_COMPONENT_LENGTH: 16 }, jG = zt(function(e2, t2) {
        var r2 = TG.MAX_SAFE_COMPONENT_LENGTH, n2 = (t2 = e2.exports = {}).re = [], s2 = t2.src = [], a2 = t2.t = {}, i2 = 0, o2 = function(e3, t3, r3) {
          var o3 = i2++;
          SG(o3, t3), a2[e3] = o3, s2[o3] = t3, n2[o3] = new RegExp(t3, r3 ? "g" : void 0);
        };
        o2("NUMERICIDENTIFIER", "0|[1-9]\\d*"), o2("NUMERICIDENTIFIERLOOSE", "[0-9]+"), o2("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*"), o2("MAINVERSION", "(" + s2[a2.NUMERICIDENTIFIER] + ")\\.(" + s2[a2.NUMERICIDENTIFIER] + ")\\.(" + s2[a2.NUMERICIDENTIFIER] + ")"), o2("MAINVERSIONLOOSE", "(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + s2[a2.NUMERICIDENTIFIERLOOSE] + ")"), o2("PRERELEASEIDENTIFIER", "(?:" + s2[a2.NUMERICIDENTIFIER] + "|" + s2[a2.NONNUMERICIDENTIFIER] + ")"), o2("PRERELEASEIDENTIFIERLOOSE", "(?:" + s2[a2.NUMERICIDENTIFIERLOOSE] + "|" + s2[a2.NONNUMERICIDENTIFIER] + ")"), o2("PRERELEASE", "(?:-(" + s2[a2.PRERELEASEIDENTIFIER] + "(?:\\." + s2[a2.PRERELEASEIDENTIFIER] + ")*))"), o2("PRERELEASELOOSE", "(?:-?(" + s2[a2.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + s2[a2.PRERELEASEIDENTIFIERLOOSE] + ")*))"), o2("BUILDIDENTIFIER", "[0-9A-Za-z-]+"), o2("BUILD", "(?:\\+(" + s2[a2.BUILDIDENTIFIER] + "(?:\\." + s2[a2.BUILDIDENTIFIER] + ")*))"), o2("FULLPLAIN", "v?" + s2[a2.MAINVERSION] + s2[a2.PRERELEASE] + "?" + s2[a2.BUILD] + "?"), o2("FULL", "^" + s2[a2.FULLPLAIN] + "$"), o2("LOOSEPLAIN", "[v=\\s]*" + s2[a2.MAINVERSIONLOOSE] + s2[a2.PRERELEASELOOSE] + "?" + s2[a2.BUILD] + "?"), o2("LOOSE", "^" + s2[a2.LOOSEPLAIN] + "$"), o2("GTLT", "((?:<|>)?=?)"), o2("XRANGEIDENTIFIERLOOSE", s2[a2.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*"), o2("XRANGEIDENTIFIER", s2[a2.NUMERICIDENTIFIER] + "|x|X|\\*"), o2("XRANGEPLAIN", "[v=\\s]*(" + s2[a2.XRANGEIDENTIFIER] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIER] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIER] + ")(?:" + s2[a2.PRERELEASE] + ")?" + s2[a2.BUILD] + "?)?)?"), o2("XRANGEPLAINLOOSE", "[v=\\s]*(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + s2[a2.XRANGEIDENTIFIERLOOSE] + ")(?:" + s2[a2.PRERELEASELOOSE] + ")?" + s2[a2.BUILD] + "?)?)?"), o2("XRANGE", "^" + s2[a2.GTLT] + "\\s*" + s2[a2.XRANGEPLAIN] + "$"), o2("XRANGELOOSE", "^" + s2[a2.GTLT] + "\\s*" + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("COERCE", "(^|[^\\d])(\\d{1," + r2 + "})(?:\\.(\\d{1," + r2 + "}))?(?:\\.(\\d{1," + r2 + "}))?(?:$|[^\\d])"), o2("COERCERTL", s2[a2.COERCE], true), o2("LONETILDE", "(?:~>?)"), o2("TILDETRIM", "(\\s*)" + s2[a2.LONETILDE] + "\\s+", true), t2.tildeTrimReplace = "$1~", o2("TILDE", "^" + s2[a2.LONETILDE] + s2[a2.XRANGEPLAIN] + "$"), o2("TILDELOOSE", "^" + s2[a2.LONETILDE] + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("LONECARET", "(?:\\^)"), o2("CARETTRIM", "(\\s*)" + s2[a2.LONECARET] + "\\s+", true), t2.caretTrimReplace = "$1^", o2("CARET", "^" + s2[a2.LONECARET] + s2[a2.XRANGEPLAIN] + "$"), o2("CARETLOOSE", "^" + s2[a2.LONECARET] + s2[a2.XRANGEPLAINLOOSE] + "$"), o2("COMPARATORLOOSE", "^" + s2[a2.GTLT] + "\\s*(" + s2[a2.LOOSEPLAIN] + ")$|^$"), o2("COMPARATOR", "^" + s2[a2.GTLT] + "\\s*(" + s2[a2.FULLPLAIN] + ")$|^$"), o2("COMPARATORTRIM", "(\\s*)" + s2[a2.GTLT] + "\\s*(" + s2[a2.LOOSEPLAIN] + "|" + s2[a2.XRANGEPLAIN] + ")", true), t2.comparatorTrimReplace = "$1$2$3", o2("HYPHENRANGE", "^\\s*(" + s2[a2.XRANGEPLAIN] + ")\\s+-\\s+(" + s2[a2.XRANGEPLAIN] + ")\\s*$"), o2("HYPHENRANGELOOSE", "^\\s*(" + s2[a2.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + s2[a2.XRANGEPLAINLOOSE] + ")\\s*$"), o2("STAR", "(<|>)?=?\\s*\\*");
      }, "/$$rollup_base$$/node_modules/core-js-compat/node_modules/semver/internal"), PG = /^[0-9]+$/, IG = function(e2, t2) {
        var r2 = PG.test(e2), n2 = PG.test(t2);
        return r2 && n2 && (e2 = +e2, t2 = +t2), e2 === t2 ? 0 : r2 && !n2 ? -1 : n2 && !r2 ? 1 : e2 < t2 ? -1 : 1;
      }, FG = IG, kG = TG.MAX_LENGTH, OG = TG.MAX_SAFE_INTEGER, RG = jG.re, NG = jG.t, BG = FG, _G = function() {
        function e2(t3, r2) {
          if (r2 && typeof r2 == "object" || (r2 = { loose: !!r2, includePrerelease: false }), t3 instanceof e2) {
            if (t3.loose === !!r2.loose && t3.includePrerelease === !!r2.includePrerelease)
              return t3;
            t3 = t3.version;
          } else if (typeof t3 != "string")
            throw new TypeError("Invalid Version: " + t3);
          if (t3.length > kG)
            throw new TypeError("version is longer than " + kG + " characters");
          SG("SemVer", t3, r2), this.options = r2, this.loose = !!r2.loose, this.includePrerelease = !!r2.includePrerelease;
          var n2 = t3.trim().match(r2.loose ? RG[NG.LOOSE] : RG[NG.FULL]);
          if (!n2)
            throw new TypeError("Invalid Version: " + t3);
          if (this.raw = t3, this.major = +n2[1], this.minor = +n2[2], this.patch = +n2[3], this.major > OG || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > OG || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > OG || this.patch < 0)
            throw new TypeError("Invalid patch version");
          n2[4] ? this.prerelease = n2[4].split(".").map(function(e3) {
            if (/^[0-9]+$/.test(e3)) {
              var t4 = +e3;
              if (t4 >= 0 && t4 < OG)
                return t4;
            }
            return e3;
          }) : this.prerelease = [], this.build = n2[5] ? n2[5].split(".") : [], this.format();
        }
        var t2 = e2.prototype;
        return t2.format = function() {
          return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version;
        }, t2.toString = function() {
          return this.version;
        }, t2.compare = function(t3) {
          if (SG("SemVer.compare", this.version, this.options, t3), !(t3 instanceof e2)) {
            if (typeof t3 == "string" && t3 === this.version)
              return 0;
            t3 = new e2(t3, this.options);
          }
          return t3.version === this.version ? 0 : this.compareMain(t3) || this.comparePre(t3);
        }, t2.compareMain = function(t3) {
          return t3 instanceof e2 || (t3 = new e2(t3, this.options)), BG(this.major, t3.major) || BG(this.minor, t3.minor) || BG(this.patch, t3.patch);
        }, t2.comparePre = function(t3) {
          if (t3 instanceof e2 || (t3 = new e2(t3, this.options)), this.prerelease.length && !t3.prerelease.length)
            return -1;
          if (!this.prerelease.length && t3.prerelease.length)
            return 1;
          if (!this.prerelease.length && !t3.prerelease.length)
            return 0;
          var r2 = 0;
          do {
            var n2 = this.prerelease[r2], s2 = t3.prerelease[r2];
            if (SG("prerelease compare", r2, n2, s2), n2 === void 0 && s2 === void 0)
              return 0;
            if (s2 === void 0)
              return 1;
            if (n2 === void 0)
              return -1;
            if (n2 !== s2)
              return BG(n2, s2);
          } while (++r2);
        }, t2.compareBuild = function(t3) {
          t3 instanceof e2 || (t3 = new e2(t3, this.options));
          var r2 = 0;
          do {
            var n2 = this.build[r2], s2 = t3.build[r2];
            if (SG("prerelease compare", r2, n2, s2), n2 === void 0 && s2 === void 0)
              return 0;
            if (s2 === void 0)
              return 1;
            if (n2 === void 0)
              return -1;
            if (n2 !== s2)
              return BG(n2, s2);
          } while (++r2);
        }, t2.inc = function(e3, t3) {
          switch (e3) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t3);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t3);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "prerelease":
              this.prerelease.length === 0 && this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "major":
              this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              this.prerelease.length === 0 && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (this.prerelease.length === 0)
                this.prerelease = [0];
              else {
                for (var r2 = this.prerelease.length; --r2 >= 0; )
                  typeof this.prerelease[r2] == "number" && (this.prerelease[r2]++, r2 = -2);
                r2 === -1 && this.prerelease.push(0);
              }
              t3 && (this.prerelease[0] === t3 ? isNaN(this.prerelease[1]) && (this.prerelease = [t3, 0]) : this.prerelease = [t3, 0]);
              break;
            default:
              throw new Error("invalid increment argument: " + e3);
          }
          return this.format(), this.raw = this.version, this;
        }, e2;
      }(), LG = function(e2, t2, r2) {
        return new _G(e2, r2).compare(new _G(t2, r2));
      }, MG = function(e2, t2, r2) {
        return LG(e2, t2, r2) === 0;
      }, UG = function(e2, t2, r2) {
        return LG(e2, t2, r2) !== 0;
      }, GG = function(e2, t2, r2) {
        return LG(e2, t2, r2) > 0;
      }, VG = function(e2, t2, r2) {
        return LG(e2, t2, r2) >= 0;
      }, WG = function(e2, t2, r2) {
        return LG(e2, t2, r2) < 0;
      }, HG = function(e2, t2, r2) {
        return LG(e2, t2, r2) <= 0;
      }, XG = function(e2, t2, r2, n2) {
        switch (t2) {
          case "===":
            return typeof e2 == "object" && (e2 = e2.version), typeof r2 == "object" && (r2 = r2.version), e2 === r2;
          case "!==":
            return typeof e2 == "object" && (e2 = e2.version), typeof r2 == "object" && (r2 = r2.version), e2 !== r2;
          case "":
          case "=":
          case "==":
            return MG(e2, r2, n2);
          case "!=":
            return UG(e2, r2, n2);
          case ">":
            return GG(e2, r2, n2);
          case ">=":
            return VG(e2, r2, n2);
          case "<":
            return WG(e2, r2, n2);
          case "<=":
            return HG(e2, r2, n2);
          default:
            throw new TypeError("Invalid operator: " + t2);
        }
      }, qG = TG.MAX_LENGTH, $G = jG.re, KG = jG.t, zG = function(e2, t2) {
        if (t2 && typeof t2 == "object" || (t2 = { loose: !!t2, includePrerelease: false }), e2 instanceof _G)
          return e2;
        if (typeof e2 != "string")
          return null;
        if (e2.length > qG)
          return null;
        if (!(t2.loose ? $G[KG.LOOSE] : $G[KG.FULL]).test(e2))
          return null;
        try {
          return new _G(e2, t2);
        } catch (e3) {
          return null;
        }
      }, JG = jG.re, YG = jG.t, QG = function(e2, t2) {
        if (e2 instanceof _G)
          return e2;
        if (typeof e2 == "number" && (e2 = String(e2)), typeof e2 != "string")
          return null;
        var r2 = null;
        if ((t2 = t2 || {}).rtl) {
          for (var n2; (n2 = JG[YG.COERCERTL].exec(e2)) && (!r2 || r2.index + r2[0].length !== e2.length); )
            r2 && n2.index + n2[0].length === r2.index + r2[0].length || (r2 = n2), JG[YG.COERCERTL].lastIndex = n2.index + n2[1].length + n2[2].length;
          JG[YG.COERCERTL].lastIndex = -1;
        } else
          r2 = e2.match(JG[YG.COERCE]);
        return r2 === null ? null : zG(r2[2] + "." + (r2[3] || "0") + "." + (r2[4] || "0"), t2);
      };
      var ZG = { compare: function(e2, t2, r2) {
        return XG(QG(e2), t2, QG(r2));
      }, has: Function.call.bind({}.hasOwnProperty), intersection: function(e2, t2) {
        var r2 = e2 instanceof Set ? e2 : new Set(e2);
        return t2.filter(function(e3) {
          return r2.has(e3);
        });
      }, semver: QG, sortObjectByKey: function(e2, t2) {
        return Object.keys(e2).sort(t2).reduce(function(t3, r2) {
          return t3[r2] = e2[r2], t3;
        }, {});
      } }, eV = { "3.0": ["es.symbol", "es.symbol.description", "es.symbol.async-iterator", "es.symbol.has-instance", "es.symbol.is-concat-spreadable", "es.symbol.iterator", "es.symbol.match", "es.symbol.replace", "es.symbol.search", "es.symbol.species", "es.symbol.split", "es.symbol.to-primitive", "es.symbol.to-string-tag", "es.symbol.unscopables", "es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.from", "es.array.includes", "es.array.index-of", "es.array.is-array", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.of", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.array-buffer.constructor", "es.array-buffer.is-view", "es.array-buffer.slice", "es.data-view", "es.date.now", "es.date.to-iso-string", "es.date.to-json", "es.date.to-primitive", "es.date.to-string", "es.function.bind", "es.function.has-instance", "es.function.name", "es.json.to-string-tag", "es.map", "es.math.acosh", "es.math.asinh", "es.math.atanh", "es.math.cbrt", "es.math.clz32", "es.math.cosh", "es.math.expm1", "es.math.fround", "es.math.hypot", "es.math.imul", "es.math.log10", "es.math.log1p", "es.math.log2", "es.math.sign", "es.math.sinh", "es.math.tanh", "es.math.to-string-tag", "es.math.trunc", "es.number.constructor", "es.number.epsilon", "es.number.is-finite", "es.number.is-integer", "es.number.is-nan", "es.number.is-safe-integer", "es.number.max-safe-integer", "es.number.min-safe-integer", "es.number.parse-float", "es.number.parse-int", "es.number.to-fixed", "es.number.to-precision", "es.object.assign", "es.object.create", "es.object.define-getter", "es.object.define-properties", "es.object.define-property", "es.object.define-setter", "es.object.entries", "es.object.freeze", "es.object.from-entries", "es.object.get-own-property-descriptor", "es.object.get-own-property-descriptors", "es.object.get-own-property-names", "es.object.get-prototype-of", "es.object.is", "es.object.is-extensible", "es.object.is-frozen", "es.object.is-sealed", "es.object.keys", "es.object.lookup-getter", "es.object.lookup-setter", "es.object.prevent-extensions", "es.object.seal", "es.object.set-prototype-of", "es.object.to-string", "es.object.values", "es.parse-float", "es.parse-int", "es.promise", "es.promise.finally", "es.reflect.apply", "es.reflect.construct", "es.reflect.define-property", "es.reflect.delete-property", "es.reflect.get", "es.reflect.get-own-property-descriptor", "es.reflect.get-prototype-of", "es.reflect.has", "es.reflect.is-extensible", "es.reflect.own-keys", "es.reflect.prevent-extensions", "es.reflect.set", "es.reflect.set-prototype-of", "es.regexp.constructor", "es.regexp.exec", "es.regexp.flags", "es.regexp.to-string", "es.set", "es.string.code-point-at", "es.string.ends-with", "es.string.from-code-point", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.pad-end", "es.string.pad-start", "es.string.raw", "es.string.repeat", "es.string.replace", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup", "es.typed-array.float32-array", "es.typed-array.float64-array", "es.typed-array.int8-array", "es.typed-array.int16-array", "es.typed-array.int32-array", "es.typed-array.uint8-array", "es.typed-array.uint8-clamped-array", "es.typed-array.uint16-array", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string", "es.weak-map", "es.weak-set", "esnext.aggregate-error", "esnext.array.last-index", "esnext.array.last-item", "esnext.composite-key", "esnext.composite-symbol", "esnext.global-this", "esnext.map.delete-all", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.math.umulh", "esnext.number.from-string", "esnext.observable", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "esnext.reflect.define-metadata", "esnext.reflect.delete-metadata", "esnext.reflect.get-metadata", "esnext.reflect.get-metadata-keys", "esnext.reflect.get-own-metadata", "esnext.reflect.get-own-metadata-keys", "esnext.reflect.has-metadata", "esnext.reflect.has-own-metadata", "esnext.reflect.metadata", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.dispose", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of", "web.dom-collections.for-each", "web.dom-collections.iterator", "web.immediate", "web.queue-microtask", "web.timers", "web.url", "web.url.to-json", "web.url-search-params"], 3.1: ["es.string.match-all", "es.symbol.match-all", "esnext.symbol.replace-all"], 3.2: ["es.promise.all-settled", "esnext.array.is-template-object", "esnext.map.update-or-insert", "esnext.symbol.async-dispose"], 3.3: ["es.global-this", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.upsert", "esnext.weak-map.upsert"], 3.4: ["es.json.stringify"], 3.5: ["esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values"], 3.6: ["es.regexp.sticky", "es.regexp.test"], 3.7: ["es.aggregate-error", "es.promise.any", "es.reflect.to-string-tag", "es.string.replace-all", "esnext.map.emplace", "esnext.weak-map.emplace"], 3.8: ["esnext.array.at", "esnext.array.filter-out", "esnext.array.unique-by", "esnext.bigint.range", "esnext.number.range", "esnext.typed-array.at", "esnext.typed-array.filter-out"], 3.9: ["esnext.array.find-last", "esnext.array.find-last-index", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by"], 3.11: ["esnext.object.has-own"], 3.12: ["esnext.symbol.matcher", "esnext.symbol.metadata"], 3.15: ["es.date.get-year", "es.date.set-year", "es.date.to-gmt-string", "es.escape", "es.regexp.dot-all", "es.string.substr", "es.unescape"] }, tV = ["es.symbol", "es.symbol.description", "es.symbol.async-iterator", "es.symbol.has-instance", "es.symbol.is-concat-spreadable", "es.symbol.iterator", "es.symbol.match", "es.symbol.match-all", "es.symbol.replace", "es.symbol.search", "es.symbol.species", "es.symbol.split", "es.symbol.to-primitive", "es.symbol.to-string-tag", "es.symbol.unscopables", "es.aggregate-error", "es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.from", "es.array.includes", "es.array.index-of", "es.array.is-array", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.of", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.array-buffer.constructor", "es.array-buffer.is-view", "es.array-buffer.slice", "es.data-view", "es.date.get-year", "es.date.now", "es.date.set-year", "es.date.to-gmt-string", "es.date.to-iso-string", "es.date.to-json", "es.date.to-primitive", "es.date.to-string", "es.escape", "es.function.bind", "es.function.has-instance", "es.function.name", "es.global-this", "es.json.stringify", "es.json.to-string-tag", "es.map", "es.math.acosh", "es.math.asinh", "es.math.atanh", "es.math.cbrt", "es.math.clz32", "es.math.cosh", "es.math.expm1", "es.math.fround", "es.math.hypot", "es.math.imul", "es.math.log10", "es.math.log1p", "es.math.log2", "es.math.sign", "es.math.sinh", "es.math.tanh", "es.math.to-string-tag", "es.math.trunc", "es.number.constructor", "es.number.epsilon", "es.number.is-finite", "es.number.is-integer", "es.number.is-nan", "es.number.is-safe-integer", "es.number.max-safe-integer", "es.number.min-safe-integer", "es.number.parse-float", "es.number.parse-int", "es.number.to-fixed", "es.number.to-precision", "es.object.assign", "es.object.create", "es.object.define-getter", "es.object.define-properties", "es.object.define-property", "es.object.define-setter", "es.object.entries", "es.object.freeze", "es.object.from-entries", "es.object.get-own-property-descriptor", "es.object.get-own-property-descriptors", "es.object.get-own-property-names", "es.object.get-prototype-of", "es.object.is", "es.object.is-extensible", "es.object.is-frozen", "es.object.is-sealed", "es.object.keys", "es.object.lookup-getter", "es.object.lookup-setter", "es.object.prevent-extensions", "es.object.seal", "es.object.set-prototype-of", "es.object.to-string", "es.object.values", "es.parse-float", "es.parse-int", "es.promise", "es.promise.all-settled", "es.promise.any", "es.promise.finally", "es.reflect.apply", "es.reflect.construct", "es.reflect.define-property", "es.reflect.delete-property", "es.reflect.get", "es.reflect.get-own-property-descriptor", "es.reflect.get-prototype-of", "es.reflect.has", "es.reflect.is-extensible", "es.reflect.own-keys", "es.reflect.prevent-extensions", "es.reflect.set", "es.reflect.set-prototype-of", "es.reflect.to-string-tag", "es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec", "es.regexp.flags", "es.regexp.sticky", "es.regexp.test", "es.regexp.to-string", "es.set", "es.string.code-point-at", "es.string.ends-with", "es.string.from-code-point", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.raw", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup", "es.typed-array.float32-array", "es.typed-array.float64-array", "es.typed-array.int8-array", "es.typed-array.int16-array", "es.typed-array.int32-array", "es.typed-array.uint8-array", "es.typed-array.uint8-clamped-array", "es.typed-array.uint16-array", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string", "es.unescape", "es.weak-map", "es.weak-set", "esnext.aggregate-error", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.array.last-index", "esnext.array.last-item", "esnext.array.unique-by", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.bigint.range", "esnext.composite-key", "esnext.composite-symbol", "esnext.global-this", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.delete-all", "esnext.map.emplace", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.math.umulh", "esnext.number.from-string", "esnext.number.range", "esnext.object.has-own", "esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values", "esnext.observable", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "esnext.reflect.define-metadata", "esnext.reflect.delete-metadata", "esnext.reflect.get-metadata", "esnext.reflect.get-metadata-keys", "esnext.reflect.get-own-metadata", "esnext.reflect.get-own-metadata-keys", "esnext.reflect.has-metadata", "esnext.reflect.has-own-metadata", "esnext.reflect.metadata", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.matcher", "esnext.symbol.metadata", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.symbol.replace-all", "esnext.typed-array.at", "esnext.typed-array.filter-out", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-map.emplace", "esnext.weak-map.upsert", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of", "web.dom-collections.for-each", "web.dom-collections.iterator", "web.immediate", "web.queue-microtask", "web.timers", "web.url", "web.url.to-json", "web.url-search-params"], rV = ZG.compare, nV = ZG.intersection, sV = ZG.semver, aV = function(e2) {
        var t2 = sV(e2);
        if (t2.major !== 3)
          throw RangeError("This version of `core-js-compat` works only with `core-js@3`.");
        for (var r2 = [], n2 = 0, s2 = Object.keys(eV); n2 < s2.length; n2++) {
          var a2 = s2[n2];
          rV(a2, "<=", t2) && r2.push.apply(r2, c(eV[a2]));
        }
        return nV(r2, tV);
      }, iV = aV, oV = { "core-js": ["es.symbol", "es.symbol.description", "es.symbol.async-iterator", "es.symbol.has-instance", "es.symbol.is-concat-spreadable", "es.symbol.iterator", "es.symbol.match", "es.symbol.match-all", "es.symbol.replace", "es.symbol.search", "es.symbol.species", "es.symbol.split", "es.symbol.to-primitive", "es.symbol.to-string-tag", "es.symbol.unscopables", "es.aggregate-error", "es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.from", "es.array.includes", "es.array.index-of", "es.array.is-array", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.of", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.array-buffer.constructor", "es.array-buffer.is-view", "es.array-buffer.slice", "es.data-view", "es.date.get-year", "es.date.now", "es.date.set-year", "es.date.to-gmt-string", "es.date.to-iso-string", "es.date.to-json", "es.date.to-primitive", "es.date.to-string", "es.escape", "es.function.bind", "es.function.has-instance", "es.function.name", "es.global-this", "es.json.stringify", "es.json.to-string-tag", "es.map", "es.math.acosh", "es.math.asinh", "es.math.atanh", "es.math.cbrt", "es.math.clz32", "es.math.cosh", "es.math.expm1", "es.math.fround", "es.math.hypot", "es.math.imul", "es.math.log10", "es.math.log1p", "es.math.log2", "es.math.sign", "es.math.sinh", "es.math.tanh", "es.math.to-string-tag", "es.math.trunc", "es.number.constructor", "es.number.epsilon", "es.number.is-finite", "es.number.is-integer", "es.number.is-nan", "es.number.is-safe-integer", "es.number.max-safe-integer", "es.number.min-safe-integer", "es.number.parse-float", "es.number.parse-int", "es.number.to-fixed", "es.number.to-precision", "es.object.assign", "es.object.create", "es.object.define-getter", "es.object.define-properties", "es.object.define-property", "es.object.define-setter", "es.object.entries", "es.object.freeze", "es.object.from-entries", "es.object.get-own-property-descriptor", "es.object.get-own-property-descriptors", "es.object.get-own-property-names", "es.object.get-prototype-of", "es.object.is", "es.object.is-extensible", "es.object.is-frozen", "es.object.is-sealed", "es.object.keys", "es.object.lookup-getter", "es.object.lookup-setter", "es.object.prevent-extensions", "es.object.seal", "es.object.set-prototype-of", "es.object.to-string", "es.object.values", "es.parse-float", "es.parse-int", "es.promise", "es.promise.all-settled", "es.promise.any", "es.promise.finally", "es.reflect.apply", "es.reflect.construct", "es.reflect.define-property", "es.reflect.delete-property", "es.reflect.get", "es.reflect.get-own-property-descriptor", "es.reflect.get-prototype-of", "es.reflect.has", "es.reflect.is-extensible", "es.reflect.own-keys", "es.reflect.prevent-extensions", "es.reflect.set", "es.reflect.set-prototype-of", "es.reflect.to-string-tag", "es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec", "es.regexp.flags", "es.regexp.sticky", "es.regexp.test", "es.regexp.to-string", "es.set", "es.string.code-point-at", "es.string.ends-with", "es.string.from-code-point", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.raw", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup", "es.typed-array.float32-array", "es.typed-array.float64-array", "es.typed-array.int8-array", "es.typed-array.int16-array", "es.typed-array.int32-array", "es.typed-array.uint8-array", "es.typed-array.uint8-clamped-array", "es.typed-array.uint16-array", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string", "es.unescape", "es.weak-map", "es.weak-set", "esnext.aggregate-error", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.array.last-index", "esnext.array.last-item", "esnext.array.unique-by", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.bigint.range", "esnext.composite-key", "esnext.composite-symbol", "esnext.global-this", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.delete-all", "esnext.map.emplace", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.math.umulh", "esnext.number.from-string", "esnext.number.range", "esnext.object.has-own", "esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values", "esnext.observable", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "esnext.reflect.define-metadata", "esnext.reflect.delete-metadata", "esnext.reflect.get-metadata", "esnext.reflect.get-metadata-keys", "esnext.reflect.get-own-metadata", "esnext.reflect.get-own-metadata-keys", "esnext.reflect.has-metadata", "esnext.reflect.has-own-metadata", "esnext.reflect.metadata", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.matcher", "esnext.symbol.metadata", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.symbol.replace-all", "esnext.typed-array.at", "esnext.typed-array.filter-out", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-map.emplace", "esnext.weak-map.upsert", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of", "web.dom-collections.for-each", "web.dom-collections.iterator", "web.immediate", "web.queue-microtask", "web.timers", "web.url", "web.url.to-json", "web.url-search-params"], "core-js/es": ["es.symbol", "es.symbol.description", "es.symbol.async-iterator", "es.symbol.has-instance", "es.symbol.is-concat-spreadable", "es.symbol.iterator", "es.symbol.match", "es.symbol.match-all", "es.symbol.replace", "es.symbol.search", "es.symbol.species", "es.symbol.split", "es.symbol.to-primitive", "es.symbol.to-string-tag", "es.symbol.unscopables", "es.aggregate-error", "es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.from", "es.array.includes", "es.array.index-of", "es.array.is-array", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.of", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.array-buffer.constructor", "es.array-buffer.is-view", "es.array-buffer.slice", "es.data-view", "es.date.get-year", "es.date.now", "es.date.set-year", "es.date.to-gmt-string", "es.date.to-iso-string", "es.date.to-json", "es.date.to-primitive", "es.date.to-string", "es.escape", "es.function.bind", "es.function.has-instance", "es.function.name", "es.global-this", "es.json.stringify", "es.json.to-string-tag", "es.map", "es.math.acosh", "es.math.asinh", "es.math.atanh", "es.math.cbrt", "es.math.clz32", "es.math.cosh", "es.math.expm1", "es.math.fround", "es.math.hypot", "es.math.imul", "es.math.log10", "es.math.log1p", "es.math.log2", "es.math.sign", "es.math.sinh", "es.math.tanh", "es.math.to-string-tag", "es.math.trunc", "es.number.constructor", "es.number.epsilon", "es.number.is-finite", "es.number.is-integer", "es.number.is-nan", "es.number.is-safe-integer", "es.number.max-safe-integer", "es.number.min-safe-integer", "es.number.parse-float", "es.number.parse-int", "es.number.to-fixed", "es.number.to-precision", "es.object.assign", "es.object.create", "es.object.define-getter", "es.object.define-properties", "es.object.define-property", "es.object.define-setter", "es.object.entries", "es.object.freeze", "es.object.from-entries", "es.object.get-own-property-descriptor", "es.object.get-own-property-descriptors", "es.object.get-own-property-names", "es.object.get-prototype-of", "es.object.is", "es.object.is-extensible", "es.object.is-frozen", "es.object.is-sealed", "es.object.keys", "es.object.lookup-getter", "es.object.lookup-setter", "es.object.prevent-extensions", "es.object.seal", "es.object.set-prototype-of", "es.object.to-string", "es.object.values", "es.parse-float", "es.parse-int", "es.promise", "es.promise.all-settled", "es.promise.any", "es.promise.finally", "es.reflect.apply", "es.reflect.construct", "es.reflect.define-property", "es.reflect.delete-property", "es.reflect.get", "es.reflect.get-own-property-descriptor", "es.reflect.get-prototype-of", "es.reflect.has", "es.reflect.is-extensible", "es.reflect.own-keys", "es.reflect.prevent-extensions", "es.reflect.set", "es.reflect.set-prototype-of", "es.reflect.to-string-tag", "es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec", "es.regexp.flags", "es.regexp.sticky", "es.regexp.test", "es.regexp.to-string", "es.set", "es.string.code-point-at", "es.string.ends-with", "es.string.from-code-point", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.raw", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup", "es.typed-array.float32-array", "es.typed-array.float64-array", "es.typed-array.int8-array", "es.typed-array.int16-array", "es.typed-array.int32-array", "es.typed-array.uint8-array", "es.typed-array.uint8-clamped-array", "es.typed-array.uint16-array", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string", "es.unescape", "es.weak-map", "es.weak-set"], "core-js/es/aggregate-error": ["es.aggregate-error", "es.string.iterator", "web.dom-collections.iterator"], "core-js/es/array": ["es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.from", "es.array.includes", "es.array.index-of", "es.array.is-array", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.of", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.string.iterator"], "core-js/es/array-buffer": ["es.array-buffer.constructor", "es.array-buffer.is-view", "es.array-buffer.slice", "es.object.to-string"], "core-js/es/array-buffer/constructor": ["es.array-buffer.constructor", "es.object.to-string"], "core-js/es/array-buffer/is-view": ["es.array-buffer.is-view"], "core-js/es/array-buffer/slice": ["es.array-buffer.slice"], "core-js/es/array/concat": ["es.array.concat"], "core-js/es/array/copy-within": ["es.array.copy-within"], "core-js/es/array/entries": ["es.array.iterator"], "core-js/es/array/every": ["es.array.every"], "core-js/es/array/fill": ["es.array.fill"], "core-js/es/array/filter": ["es.array.filter"], "core-js/es/array/find": ["es.array.find"], "core-js/es/array/find-index": ["es.array.find-index"], "core-js/es/array/flat": ["es.array.flat", "es.array.unscopables.flat"], "core-js/es/array/flat-map": ["es.array.flat-map", "es.array.unscopables.flat-map"], "core-js/es/array/for-each": ["es.array.for-each"], "core-js/es/array/from": ["es.array.from", "es.string.iterator"], "core-js/es/array/includes": ["es.array.includes"], "core-js/es/array/index-of": ["es.array.index-of"], "core-js/es/array/is-array": ["es.array.is-array"], "core-js/es/array/iterator": ["es.array.iterator"], "core-js/es/array/join": ["es.array.join"], "core-js/es/array/keys": ["es.array.iterator"], "core-js/es/array/last-index-of": ["es.array.last-index-of"], "core-js/es/array/map": ["es.array.map"], "core-js/es/array/of": ["es.array.of"], "core-js/es/array/reduce": ["es.array.reduce"], "core-js/es/array/reduce-right": ["es.array.reduce-right"], "core-js/es/array/reverse": ["es.array.reverse"], "core-js/es/array/slice": ["es.array.slice"], "core-js/es/array/some": ["es.array.some"], "core-js/es/array/sort": ["es.array.sort"], "core-js/es/array/splice": ["es.array.splice"], "core-js/es/array/values": ["es.array.iterator"], "core-js/es/array/virtual": ["es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.includes", "es.array.index-of", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map"], "core-js/es/array/virtual/concat": ["es.array.concat"], "core-js/es/array/virtual/copy-within": ["es.array.copy-within"], "core-js/es/array/virtual/entries": ["es.array.iterator"], "core-js/es/array/virtual/every": ["es.array.every"], "core-js/es/array/virtual/fill": ["es.array.fill"], "core-js/es/array/virtual/filter": ["es.array.filter"], "core-js/es/array/virtual/filter-out": ["esnext.array.filter-out"], "core-js/es/array/virtual/find": ["es.array.find"], "core-js/es/array/virtual/find-index": ["es.array.find-index"], "core-js/es/array/virtual/flat": ["es.array.flat", "es.array.unscopables.flat"], "core-js/es/array/virtual/flat-map": ["es.array.flat-map", "es.array.unscopables.flat-map"], "core-js/es/array/virtual/for-each": ["es.array.for-each"], "core-js/es/array/virtual/includes": ["es.array.includes"], "core-js/es/array/virtual/index-of": ["es.array.index-of"], "core-js/es/array/virtual/iterator": ["es.array.iterator"], "core-js/es/array/virtual/join": ["es.array.join"], "core-js/es/array/virtual/keys": ["es.array.iterator"], "core-js/es/array/virtual/last-index-of": ["es.array.last-index-of"], "core-js/es/array/virtual/map": ["es.array.map"], "core-js/es/array/virtual/reduce": ["es.array.reduce"], "core-js/es/array/virtual/reduce-right": ["es.array.reduce-right"], "core-js/es/array/virtual/reverse": ["es.array.reverse"], "core-js/es/array/virtual/slice": ["es.array.slice"], "core-js/es/array/virtual/some": ["es.array.some"], "core-js/es/array/virtual/sort": ["es.array.sort"], "core-js/es/array/virtual/splice": ["es.array.splice"], "core-js/es/array/virtual/values": ["es.array.iterator"], "core-js/es/data-view": ["es.data-view", "es.object.to-string"], "core-js/es/date": ["es.date.get-year", "es.date.now", "es.date.set-year", "es.date.to-gmt-string", "es.date.to-iso-string", "es.date.to-json", "es.date.to-primitive", "es.date.to-string"], "core-js/es/date/get-year": ["es.date.get-year"], "core-js/es/date/now": ["es.date.now"], "core-js/es/date/set-year": ["es.date.set-year"], "core-js/es/date/to-gmt-string": ["es.date.to-gmt-string"], "core-js/es/date/to-iso-string": ["es.date.to-iso-string", "es.date.to-json"], "core-js/es/date/to-json": ["es.date.to-json"], "core-js/es/date/to-primitive": ["es.date.to-primitive"], "core-js/es/date/to-string": ["es.date.to-string"], "core-js/es/escape": ["es.escape"], "core-js/es/function": ["es.function.bind", "es.function.has-instance", "es.function.name"], "core-js/es/function/bind": ["es.function.bind"], "core-js/es/function/has-instance": ["es.function.has-instance"], "core-js/es/function/name": ["es.function.name"], "core-js/es/function/virtual": ["es.function.bind"], "core-js/es/function/virtual/bind": ["es.function.bind"], "core-js/es/global-this": ["es.global-this"], "core-js/es/instance/bind": ["es.function.bind"], "core-js/es/instance/code-point-at": ["es.string.code-point-at"], "core-js/es/instance/concat": ["es.array.concat"], "core-js/es/instance/copy-within": ["es.array.copy-within"], "core-js/es/instance/ends-with": ["es.string.ends-with"], "core-js/es/instance/entries": ["es.array.iterator"], "core-js/es/instance/every": ["es.array.every"], "core-js/es/instance/fill": ["es.array.fill"], "core-js/es/instance/filter": ["es.array.filter"], "core-js/es/instance/find": ["es.array.find"], "core-js/es/instance/find-index": ["es.array.find-index"], "core-js/es/instance/flags": ["es.regexp.flags"], "core-js/es/instance/flat": ["es.array.flat", "es.array.unscopables.flat"], "core-js/es/instance/flat-map": ["es.array.flat-map", "es.array.unscopables.flat-map"], "core-js/es/instance/for-each": ["es.array.for-each"], "core-js/es/instance/includes": ["es.array.includes", "es.string.includes"], "core-js/es/instance/index-of": ["es.array.index-of"], "core-js/es/instance/keys": ["es.array.iterator"], "core-js/es/instance/last-index-of": ["es.array.last-index-of"], "core-js/es/instance/map": ["es.array.map"], "core-js/es/instance/match-all": ["es.string.match-all"], "core-js/es/instance/pad-end": ["es.string.pad-end"], "core-js/es/instance/pad-start": ["es.string.pad-start"], "core-js/es/instance/reduce": ["es.array.reduce"], "core-js/es/instance/reduce-right": ["es.array.reduce-right"], "core-js/es/instance/repeat": ["es.string.repeat"], "core-js/es/instance/replace-all": ["es.string.replace-all"], "core-js/es/instance/reverse": ["es.array.reverse"], "core-js/es/instance/slice": ["es.array.slice"], "core-js/es/instance/some": ["es.array.some"], "core-js/es/instance/sort": ["es.array.sort"], "core-js/es/instance/splice": ["es.array.splice"], "core-js/es/instance/starts-with": ["es.string.starts-with"], "core-js/es/instance/trim": ["es.string.trim"], "core-js/es/instance/trim-end": ["es.string.trim-end"], "core-js/es/instance/trim-left": ["es.string.trim-start"], "core-js/es/instance/trim-right": ["es.string.trim-end"], "core-js/es/instance/trim-start": ["es.string.trim-start"], "core-js/es/instance/values": ["es.array.iterator"], "core-js/es/json": ["es.json.stringify", "es.json.to-string-tag"], "core-js/es/json/stringify": ["es.json.stringify"], "core-js/es/json/to-string-tag": ["es.json.to-string-tag"], "core-js/es/map": ["es.map", "es.object.to-string", "es.string.iterator", "web.dom-collections.iterator"], "core-js/es/math": ["es.math.acosh", "es.math.asinh", "es.math.atanh", "es.math.cbrt", "es.math.clz32", "es.math.cosh", "es.math.expm1", "es.math.fround", "es.math.hypot", "es.math.imul", "es.math.log10", "es.math.log1p", "es.math.log2", "es.math.sign", "es.math.sinh", "es.math.tanh", "es.math.to-string-tag", "es.math.trunc"], "core-js/es/math/acosh": ["es.math.acosh"], "core-js/es/math/asinh": ["es.math.asinh"], "core-js/es/math/atanh": ["es.math.atanh"], "core-js/es/math/cbrt": ["es.math.cbrt"], "core-js/es/math/clz32": ["es.math.clz32"], "core-js/es/math/cosh": ["es.math.cosh"], "core-js/es/math/expm1": ["es.math.expm1"], "core-js/es/math/fround": ["es.math.fround"], "core-js/es/math/hypot": ["es.math.hypot"], "core-js/es/math/imul": ["es.math.imul"], "core-js/es/math/log10": ["es.math.log10"], "core-js/es/math/log1p": ["es.math.log1p"], "core-js/es/math/log2": ["es.math.log2"], "core-js/es/math/sign": ["es.math.sign"], "core-js/es/math/sinh": ["es.math.sinh"], "core-js/es/math/tanh": ["es.math.tanh"], "core-js/es/math/to-string-tag": ["es.math.to-string-tag"], "core-js/es/math/trunc": ["es.math.trunc"], "core-js/es/number": ["es.number.constructor", "es.number.epsilon", "es.number.is-finite", "es.number.is-integer", "es.number.is-nan", "es.number.is-safe-integer", "es.number.max-safe-integer", "es.number.min-safe-integer", "es.number.parse-float", "es.number.parse-int", "es.number.to-fixed", "es.number.to-precision"], "core-js/es/number/constructor": ["es.number.constructor"], "core-js/es/number/epsilon": ["es.number.epsilon"], "core-js/es/number/is-finite": ["es.number.is-finite"], "core-js/es/number/is-integer": ["es.number.is-integer"], "core-js/es/number/is-nan": ["es.number.is-nan"], "core-js/es/number/is-safe-integer": ["es.number.is-safe-integer"], "core-js/es/number/max-safe-integer": ["es.number.max-safe-integer"], "core-js/es/number/min-safe-integer": ["es.number.min-safe-integer"], "core-js/es/number/parse-float": ["es.number.parse-float"], "core-js/es/number/parse-int": ["es.number.parse-int"], "core-js/es/number/to-fixed": ["es.number.to-fixed"], "core-js/es/number/to-precision": ["es.number.to-precision"], "core-js/es/number/virtual": ["es.number.to-fixed", "es.number.to-precision"], "core-js/es/number/virtual/to-fixed": ["es.number.to-fixed"], "core-js/es/number/virtual/to-precision": ["es.number.to-precision"], "core-js/es/object": ["es.symbol", "es.json.to-string-tag", "es.math.to-string-tag", "es.object.assign", "es.object.create", "es.object.define-getter", "es.object.define-properties", "es.object.define-property", "es.object.define-setter", "es.object.entries", "es.object.freeze", "es.object.from-entries", "es.object.get-own-property-descriptor", "es.object.get-own-property-descriptors", "es.object.get-own-property-names", "es.object.get-prototype-of", "es.object.is", "es.object.is-extensible", "es.object.is-frozen", "es.object.is-sealed", "es.object.keys", "es.object.lookup-getter", "es.object.lookup-setter", "es.object.prevent-extensions", "es.object.seal", "es.object.set-prototype-of", "es.object.to-string", "es.object.values", "es.reflect.to-string-tag"], "core-js/es/object/assign": ["es.object.assign"], "core-js/es/object/create": ["es.object.create"], "core-js/es/object/define-getter": ["es.object.define-getter"], "core-js/es/object/define-properties": ["es.object.define-properties"], "core-js/es/object/define-property": ["es.object.define-property"], "core-js/es/object/define-setter": ["es.object.define-setter"], "core-js/es/object/entries": ["es.object.entries"], "core-js/es/object/freeze": ["es.object.freeze"], "core-js/es/object/from-entries": ["es.array.iterator", "es.object.from-entries"], "core-js/es/object/get-own-property-descriptor": ["es.object.get-own-property-descriptor"], "core-js/es/object/get-own-property-descriptors": ["es.object.get-own-property-descriptors"], "core-js/es/object/get-own-property-names": ["es.object.get-own-property-names"], "core-js/es/object/get-own-property-symbols": ["es.symbol"], "core-js/es/object/get-prototype-of": ["es.object.get-prototype-of"], "core-js/es/object/is": ["es.object.is"], "core-js/es/object/is-extensible": ["es.object.is-extensible"], "core-js/es/object/is-frozen": ["es.object.is-frozen"], "core-js/es/object/is-sealed": ["es.object.is-sealed"], "core-js/es/object/keys": ["es.object.keys"], "core-js/es/object/lookup-getter": ["es.object.lookup-setter"], "core-js/es/object/lookup-setter": ["es.object.lookup-setter"], "core-js/es/object/prevent-extensions": ["es.object.prevent-extensions"], "core-js/es/object/seal": ["es.object.seal"], "core-js/es/object/set-prototype-of": ["es.object.set-prototype-of"], "core-js/es/object/to-string": ["es.json.to-string-tag", "es.math.to-string-tag", "es.object.to-string", "es.reflect.to-string-tag"], "core-js/es/object/values": ["es.object.values"], "core-js/es/parse-float": ["es.parse-float"], "core-js/es/parse-int": ["es.parse-int"], "core-js/es/promise": ["es.aggregate-error", "es.object.to-string", "es.promise", "es.promise.all-settled", "es.promise.any", "es.promise.finally", "es.string.iterator", "web.dom-collections.iterator"], "core-js/es/promise/all-settled": ["es.promise", "es.promise.all-settled", "es.string.iterator", "web.dom-collections.iterator"], "core-js/es/promise/any": ["es.aggregate-error", "es.promise", "es.promise.any", "es.string.iterator", "web.dom-collections.iterator"], "core-js/es/promise/finally": ["es.promise", "es.promise.finally"], "core-js/es/reflect": ["es.reflect.apply", "es.reflect.construct", "es.reflect.define-property", "es.reflect.delete-property", "es.reflect.get", "es.reflect.get-own-property-descriptor", "es.reflect.get-prototype-of", "es.reflect.has", "es.reflect.is-extensible", "es.reflect.own-keys", "es.reflect.prevent-extensions", "es.reflect.set", "es.reflect.set-prototype-of", "es.reflect.to-string-tag"], "core-js/es/reflect/apply": ["es.reflect.apply"], "core-js/es/reflect/construct": ["es.reflect.construct"], "core-js/es/reflect/define-property": ["es.reflect.define-property"], "core-js/es/reflect/delete-property": ["es.reflect.delete-property"], "core-js/es/reflect/get": ["es.reflect.get"], "core-js/es/reflect/get-own-property-descriptor": ["es.reflect.get-own-property-descriptor"], "core-js/es/reflect/get-prototype-of": ["es.reflect.get-prototype-of"], "core-js/es/reflect/has": ["es.reflect.has"], "core-js/es/reflect/is-extensible": ["es.reflect.is-extensible"], "core-js/es/reflect/own-keys": ["es.reflect.own-keys"], "core-js/es/reflect/prevent-extensions": ["es.reflect.prevent-extensions"], "core-js/es/reflect/set": ["es.reflect.set"], "core-js/es/reflect/set-prototype-of": ["es.reflect.set-prototype-of"], "core-js/es/reflect/to-string-tag": ["es.reflect.to-string-tag"], "core-js/es/regexp": ["es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec", "es.regexp.flags", "es.regexp.sticky", "es.regexp.test", "es.regexp.to-string", "es.string.match", "es.string.replace", "es.string.search", "es.string.split"], "core-js/es/regexp/constructor": ["es.regexp.constructor"], "core-js/es/regexp/dot-all": ["es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec"], "core-js/es/regexp/flags": ["es.regexp.flags"], "core-js/es/regexp/match": ["es.string.match"], "core-js/es/regexp/replace": ["es.string.replace"], "core-js/es/regexp/search": ["es.string.search"], "core-js/es/regexp/split": ["es.string.split"], "core-js/es/regexp/sticky": ["es.regexp.constructor", "es.regexp.exec", "es.regexp.sticky"], "core-js/es/regexp/test": ["es.regexp.exec", "es.regexp.test"], "core-js/es/regexp/to-string": ["es.regexp.to-string"], "core-js/es/set": ["es.object.to-string", "es.set", "es.string.iterator", "web.dom-collections.iterator"], "core-js/es/string": ["es.regexp.exec", "es.string.code-point-at", "es.string.ends-with", "es.string.from-code-point", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.raw", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup"], "core-js/es/string/anchor": ["es.string.anchor"], "core-js/es/string/big": ["es.string.big"], "core-js/es/string/blink": ["es.string.blink"], "core-js/es/string/bold": ["es.string.bold"], "core-js/es/string/code-point-at": ["es.string.code-point-at"], "core-js/es/string/ends-with": ["es.string.ends-with"], "core-js/es/string/fixed": ["es.string.fixed"], "core-js/es/string/fontcolor": ["es.string.fontcolor"], "core-js/es/string/fontsize": ["es.string.fontsize"], "core-js/es/string/from-code-point": ["es.string.from-code-point"], "core-js/es/string/includes": ["es.string.includes"], "core-js/es/string/italics": ["es.string.italics"], "core-js/es/string/iterator": ["es.string.iterator"], "core-js/es/string/link": ["es.string.link"], "core-js/es/string/match": ["es.regexp.exec", "es.string.match"], "core-js/es/string/match-all": ["es.string.match-all"], "core-js/es/string/pad-end": ["es.string.pad-end"], "core-js/es/string/pad-start": ["es.string.pad-start"], "core-js/es/string/raw": ["es.string.raw"], "core-js/es/string/repeat": ["es.string.repeat"], "core-js/es/string/replace": ["es.regexp.exec", "es.string.replace"], "core-js/es/string/replace-all": ["es.string.replace-all"], "core-js/es/string/search": ["es.regexp.exec", "es.string.search"], "core-js/es/string/small": ["es.string.small"], "core-js/es/string/split": ["es.regexp.exec", "es.string.split"], "core-js/es/string/starts-with": ["es.string.starts-with"], "core-js/es/string/strike": ["es.string.strike"], "core-js/es/string/sub": ["es.string.sub"], "core-js/es/string/substr": ["es.string.substr"], "core-js/es/string/sup": ["es.string.sup"], "core-js/es/string/trim": ["es.string.trim"], "core-js/es/string/trim-end": ["es.string.trim-end"], "core-js/es/string/trim-left": ["es.string.trim-start"], "core-js/es/string/trim-right": ["es.string.trim-end"], "core-js/es/string/trim-start": ["es.string.trim-start"], "core-js/es/string/virtual": ["es.string.code-point-at", "es.string.ends-with", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup"], "core-js/es/string/virtual/anchor": ["es.string.anchor"], "core-js/es/string/virtual/big": ["es.string.big"], "core-js/es/string/virtual/blink": ["es.string.blink"], "core-js/es/string/virtual/bold": ["es.string.bold"], "core-js/es/string/virtual/code-point-at": ["es.string.code-point-at"], "core-js/es/string/virtual/ends-with": ["es.string.ends-with"], "core-js/es/string/virtual/fixed": ["es.string.fixed"], "core-js/es/string/virtual/fontcolor": ["es.string.fontcolor"], "core-js/es/string/virtual/fontsize": ["es.string.fontsize"], "core-js/es/string/virtual/includes": ["es.string.includes"], "core-js/es/string/virtual/italics": ["es.string.italics"], "core-js/es/string/virtual/iterator": ["es.string.iterator"], "core-js/es/string/virtual/link": ["es.string.link"], "core-js/es/string/virtual/match-all": ["es.string.match-all"], "core-js/es/string/virtual/pad-end": ["es.string.pad-end"], "core-js/es/string/virtual/pad-start": ["es.string.pad-start"], "core-js/es/string/virtual/repeat": ["es.string.repeat"], "core-js/es/string/virtual/replace-all": ["es.string.replace-all"], "core-js/es/string/virtual/small": ["es.string.small"], "core-js/es/string/virtual/starts-with": ["es.string.starts-with"], "core-js/es/string/virtual/strike": ["es.string.strike"], "core-js/es/string/virtual/sub": ["es.string.sub"], "core-js/es/string/virtual/substr": ["es.string.substr"], "core-js/es/string/virtual/sup": ["es.string.sup"], "core-js/es/string/virtual/trim": ["es.string.trim"], "core-js/es/string/virtual/trim-end": ["es.string.trim-end"], "core-js/es/string/virtual/trim-left": ["es.string.trim-start"], "core-js/es/string/virtual/trim-right": ["es.string.trim-end"], "core-js/es/string/virtual/trim-start": ["es.string.trim-start"], "core-js/es/symbol": ["es.symbol", "es.symbol.description", "es.symbol.async-iterator", "es.symbol.has-instance", "es.symbol.is-concat-spreadable", "es.symbol.iterator", "es.symbol.match", "es.symbol.match-all", "es.symbol.replace", "es.symbol.search", "es.symbol.species", "es.symbol.split", "es.symbol.to-primitive", "es.symbol.to-string-tag", "es.symbol.unscopables", "es.array.concat", "es.json.to-string-tag", "es.math.to-string-tag", "es.object.to-string", "es.reflect.to-string-tag"], "core-js/es/symbol/async-iterator": ["es.symbol.async-iterator"], "core-js/es/symbol/description": ["es.symbol.description"], "core-js/es/symbol/for": ["es.symbol"], "core-js/es/symbol/has-instance": ["es.symbol.has-instance", "es.function.has-instance"], "core-js/es/symbol/is-concat-spreadable": ["es.symbol.is-concat-spreadable", "es.array.concat"], "core-js/es/symbol/iterator": ["es.symbol.iterator", "es.string.iterator", "web.dom-collections.iterator"], "core-js/es/symbol/key-for": ["es.symbol"], "core-js/es/symbol/match": ["es.symbol.match", "es.string.match"], "core-js/es/symbol/match-all": ["es.symbol.match-all", "es.string.match-all"], "core-js/es/symbol/replace": ["es.symbol.replace", "es.string.replace"], "core-js/es/symbol/search": ["es.symbol.search", "es.string.search"], "core-js/es/symbol/species": ["es.symbol.species"], "core-js/es/symbol/split": ["es.symbol.split", "es.string.split"], "core-js/es/symbol/to-primitive": ["es.symbol.to-primitive"], "core-js/es/symbol/to-string-tag": ["es.symbol.to-string-tag", "es.json.to-string-tag", "es.math.to-string-tag", "es.object.to-string", "es.reflect.to-string-tag"], "core-js/es/symbol/unscopables": ["es.symbol.unscopables"], "core-js/es/typed-array": ["es.object.to-string", "es.typed-array.float32-array", "es.typed-array.float64-array", "es.typed-array.int8-array", "es.typed-array.int16-array", "es.typed-array.int32-array", "es.typed-array.uint8-array", "es.typed-array.uint8-clamped-array", "es.typed-array.uint16-array", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/copy-within": ["es.typed-array.copy-within"], "core-js/es/typed-array/entries": ["es.typed-array.iterator"], "core-js/es/typed-array/every": ["es.typed-array.every"], "core-js/es/typed-array/fill": ["es.typed-array.fill"], "core-js/es/typed-array/filter": ["es.typed-array.filter"], "core-js/es/typed-array/find": ["es.typed-array.find"], "core-js/es/typed-array/find-index": ["es.typed-array.find-index"], "core-js/es/typed-array/float32-array": ["es.object.to-string", "es.typed-array.float32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/float64-array": ["es.object.to-string", "es.typed-array.float64-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/for-each": ["es.typed-array.for-each"], "core-js/es/typed-array/from": ["es.typed-array.from"], "core-js/es/typed-array/includes": ["es.typed-array.includes"], "core-js/es/typed-array/index-of": ["es.typed-array.index-of"], "core-js/es/typed-array/int16-array": ["es.object.to-string", "es.typed-array.int16-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/int32-array": ["es.object.to-string", "es.typed-array.int32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/int8-array": ["es.object.to-string", "es.typed-array.int8-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/iterator": ["es.typed-array.iterator"], "core-js/es/typed-array/join": ["es.typed-array.join"], "core-js/es/typed-array/keys": ["es.typed-array.iterator"], "core-js/es/typed-array/last-index-of": ["es.typed-array.last-index-of"], "core-js/es/typed-array/map": ["es.typed-array.map"], "core-js/es/typed-array/methods": ["es.object.to-string", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/of": ["es.typed-array.of"], "core-js/es/typed-array/reduce": ["es.typed-array.reduce"], "core-js/es/typed-array/reduce-right": ["es.typed-array.reduce-right"], "core-js/es/typed-array/reverse": ["es.typed-array.reverse"], "core-js/es/typed-array/set": ["es.typed-array.set"], "core-js/es/typed-array/slice": ["es.typed-array.slice"], "core-js/es/typed-array/some": ["es.typed-array.some"], "core-js/es/typed-array/sort": ["es.typed-array.sort"], "core-js/es/typed-array/subarray": ["es.typed-array.subarray"], "core-js/es/typed-array/to-locale-string": ["es.typed-array.to-locale-string"], "core-js/es/typed-array/to-string": ["es.typed-array.to-string"], "core-js/es/typed-array/uint16-array": ["es.object.to-string", "es.typed-array.uint16-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/uint32-array": ["es.object.to-string", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/uint8-array": ["es.object.to-string", "es.typed-array.uint8-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/uint8-clamped-array": ["es.object.to-string", "es.typed-array.uint8-clamped-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/es/typed-array/values": ["es.typed-array.iterator"], "core-js/es/unescape": ["es.unescape"], "core-js/es/weak-map": ["es.object.to-string", "es.weak-map", "web.dom-collections.iterator"], "core-js/es/weak-set": ["es.object.to-string", "es.weak-set", "web.dom-collections.iterator"], "core-js/features": ["es.symbol", "es.symbol.description", "es.symbol.async-iterator", "es.symbol.has-instance", "es.symbol.is-concat-spreadable", "es.symbol.iterator", "es.symbol.match", "es.symbol.match-all", "es.symbol.replace", "es.symbol.search", "es.symbol.species", "es.symbol.split", "es.symbol.to-primitive", "es.symbol.to-string-tag", "es.symbol.unscopables", "es.aggregate-error", "es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.from", "es.array.includes", "es.array.index-of", "es.array.is-array", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.of", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.array-buffer.constructor", "es.array-buffer.is-view", "es.array-buffer.slice", "es.data-view", "es.date.get-year", "es.date.now", "es.date.set-year", "es.date.to-gmt-string", "es.date.to-iso-string", "es.date.to-json", "es.date.to-primitive", "es.date.to-string", "es.escape", "es.function.bind", "es.function.has-instance", "es.function.name", "es.global-this", "es.json.stringify", "es.json.to-string-tag", "es.map", "es.math.acosh", "es.math.asinh", "es.math.atanh", "es.math.cbrt", "es.math.clz32", "es.math.cosh", "es.math.expm1", "es.math.fround", "es.math.hypot", "es.math.imul", "es.math.log10", "es.math.log1p", "es.math.log2", "es.math.sign", "es.math.sinh", "es.math.tanh", "es.math.to-string-tag", "es.math.trunc", "es.number.constructor", "es.number.epsilon", "es.number.is-finite", "es.number.is-integer", "es.number.is-nan", "es.number.is-safe-integer", "es.number.max-safe-integer", "es.number.min-safe-integer", "es.number.parse-float", "es.number.parse-int", "es.number.to-fixed", "es.number.to-precision", "es.object.assign", "es.object.create", "es.object.define-getter", "es.object.define-properties", "es.object.define-property", "es.object.define-setter", "es.object.entries", "es.object.freeze", "es.object.from-entries", "es.object.get-own-property-descriptor", "es.object.get-own-property-descriptors", "es.object.get-own-property-names", "es.object.get-prototype-of", "es.object.is", "es.object.is-extensible", "es.object.is-frozen", "es.object.is-sealed", "es.object.keys", "es.object.lookup-getter", "es.object.lookup-setter", "es.object.prevent-extensions", "es.object.seal", "es.object.set-prototype-of", "es.object.to-string", "es.object.values", "es.parse-float", "es.parse-int", "es.promise", "es.promise.all-settled", "es.promise.any", "es.promise.finally", "es.reflect.apply", "es.reflect.construct", "es.reflect.define-property", "es.reflect.delete-property", "es.reflect.get", "es.reflect.get-own-property-descriptor", "es.reflect.get-prototype-of", "es.reflect.has", "es.reflect.is-extensible", "es.reflect.own-keys", "es.reflect.prevent-extensions", "es.reflect.set", "es.reflect.set-prototype-of", "es.reflect.to-string-tag", "es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec", "es.regexp.flags", "es.regexp.sticky", "es.regexp.test", "es.regexp.to-string", "es.set", "es.string.code-point-at", "es.string.ends-with", "es.string.from-code-point", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.raw", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup", "es.typed-array.float32-array", "es.typed-array.float64-array", "es.typed-array.int8-array", "es.typed-array.int16-array", "es.typed-array.int32-array", "es.typed-array.uint8-array", "es.typed-array.uint8-clamped-array", "es.typed-array.uint16-array", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string", "es.unescape", "es.weak-map", "es.weak-set", "esnext.aggregate-error", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.array.last-index", "esnext.array.last-item", "esnext.array.unique-by", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.bigint.range", "esnext.composite-key", "esnext.composite-symbol", "esnext.global-this", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.delete-all", "esnext.map.emplace", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.math.umulh", "esnext.number.from-string", "esnext.number.range", "esnext.object.has-own", "esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values", "esnext.observable", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "esnext.reflect.define-metadata", "esnext.reflect.delete-metadata", "esnext.reflect.get-metadata", "esnext.reflect.get-metadata-keys", "esnext.reflect.get-own-metadata", "esnext.reflect.get-own-metadata-keys", "esnext.reflect.has-metadata", "esnext.reflect.has-own-metadata", "esnext.reflect.metadata", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.matcher", "esnext.symbol.metadata", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.symbol.replace-all", "esnext.typed-array.at", "esnext.typed-array.filter-out", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-map.emplace", "esnext.weak-map.upsert", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of", "web.dom-collections.for-each", "web.dom-collections.iterator", "web.immediate", "web.queue-microtask", "web.timers", "web.url", "web.url.to-json", "web.url-search-params"], "core-js/features/aggregate-error": ["es.aggregate-error", "es.string.iterator", "esnext.aggregate-error", "web.dom-collections.iterator"], "core-js/features/array": ["es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.from", "es.array.includes", "es.array.index-of", "es.array.is-array", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.of", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.map", "es.string.iterator", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.array.last-index", "esnext.array.last-item", "esnext.array.unique-by"], "core-js/features/array-buffer": ["es.array-buffer.constructor", "es.array-buffer.is-view", "es.array-buffer.slice", "es.object.to-string"], "core-js/features/array-buffer/constructor": ["es.array-buffer.constructor", "es.object.to-string"], "core-js/features/array-buffer/is-view": ["es.array-buffer.is-view"], "core-js/features/array-buffer/slice": ["es.array-buffer.slice"], "core-js/features/array/at": ["esnext.array.at"], "core-js/features/array/concat": ["es.array.concat"], "core-js/features/array/copy-within": ["es.array.copy-within"], "core-js/features/array/entries": ["es.array.iterator"], "core-js/features/array/every": ["es.array.every"], "core-js/features/array/fill": ["es.array.fill"], "core-js/features/array/filter": ["es.array.filter"], "core-js/features/array/filter-out": ["esnext.array.filter-out"], "core-js/features/array/find": ["es.array.find"], "core-js/features/array/find-index": ["es.array.find-index"], "core-js/features/array/find-last": ["esnext.array.find-last"], "core-js/features/array/find-last-index": ["esnext.array.find-last-index"], "core-js/features/array/flat": ["es.array.flat", "es.array.unscopables.flat"], "core-js/features/array/flat-map": ["es.array.flat-map", "es.array.unscopables.flat-map"], "core-js/features/array/for-each": ["es.array.for-each"], "core-js/features/array/from": ["es.array.from", "es.string.iterator"], "core-js/features/array/includes": ["es.array.includes"], "core-js/features/array/index-of": ["es.array.index-of"], "core-js/features/array/is-array": ["es.array.is-array"], "core-js/features/array/is-template-object": ["esnext.array.is-template-object"], "core-js/features/array/iterator": ["es.array.iterator"], "core-js/features/array/join": ["es.array.join"], "core-js/features/array/keys": ["es.array.iterator"], "core-js/features/array/last-index": ["esnext.array.last-index"], "core-js/features/array/last-index-of": ["es.array.last-index-of"], "core-js/features/array/last-item": ["esnext.array.last-item"], "core-js/features/array/map": ["es.array.map"], "core-js/features/array/of": ["es.array.of"], "core-js/features/array/reduce": ["es.array.reduce"], "core-js/features/array/reduce-right": ["es.array.reduce-right"], "core-js/features/array/reverse": ["es.array.reverse"], "core-js/features/array/slice": ["es.array.slice"], "core-js/features/array/some": ["es.array.some"], "core-js/features/array/sort": ["es.array.sort"], "core-js/features/array/splice": ["es.array.splice"], "core-js/features/array/unique-by": ["es.map", "esnext.array.unique-by"], "core-js/features/array/values": ["es.array.iterator"], "core-js/features/array/virtual": ["es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.includes", "es.array.index-of", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.map", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.unique-by"], "core-js/features/array/virtual/at": ["esnext.array.at"], "core-js/features/array/virtual/concat": ["es.array.concat"], "core-js/features/array/virtual/copy-within": ["es.array.copy-within"], "core-js/features/array/virtual/entries": ["es.array.iterator"], "core-js/features/array/virtual/every": ["es.array.every"], "core-js/features/array/virtual/fill": ["es.array.fill"], "core-js/features/array/virtual/filter": ["es.array.filter"], "core-js/features/array/virtual/filter-out": ["esnext.array.filter-out"], "core-js/features/array/virtual/find": ["es.array.find"], "core-js/features/array/virtual/find-index": ["es.array.find-index"], "core-js/features/array/virtual/find-last": ["esnext.array.find-last"], "core-js/features/array/virtual/find-last-index": ["esnext.array.find-last-index"], "core-js/features/array/virtual/flat": ["es.array.flat", "es.array.unscopables.flat"], "core-js/features/array/virtual/flat-map": ["es.array.flat-map", "es.array.unscopables.flat-map"], "core-js/features/array/virtual/for-each": ["es.array.for-each"], "core-js/features/array/virtual/includes": ["es.array.includes"], "core-js/features/array/virtual/index-of": ["es.array.index-of"], "core-js/features/array/virtual/iterator": ["es.array.iterator"], "core-js/features/array/virtual/join": ["es.array.join"], "core-js/features/array/virtual/keys": ["es.array.iterator"], "core-js/features/array/virtual/last-index-of": ["es.array.last-index-of"], "core-js/features/array/virtual/map": ["es.array.map"], "core-js/features/array/virtual/reduce": ["es.array.reduce"], "core-js/features/array/virtual/reduce-right": ["es.array.reduce-right"], "core-js/features/array/virtual/reverse": ["es.array.reverse"], "core-js/features/array/virtual/slice": ["es.array.slice"], "core-js/features/array/virtual/some": ["es.array.some"], "core-js/features/array/virtual/sort": ["es.array.sort"], "core-js/features/array/virtual/splice": ["es.array.splice"], "core-js/features/array/virtual/unique-by": ["es.map", "esnext.array.unique-by"], "core-js/features/array/virtual/values": ["es.array.iterator"], "core-js/features/async-iterator": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "web.dom-collections.iterator"], "core-js/features/async-iterator/as-indexed-pairs": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "web.dom-collections.iterator"], "core-js/features/async-iterator/drop": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.drop", "web.dom-collections.iterator"], "core-js/features/async-iterator/every": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.every", "web.dom-collections.iterator"], "core-js/features/async-iterator/filter": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.filter", "web.dom-collections.iterator"], "core-js/features/async-iterator/find": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.find", "web.dom-collections.iterator"], "core-js/features/async-iterator/flat-map": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.flat-map", "web.dom-collections.iterator"], "core-js/features/async-iterator/for-each": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.for-each", "web.dom-collections.iterator"], "core-js/features/async-iterator/from": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.from", "web.dom-collections.iterator"], "core-js/features/async-iterator/map": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.map", "web.dom-collections.iterator"], "core-js/features/async-iterator/reduce": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.reduce", "web.dom-collections.iterator"], "core-js/features/async-iterator/some": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.some", "web.dom-collections.iterator"], "core-js/features/async-iterator/take": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.take", "web.dom-collections.iterator"], "core-js/features/async-iterator/to-array": ["es.object.to-string", "es.promise", "es.string.iterator", "esnext.async-iterator.constructor", "esnext.async-iterator.to-array", "web.dom-collections.iterator"], "core-js/features/bigint": ["esnext.bigint.range"], "core-js/features/bigint/range": ["esnext.bigint.range"], "core-js/features/clear-immediate": ["web.immediate"], "core-js/features/composite-key": ["esnext.composite-key"], "core-js/features/composite-symbol": ["es.symbol", "esnext.composite-symbol"], "core-js/features/data-view": ["es.data-view", "es.object.to-string"], "core-js/features/date": ["es.date.get-year", "es.date.now", "es.date.set-year", "es.date.to-gmt-string", "es.date.to-iso-string", "es.date.to-json", "es.date.to-primitive", "es.date.to-string"], "core-js/features/date/get-year": ["es.date.get-year"], "core-js/features/date/now": ["es.date.now"], "core-js/features/date/set-year": ["es.date.set-year"], "core-js/features/date/to-gmt-string": ["es.date.to-gmt-string"], "core-js/features/date/to-iso-string": ["es.date.to-iso-string", "es.date.to-json"], "core-js/features/date/to-json": ["es.date.to-json"], "core-js/features/date/to-primitive": ["es.date.to-primitive"], "core-js/features/date/to-string": ["es.date.to-string"], "core-js/features/dom-collections": ["es.array.iterator", "web.dom-collections.for-each", "web.dom-collections.iterator"], "core-js/features/dom-collections/for-each": ["web.dom-collections.for-each"], "core-js/features/dom-collections/iterator": ["web.dom-collections.iterator"], "core-js/features/escape": ["es.escape"], "core-js/features/function": ["es.function.bind", "es.function.has-instance", "es.function.name"], "core-js/features/function/bind": ["es.function.bind"], "core-js/features/function/has-instance": ["es.function.has-instance"], "core-js/features/function/name": ["es.function.name"], "core-js/features/function/virtual": ["es.function.bind"], "core-js/features/function/virtual/bind": ["es.function.bind"], "core-js/features/get-iterator": ["es.string.iterator", "web.dom-collections.iterator"], "core-js/features/get-iterator-method": ["es.string.iterator", "web.dom-collections.iterator"], "core-js/features/global-this": ["es.global-this", "esnext.global-this"], "core-js/features/instance/at": ["esnext.array.at", "esnext.string.at"], "core-js/features/instance/bind": ["es.function.bind"], "core-js/features/instance/code-point-at": ["es.string.code-point-at"], "core-js/features/instance/code-points": ["esnext.string.code-points"], "core-js/features/instance/concat": ["es.array.concat"], "core-js/features/instance/copy-within": ["es.array.copy-within"], "core-js/features/instance/ends-with": ["es.string.ends-with"], "core-js/features/instance/entries": ["es.array.iterator", "web.dom-collections.iterator"], "core-js/features/instance/every": ["es.array.every"], "core-js/features/instance/fill": ["es.array.fill"], "core-js/features/instance/filter": ["es.array.filter"], "core-js/features/instance/filter-out": ["esnext.array.filter-out"], "core-js/features/instance/find": ["es.array.find"], "core-js/features/instance/find-index": ["es.array.find-index"], "core-js/features/instance/find-last": ["esnext.array.find-last"], "core-js/features/instance/find-last-index": ["esnext.array.find-last-index"], "core-js/features/instance/flags": ["es.regexp.flags"], "core-js/features/instance/flat": ["es.array.flat", "es.array.unscopables.flat"], "core-js/features/instance/flat-map": ["es.array.flat-map", "es.array.unscopables.flat-map"], "core-js/features/instance/for-each": ["es.array.for-each", "web.dom-collections.iterator"], "core-js/features/instance/includes": ["es.array.includes", "es.string.includes"], "core-js/features/instance/index-of": ["es.array.index-of"], "core-js/features/instance/keys": ["es.array.iterator", "web.dom-collections.iterator"], "core-js/features/instance/last-index-of": ["es.array.last-index-of"], "core-js/features/instance/map": ["es.array.map"], "core-js/features/instance/match-all": ["es.string.match-all", "esnext.string.match-all"], "core-js/features/instance/pad-end": ["es.string.pad-end"], "core-js/features/instance/pad-start": ["es.string.pad-start"], "core-js/features/instance/reduce": ["es.array.reduce"], "core-js/features/instance/reduce-right": ["es.array.reduce-right"], "core-js/features/instance/repeat": ["es.string.repeat"], "core-js/features/instance/replace-all": ["es.string.replace-all"], "core-js/features/instance/reverse": ["es.array.reverse"], "core-js/features/instance/slice": ["es.array.slice"], "core-js/features/instance/some": ["es.array.some"], "core-js/features/instance/sort": ["es.array.sort"], "core-js/features/instance/splice": ["es.array.splice"], "core-js/features/instance/starts-with": ["es.string.starts-with"], "core-js/features/instance/trim": ["es.string.trim"], "core-js/features/instance/trim-end": ["es.string.trim-end"], "core-js/features/instance/trim-left": ["es.string.trim-start"], "core-js/features/instance/trim-right": ["es.string.trim-end"], "core-js/features/instance/trim-start": ["es.string.trim-start"], "core-js/features/instance/unique-by": ["es.map", "esnext.array.unique-by"], "core-js/features/instance/values": ["es.array.iterator", "web.dom-collections.iterator"], "core-js/features/is-iterable": ["es.string.iterator", "web.dom-collections.iterator"], "core-js/features/iterator": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "web.dom-collections.iterator"], "core-js/features/iterator/as-indexed-pairs": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "web.dom-collections.iterator"], "core-js/features/iterator/drop": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.drop", "web.dom-collections.iterator"], "core-js/features/iterator/every": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.every", "web.dom-collections.iterator"], "core-js/features/iterator/filter": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.filter", "web.dom-collections.iterator"], "core-js/features/iterator/find": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.find", "web.dom-collections.iterator"], "core-js/features/iterator/flat-map": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.flat-map", "web.dom-collections.iterator"], "core-js/features/iterator/for-each": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.for-each", "web.dom-collections.iterator"], "core-js/features/iterator/from": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.from", "web.dom-collections.iterator"], "core-js/features/iterator/map": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.map", "web.dom-collections.iterator"], "core-js/features/iterator/reduce": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.reduce", "web.dom-collections.iterator"], "core-js/features/iterator/some": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.some", "web.dom-collections.iterator"], "core-js/features/iterator/take": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.take", "web.dom-collections.iterator"], "core-js/features/iterator/to-array": ["es.object.to-string", "es.string.iterator", "esnext.iterator.constructor", "esnext.iterator.to-array", "web.dom-collections.iterator"], "core-js/features/json": ["es.json.stringify", "es.json.to-string-tag"], "core-js/features/json/stringify": ["es.json.stringify"], "core-js/features/json/to-string-tag": ["es.json.to-string-tag"], "core-js/features/map": ["es.map", "es.object.to-string", "es.string.iterator", "esnext.map.delete-all", "esnext.map.emplace", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.map.update-or-insert", "esnext.map.upsert", "web.dom-collections.iterator"], "core-js/features/map/delete-all": ["es.map", "esnext.map.delete-all"], "core-js/features/map/emplace": ["es.map", "esnext.map.emplace"], "core-js/features/map/every": ["es.map", "esnext.map.every"], "core-js/features/map/filter": ["es.map", "esnext.map.filter"], "core-js/features/map/find": ["es.map", "esnext.map.find"], "core-js/features/map/find-key": ["es.map", "esnext.map.find-key"], "core-js/features/map/from": ["es.map", "es.string.iterator", "esnext.map.from", "web.dom-collections.iterator"], "core-js/features/map/group-by": ["es.map", "esnext.map.group-by"], "core-js/features/map/includes": ["es.map", "esnext.map.includes"], "core-js/features/map/key-by": ["es.map", "esnext.map.key-by"], "core-js/features/map/key-of": ["es.map", "esnext.map.key-of"], "core-js/features/map/map-keys": ["es.map", "esnext.map.map-keys"], "core-js/features/map/map-values": ["es.map", "esnext.map.map-values"], "core-js/features/map/merge": ["es.map", "esnext.map.merge"], "core-js/features/map/of": ["es.map", "es.string.iterator", "esnext.map.of", "web.dom-collections.iterator"], "core-js/features/map/reduce": ["es.map", "esnext.map.reduce"], "core-js/features/map/some": ["es.map", "esnext.map.some"], "core-js/features/map/update": ["es.map", "esnext.map.update"], "core-js/features/map/update-or-insert": ["es.map", "esnext.map.update-or-insert"], "core-js/features/map/upsert": ["es.map", "esnext.map.upsert"], "core-js/features/math": ["es.math.acosh", "es.math.asinh", "es.math.atanh", "es.math.cbrt", "es.math.clz32", "es.math.cosh", "es.math.expm1", "es.math.fround", "es.math.hypot", "es.math.imul", "es.math.log10", "es.math.log1p", "es.math.log2", "es.math.sign", "es.math.sinh", "es.math.tanh", "es.math.to-string-tag", "es.math.trunc", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.math.umulh"], "core-js/features/math/acosh": ["es.math.acosh"], "core-js/features/math/asinh": ["es.math.asinh"], "core-js/features/math/atanh": ["es.math.atanh"], "core-js/features/math/cbrt": ["es.math.cbrt"], "core-js/features/math/clamp": ["esnext.math.clamp"], "core-js/features/math/clz32": ["es.math.clz32"], "core-js/features/math/cosh": ["es.math.cosh"], "core-js/features/math/deg-per-rad": ["esnext.math.deg-per-rad"], "core-js/features/math/degrees": ["esnext.math.degrees"], "core-js/features/math/expm1": ["es.math.expm1"], "core-js/features/math/fround": ["es.math.fround"], "core-js/features/math/fscale": ["esnext.math.fscale"], "core-js/features/math/hypot": ["es.math.hypot"], "core-js/features/math/iaddh": ["esnext.math.iaddh"], "core-js/features/math/imul": ["es.math.imul"], "core-js/features/math/imulh": ["esnext.math.imulh"], "core-js/features/math/isubh": ["esnext.math.isubh"], "core-js/features/math/log10": ["es.math.log10"], "core-js/features/math/log1p": ["es.math.log1p"], "core-js/features/math/log2": ["es.math.log2"], "core-js/features/math/rad-per-deg": ["esnext.math.rad-per-deg"], "core-js/features/math/radians": ["esnext.math.radians"], "core-js/features/math/scale": ["esnext.math.scale"], "core-js/features/math/seeded-prng": ["esnext.math.seeded-prng"], "core-js/features/math/sign": ["es.math.sign"], "core-js/features/math/signbit": ["esnext.math.signbit"], "core-js/features/math/sinh": ["es.math.sinh"], "core-js/features/math/tanh": ["es.math.tanh"], "core-js/features/math/to-string-tag": ["es.math.to-string-tag"], "core-js/features/math/trunc": ["es.math.trunc"], "core-js/features/math/umulh": ["esnext.math.umulh"], "core-js/features/number": ["es.number.constructor", "es.number.epsilon", "es.number.is-finite", "es.number.is-integer", "es.number.is-nan", "es.number.is-safe-integer", "es.number.max-safe-integer", "es.number.min-safe-integer", "es.number.parse-float", "es.number.parse-int", "es.number.to-fixed", "es.number.to-precision", "esnext.number.from-string", "esnext.number.range"], "core-js/features/number/constructor": ["es.number.constructor"], "core-js/features/number/epsilon": ["es.number.epsilon"], "core-js/features/number/from-string": ["esnext.number.from-string"], "core-js/features/number/is-finite": ["es.number.is-finite"], "core-js/features/number/is-integer": ["es.number.is-integer"], "core-js/features/number/is-nan": ["es.number.is-nan"], "core-js/features/number/is-safe-integer": ["es.number.is-safe-integer"], "core-js/features/number/max-safe-integer": ["es.number.max-safe-integer"], "core-js/features/number/min-safe-integer": ["es.number.min-safe-integer"], "core-js/features/number/parse-float": ["es.number.parse-float"], "core-js/features/number/parse-int": ["es.number.parse-int"], "core-js/features/number/range": ["esnext.number.range"], "core-js/features/number/to-fixed": ["es.number.to-fixed"], "core-js/features/number/to-precision": ["es.number.to-precision"], "core-js/features/number/virtual": ["es.number.to-fixed", "es.number.to-precision"], "core-js/features/number/virtual/to-fixed": ["es.number.to-fixed"], "core-js/features/number/virtual/to-precision": ["es.number.to-precision"], "core-js/features/object": ["es.symbol", "es.json.to-string-tag", "es.math.to-string-tag", "es.object.assign", "es.object.create", "es.object.define-getter", "es.object.define-properties", "es.object.define-property", "es.object.define-setter", "es.object.entries", "es.object.freeze", "es.object.from-entries", "es.object.get-own-property-descriptor", "es.object.get-own-property-descriptors", "es.object.get-own-property-names", "es.object.get-prototype-of", "es.object.is", "es.object.is-extensible", "es.object.is-frozen", "es.object.is-sealed", "es.object.keys", "es.object.lookup-getter", "es.object.lookup-setter", "es.object.prevent-extensions", "es.object.seal", "es.object.set-prototype-of", "es.object.to-string", "es.object.values", "es.reflect.to-string-tag", "esnext.object.has-own", "esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values"], "core-js/features/object/assign": ["es.object.assign"], "core-js/features/object/create": ["es.object.create"], "core-js/features/object/define-getter": ["es.object.define-getter"], "core-js/features/object/define-properties": ["es.object.define-properties"], "core-js/features/object/define-property": ["es.object.define-property"], "core-js/features/object/define-setter": ["es.object.define-setter"], "core-js/features/object/entries": ["es.object.entries"], "core-js/features/object/freeze": ["es.object.freeze"], "core-js/features/object/from-entries": ["es.array.iterator", "es.object.from-entries"], "core-js/features/object/get-own-property-descriptor": ["es.object.get-own-property-descriptor"], "core-js/features/object/get-own-property-descriptors": ["es.object.get-own-property-descriptors"], "core-js/features/object/get-own-property-names": ["es.object.get-own-property-names"], "core-js/features/object/get-own-property-symbols": ["es.symbol"], "core-js/features/object/get-prototype-of": ["es.object.get-prototype-of"], "core-js/features/object/has-own": ["esnext.object.has-own"], "core-js/features/object/is": ["es.object.is"], "core-js/features/object/is-extensible": ["es.object.is-extensible"], "core-js/features/object/is-frozen": ["es.object.is-frozen"], "core-js/features/object/is-sealed": ["es.object.is-sealed"], "core-js/features/object/iterate-entries": ["esnext.object.iterate-entries"], "core-js/features/object/iterate-keys": ["esnext.object.iterate-keys"], "core-js/features/object/iterate-values": ["esnext.object.iterate-values"], "core-js/features/object/keys": ["es.object.keys"], "core-js/features/object/lookup-getter": ["es.object.lookup-setter"], "core-js/features/object/lookup-setter": ["es.object.lookup-setter"], "core-js/features/object/prevent-extensions": ["es.object.prevent-extensions"], "core-js/features/object/seal": ["es.object.seal"], "core-js/features/object/set-prototype-of": ["es.object.set-prototype-of"], "core-js/features/object/to-string": ["es.json.to-string-tag", "es.math.to-string-tag", "es.object.to-string", "es.reflect.to-string-tag"], "core-js/features/object/values": ["es.object.values"], "core-js/features/observable": ["es.object.to-string", "es.string.iterator", "esnext.observable", "esnext.symbol.observable", "web.dom-collections.iterator"], "core-js/features/parse-float": ["es.parse-float"], "core-js/features/parse-int": ["es.parse-int"], "core-js/features/promise": ["es.aggregate-error", "es.object.to-string", "es.promise", "es.promise.all-settled", "es.promise.any", "es.promise.finally", "es.string.iterator", "esnext.aggregate-error", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "web.dom-collections.iterator"], "core-js/features/promise/all-settled": ["es.promise", "es.promise.all-settled", "es.string.iterator", "esnext.promise.all-settled", "web.dom-collections.iterator"], "core-js/features/promise/any": ["es.aggregate-error", "es.promise", "es.promise.any", "es.string.iterator", "esnext.aggregate-error", "esnext.promise.any", "web.dom-collections.iterator"], "core-js/features/promise/finally": ["es.promise", "es.promise.finally"], "core-js/features/promise/try": ["es.promise", "esnext.promise.try"], "core-js/features/queue-microtask": ["web.queue-microtask"], "core-js/features/reflect": ["es.reflect.apply", "es.reflect.construct", "es.reflect.define-property", "es.reflect.delete-property", "es.reflect.get", "es.reflect.get-own-property-descriptor", "es.reflect.get-prototype-of", "es.reflect.has", "es.reflect.is-extensible", "es.reflect.own-keys", "es.reflect.prevent-extensions", "es.reflect.set", "es.reflect.set-prototype-of", "es.reflect.to-string-tag", "esnext.reflect.define-metadata", "esnext.reflect.delete-metadata", "esnext.reflect.get-metadata", "esnext.reflect.get-metadata-keys", "esnext.reflect.get-own-metadata", "esnext.reflect.get-own-metadata-keys", "esnext.reflect.has-metadata", "esnext.reflect.has-own-metadata", "esnext.reflect.metadata"], "core-js/features/reflect/apply": ["es.reflect.apply"], "core-js/features/reflect/construct": ["es.reflect.construct"], "core-js/features/reflect/define-metadata": ["esnext.reflect.define-metadata"], "core-js/features/reflect/define-property": ["es.reflect.define-property"], "core-js/features/reflect/delete-metadata": ["esnext.reflect.delete-metadata"], "core-js/features/reflect/delete-property": ["es.reflect.delete-property"], "core-js/features/reflect/get": ["es.reflect.get"], "core-js/features/reflect/get-metadata": ["esnext.reflect.get-metadata"], "core-js/features/reflect/get-metadata-keys": ["esnext.reflect.get-metadata-keys"], "core-js/features/reflect/get-own-metadata": ["esnext.reflect.get-own-metadata"], "core-js/features/reflect/get-own-metadata-keys": ["esnext.reflect.get-own-metadata-keys"], "core-js/features/reflect/get-own-property-descriptor": ["es.reflect.get-own-property-descriptor"], "core-js/features/reflect/get-prototype-of": ["es.reflect.get-prototype-of"], "core-js/features/reflect/has": ["es.reflect.has"], "core-js/features/reflect/has-metadata": ["esnext.reflect.has-metadata"], "core-js/features/reflect/has-own-metadata": ["esnext.reflect.has-own-metadata"], "core-js/features/reflect/is-extensible": ["es.reflect.is-extensible"], "core-js/features/reflect/metadata": ["esnext.reflect.metadata"], "core-js/features/reflect/own-keys": ["es.reflect.own-keys"], "core-js/features/reflect/prevent-extensions": ["es.reflect.prevent-extensions"], "core-js/features/reflect/set": ["es.reflect.set"], "core-js/features/reflect/set-prototype-of": ["es.reflect.set-prototype-of"], "core-js/features/reflect/to-string-tag": ["es.reflect.to-string-tag"], "core-js/features/regexp": ["es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec", "es.regexp.flags", "es.regexp.sticky", "es.regexp.test", "es.regexp.to-string", "es.string.match", "es.string.replace", "es.string.search", "es.string.split"], "core-js/features/regexp/constructor": ["es.regexp.constructor"], "core-js/features/regexp/dot-all": ["es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec"], "core-js/features/regexp/flags": ["es.regexp.flags"], "core-js/features/regexp/match": ["es.string.match"], "core-js/features/regexp/replace": ["es.string.replace"], "core-js/features/regexp/search": ["es.string.search"], "core-js/features/regexp/split": ["es.string.split"], "core-js/features/regexp/sticky": ["es.regexp.constructor", "es.regexp.exec", "es.regexp.sticky"], "core-js/features/regexp/test": ["es.regexp.exec", "es.regexp.test"], "core-js/features/regexp/to-string": ["es.regexp.to-string"], "core-js/features/set": ["es.object.to-string", "es.set", "es.string.iterator", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "web.dom-collections.iterator"], "core-js/features/set-immediate": ["web.immediate"], "core-js/features/set-interval": ["web.timers"], "core-js/features/set-timeout": ["web.timers"], "core-js/features/set/add-all": ["es.set", "esnext.set.add-all"], "core-js/features/set/delete-all": ["es.set", "esnext.set.delete-all"], "core-js/features/set/difference": ["es.set", "es.string.iterator", "esnext.set.difference", "web.dom-collections.iterator"], "core-js/features/set/every": ["es.set", "esnext.set.every"], "core-js/features/set/filter": ["es.set", "esnext.set.filter"], "core-js/features/set/find": ["es.set", "esnext.set.find"], "core-js/features/set/from": ["es.set", "es.string.iterator", "esnext.set.from", "web.dom-collections.iterator"], "core-js/features/set/intersection": ["es.set", "esnext.set.intersection"], "core-js/features/set/is-disjoint-from": ["es.set", "esnext.set.is-disjoint-from"], "core-js/features/set/is-subset-of": ["es.set", "es.string.iterator", "esnext.set.is-subset-of", "web.dom-collections.iterator"], "core-js/features/set/is-superset-of": ["es.set", "esnext.set.is-superset-of"], "core-js/features/set/join": ["es.set", "esnext.set.join"], "core-js/features/set/map": ["es.set", "esnext.set.map"], "core-js/features/set/of": ["es.set", "es.string.iterator", "esnext.set.of", "web.dom-collections.iterator"], "core-js/features/set/reduce": ["es.set", "esnext.set.reduce"], "core-js/features/set/some": ["es.set", "esnext.set.some"], "core-js/features/set/symmetric-difference": ["es.set", "es.string.iterator", "esnext.set.symmetric-difference", "web.dom-collections.iterator"], "core-js/features/set/union": ["es.set", "es.string.iterator", "esnext.set.union", "web.dom-collections.iterator"], "core-js/features/string": ["es.regexp.exec", "es.string.code-point-at", "es.string.ends-with", "es.string.from-code-point", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.raw", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all"], "core-js/features/string/anchor": ["es.string.anchor"], "core-js/features/string/at": ["esnext.string.at"], "core-js/features/string/big": ["es.string.big"], "core-js/features/string/blink": ["es.string.blink"], "core-js/features/string/bold": ["es.string.bold"], "core-js/features/string/code-point-at": ["es.string.code-point-at"], "core-js/features/string/code-points": ["esnext.string.code-points"], "core-js/features/string/ends-with": ["es.string.ends-with"], "core-js/features/string/fixed": ["es.string.fixed"], "core-js/features/string/fontcolor": ["es.string.fontcolor"], "core-js/features/string/fontsize": ["es.string.fontsize"], "core-js/features/string/from-code-point": ["es.string.from-code-point"], "core-js/features/string/includes": ["es.string.includes"], "core-js/features/string/italics": ["es.string.italics"], "core-js/features/string/iterator": ["es.string.iterator"], "core-js/features/string/link": ["es.string.link"], "core-js/features/string/match": ["es.regexp.exec", "es.string.match"], "core-js/features/string/match-all": ["es.string.match-all", "esnext.string.match-all"], "core-js/features/string/pad-end": ["es.string.pad-end"], "core-js/features/string/pad-start": ["es.string.pad-start"], "core-js/features/string/raw": ["es.string.raw"], "core-js/features/string/repeat": ["es.string.repeat"], "core-js/features/string/replace": ["es.regexp.exec", "es.string.replace"], "core-js/features/string/replace-all": ["es.string.replace-all", "esnext.string.replace-all"], "core-js/features/string/search": ["es.regexp.exec", "es.string.search"], "core-js/features/string/small": ["es.string.small"], "core-js/features/string/split": ["es.regexp.exec", "es.string.split"], "core-js/features/string/starts-with": ["es.string.starts-with"], "core-js/features/string/strike": ["es.string.strike"], "core-js/features/string/sub": ["es.string.sub"], "core-js/features/string/substr": ["es.string.substr"], "core-js/features/string/sup": ["es.string.sup"], "core-js/features/string/trim": ["es.string.trim"], "core-js/features/string/trim-end": ["es.string.trim-end"], "core-js/features/string/trim-left": ["es.string.trim-start"], "core-js/features/string/trim-right": ["es.string.trim-end"], "core-js/features/string/trim-start": ["es.string.trim-start"], "core-js/features/string/virtual": ["es.string.code-point-at", "es.string.ends-with", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all"], "core-js/features/string/virtual/anchor": ["es.string.anchor"], "core-js/features/string/virtual/at": ["esnext.string.at"], "core-js/features/string/virtual/big": ["es.string.big"], "core-js/features/string/virtual/blink": ["es.string.blink"], "core-js/features/string/virtual/bold": ["es.string.bold"], "core-js/features/string/virtual/code-point-at": ["es.string.code-point-at"], "core-js/features/string/virtual/code-points": ["esnext.string.code-points"], "core-js/features/string/virtual/ends-with": ["es.string.ends-with"], "core-js/features/string/virtual/fixed": ["es.string.fixed"], "core-js/features/string/virtual/fontcolor": ["es.string.fontcolor"], "core-js/features/string/virtual/fontsize": ["es.string.fontsize"], "core-js/features/string/virtual/includes": ["es.string.includes"], "core-js/features/string/virtual/italics": ["es.string.italics"], "core-js/features/string/virtual/iterator": ["es.string.iterator"], "core-js/features/string/virtual/link": ["es.string.link"], "core-js/features/string/virtual/match-all": ["es.string.match-all", "esnext.string.match-all"], "core-js/features/string/virtual/pad-end": ["es.string.pad-end"], "core-js/features/string/virtual/pad-start": ["es.string.pad-start"], "core-js/features/string/virtual/repeat": ["es.string.repeat"], "core-js/features/string/virtual/replace-all": ["es.string.replace-all", "esnext.string.replace-all"], "core-js/features/string/virtual/small": ["es.string.small"], "core-js/features/string/virtual/starts-with": ["es.string.starts-with"], "core-js/features/string/virtual/strike": ["es.string.strike"], "core-js/features/string/virtual/sub": ["es.string.sub"], "core-js/features/string/virtual/substr": ["es.string.substr"], "core-js/features/string/virtual/sup": ["es.string.sup"], "core-js/features/string/virtual/trim": ["es.string.trim"], "core-js/features/string/virtual/trim-end": ["es.string.trim-end"], "core-js/features/string/virtual/trim-left": ["es.string.trim-start"], "core-js/features/string/virtual/trim-right": ["es.string.trim-end"], "core-js/features/string/virtual/trim-start": ["es.string.trim-start"], "core-js/features/symbol": ["es.symbol", "es.symbol.description", "es.symbol.async-iterator", "es.symbol.has-instance", "es.symbol.is-concat-spreadable", "es.symbol.iterator", "es.symbol.match", "es.symbol.match-all", "es.symbol.replace", "es.symbol.search", "es.symbol.species", "es.symbol.split", "es.symbol.to-primitive", "es.symbol.to-string-tag", "es.symbol.unscopables", "es.array.concat", "es.json.to-string-tag", "es.math.to-string-tag", "es.object.to-string", "es.reflect.to-string-tag", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.matcher", "esnext.symbol.metadata", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.symbol.replace-all"], "core-js/features/symbol/async-dispose": ["esnext.symbol.async-dispose"], "core-js/features/symbol/async-iterator": ["es.symbol.async-iterator"], "core-js/features/symbol/description": ["es.symbol.description"], "core-js/features/symbol/dispose": ["esnext.symbol.dispose"], "core-js/features/symbol/for": ["es.symbol"], "core-js/features/symbol/has-instance": ["es.symbol.has-instance", "es.function.has-instance"], "core-js/features/symbol/is-concat-spreadable": ["es.symbol.is-concat-spreadable", "es.array.concat"], "core-js/features/symbol/iterator": ["es.symbol.iterator", "es.string.iterator", "web.dom-collections.iterator"], "core-js/features/symbol/key-for": ["es.symbol"], "core-js/features/symbol/match": ["es.symbol.match", "es.string.match"], "core-js/features/symbol/match-all": ["es.symbol.match-all", "es.string.match-all"], "core-js/features/symbol/matcher": ["esnext.symbol.matcher"], "core-js/features/symbol/metadata": ["esnext.symbol.metadata"], "core-js/features/symbol/observable": ["esnext.symbol.observable"], "core-js/features/symbol/pattern-match": ["esnext.symbol.pattern-match"], "core-js/features/symbol/replace": ["es.symbol.replace", "es.string.replace"], "core-js/features/symbol/replace-all": ["esnext.symbol.replace-all"], "core-js/features/symbol/search": ["es.symbol.search", "es.string.search"], "core-js/features/symbol/species": ["es.symbol.species"], "core-js/features/symbol/split": ["es.symbol.split", "es.string.split"], "core-js/features/symbol/to-primitive": ["es.symbol.to-primitive"], "core-js/features/symbol/to-string-tag": ["es.symbol.to-string-tag", "es.json.to-string-tag", "es.math.to-string-tag", "es.object.to-string", "es.reflect.to-string-tag"], "core-js/features/symbol/unscopables": ["es.symbol.unscopables"], "core-js/features/typed-array": ["es.map", "es.object.to-string", "es.typed-array.float32-array", "es.typed-array.float64-array", "es.typed-array.int8-array", "es.typed-array.int16-array", "es.typed-array.int32-array", "es.typed-array.uint8-array", "es.typed-array.uint8-clamped-array", "es.typed-array.uint16-array", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string", "esnext.typed-array.at", "esnext.typed-array.filter-out", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by"], "core-js/features/typed-array/at": ["esnext.typed-array.at"], "core-js/features/typed-array/copy-within": ["es.typed-array.copy-within"], "core-js/features/typed-array/entries": ["es.typed-array.iterator"], "core-js/features/typed-array/every": ["es.typed-array.every"], "core-js/features/typed-array/fill": ["es.typed-array.fill"], "core-js/features/typed-array/filter": ["es.typed-array.filter"], "core-js/features/typed-array/filter-out": ["esnext.typed-array.filter-out"], "core-js/features/typed-array/find": ["es.typed-array.find"], "core-js/features/typed-array/find-index": ["es.typed-array.find-index"], "core-js/features/typed-array/find-last": ["esnext.typed-array.find-last"], "core-js/features/typed-array/find-last-index": ["esnext.typed-array.find-last-index"], "core-js/features/typed-array/float32-array": ["es.object.to-string", "es.typed-array.float32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/features/typed-array/float64-array": ["es.object.to-string", "es.typed-array.float64-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/features/typed-array/for-each": ["es.typed-array.for-each"], "core-js/features/typed-array/from": ["es.typed-array.from"], "core-js/features/typed-array/includes": ["es.typed-array.includes"], "core-js/features/typed-array/index-of": ["es.typed-array.index-of"], "core-js/features/typed-array/int16-array": ["es.object.to-string", "es.typed-array.int16-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/features/typed-array/int32-array": ["es.object.to-string", "es.typed-array.int32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/features/typed-array/int8-array": ["es.object.to-string", "es.typed-array.int8-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/features/typed-array/iterator": ["es.typed-array.iterator"], "core-js/features/typed-array/join": ["es.typed-array.join"], "core-js/features/typed-array/keys": ["es.typed-array.iterator"], "core-js/features/typed-array/last-index-of": ["es.typed-array.last-index-of"], "core-js/features/typed-array/map": ["es.typed-array.map"], "core-js/features/typed-array/of": ["es.typed-array.of"], "core-js/features/typed-array/reduce": ["es.typed-array.reduce"], "core-js/features/typed-array/reduce-right": ["es.typed-array.reduce-right"], "core-js/features/typed-array/reverse": ["es.typed-array.reverse"], "core-js/features/typed-array/set": ["es.typed-array.set"], "core-js/features/typed-array/slice": ["es.typed-array.slice"], "core-js/features/typed-array/some": ["es.typed-array.some"], "core-js/features/typed-array/sort": ["es.typed-array.sort"], "core-js/features/typed-array/subarray": ["es.typed-array.subarray"], "core-js/features/typed-array/to-locale-string": ["es.typed-array.to-locale-string"], "core-js/features/typed-array/to-string": ["es.typed-array.to-string"], "core-js/features/typed-array/uint16-array": ["es.object.to-string", "es.typed-array.uint16-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/features/typed-array/uint32-array": ["es.object.to-string", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/features/typed-array/uint8-array": ["es.object.to-string", "es.typed-array.uint8-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/features/typed-array/uint8-clamped-array": ["es.object.to-string", "es.typed-array.uint8-clamped-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/features/typed-array/unique-by": ["es.map", "esnext.typed-array.unique-by"], "core-js/features/typed-array/values": ["es.typed-array.iterator"], "core-js/features/unescape": ["es.unescape"], "core-js/features/url": ["web.url", "web.url.to-json", "web.url-search-params"], "core-js/features/url-search-params": ["web.url-search-params"], "core-js/features/url/to-json": ["web.url.to-json"], "core-js/features/weak-map": ["es.object.to-string", "es.weak-map", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-map.emplace", "esnext.weak-map.upsert", "web.dom-collections.iterator"], "core-js/features/weak-map/delete-all": ["es.weak-map", "esnext.weak-map.delete-all"], "core-js/features/weak-map/emplace": ["es.weak-map", "esnext.weak-map.emplace"], "core-js/features/weak-map/from": ["es.string.iterator", "es.weak-map", "esnext.weak-map.from", "web.dom-collections.iterator"], "core-js/features/weak-map/of": ["es.string.iterator", "es.weak-map", "esnext.weak-map.of", "web.dom-collections.iterator"], "core-js/features/weak-map/upsert": ["es.weak-map", "esnext.weak-map.upsert"], "core-js/features/weak-set": ["es.object.to-string", "es.weak-set", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of", "web.dom-collections.iterator"], "core-js/features/weak-set/add-all": ["es.weak-set", "esnext.weak-set.add-all"], "core-js/features/weak-set/delete-all": ["es.weak-set", "esnext.weak-set.delete-all"], "core-js/features/weak-set/from": ["es.string.iterator", "es.weak-set", "esnext.weak-set.from", "web.dom-collections.iterator"], "core-js/features/weak-set/of": ["es.string.iterator", "es.weak-set", "esnext.weak-set.of", "web.dom-collections.iterator"], "core-js/modules/es.aggregate-error": ["es.aggregate-error"], "core-js/modules/es.array-buffer.constructor": ["es.array-buffer.constructor"], "core-js/modules/es.array-buffer.is-view": ["es.array-buffer.is-view"], "core-js/modules/es.array-buffer.slice": ["es.array-buffer.slice"], "core-js/modules/es.array.concat": ["es.array.concat"], "core-js/modules/es.array.copy-within": ["es.array.copy-within"], "core-js/modules/es.array.every": ["es.array.every"], "core-js/modules/es.array.fill": ["es.array.fill"], "core-js/modules/es.array.filter": ["es.array.filter"], "core-js/modules/es.array.find": ["es.array.find"], "core-js/modules/es.array.find-index": ["es.array.find-index"], "core-js/modules/es.array.flat": ["es.array.flat"], "core-js/modules/es.array.flat-map": ["es.array.flat-map"], "core-js/modules/es.array.for-each": ["es.array.for-each"], "core-js/modules/es.array.from": ["es.array.from"], "core-js/modules/es.array.includes": ["es.array.includes"], "core-js/modules/es.array.index-of": ["es.array.index-of"], "core-js/modules/es.array.is-array": ["es.array.is-array"], "core-js/modules/es.array.iterator": ["es.array.iterator"], "core-js/modules/es.array.join": ["es.array.join"], "core-js/modules/es.array.last-index-of": ["es.array.last-index-of"], "core-js/modules/es.array.map": ["es.array.map"], "core-js/modules/es.array.of": ["es.array.of"], "core-js/modules/es.array.reduce": ["es.array.reduce"], "core-js/modules/es.array.reduce-right": ["es.array.reduce-right"], "core-js/modules/es.array.reverse": ["es.array.reverse"], "core-js/modules/es.array.slice": ["es.array.slice"], "core-js/modules/es.array.some": ["es.array.some"], "core-js/modules/es.array.sort": ["es.array.sort"], "core-js/modules/es.array.species": ["es.array.species"], "core-js/modules/es.array.splice": ["es.array.splice"], "core-js/modules/es.array.unscopables.flat": ["es.array.unscopables.flat"], "core-js/modules/es.array.unscopables.flat-map": ["es.array.unscopables.flat-map"], "core-js/modules/es.data-view": ["es.data-view"], "core-js/modules/es.date.get-year": ["es.date.get-year"], "core-js/modules/es.date.now": ["es.date.now"], "core-js/modules/es.date.set-year": ["es.date.set-year"], "core-js/modules/es.date.to-gmt-string": ["es.date.to-gmt-string"], "core-js/modules/es.date.to-iso-string": ["es.date.to-iso-string"], "core-js/modules/es.date.to-json": ["es.date.to-json"], "core-js/modules/es.date.to-primitive": ["es.date.to-primitive"], "core-js/modules/es.date.to-string": ["es.date.to-string"], "core-js/modules/es.escape": ["es.escape"], "core-js/modules/es.function.bind": ["es.function.bind"], "core-js/modules/es.function.has-instance": ["es.function.has-instance"], "core-js/modules/es.function.name": ["es.function.name"], "core-js/modules/es.global-this": ["es.global-this"], "core-js/modules/es.json.stringify": ["es.json.stringify"], "core-js/modules/es.json.to-string-tag": ["es.json.to-string-tag"], "core-js/modules/es.map": ["es.map"], "core-js/modules/es.math.acosh": ["es.math.acosh"], "core-js/modules/es.math.asinh": ["es.math.asinh"], "core-js/modules/es.math.atanh": ["es.math.atanh"], "core-js/modules/es.math.cbrt": ["es.math.cbrt"], "core-js/modules/es.math.clz32": ["es.math.clz32"], "core-js/modules/es.math.cosh": ["es.math.cosh"], "core-js/modules/es.math.expm1": ["es.math.expm1"], "core-js/modules/es.math.fround": ["es.math.fround"], "core-js/modules/es.math.hypot": ["es.math.hypot"], "core-js/modules/es.math.imul": ["es.math.imul"], "core-js/modules/es.math.log10": ["es.math.log10"], "core-js/modules/es.math.log1p": ["es.math.log1p"], "core-js/modules/es.math.log2": ["es.math.log2"], "core-js/modules/es.math.sign": ["es.math.sign"], "core-js/modules/es.math.sinh": ["es.math.sinh"], "core-js/modules/es.math.tanh": ["es.math.tanh"], "core-js/modules/es.math.to-string-tag": ["es.math.to-string-tag"], "core-js/modules/es.math.trunc": ["es.math.trunc"], "core-js/modules/es.number.constructor": ["es.number.constructor"], "core-js/modules/es.number.epsilon": ["es.number.epsilon"], "core-js/modules/es.number.is-finite": ["es.number.is-finite"], "core-js/modules/es.number.is-integer": ["es.number.is-integer"], "core-js/modules/es.number.is-nan": ["es.number.is-nan"], "core-js/modules/es.number.is-safe-integer": ["es.number.is-safe-integer"], "core-js/modules/es.number.max-safe-integer": ["es.number.max-safe-integer"], "core-js/modules/es.number.min-safe-integer": ["es.number.min-safe-integer"], "core-js/modules/es.number.parse-float": ["es.number.parse-float"], "core-js/modules/es.number.parse-int": ["es.number.parse-int"], "core-js/modules/es.number.to-fixed": ["es.number.to-fixed"], "core-js/modules/es.number.to-precision": ["es.number.to-precision"], "core-js/modules/es.object.assign": ["es.object.assign"], "core-js/modules/es.object.create": ["es.object.create"], "core-js/modules/es.object.define-getter": ["es.object.define-getter"], "core-js/modules/es.object.define-properties": ["es.object.define-properties"], "core-js/modules/es.object.define-property": ["es.object.define-property"], "core-js/modules/es.object.define-setter": ["es.object.define-setter"], "core-js/modules/es.object.entries": ["es.object.entries"], "core-js/modules/es.object.freeze": ["es.object.freeze"], "core-js/modules/es.object.from-entries": ["es.object.from-entries"], "core-js/modules/es.object.get-own-property-descriptor": ["es.object.get-own-property-descriptor"], "core-js/modules/es.object.get-own-property-descriptors": ["es.object.get-own-property-descriptors"], "core-js/modules/es.object.get-own-property-names": ["es.object.get-own-property-names"], "core-js/modules/es.object.get-prototype-of": ["es.object.get-prototype-of"], "core-js/modules/es.object.is": ["es.object.is"], "core-js/modules/es.object.is-extensible": ["es.object.is-extensible"], "core-js/modules/es.object.is-frozen": ["es.object.is-frozen"], "core-js/modules/es.object.is-sealed": ["es.object.is-sealed"], "core-js/modules/es.object.keys": ["es.object.keys"], "core-js/modules/es.object.lookup-getter": ["es.object.lookup-getter"], "core-js/modules/es.object.lookup-setter": ["es.object.lookup-setter"], "core-js/modules/es.object.prevent-extensions": ["es.object.prevent-extensions"], "core-js/modules/es.object.seal": ["es.object.seal"], "core-js/modules/es.object.set-prototype-of": ["es.object.set-prototype-of"], "core-js/modules/es.object.to-string": ["es.object.to-string"], "core-js/modules/es.object.values": ["es.object.values"], "core-js/modules/es.parse-float": ["es.parse-float"], "core-js/modules/es.parse-int": ["es.parse-int"], "core-js/modules/es.promise": ["es.promise"], "core-js/modules/es.promise.all-settled": ["es.promise.all-settled"], "core-js/modules/es.promise.any": ["es.promise.any"], "core-js/modules/es.promise.finally": ["es.promise.finally"], "core-js/modules/es.reflect.apply": ["es.reflect.apply"], "core-js/modules/es.reflect.construct": ["es.reflect.construct"], "core-js/modules/es.reflect.define-property": ["es.reflect.define-property"], "core-js/modules/es.reflect.delete-property": ["es.reflect.delete-property"], "core-js/modules/es.reflect.get": ["es.reflect.get"], "core-js/modules/es.reflect.get-own-property-descriptor": ["es.reflect.get-own-property-descriptor"], "core-js/modules/es.reflect.get-prototype-of": ["es.reflect.get-prototype-of"], "core-js/modules/es.reflect.has": ["es.reflect.has"], "core-js/modules/es.reflect.is-extensible": ["es.reflect.is-extensible"], "core-js/modules/es.reflect.own-keys": ["es.reflect.own-keys"], "core-js/modules/es.reflect.prevent-extensions": ["es.reflect.prevent-extensions"], "core-js/modules/es.reflect.set": ["es.reflect.set"], "core-js/modules/es.reflect.set-prototype-of": ["es.reflect.set-prototype-of"], "core-js/modules/es.reflect.to-string-tag": ["es.reflect.to-string-tag"], "core-js/modules/es.regexp.constructor": ["es.regexp.constructor"], "core-js/modules/es.regexp.dot-all": ["es.regexp.dot-all"], "core-js/modules/es.regexp.exec": ["es.regexp.exec"], "core-js/modules/es.regexp.flags": ["es.regexp.flags"], "core-js/modules/es.regexp.sticky": ["es.regexp.sticky"], "core-js/modules/es.regexp.test": ["es.regexp.test"], "core-js/modules/es.regexp.to-string": ["es.regexp.to-string"], "core-js/modules/es.set": ["es.set"], "core-js/modules/es.string.anchor": ["es.string.anchor"], "core-js/modules/es.string.big": ["es.string.big"], "core-js/modules/es.string.blink": ["es.string.blink"], "core-js/modules/es.string.bold": ["es.string.bold"], "core-js/modules/es.string.code-point-at": ["es.string.code-point-at"], "core-js/modules/es.string.ends-with": ["es.string.ends-with"], "core-js/modules/es.string.fixed": ["es.string.fixed"], "core-js/modules/es.string.fontcolor": ["es.string.fontcolor"], "core-js/modules/es.string.fontsize": ["es.string.fontsize"], "core-js/modules/es.string.from-code-point": ["es.string.from-code-point"], "core-js/modules/es.string.includes": ["es.string.includes"], "core-js/modules/es.string.italics": ["es.string.italics"], "core-js/modules/es.string.iterator": ["es.string.iterator"], "core-js/modules/es.string.link": ["es.string.link"], "core-js/modules/es.string.match": ["es.string.match"], "core-js/modules/es.string.match-all": ["es.string.match-all"], "core-js/modules/es.string.pad-end": ["es.string.pad-end"], "core-js/modules/es.string.pad-start": ["es.string.pad-start"], "core-js/modules/es.string.raw": ["es.string.raw"], "core-js/modules/es.string.repeat": ["es.string.repeat"], "core-js/modules/es.string.replace": ["es.string.replace"], "core-js/modules/es.string.replace-all": ["es.string.replace-all"], "core-js/modules/es.string.search": ["es.string.search"], "core-js/modules/es.string.small": ["es.string.small"], "core-js/modules/es.string.split": ["es.string.split"], "core-js/modules/es.string.starts-with": ["es.string.starts-with"], "core-js/modules/es.string.strike": ["es.string.strike"], "core-js/modules/es.string.sub": ["es.string.sub"], "core-js/modules/es.string.substr": ["es.string.substr"], "core-js/modules/es.string.sup": ["es.string.sup"], "core-js/modules/es.string.trim": ["es.string.trim"], "core-js/modules/es.string.trim-end": ["es.string.trim-end"], "core-js/modules/es.string.trim-start": ["es.string.trim-start"], "core-js/modules/es.symbol": ["es.symbol"], "core-js/modules/es.symbol.async-iterator": ["es.symbol.async-iterator"], "core-js/modules/es.symbol.description": ["es.symbol.description"], "core-js/modules/es.symbol.has-instance": ["es.symbol.has-instance"], "core-js/modules/es.symbol.is-concat-spreadable": ["es.symbol.is-concat-spreadable"], "core-js/modules/es.symbol.iterator": ["es.symbol.iterator"], "core-js/modules/es.symbol.match": ["es.symbol.match"], "core-js/modules/es.symbol.match-all": ["es.symbol.match-all"], "core-js/modules/es.symbol.replace": ["es.symbol.replace"], "core-js/modules/es.symbol.search": ["es.symbol.search"], "core-js/modules/es.symbol.species": ["es.symbol.species"], "core-js/modules/es.symbol.split": ["es.symbol.split"], "core-js/modules/es.symbol.to-primitive": ["es.symbol.to-primitive"], "core-js/modules/es.symbol.to-string-tag": ["es.symbol.to-string-tag"], "core-js/modules/es.symbol.unscopables": ["es.symbol.unscopables"], "core-js/modules/es.typed-array.copy-within": ["es.typed-array.copy-within"], "core-js/modules/es.typed-array.every": ["es.typed-array.every"], "core-js/modules/es.typed-array.fill": ["es.typed-array.fill"], "core-js/modules/es.typed-array.filter": ["es.typed-array.filter"], "core-js/modules/es.typed-array.find": ["es.typed-array.find"], "core-js/modules/es.typed-array.find-index": ["es.typed-array.find-index"], "core-js/modules/es.typed-array.float32-array": ["es.typed-array.float32-array"], "core-js/modules/es.typed-array.float64-array": ["es.typed-array.float64-array"], "core-js/modules/es.typed-array.for-each": ["es.typed-array.for-each"], "core-js/modules/es.typed-array.from": ["es.typed-array.from"], "core-js/modules/es.typed-array.includes": ["es.typed-array.includes"], "core-js/modules/es.typed-array.index-of": ["es.typed-array.index-of"], "core-js/modules/es.typed-array.int16-array": ["es.typed-array.int16-array"], "core-js/modules/es.typed-array.int32-array": ["es.typed-array.int32-array"], "core-js/modules/es.typed-array.int8-array": ["es.typed-array.int8-array"], "core-js/modules/es.typed-array.iterator": ["es.typed-array.iterator"], "core-js/modules/es.typed-array.join": ["es.typed-array.join"], "core-js/modules/es.typed-array.last-index-of": ["es.typed-array.last-index-of"], "core-js/modules/es.typed-array.map": ["es.typed-array.map"], "core-js/modules/es.typed-array.of": ["es.typed-array.of"], "core-js/modules/es.typed-array.reduce": ["es.typed-array.reduce"], "core-js/modules/es.typed-array.reduce-right": ["es.typed-array.reduce-right"], "core-js/modules/es.typed-array.reverse": ["es.typed-array.reverse"], "core-js/modules/es.typed-array.set": ["es.typed-array.set"], "core-js/modules/es.typed-array.slice": ["es.typed-array.slice"], "core-js/modules/es.typed-array.some": ["es.typed-array.some"], "core-js/modules/es.typed-array.sort": ["es.typed-array.sort"], "core-js/modules/es.typed-array.subarray": ["es.typed-array.subarray"], "core-js/modules/es.typed-array.to-locale-string": ["es.typed-array.to-locale-string"], "core-js/modules/es.typed-array.to-string": ["es.typed-array.to-string"], "core-js/modules/es.typed-array.uint16-array": ["es.typed-array.uint16-array"], "core-js/modules/es.typed-array.uint32-array": ["es.typed-array.uint32-array"], "core-js/modules/es.typed-array.uint8-array": ["es.typed-array.uint8-array"], "core-js/modules/es.typed-array.uint8-clamped-array": ["es.typed-array.uint8-clamped-array"], "core-js/modules/es.unescape": ["es.unescape"], "core-js/modules/es.weak-map": ["es.weak-map"], "core-js/modules/es.weak-set": ["es.weak-set"], "core-js/modules/esnext.aggregate-error": ["esnext.aggregate-error"], "core-js/modules/esnext.array.at": ["esnext.array.at"], "core-js/modules/esnext.array.filter-out": ["esnext.array.filter-out"], "core-js/modules/esnext.array.find-last": ["esnext.array.find-last"], "core-js/modules/esnext.array.find-last-index": ["esnext.array.find-last-index"], "core-js/modules/esnext.array.is-template-object": ["esnext.array.is-template-object"], "core-js/modules/esnext.array.last-index": ["esnext.array.last-index"], "core-js/modules/esnext.array.last-item": ["esnext.array.last-item"], "core-js/modules/esnext.array.unique-by": ["esnext.array.unique-by"], "core-js/modules/esnext.async-iterator.as-indexed-pairs": ["esnext.async-iterator.as-indexed-pairs"], "core-js/modules/esnext.async-iterator.constructor": ["esnext.async-iterator.constructor"], "core-js/modules/esnext.async-iterator.drop": ["esnext.async-iterator.drop"], "core-js/modules/esnext.async-iterator.every": ["esnext.async-iterator.every"], "core-js/modules/esnext.async-iterator.filter": ["esnext.async-iterator.filter"], "core-js/modules/esnext.async-iterator.find": ["esnext.async-iterator.find"], "core-js/modules/esnext.async-iterator.flat-map": ["esnext.async-iterator.flat-map"], "core-js/modules/esnext.async-iterator.for-each": ["esnext.async-iterator.for-each"], "core-js/modules/esnext.async-iterator.from": ["esnext.async-iterator.from"], "core-js/modules/esnext.async-iterator.map": ["esnext.async-iterator.map"], "core-js/modules/esnext.async-iterator.reduce": ["esnext.async-iterator.reduce"], "core-js/modules/esnext.async-iterator.some": ["esnext.async-iterator.some"], "core-js/modules/esnext.async-iterator.take": ["esnext.async-iterator.take"], "core-js/modules/esnext.async-iterator.to-array": ["esnext.async-iterator.to-array"], "core-js/modules/esnext.bigint.range": ["esnext.bigint.range"], "core-js/modules/esnext.composite-key": ["esnext.composite-key"], "core-js/modules/esnext.composite-symbol": ["esnext.composite-symbol"], "core-js/modules/esnext.global-this": ["esnext.global-this"], "core-js/modules/esnext.iterator.as-indexed-pairs": ["esnext.iterator.as-indexed-pairs"], "core-js/modules/esnext.iterator.constructor": ["esnext.iterator.constructor"], "core-js/modules/esnext.iterator.drop": ["esnext.iterator.drop"], "core-js/modules/esnext.iterator.every": ["esnext.iterator.every"], "core-js/modules/esnext.iterator.filter": ["esnext.iterator.filter"], "core-js/modules/esnext.iterator.find": ["esnext.iterator.find"], "core-js/modules/esnext.iterator.flat-map": ["esnext.iterator.flat-map"], "core-js/modules/esnext.iterator.for-each": ["esnext.iterator.for-each"], "core-js/modules/esnext.iterator.from": ["esnext.iterator.from"], "core-js/modules/esnext.iterator.map": ["esnext.iterator.map"], "core-js/modules/esnext.iterator.reduce": ["esnext.iterator.reduce"], "core-js/modules/esnext.iterator.some": ["esnext.iterator.some"], "core-js/modules/esnext.iterator.take": ["esnext.iterator.take"], "core-js/modules/esnext.iterator.to-array": ["esnext.iterator.to-array"], "core-js/modules/esnext.map.delete-all": ["esnext.map.delete-all"], "core-js/modules/esnext.map.emplace": ["esnext.map.emplace"], "core-js/modules/esnext.map.every": ["esnext.map.every"], "core-js/modules/esnext.map.filter": ["esnext.map.filter"], "core-js/modules/esnext.map.find": ["esnext.map.find"], "core-js/modules/esnext.map.find-key": ["esnext.map.find-key"], "core-js/modules/esnext.map.from": ["esnext.map.from"], "core-js/modules/esnext.map.group-by": ["esnext.map.group-by"], "core-js/modules/esnext.map.includes": ["esnext.map.includes"], "core-js/modules/esnext.map.key-by": ["esnext.map.key-by"], "core-js/modules/esnext.map.key-of": ["esnext.map.key-of"], "core-js/modules/esnext.map.map-keys": ["esnext.map.map-keys"], "core-js/modules/esnext.map.map-values": ["esnext.map.map-values"], "core-js/modules/esnext.map.merge": ["esnext.map.merge"], "core-js/modules/esnext.map.of": ["esnext.map.of"], "core-js/modules/esnext.map.reduce": ["esnext.map.reduce"], "core-js/modules/esnext.map.some": ["esnext.map.some"], "core-js/modules/esnext.map.update": ["esnext.map.update"], "core-js/modules/esnext.map.update-or-insert": ["esnext.map.update-or-insert"], "core-js/modules/esnext.map.upsert": ["esnext.map.upsert"], "core-js/modules/esnext.math.clamp": ["esnext.math.clamp"], "core-js/modules/esnext.math.deg-per-rad": ["esnext.math.deg-per-rad"], "core-js/modules/esnext.math.degrees": ["esnext.math.degrees"], "core-js/modules/esnext.math.fscale": ["esnext.math.fscale"], "core-js/modules/esnext.math.iaddh": ["esnext.math.iaddh"], "core-js/modules/esnext.math.imulh": ["esnext.math.imulh"], "core-js/modules/esnext.math.isubh": ["esnext.math.isubh"], "core-js/modules/esnext.math.rad-per-deg": ["esnext.math.rad-per-deg"], "core-js/modules/esnext.math.radians": ["esnext.math.radians"], "core-js/modules/esnext.math.scale": ["esnext.math.scale"], "core-js/modules/esnext.math.seeded-prng": ["esnext.math.seeded-prng"], "core-js/modules/esnext.math.signbit": ["esnext.math.signbit"], "core-js/modules/esnext.math.umulh": ["esnext.math.umulh"], "core-js/modules/esnext.number.from-string": ["esnext.number.from-string"], "core-js/modules/esnext.number.range": ["esnext.number.range"], "core-js/modules/esnext.object.has-own": ["esnext.object.has-own"], "core-js/modules/esnext.object.iterate-entries": ["esnext.object.iterate-entries"], "core-js/modules/esnext.object.iterate-keys": ["esnext.object.iterate-keys"], "core-js/modules/esnext.object.iterate-values": ["esnext.object.iterate-values"], "core-js/modules/esnext.observable": ["esnext.observable"], "core-js/modules/esnext.promise.all-settled": ["esnext.promise.all-settled"], "core-js/modules/esnext.promise.any": ["esnext.promise.any"], "core-js/modules/esnext.promise.try": ["esnext.promise.try"], "core-js/modules/esnext.reflect.define-metadata": ["esnext.reflect.define-metadata"], "core-js/modules/esnext.reflect.delete-metadata": ["esnext.reflect.delete-metadata"], "core-js/modules/esnext.reflect.get-metadata": ["esnext.reflect.get-metadata"], "core-js/modules/esnext.reflect.get-metadata-keys": ["esnext.reflect.get-metadata-keys"], "core-js/modules/esnext.reflect.get-own-metadata": ["esnext.reflect.get-own-metadata"], "core-js/modules/esnext.reflect.get-own-metadata-keys": ["esnext.reflect.get-own-metadata-keys"], "core-js/modules/esnext.reflect.has-metadata": ["esnext.reflect.has-metadata"], "core-js/modules/esnext.reflect.has-own-metadata": ["esnext.reflect.has-own-metadata"], "core-js/modules/esnext.reflect.metadata": ["esnext.reflect.metadata"], "core-js/modules/esnext.set.add-all": ["esnext.set.add-all"], "core-js/modules/esnext.set.delete-all": ["esnext.set.delete-all"], "core-js/modules/esnext.set.difference": ["esnext.set.difference"], "core-js/modules/esnext.set.every": ["esnext.set.every"], "core-js/modules/esnext.set.filter": ["esnext.set.filter"], "core-js/modules/esnext.set.find": ["esnext.set.find"], "core-js/modules/esnext.set.from": ["esnext.set.from"], "core-js/modules/esnext.set.intersection": ["esnext.set.intersection"], "core-js/modules/esnext.set.is-disjoint-from": ["esnext.set.is-disjoint-from"], "core-js/modules/esnext.set.is-subset-of": ["esnext.set.is-subset-of"], "core-js/modules/esnext.set.is-superset-of": ["esnext.set.is-superset-of"], "core-js/modules/esnext.set.join": ["esnext.set.join"], "core-js/modules/esnext.set.map": ["esnext.set.map"], "core-js/modules/esnext.set.of": ["esnext.set.of"], "core-js/modules/esnext.set.reduce": ["esnext.set.reduce"], "core-js/modules/esnext.set.some": ["esnext.set.some"], "core-js/modules/esnext.set.symmetric-difference": ["esnext.set.symmetric-difference"], "core-js/modules/esnext.set.union": ["esnext.set.union"], "core-js/modules/esnext.string.at": ["esnext.string.at"], "core-js/modules/esnext.string.at-alternative": ["esnext.string.at-alternative"], "core-js/modules/esnext.string.code-points": ["esnext.string.code-points"], "core-js/modules/esnext.string.match-all": ["esnext.string.match-all"], "core-js/modules/esnext.string.replace-all": ["esnext.string.replace-all"], "core-js/modules/esnext.symbol.async-dispose": ["esnext.symbol.async-dispose"], "core-js/modules/esnext.symbol.dispose": ["esnext.symbol.dispose"], "core-js/modules/esnext.symbol.matcher": ["esnext.symbol.matcher"], "core-js/modules/esnext.symbol.metadata": ["esnext.symbol.metadata"], "core-js/modules/esnext.symbol.observable": ["esnext.symbol.observable"], "core-js/modules/esnext.symbol.pattern-match": ["esnext.symbol.pattern-match"], "core-js/modules/esnext.symbol.replace-all": ["esnext.symbol.replace-all"], "core-js/modules/esnext.typed-array.at": ["esnext.typed-array.at"], "core-js/modules/esnext.typed-array.filter-out": ["esnext.typed-array.filter-out"], "core-js/modules/esnext.typed-array.find-last": ["esnext.typed-array.find-last"], "core-js/modules/esnext.typed-array.find-last-index": ["esnext.typed-array.find-last-index"], "core-js/modules/esnext.typed-array.unique-by": ["esnext.typed-array.unique-by"], "core-js/modules/esnext.weak-map.delete-all": ["esnext.weak-map.delete-all"], "core-js/modules/esnext.weak-map.emplace": ["esnext.weak-map.emplace"], "core-js/modules/esnext.weak-map.from": ["esnext.weak-map.from"], "core-js/modules/esnext.weak-map.of": ["esnext.weak-map.of"], "core-js/modules/esnext.weak-map.upsert": ["esnext.weak-map.upsert"], "core-js/modules/esnext.weak-set.add-all": ["esnext.weak-set.add-all"], "core-js/modules/esnext.weak-set.delete-all": ["esnext.weak-set.delete-all"], "core-js/modules/esnext.weak-set.from": ["esnext.weak-set.from"], "core-js/modules/esnext.weak-set.of": ["esnext.weak-set.of"], "core-js/modules/web.dom-collections.for-each": ["web.dom-collections.for-each"], "core-js/modules/web.dom-collections.iterator": ["web.dom-collections.iterator"], "core-js/modules/web.immediate": ["web.immediate"], "core-js/modules/web.queue-microtask": ["web.queue-microtask"], "core-js/modules/web.timers": ["web.timers"], "core-js/modules/web.url": ["web.url"], "core-js/modules/web.url-search-params": ["web.url-search-params"], "core-js/modules/web.url.to-json": ["web.url.to-json"], "core-js/proposals": ["es.map", "esnext.aggregate-error", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.array.last-index", "esnext.array.last-item", "esnext.array.unique-by", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.bigint.range", "esnext.composite-key", "esnext.composite-symbol", "esnext.global-this", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.delete-all", "esnext.map.emplace", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.math.umulh", "esnext.number.from-string", "esnext.number.range", "esnext.object.has-own", "esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values", "esnext.observable", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "esnext.reflect.define-metadata", "esnext.reflect.delete-metadata", "esnext.reflect.get-metadata", "esnext.reflect.get-metadata-keys", "esnext.reflect.get-own-metadata", "esnext.reflect.get-own-metadata-keys", "esnext.reflect.has-metadata", "esnext.reflect.has-own-metadata", "esnext.reflect.metadata", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.matcher", "esnext.symbol.metadata", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.symbol.replace-all", "esnext.typed-array.at", "esnext.typed-array.filter-out", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-map.emplace", "esnext.weak-map.upsert", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of", "web.url", "web.url.to-json", "web.url-search-params"], "core-js/proposals/accessible-object-hasownproperty": ["esnext.object.has-own"], "core-js/proposals/array-filtering": ["esnext.array.filter-out", "esnext.typed-array.filter-out"], "core-js/proposals/array-find-from-last": ["esnext.array.find-last", "esnext.array.find-last-index", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index"], "core-js/proposals/array-is-template-object": ["esnext.array.is-template-object"], "core-js/proposals/array-last": ["esnext.array.last-index", "esnext.array.last-item"], "core-js/proposals/array-unique": ["es.map", "esnext.array.unique-by", "esnext.typed-array.unique-by"], "core-js/proposals/collection-methods": ["esnext.map.delete-all", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.join", "esnext.set.map", "esnext.set.reduce", "esnext.set.some", "esnext.weak-map.delete-all", "esnext.weak-set.add-all", "esnext.weak-set.delete-all"], "core-js/proposals/collection-of-from": ["esnext.map.from", "esnext.map.of", "esnext.set.from", "esnext.set.of", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-set.from", "esnext.weak-set.of"], "core-js/proposals/decorators": ["esnext.symbol.metadata"], "core-js/proposals/efficient-64-bit-arithmetic": ["esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.umulh"], "core-js/proposals/global-this": ["esnext.global-this"], "core-js/proposals/iterator-helpers": ["esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array"], "core-js/proposals/keys-composition": ["esnext.composite-key", "esnext.composite-symbol"], "core-js/proposals/map-update-or-insert": ["esnext.map.emplace", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.weak-map.emplace", "esnext.weak-map.upsert"], "core-js/proposals/map-upsert": ["esnext.map.emplace", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.weak-map.emplace", "esnext.weak-map.upsert"], "core-js/proposals/math-extensions": ["esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale"], "core-js/proposals/math-signbit": ["esnext.math.signbit"], "core-js/proposals/number-from-string": ["esnext.number.from-string"], "core-js/proposals/number-range": ["esnext.bigint.range", "esnext.number.range"], "core-js/proposals/object-iteration": ["esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values"], "core-js/proposals/observable": ["esnext.observable", "esnext.symbol.observable"], "core-js/proposals/pattern-matching": ["esnext.symbol.matcher", "esnext.symbol.pattern-match"], "core-js/proposals/promise-all-settled": ["esnext.promise.all-settled"], "core-js/proposals/promise-any": ["esnext.aggregate-error", "esnext.promise.any"], "core-js/proposals/promise-try": ["esnext.promise.try"], "core-js/proposals/reflect-metadata": ["esnext.reflect.define-metadata", "esnext.reflect.delete-metadata", "esnext.reflect.get-metadata", "esnext.reflect.get-metadata-keys", "esnext.reflect.get-own-metadata", "esnext.reflect.get-own-metadata-keys", "esnext.reflect.has-metadata", "esnext.reflect.has-own-metadata", "esnext.reflect.metadata"], "core-js/proposals/relative-indexing-method": ["esnext.array.at", "esnext.typed-array.at"], "core-js/proposals/seeded-random": ["esnext.math.seeded-prng"], "core-js/proposals/set-methods": ["esnext.set.difference", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.symmetric-difference", "esnext.set.union"], "core-js/proposals/string-at": ["esnext.string.at"], "core-js/proposals/string-code-points": ["esnext.string.code-points"], "core-js/proposals/string-match-all": ["esnext.string.match-all"], "core-js/proposals/string-replace-all": ["esnext.string.replace-all", "esnext.symbol.replace-all"], "core-js/proposals/url": ["web.url", "web.url.to-json", "web.url-search-params"], "core-js/proposals/using-statement": ["esnext.symbol.async-dispose", "esnext.symbol.dispose"], "core-js/stable": ["es.symbol", "es.symbol.description", "es.symbol.async-iterator", "es.symbol.has-instance", "es.symbol.is-concat-spreadable", "es.symbol.iterator", "es.symbol.match", "es.symbol.match-all", "es.symbol.replace", "es.symbol.search", "es.symbol.species", "es.symbol.split", "es.symbol.to-primitive", "es.symbol.to-string-tag", "es.symbol.unscopables", "es.aggregate-error", "es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.from", "es.array.includes", "es.array.index-of", "es.array.is-array", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.of", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.array-buffer.constructor", "es.array-buffer.is-view", "es.array-buffer.slice", "es.data-view", "es.date.get-year", "es.date.now", "es.date.set-year", "es.date.to-gmt-string", "es.date.to-iso-string", "es.date.to-json", "es.date.to-primitive", "es.date.to-string", "es.escape", "es.function.bind", "es.function.has-instance", "es.function.name", "es.global-this", "es.json.stringify", "es.json.to-string-tag", "es.map", "es.math.acosh", "es.math.asinh", "es.math.atanh", "es.math.cbrt", "es.math.clz32", "es.math.cosh", "es.math.expm1", "es.math.fround", "es.math.hypot", "es.math.imul", "es.math.log10", "es.math.log1p", "es.math.log2", "es.math.sign", "es.math.sinh", "es.math.tanh", "es.math.to-string-tag", "es.math.trunc", "es.number.constructor", "es.number.epsilon", "es.number.is-finite", "es.number.is-integer", "es.number.is-nan", "es.number.is-safe-integer", "es.number.max-safe-integer", "es.number.min-safe-integer", "es.number.parse-float", "es.number.parse-int", "es.number.to-fixed", "es.number.to-precision", "es.object.assign", "es.object.create", "es.object.define-getter", "es.object.define-properties", "es.object.define-property", "es.object.define-setter", "es.object.entries", "es.object.freeze", "es.object.from-entries", "es.object.get-own-property-descriptor", "es.object.get-own-property-descriptors", "es.object.get-own-property-names", "es.object.get-prototype-of", "es.object.is", "es.object.is-extensible", "es.object.is-frozen", "es.object.is-sealed", "es.object.keys", "es.object.lookup-getter", "es.object.lookup-setter", "es.object.prevent-extensions", "es.object.seal", "es.object.set-prototype-of", "es.object.to-string", "es.object.values", "es.parse-float", "es.parse-int", "es.promise", "es.promise.all-settled", "es.promise.any", "es.promise.finally", "es.reflect.apply", "es.reflect.construct", "es.reflect.define-property", "es.reflect.delete-property", "es.reflect.get", "es.reflect.get-own-property-descriptor", "es.reflect.get-prototype-of", "es.reflect.has", "es.reflect.is-extensible", "es.reflect.own-keys", "es.reflect.prevent-extensions", "es.reflect.set", "es.reflect.set-prototype-of", "es.reflect.to-string-tag", "es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec", "es.regexp.flags", "es.regexp.sticky", "es.regexp.test", "es.regexp.to-string", "es.set", "es.string.code-point-at", "es.string.ends-with", "es.string.from-code-point", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.raw", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup", "es.typed-array.float32-array", "es.typed-array.float64-array", "es.typed-array.int8-array", "es.typed-array.int16-array", "es.typed-array.int32-array", "es.typed-array.uint8-array", "es.typed-array.uint8-clamped-array", "es.typed-array.uint16-array", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string", "es.unescape", "es.weak-map", "es.weak-set", "web.dom-collections.for-each", "web.dom-collections.iterator", "web.immediate", "web.queue-microtask", "web.timers", "web.url", "web.url.to-json", "web.url-search-params"], "core-js/stable/aggregate-error": ["es.aggregate-error", "es.string.iterator", "esnext.aggregate-error", "web.dom-collections.iterator"], "core-js/stable/array": ["es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.from", "es.array.includes", "es.array.index-of", "es.array.is-array", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.of", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map", "es.string.iterator"], "core-js/stable/array-buffer": ["es.array-buffer.constructor", "es.array-buffer.is-view", "es.array-buffer.slice", "es.object.to-string"], "core-js/stable/array-buffer/constructor": ["es.array-buffer.constructor", "es.object.to-string"], "core-js/stable/array-buffer/is-view": ["es.array-buffer.is-view"], "core-js/stable/array-buffer/slice": ["es.array-buffer.slice"], "core-js/stable/array/concat": ["es.array.concat"], "core-js/stable/array/copy-within": ["es.array.copy-within"], "core-js/stable/array/entries": ["es.array.iterator"], "core-js/stable/array/every": ["es.array.every"], "core-js/stable/array/fill": ["es.array.fill"], "core-js/stable/array/filter": ["es.array.filter"], "core-js/stable/array/find": ["es.array.find"], "core-js/stable/array/find-index": ["es.array.find-index"], "core-js/stable/array/flat": ["es.array.flat", "es.array.unscopables.flat"], "core-js/stable/array/flat-map": ["es.array.flat-map", "es.array.unscopables.flat-map"], "core-js/stable/array/for-each": ["es.array.for-each"], "core-js/stable/array/from": ["es.array.from", "es.string.iterator"], "core-js/stable/array/includes": ["es.array.includes"], "core-js/stable/array/index-of": ["es.array.index-of"], "core-js/stable/array/is-array": ["es.array.is-array"], "core-js/stable/array/iterator": ["es.array.iterator"], "core-js/stable/array/join": ["es.array.join"], "core-js/stable/array/keys": ["es.array.iterator"], "core-js/stable/array/last-index-of": ["es.array.last-index-of"], "core-js/stable/array/map": ["es.array.map"], "core-js/stable/array/of": ["es.array.of"], "core-js/stable/array/reduce": ["es.array.reduce"], "core-js/stable/array/reduce-right": ["es.array.reduce-right"], "core-js/stable/array/reverse": ["es.array.reverse"], "core-js/stable/array/slice": ["es.array.slice"], "core-js/stable/array/some": ["es.array.some"], "core-js/stable/array/sort": ["es.array.sort"], "core-js/stable/array/splice": ["es.array.splice"], "core-js/stable/array/values": ["es.array.iterator"], "core-js/stable/array/virtual": ["es.array.concat", "es.array.copy-within", "es.array.every", "es.array.fill", "es.array.filter", "es.array.find", "es.array.find-index", "es.array.flat", "es.array.flat-map", "es.array.for-each", "es.array.includes", "es.array.index-of", "es.array.iterator", "es.array.join", "es.array.last-index-of", "es.array.map", "es.array.reduce", "es.array.reduce-right", "es.array.reverse", "es.array.slice", "es.array.some", "es.array.sort", "es.array.species", "es.array.splice", "es.array.unscopables.flat", "es.array.unscopables.flat-map"], "core-js/stable/array/virtual/concat": ["es.array.concat"], "core-js/stable/array/virtual/copy-within": ["es.array.copy-within"], "core-js/stable/array/virtual/entries": ["es.array.iterator"], "core-js/stable/array/virtual/every": ["es.array.every"], "core-js/stable/array/virtual/fill": ["es.array.fill"], "core-js/stable/array/virtual/filter": ["es.array.filter"], "core-js/stable/array/virtual/find": ["es.array.find"], "core-js/stable/array/virtual/find-index": ["es.array.find-index"], "core-js/stable/array/virtual/flat": ["es.array.flat", "es.array.unscopables.flat"], "core-js/stable/array/virtual/flat-map": ["es.array.flat-map", "es.array.unscopables.flat-map"], "core-js/stable/array/virtual/for-each": ["es.array.for-each"], "core-js/stable/array/virtual/includes": ["es.array.includes"], "core-js/stable/array/virtual/index-of": ["es.array.index-of"], "core-js/stable/array/virtual/iterator": ["es.array.iterator"], "core-js/stable/array/virtual/join": ["es.array.join"], "core-js/stable/array/virtual/keys": ["es.array.iterator"], "core-js/stable/array/virtual/last-index-of": ["es.array.last-index-of"], "core-js/stable/array/virtual/map": ["es.array.map"], "core-js/stable/array/virtual/reduce": ["es.array.reduce"], "core-js/stable/array/virtual/reduce-right": ["es.array.reduce-right"], "core-js/stable/array/virtual/reverse": ["es.array.reverse"], "core-js/stable/array/virtual/slice": ["es.array.slice"], "core-js/stable/array/virtual/some": ["es.array.some"], "core-js/stable/array/virtual/sort": ["es.array.sort"], "core-js/stable/array/virtual/splice": ["es.array.splice"], "core-js/stable/array/virtual/values": ["es.array.iterator"], "core-js/stable/clear-immediate": ["web.immediate"], "core-js/stable/data-view": ["es.data-view", "es.object.to-string"], "core-js/stable/date": ["es.date.get-year", "es.date.now", "es.date.set-year", "es.date.to-gmt-string", "es.date.to-iso-string", "es.date.to-json", "es.date.to-primitive", "es.date.to-string"], "core-js/stable/date/get-year": ["es.date.get-year"], "core-js/stable/date/now": ["es.date.now"], "core-js/stable/date/set-year": ["es.date.set-year"], "core-js/stable/date/to-gmt-string": ["es.date.to-gmt-string"], "core-js/stable/date/to-iso-string": ["es.date.to-iso-string", "es.date.to-json"], "core-js/stable/date/to-json": ["es.date.to-json"], "core-js/stable/date/to-primitive": ["es.date.to-primitive"], "core-js/stable/date/to-string": ["es.date.to-string"], "core-js/stable/dom-collections": ["es.array.iterator", "web.dom-collections.for-each", "web.dom-collections.iterator"], "core-js/stable/dom-collections/for-each": ["web.dom-collections.for-each"], "core-js/stable/dom-collections/iterator": ["web.dom-collections.iterator"], "core-js/stable/escape": ["es.escape"], "core-js/stable/function": ["es.function.bind", "es.function.has-instance", "es.function.name"], "core-js/stable/function/bind": ["es.function.bind"], "core-js/stable/function/has-instance": ["es.function.has-instance"], "core-js/stable/function/name": ["es.function.name"], "core-js/stable/function/virtual": ["es.function.bind"], "core-js/stable/function/virtual/bind": ["es.function.bind"], "core-js/stable/global-this": ["es.global-this"], "core-js/stable/instance/bind": ["es.function.bind"], "core-js/stable/instance/code-point-at": ["es.string.code-point-at"], "core-js/stable/instance/concat": ["es.array.concat"], "core-js/stable/instance/copy-within": ["es.array.copy-within"], "core-js/stable/instance/ends-with": ["es.string.ends-with"], "core-js/stable/instance/entries": ["es.array.iterator", "web.dom-collections.iterator"], "core-js/stable/instance/every": ["es.array.every"], "core-js/stable/instance/fill": ["es.array.fill"], "core-js/stable/instance/filter": ["es.array.filter"], "core-js/stable/instance/find": ["es.array.find"], "core-js/stable/instance/find-index": ["es.array.find-index"], "core-js/stable/instance/flags": ["es.regexp.flags"], "core-js/stable/instance/flat": ["es.array.flat", "es.array.unscopables.flat"], "core-js/stable/instance/flat-map": ["es.array.flat-map", "es.array.unscopables.flat-map"], "core-js/stable/instance/for-each": ["es.array.for-each", "web.dom-collections.iterator"], "core-js/stable/instance/includes": ["es.array.includes", "es.string.includes"], "core-js/stable/instance/index-of": ["es.array.index-of"], "core-js/stable/instance/keys": ["es.array.iterator", "web.dom-collections.iterator"], "core-js/stable/instance/last-index-of": ["es.array.last-index-of"], "core-js/stable/instance/map": ["es.array.map"], "core-js/stable/instance/match-all": ["es.string.match-all"], "core-js/stable/instance/pad-end": ["es.string.pad-end"], "core-js/stable/instance/pad-start": ["es.string.pad-start"], "core-js/stable/instance/reduce": ["es.array.reduce"], "core-js/stable/instance/reduce-right": ["es.array.reduce-right"], "core-js/stable/instance/repeat": ["es.string.repeat"], "core-js/stable/instance/replace-all": ["es.string.replace-all"], "core-js/stable/instance/reverse": ["es.array.reverse"], "core-js/stable/instance/slice": ["es.array.slice"], "core-js/stable/instance/some": ["es.array.some"], "core-js/stable/instance/sort": ["es.array.sort"], "core-js/stable/instance/splice": ["es.array.splice"], "core-js/stable/instance/starts-with": ["es.string.starts-with"], "core-js/stable/instance/trim": ["es.string.trim"], "core-js/stable/instance/trim-end": ["es.string.trim-end"], "core-js/stable/instance/trim-left": ["es.string.trim-start"], "core-js/stable/instance/trim-right": ["es.string.trim-end"], "core-js/stable/instance/trim-start": ["es.string.trim-start"], "core-js/stable/instance/values": ["es.array.iterator", "web.dom-collections.iterator"], "core-js/stable/json": ["es.json.stringify", "es.json.to-string-tag"], "core-js/stable/json/stringify": ["es.json.stringify"], "core-js/stable/json/to-string-tag": ["es.json.to-string-tag"], "core-js/stable/map": ["es.map", "es.object.to-string", "es.string.iterator", "web.dom-collections.iterator"], "core-js/stable/math": ["es.math.acosh", "es.math.asinh", "es.math.atanh", "es.math.cbrt", "es.math.clz32", "es.math.cosh", "es.math.expm1", "es.math.fround", "es.math.hypot", "es.math.imul", "es.math.log10", "es.math.log1p", "es.math.log2", "es.math.sign", "es.math.sinh", "es.math.tanh", "es.math.to-string-tag", "es.math.trunc"], "core-js/stable/math/acosh": ["es.math.acosh"], "core-js/stable/math/asinh": ["es.math.asinh"], "core-js/stable/math/atanh": ["es.math.atanh"], "core-js/stable/math/cbrt": ["es.math.cbrt"], "core-js/stable/math/clz32": ["es.math.clz32"], "core-js/stable/math/cosh": ["es.math.cosh"], "core-js/stable/math/expm1": ["es.math.expm1"], "core-js/stable/math/fround": ["es.math.fround"], "core-js/stable/math/hypot": ["es.math.hypot"], "core-js/stable/math/imul": ["es.math.imul"], "core-js/stable/math/log10": ["es.math.log10"], "core-js/stable/math/log1p": ["es.math.log1p"], "core-js/stable/math/log2": ["es.math.log2"], "core-js/stable/math/sign": ["es.math.sign"], "core-js/stable/math/sinh": ["es.math.sinh"], "core-js/stable/math/tanh": ["es.math.tanh"], "core-js/stable/math/to-string-tag": ["es.math.to-string-tag"], "core-js/stable/math/trunc": ["es.math.trunc"], "core-js/stable/number": ["es.number.constructor", "es.number.epsilon", "es.number.is-finite", "es.number.is-integer", "es.number.is-nan", "es.number.is-safe-integer", "es.number.max-safe-integer", "es.number.min-safe-integer", "es.number.parse-float", "es.number.parse-int", "es.number.to-fixed", "es.number.to-precision"], "core-js/stable/number/constructor": ["es.number.constructor"], "core-js/stable/number/epsilon": ["es.number.epsilon"], "core-js/stable/number/is-finite": ["es.number.is-finite"], "core-js/stable/number/is-integer": ["es.number.is-integer"], "core-js/stable/number/is-nan": ["es.number.is-nan"], "core-js/stable/number/is-safe-integer": ["es.number.is-safe-integer"], "core-js/stable/number/max-safe-integer": ["es.number.max-safe-integer"], "core-js/stable/number/min-safe-integer": ["es.number.min-safe-integer"], "core-js/stable/number/parse-float": ["es.number.parse-float"], "core-js/stable/number/parse-int": ["es.number.parse-int"], "core-js/stable/number/to-fixed": ["es.number.to-fixed"], "core-js/stable/number/to-precision": ["es.number.to-precision"], "core-js/stable/number/virtual": ["es.number.to-fixed", "es.number.to-precision"], "core-js/stable/number/virtual/to-fixed": ["es.number.to-fixed"], "core-js/stable/number/virtual/to-precision": ["es.number.to-precision"], "core-js/stable/object": ["es.symbol", "es.json.to-string-tag", "es.math.to-string-tag", "es.object.assign", "es.object.create", "es.object.define-getter", "es.object.define-properties", "es.object.define-property", "es.object.define-setter", "es.object.entries", "es.object.freeze", "es.object.from-entries", "es.object.get-own-property-descriptor", "es.object.get-own-property-descriptors", "es.object.get-own-property-names", "es.object.get-prototype-of", "es.object.is", "es.object.is-extensible", "es.object.is-frozen", "es.object.is-sealed", "es.object.keys", "es.object.lookup-getter", "es.object.lookup-setter", "es.object.prevent-extensions", "es.object.seal", "es.object.set-prototype-of", "es.object.to-string", "es.object.values", "es.reflect.to-string-tag"], "core-js/stable/object/assign": ["es.object.assign"], "core-js/stable/object/create": ["es.object.create"], "core-js/stable/object/define-getter": ["es.object.define-getter"], "core-js/stable/object/define-properties": ["es.object.define-properties"], "core-js/stable/object/define-property": ["es.object.define-property"], "core-js/stable/object/define-setter": ["es.object.define-setter"], "core-js/stable/object/entries": ["es.object.entries"], "core-js/stable/object/freeze": ["es.object.freeze"], "core-js/stable/object/from-entries": ["es.array.iterator", "es.object.from-entries"], "core-js/stable/object/get-own-property-descriptor": ["es.object.get-own-property-descriptor"], "core-js/stable/object/get-own-property-descriptors": ["es.object.get-own-property-descriptors"], "core-js/stable/object/get-own-property-names": ["es.object.get-own-property-names"], "core-js/stable/object/get-own-property-symbols": ["es.symbol"], "core-js/stable/object/get-prototype-of": ["es.object.get-prototype-of"], "core-js/stable/object/is": ["es.object.is"], "core-js/stable/object/is-extensible": ["es.object.is-extensible"], "core-js/stable/object/is-frozen": ["es.object.is-frozen"], "core-js/stable/object/is-sealed": ["es.object.is-sealed"], "core-js/stable/object/keys": ["es.object.keys"], "core-js/stable/object/lookup-getter": ["es.object.lookup-setter"], "core-js/stable/object/lookup-setter": ["es.object.lookup-setter"], "core-js/stable/object/prevent-extensions": ["es.object.prevent-extensions"], "core-js/stable/object/seal": ["es.object.seal"], "core-js/stable/object/set-prototype-of": ["es.object.set-prototype-of"], "core-js/stable/object/to-string": ["es.json.to-string-tag", "es.math.to-string-tag", "es.object.to-string", "es.reflect.to-string-tag"], "core-js/stable/object/values": ["es.object.values"], "core-js/stable/parse-float": ["es.parse-float"], "core-js/stable/parse-int": ["es.parse-int"], "core-js/stable/promise": ["es.aggregate-error", "es.object.to-string", "es.promise", "es.promise.all-settled", "es.promise.any", "es.promise.finally", "es.string.iterator", "web.dom-collections.iterator"], "core-js/stable/promise/all-settled": ["es.promise", "es.promise.all-settled", "es.string.iterator", "web.dom-collections.iterator"], "core-js/stable/promise/any": ["es.aggregate-error", "es.promise", "es.promise.any", "es.string.iterator", "web.dom-collections.iterator"], "core-js/stable/promise/finally": ["es.promise", "es.promise.finally"], "core-js/stable/queue-microtask": ["web.queue-microtask"], "core-js/stable/reflect": ["es.reflect.apply", "es.reflect.construct", "es.reflect.define-property", "es.reflect.delete-property", "es.reflect.get", "es.reflect.get-own-property-descriptor", "es.reflect.get-prototype-of", "es.reflect.has", "es.reflect.is-extensible", "es.reflect.own-keys", "es.reflect.prevent-extensions", "es.reflect.set", "es.reflect.set-prototype-of", "es.reflect.to-string-tag"], "core-js/stable/reflect/apply": ["es.reflect.apply"], "core-js/stable/reflect/construct": ["es.reflect.construct"], "core-js/stable/reflect/define-property": ["es.reflect.define-property"], "core-js/stable/reflect/delete-property": ["es.reflect.delete-property"], "core-js/stable/reflect/get": ["es.reflect.get"], "core-js/stable/reflect/get-own-property-descriptor": ["es.reflect.get-own-property-descriptor"], "core-js/stable/reflect/get-prototype-of": ["es.reflect.get-prototype-of"], "core-js/stable/reflect/has": ["es.reflect.has"], "core-js/stable/reflect/is-extensible": ["es.reflect.is-extensible"], "core-js/stable/reflect/own-keys": ["es.reflect.own-keys"], "core-js/stable/reflect/prevent-extensions": ["es.reflect.prevent-extensions"], "core-js/stable/reflect/set": ["es.reflect.set"], "core-js/stable/reflect/set-prototype-of": ["es.reflect.set-prototype-of"], "core-js/stable/reflect/to-string-tag": ["es.reflect.to-string-tag"], "core-js/stable/regexp": ["es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec", "es.regexp.flags", "es.regexp.sticky", "es.regexp.test", "es.regexp.to-string", "es.string.match", "es.string.replace", "es.string.search", "es.string.split"], "core-js/stable/regexp/constructor": ["es.regexp.constructor"], "core-js/stable/regexp/dot-all": ["es.regexp.constructor", "es.regexp.dot-all", "es.regexp.exec"], "core-js/stable/regexp/flags": ["es.regexp.flags"], "core-js/stable/regexp/match": ["es.string.match"], "core-js/stable/regexp/replace": ["es.string.replace"], "core-js/stable/regexp/search": ["es.string.search"], "core-js/stable/regexp/split": ["es.string.split"], "core-js/stable/regexp/sticky": ["es.regexp.constructor", "es.regexp.exec", "es.regexp.sticky"], "core-js/stable/regexp/test": ["es.regexp.exec", "es.regexp.test"], "core-js/stable/regexp/to-string": ["es.regexp.to-string"], "core-js/stable/set": ["es.object.to-string", "es.set", "es.string.iterator", "web.dom-collections.iterator"], "core-js/stable/set-immediate": ["web.immediate"], "core-js/stable/set-interval": ["web.timers"], "core-js/stable/set-timeout": ["web.timers"], "core-js/stable/string": ["es.regexp.exec", "es.string.code-point-at", "es.string.ends-with", "es.string.from-code-point", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.raw", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup"], "core-js/stable/string/anchor": ["es.string.anchor"], "core-js/stable/string/big": ["es.string.big"], "core-js/stable/string/blink": ["es.string.blink"], "core-js/stable/string/bold": ["es.string.bold"], "core-js/stable/string/code-point-at": ["es.string.code-point-at"], "core-js/stable/string/ends-with": ["es.string.ends-with"], "core-js/stable/string/fixed": ["es.string.fixed"], "core-js/stable/string/fontcolor": ["es.string.fontcolor"], "core-js/stable/string/fontsize": ["es.string.fontsize"], "core-js/stable/string/from-code-point": ["es.string.from-code-point"], "core-js/stable/string/includes": ["es.string.includes"], "core-js/stable/string/italics": ["es.string.italics"], "core-js/stable/string/iterator": ["es.string.iterator"], "core-js/stable/string/link": ["es.string.link"], "core-js/stable/string/match": ["es.regexp.exec", "es.string.match"], "core-js/stable/string/match-all": ["es.string.match-all"], "core-js/stable/string/pad-end": ["es.string.pad-end"], "core-js/stable/string/pad-start": ["es.string.pad-start"], "core-js/stable/string/raw": ["es.string.raw"], "core-js/stable/string/repeat": ["es.string.repeat"], "core-js/stable/string/replace": ["es.regexp.exec", "es.string.replace"], "core-js/stable/string/replace-all": ["es.string.replace-all"], "core-js/stable/string/search": ["es.regexp.exec", "es.string.search"], "core-js/stable/string/small": ["es.string.small"], "core-js/stable/string/split": ["es.regexp.exec", "es.string.split"], "core-js/stable/string/starts-with": ["es.string.starts-with"], "core-js/stable/string/strike": ["es.string.strike"], "core-js/stable/string/sub": ["es.string.sub"], "core-js/stable/string/substr": ["es.string.substr"], "core-js/stable/string/sup": ["es.string.sup"], "core-js/stable/string/trim": ["es.string.trim"], "core-js/stable/string/trim-end": ["es.string.trim-end"], "core-js/stable/string/trim-left": ["es.string.trim-start"], "core-js/stable/string/trim-right": ["es.string.trim-end"], "core-js/stable/string/trim-start": ["es.string.trim-start"], "core-js/stable/string/virtual": ["es.string.code-point-at", "es.string.ends-with", "es.string.includes", "es.string.iterator", "es.string.match", "es.string.match-all", "es.string.pad-end", "es.string.pad-start", "es.string.repeat", "es.string.replace", "es.string.replace-all", "es.string.search", "es.string.split", "es.string.starts-with", "es.string.substr", "es.string.trim", "es.string.trim-end", "es.string.trim-start", "es.string.anchor", "es.string.big", "es.string.blink", "es.string.bold", "es.string.fixed", "es.string.fontcolor", "es.string.fontsize", "es.string.italics", "es.string.link", "es.string.small", "es.string.strike", "es.string.sub", "es.string.sup"], "core-js/stable/string/virtual/anchor": ["es.string.anchor"], "core-js/stable/string/virtual/big": ["es.string.big"], "core-js/stable/string/virtual/blink": ["es.string.blink"], "core-js/stable/string/virtual/bold": ["es.string.bold"], "core-js/stable/string/virtual/code-point-at": ["es.string.code-point-at"], "core-js/stable/string/virtual/ends-with": ["es.string.ends-with"], "core-js/stable/string/virtual/fixed": ["es.string.fixed"], "core-js/stable/string/virtual/fontcolor": ["es.string.fontcolor"], "core-js/stable/string/virtual/fontsize": ["es.string.fontsize"], "core-js/stable/string/virtual/includes": ["es.string.includes"], "core-js/stable/string/virtual/italics": ["es.string.italics"], "core-js/stable/string/virtual/iterator": ["es.string.iterator"], "core-js/stable/string/virtual/link": ["es.string.link"], "core-js/stable/string/virtual/match-all": ["es.string.match-all"], "core-js/stable/string/virtual/pad-end": ["es.string.pad-end"], "core-js/stable/string/virtual/pad-start": ["es.string.pad-start"], "core-js/stable/string/virtual/repeat": ["es.string.repeat"], "core-js/stable/string/virtual/replace-all": ["es.string.replace-all"], "core-js/stable/string/virtual/small": ["es.string.small"], "core-js/stable/string/virtual/starts-with": ["es.string.starts-with"], "core-js/stable/string/virtual/strike": ["es.string.strike"], "core-js/stable/string/virtual/sub": ["es.string.sub"], "core-js/stable/string/virtual/substr": ["es.string.substr"], "core-js/stable/string/virtual/sup": ["es.string.sup"], "core-js/stable/string/virtual/trim": ["es.string.trim"], "core-js/stable/string/virtual/trim-end": ["es.string.trim-end"], "core-js/stable/string/virtual/trim-left": ["es.string.trim-start"], "core-js/stable/string/virtual/trim-right": ["es.string.trim-end"], "core-js/stable/string/virtual/trim-start": ["es.string.trim-start"], "core-js/stable/symbol": ["es.symbol", "es.symbol.description", "es.symbol.async-iterator", "es.symbol.has-instance", "es.symbol.is-concat-spreadable", "es.symbol.iterator", "es.symbol.match", "es.symbol.match-all", "es.symbol.replace", "es.symbol.search", "es.symbol.species", "es.symbol.split", "es.symbol.to-primitive", "es.symbol.to-string-tag", "es.symbol.unscopables", "es.array.concat", "es.json.to-string-tag", "es.math.to-string-tag", "es.object.to-string", "es.reflect.to-string-tag"], "core-js/stable/symbol/async-iterator": ["es.symbol.async-iterator"], "core-js/stable/symbol/description": ["es.symbol.description"], "core-js/stable/symbol/for": ["es.symbol"], "core-js/stable/symbol/has-instance": ["es.symbol.has-instance", "es.function.has-instance"], "core-js/stable/symbol/is-concat-spreadable": ["es.symbol.is-concat-spreadable", "es.array.concat"], "core-js/stable/symbol/iterator": ["es.symbol.iterator", "es.string.iterator", "web.dom-collections.iterator"], "core-js/stable/symbol/key-for": ["es.symbol"], "core-js/stable/symbol/match": ["es.symbol.match", "es.string.match"], "core-js/stable/symbol/match-all": ["es.symbol.match-all", "es.string.match-all"], "core-js/stable/symbol/replace": ["es.symbol.replace", "es.string.replace"], "core-js/stable/symbol/search": ["es.symbol.search", "es.string.search"], "core-js/stable/symbol/species": ["es.symbol.species"], "core-js/stable/symbol/split": ["es.symbol.split", "es.string.split"], "core-js/stable/symbol/to-primitive": ["es.symbol.to-primitive"], "core-js/stable/symbol/to-string-tag": ["es.symbol.to-string-tag", "es.json.to-string-tag", "es.math.to-string-tag", "es.object.to-string", "es.reflect.to-string-tag"], "core-js/stable/symbol/unscopables": ["es.symbol.unscopables"], "core-js/stable/typed-array": ["es.object.to-string", "es.typed-array.float32-array", "es.typed-array.float64-array", "es.typed-array.int8-array", "es.typed-array.int16-array", "es.typed-array.int32-array", "es.typed-array.uint8-array", "es.typed-array.uint8-clamped-array", "es.typed-array.uint16-array", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/copy-within": ["es.typed-array.copy-within"], "core-js/stable/typed-array/entries": ["es.typed-array.iterator"], "core-js/stable/typed-array/every": ["es.typed-array.every"], "core-js/stable/typed-array/fill": ["es.typed-array.fill"], "core-js/stable/typed-array/filter": ["es.typed-array.filter"], "core-js/stable/typed-array/find": ["es.typed-array.find"], "core-js/stable/typed-array/find-index": ["es.typed-array.find-index"], "core-js/stable/typed-array/float32-array": ["es.object.to-string", "es.typed-array.float32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/float64-array": ["es.object.to-string", "es.typed-array.float64-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/for-each": ["es.typed-array.for-each"], "core-js/stable/typed-array/from": ["es.typed-array.from"], "core-js/stable/typed-array/includes": ["es.typed-array.includes"], "core-js/stable/typed-array/index-of": ["es.typed-array.index-of"], "core-js/stable/typed-array/int16-array": ["es.object.to-string", "es.typed-array.int16-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/int32-array": ["es.object.to-string", "es.typed-array.int32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/int8-array": ["es.object.to-string", "es.typed-array.int8-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/iterator": ["es.typed-array.iterator"], "core-js/stable/typed-array/join": ["es.typed-array.join"], "core-js/stable/typed-array/keys": ["es.typed-array.iterator"], "core-js/stable/typed-array/last-index-of": ["es.typed-array.last-index-of"], "core-js/stable/typed-array/map": ["es.typed-array.map"], "core-js/stable/typed-array/of": ["es.typed-array.of"], "core-js/stable/typed-array/reduce": ["es.typed-array.reduce"], "core-js/stable/typed-array/reduce-right": ["es.typed-array.reduce-right"], "core-js/stable/typed-array/reverse": ["es.typed-array.reverse"], "core-js/stable/typed-array/set": ["es.typed-array.set"], "core-js/stable/typed-array/slice": ["es.typed-array.slice"], "core-js/stable/typed-array/some": ["es.typed-array.some"], "core-js/stable/typed-array/sort": ["es.typed-array.sort"], "core-js/stable/typed-array/subarray": ["es.typed-array.subarray"], "core-js/stable/typed-array/to-locale-string": ["es.typed-array.to-locale-string"], "core-js/stable/typed-array/to-string": ["es.typed-array.to-string"], "core-js/stable/typed-array/uint16-array": ["es.object.to-string", "es.typed-array.uint16-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/uint32-array": ["es.object.to-string", "es.typed-array.uint32-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/uint8-array": ["es.object.to-string", "es.typed-array.uint8-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/uint8-clamped-array": ["es.object.to-string", "es.typed-array.uint8-clamped-array", "es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.from", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.of", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string"], "core-js/stable/typed-array/values": ["es.typed-array.iterator"], "core-js/stable/unescape": ["es.unescape"], "core-js/stable/url": ["web.url", "web.url.to-json", "web.url-search-params"], "core-js/stable/url-search-params": ["web.url-search-params"], "core-js/stable/url/to-json": ["web.url.to-json"], "core-js/stable/weak-map": ["es.object.to-string", "es.weak-map", "web.dom-collections.iterator"], "core-js/stable/weak-set": ["es.object.to-string", "es.weak-set", "web.dom-collections.iterator"], "core-js/stage": ["es.map", "esnext.aggregate-error", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.array.last-index", "esnext.array.last-item", "esnext.array.unique-by", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.bigint.range", "esnext.composite-key", "esnext.composite-symbol", "esnext.global-this", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.delete-all", "esnext.map.emplace", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.math.umulh", "esnext.number.from-string", "esnext.number.range", "esnext.object.has-own", "esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values", "esnext.observable", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "esnext.reflect.define-metadata", "esnext.reflect.delete-metadata", "esnext.reflect.get-metadata", "esnext.reflect.get-metadata-keys", "esnext.reflect.get-own-metadata", "esnext.reflect.get-own-metadata-keys", "esnext.reflect.has-metadata", "esnext.reflect.has-own-metadata", "esnext.reflect.metadata", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.matcher", "esnext.symbol.metadata", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.symbol.replace-all", "esnext.typed-array.at", "esnext.typed-array.filter-out", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-map.emplace", "esnext.weak-map.upsert", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of", "web.url", "web.url.to-json", "web.url-search-params"], "core-js/stage/0": ["es.map", "esnext.aggregate-error", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.array.last-index", "esnext.array.last-item", "esnext.array.unique-by", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.bigint.range", "esnext.composite-key", "esnext.composite-symbol", "esnext.global-this", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.delete-all", "esnext.map.emplace", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.math.umulh", "esnext.number.from-string", "esnext.number.range", "esnext.object.has-own", "esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values", "esnext.observable", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.matcher", "esnext.symbol.metadata", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.symbol.replace-all", "esnext.typed-array.at", "esnext.typed-array.filter-out", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-map.emplace", "esnext.weak-map.upsert", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of", "web.url", "web.url.to-json", "web.url-search-params"], "core-js/stage/1": ["es.map", "esnext.aggregate-error", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.array.last-index", "esnext.array.last-item", "esnext.array.unique-by", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.bigint.range", "esnext.composite-key", "esnext.composite-symbol", "esnext.global-this", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.delete-all", "esnext.map.emplace", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.number.from-string", "esnext.number.range", "esnext.object.has-own", "esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values", "esnext.observable", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.matcher", "esnext.symbol.metadata", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.symbol.replace-all", "esnext.typed-array.at", "esnext.typed-array.filter-out", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-map.emplace", "esnext.weak-map.upsert", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of"], "core-js/stage/2": ["esnext.aggregate-error", "esnext.array.at", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.global-this", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.emplace", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.object.has-own", "esnext.promise.all-settled", "esnext.promise.any", "esnext.set.difference", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.metadata", "esnext.symbol.replace-all", "esnext.typed-array.at", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.weak-map.emplace", "esnext.weak-map.upsert"], "core-js/stage/3": ["esnext.aggregate-error", "esnext.array.at", "esnext.global-this", "esnext.object.has-own", "esnext.promise.all-settled", "esnext.promise.any", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.replace-all", "esnext.typed-array.at"], "core-js/stage/4": ["esnext.aggregate-error", "esnext.global-this", "esnext.promise.all-settled", "esnext.promise.any", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.replace-all"], "core-js/stage/pre": ["es.map", "esnext.aggregate-error", "esnext.array.at", "esnext.array.filter-out", "esnext.array.find-last", "esnext.array.find-last-index", "esnext.array.is-template-object", "esnext.array.last-index", "esnext.array.last-item", "esnext.array.unique-by", "esnext.async-iterator.constructor", "esnext.async-iterator.as-indexed-pairs", "esnext.async-iterator.drop", "esnext.async-iterator.every", "esnext.async-iterator.filter", "esnext.async-iterator.find", "esnext.async-iterator.flat-map", "esnext.async-iterator.for-each", "esnext.async-iterator.from", "esnext.async-iterator.map", "esnext.async-iterator.reduce", "esnext.async-iterator.some", "esnext.async-iterator.take", "esnext.async-iterator.to-array", "esnext.bigint.range", "esnext.composite-key", "esnext.composite-symbol", "esnext.global-this", "esnext.iterator.constructor", "esnext.iterator.as-indexed-pairs", "esnext.iterator.drop", "esnext.iterator.every", "esnext.iterator.filter", "esnext.iterator.find", "esnext.iterator.flat-map", "esnext.iterator.for-each", "esnext.iterator.from", "esnext.iterator.map", "esnext.iterator.reduce", "esnext.iterator.some", "esnext.iterator.take", "esnext.iterator.to-array", "esnext.map.delete-all", "esnext.map.emplace", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.from", "esnext.map.group-by", "esnext.map.includes", "esnext.map.key-by", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.of", "esnext.map.reduce", "esnext.map.some", "esnext.map.update", "esnext.map.update-or-insert", "esnext.map.upsert", "esnext.math.clamp", "esnext.math.deg-per-rad", "esnext.math.degrees", "esnext.math.fscale", "esnext.math.iaddh", "esnext.math.imulh", "esnext.math.isubh", "esnext.math.rad-per-deg", "esnext.math.radians", "esnext.math.scale", "esnext.math.seeded-prng", "esnext.math.signbit", "esnext.math.umulh", "esnext.number.from-string", "esnext.number.range", "esnext.object.has-own", "esnext.object.iterate-entries", "esnext.object.iterate-keys", "esnext.object.iterate-values", "esnext.observable", "esnext.promise.all-settled", "esnext.promise.any", "esnext.promise.try", "esnext.reflect.define-metadata", "esnext.reflect.delete-metadata", "esnext.reflect.get-metadata", "esnext.reflect.get-metadata-keys", "esnext.reflect.get-own-metadata", "esnext.reflect.get-own-metadata-keys", "esnext.reflect.has-metadata", "esnext.reflect.has-own-metadata", "esnext.reflect.metadata", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.from", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.of", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union", "esnext.string.at", "esnext.string.code-points", "esnext.string.match-all", "esnext.string.replace-all", "esnext.symbol.async-dispose", "esnext.symbol.dispose", "esnext.symbol.matcher", "esnext.symbol.metadata", "esnext.symbol.observable", "esnext.symbol.pattern-match", "esnext.symbol.replace-all", "esnext.typed-array.at", "esnext.typed-array.filter-out", "esnext.typed-array.find-last", "esnext.typed-array.find-last-index", "esnext.typed-array.unique-by", "esnext.weak-map.delete-all", "esnext.weak-map.from", "esnext.weak-map.of", "esnext.weak-map.emplace", "esnext.weak-map.upsert", "esnext.weak-set.add-all", "esnext.weak-set.delete-all", "esnext.weak-set.from", "esnext.weak-set.of", "web.url", "web.url.to-json", "web.url-search-params"], "core-js/web": ["web.dom-collections.for-each", "web.dom-collections.iterator", "web.immediate", "web.queue-microtask", "web.timers", "web.url", "web.url.to-json", "web.url-search-params"], "core-js/web/dom-collections": ["web.dom-collections.for-each", "web.dom-collections.iterator"], "core-js/web/immediate": ["web.immediate"], "core-js/web/queue-microtask": ["web.queue-microtask"], "core-js/web/timers": ["web.timers"], "core-js/web/url": ["web.url", "web.url.to-json", "web.url-search-params"], "core-js/web/url-search-params": ["web.url-search-params"] }, uV = oV, lV = new Set(["esnext.global-this", "esnext.string.match-all"]), cV = {};
      Object.keys(CG).forEach(function(e2, t2) {
        cV[e2] = t2;
      });
      var pV = function(e2, t2, r2, n2) {
        return r2 === void 0 && (r2 = t2[0]), { name: r2, pure: e2, global: t2.sort(function(e3, t3) {
          return cV[e3] - cV[t3];
        }), exclude: n2 };
      }, dV = function(e2) {
        return pV(null, [e2].concat(gV));
      }, fV = ["es.array.iterator", "web.dom-collections.iterator"], hV = ["es.string.iterator"].concat(fV), mV = ["es.object.to-string"].concat(fV), yV = ["es.object.to-string"].concat(c(hV)), gV = ["es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string", "es.object.to-string", "es.array.iterator", "es.array-buffer.slice"], vV = { from: pV(null, ["es.typed-array.from"]), of: pV(null, ["es.typed-array.of"]) }, bV = ["es.promise", "es.object.to-string"], EV = [].concat(bV, c(hV)), xV = ["es.map", "esnext.map.delete-all", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.includes", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.reduce", "esnext.map.some", "esnext.map.update"].concat(c(yV)), DV = ["es.set", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union"].concat(c(yV)), AV = ["es.weak-map", "esnext.weak-map.delete-all"].concat(c(yV)), wV = ["es.weak-set", "esnext.weak-set.add-all", "esnext.weak-set.delete-all"].concat(c(yV)), CV = ["web.url"].concat(c(yV)), SV = { AggregateError: pV("aggregate-error", ["esnext.aggregate-error"].concat(c(hV))), ArrayBuffer: pV(null, ["es.array-buffer.constructor", "es.array-buffer.slice", "es.object.to-string"]), DataView: pV(null, ["es.data-view", "es.array-buffer.slice", "es.object.to-string"]), Date: pV(null, ["es.date.to-string"]), Float32Array: dV("es.typed-array.float32-array"), Float64Array: dV("es.typed-array.float64-array"), Int8Array: dV("es.typed-array.int8-array"), Int16Array: dV("es.typed-array.int16-array"), Int32Array: dV("es.typed-array.int32-array"), Uint8Array: dV("es.typed-array.uint8-array"), Uint8ClampedArray: dV("es.typed-array.uint8-clamped-array"), Uint16Array: dV("es.typed-array.uint16-array"), Uint32Array: dV("es.typed-array.uint32-array"), Map: pV("map/index", xV), Number: pV(null, ["es.number.constructor"]), Observable: pV("observable/index", ["esnext.observable", "esnext.symbol.observable", "es.object.to-string"].concat(c(yV))), Promise: pV("promise/index", bV), RegExp: pV(null, ["es.regexp.constructor", "es.regexp.exec", "es.regexp.to-string"]), Set: pV("set/index", DV), Symbol: pV("symbol/index", ["es.symbol", "es.symbol.description", "es.object.to-string"]), URL: pV("url/index", ["web.url"].concat(c(CV))), URLSearchParams: pV("url-search-params/index", CV), WeakMap: pV("weak-map/index", AV), WeakSet: pV("weak-set/index", wV), clearImmediate: pV("clear-immediate", ["web.immediate"]), compositeKey: pV("composite-key", ["esnext.composite-key"]), compositeSymbol: pV("composite-symbol", ["esnext.composite-symbol"]), fetch: pV(null, bV), globalThis: pV("global-this", ["es.global-this"]), parseFloat: pV("parse-float", ["es.parse-float"]), parseInt: pV("parse-int", ["es.parse-int"]), queueMicrotask: pV("queue-microtask", ["web.queue-microtask"]), setImmediate: pV("set-immediate", ["web.immediate"]), setInterval: pV("set-interval", ["web.timers"]), setTimeout: pV("set-timeout", ["web.timers"]) }, TV = { Array: { from: pV("array/from", ["es.array.from", "es.string.iterator"]), isArray: pV("array/is-array", ["es.array.is-array"]), of: pV("array/of", ["es.array.of"]) }, ArrayBuffer: { isView: pV(null, ["es.array-buffer.is-view"]) }, Date: { now: pV("date/now", ["es.date.now"]) }, JSON: { stringify: pV("json/stringify", [], "es.symbol") }, Math: { DEG_PER_RAD: pV("math/deg-per-rad", ["esnext.math.deg-per-rad"]), RAD_PER_DEG: pV("math/rad-per-deg", ["esnext.math.rad-per-deg"]), acosh: pV("math/acosh", ["es.math.acosh"]), asinh: pV("math/asinh", ["es.math.asinh"]), atanh: pV("math/atanh", ["es.math.atanh"]), cbrt: pV("math/cbrt", ["es.math.cbrt"]), clamp: pV("math/clamp", ["esnext.math.clamp"]), clz32: pV("math/clz32", ["es.math.clz32"]), cosh: pV("math/cosh", ["es.math.cosh"]), degrees: pV("math/degrees", ["esnext.math.degrees"]), expm1: pV("math/expm1", ["es.math.expm1"]), fround: pV("math/fround", ["es.math.fround"]), fscale: pV("math/fscale", ["esnext.math.fscale"]), hypot: pV("math/hypot", ["es.math.hypot"]), iaddh: pV("math/iaddh", ["esnext.math.iaddh"]), imul: pV("math/imul", ["es.math.imul"]), imulh: pV("math/imulh", ["esnext.math.imulh"]), isubh: pV("math/isubh", ["esnext.math.isubh"]), log10: pV("math/log10", ["es.math.log10"]), log1p: pV("math/log1p", ["es.math.log1p"]), log2: pV("math/log2", ["es.math.log2"]), radians: pV("math/radians", ["esnext.math.radians"]), scale: pV("math/scale", ["esnext.math.scale"]), seededPRNG: pV("math/seeded-prng", ["esnext.math.seeded-prng"]), sign: pV("math/sign", ["es.math.sign"]), signbit: pV("math/signbit", ["esnext.math.signbit"]), sinh: pV("math/sinh", ["es.math.sinh"]), tanh: pV("math/tanh", ["es.math.tanh"]), trunc: pV("math/trunc", ["es.math.trunc"]), umulh: pV("math/umulh", ["esnext.math.umulh"]) }, Map: { from: pV(null, ["esnext.map.from"].concat(c(xV))), groupBy: pV(null, ["esnext.map.group-by"].concat(c(xV))), keyBy: pV(null, ["esnext.map.key-by"].concat(c(xV))), of: pV(null, ["esnext.map.of"].concat(c(xV))) }, Number: { EPSILON: pV("number/epsilon", ["es.number.epsilon"]), MAX_SAFE_INTEGER: pV("number/max-safe-integer", ["es.number.max-safe-integer"]), MIN_SAFE_INTEGER: pV("number/min-safe-integer", ["es.number.min-safe-integer"]), fromString: pV("number/from-string", ["esnext.number.from-string"]), isFinite: pV("number/is-finite", ["es.number.is-finite"]), isInteger: pV("number/is-integer", ["es.number.is-integer"]), isNaN: pV("number/is-nan", ["es.number.is-nan"]), isSafeInteger: pV("number/is-safe-integer", ["es.number.is-safe-integer"]), parseFloat: pV("number/parse-float", ["es.number.parse-float"]), parseInt: pV("number/parse-int", ["es.number.parse-int"]) }, Object: { assign: pV("object/assign", ["es.object.assign"]), create: pV("object/create", ["es.object.create"]), defineProperties: pV("object/define-properties", ["es.object.define-properties"]), defineProperty: pV("object/define-property", ["es.object.define-property"]), entries: pV("object/entries", ["es.object.entries"]), freeze: pV("object/freeze", ["es.object.freeze"]), fromEntries: pV("object/from-entries", ["es.object.from-entries", "es.array.iterator"]), getOwnPropertyDescriptor: pV("object/get-own-property-descriptor", ["es.object.get-own-property-descriptor"]), getOwnPropertyDescriptors: pV("object/get-own-property-descriptors", ["es.object.get-own-property-descriptors"]), getOwnPropertyNames: pV("object/get-own-property-names", ["es.object.get-own-property-names"]), getOwnPropertySymbols: pV("object/get-own-property-symbols", ["es.symbol"]), getPrototypeOf: pV("object/get-prototype-of", ["es.object.get-prototype-of"]), is: pV("object/is", ["es.object.is"]), isExtensible: pV("object/is-extensible", ["es.object.is-extensible"]), isFrozen: pV("object/is-frozen", ["es.object.is-frozen"]), isSealed: pV("object/is-sealed", ["es.object.is-sealed"]), keys: pV("object/keys", ["es.object.keys"]), preventExtensions: pV("object/prevent-extensions", ["es.object.prevent-extensions"]), seal: pV("object/seal", ["es.object.seal"]), setPrototypeOf: pV("object/set-prototype-of", ["es.object.set-prototype-of"]), values: pV("object/values", ["es.object.values"]) }, Promise: { all: pV(null, EV), allSettled: pV(null, ["es.promise.all-settled"].concat(c(EV))), any: pV(null, ["esnext.promise.any"].concat(c(EV))), race: pV(null, EV), try: pV(null, ["esnext.promise.try"].concat(c(EV))) }, Reflect: { apply: pV("reflect/apply", ["es.reflect.apply"]), construct: pV("reflect/construct", ["es.reflect.construct"]), defineMetadata: pV("reflect/define-metadata", ["esnext.reflect.define-metadata"]), defineProperty: pV("reflect/define-property", ["es.reflect.define-property"]), deleteMetadata: pV("reflect/delete-metadata", ["esnext.reflect.delete-metadata"]), deleteProperty: pV("reflect/delete-property", ["es.reflect.delete-property"]), get: pV("reflect/get", ["es.reflect.get"]), getMetadata: pV("reflect/get-metadata", ["esnext.reflect.get-metadata"]), getMetadataKeys: pV("reflect/get-metadata-keys", ["esnext.reflect.get-metadata-keys"]), getOwnMetadata: pV("reflect/get-own-metadata", ["esnext.reflect.get-own-metadata"]), getOwnMetadataKeys: pV("reflect/get-own-metadata-keys", ["esnext.reflect.get-own-metadata-keys"]), getOwnPropertyDescriptor: pV("reflect/get-own-property-descriptor", ["es.reflect.get-own-property-descriptor"]), getPrototypeOf: pV("reflect/get-prototype-of", ["es.reflect.get-prototype-of"]), has: pV("reflect/has", ["es.reflect.has"]), hasMetadata: pV("reflect/has-metadata", ["esnext.reflect.has-metadata"]), hasOwnMetadata: pV("reflect/has-own-metadata", ["esnext.reflect.has-own-metadata"]), isExtensible: pV("reflect/is-extensible", ["es.reflect.is-extensible"]), metadata: pV("reflect/metadata", ["esnext.reflect.metadata"]), ownKeys: pV("reflect/own-keys", ["es.reflect.own-keys"]), preventExtensions: pV("reflect/prevent-extensions", ["es.reflect.prevent-extensions"]), set: pV("reflect/set", ["es.reflect.set"]), setPrototypeOf: pV("reflect/set-prototype-of", ["es.reflect.set-prototype-of"]) }, Set: { from: pV(null, ["esnext.set.from"].concat(c(DV))), of: pV(null, ["esnext.set.of"].concat(c(DV))) }, String: { fromCodePoint: pV("string/from-code-point", ["es.string.from-code-point"]), raw: pV("string/raw", ["es.string.raw"]) }, Symbol: { asyncIterator: pV("symbol/async-iterator", ["es.symbol.async-iterator"]), dispose: pV("symbol/dispose", ["esnext.symbol.dispose"]), for: pV("symbol/for", [], "es.symbol"), hasInstance: pV("symbol/has-instance", ["es.symbol.has-instance", "es.function.has-instance"]), isConcatSpreadable: pV("symbol/is-concat-spreadable", ["es.symbol.is-concat-spreadable", "es.array.concat"]), iterator: pV("symbol/iterator", ["es.symbol.iterator"].concat(c(yV))), keyFor: pV("symbol/key-for", [], "es.symbol"), match: pV("symbol/match", ["es.symbol.match", "es.string.match"]), observable: pV("symbol/observable", ["esnext.symbol.observable"]), patternMatch: pV("symbol/pattern-match", ["esnext.symbol.pattern-match"]), replace: pV("symbol/replace", ["es.symbol.replace", "es.string.replace"]), search: pV("symbol/search", ["es.symbol.search", "es.string.search"]), species: pV("symbol/species", ["es.symbol.species", "es.array.species"]), split: pV("symbol/split", ["es.symbol.split", "es.string.split"]), toPrimitive: pV("symbol/to-primitive", ["es.symbol.to-primitive", "es.date.to-primitive"]), toStringTag: pV("symbol/to-string-tag", ["es.symbol.to-string-tag", "es.object.to-string", "es.math.to-string-tag", "es.json.to-string-tag"]), unscopables: pV("symbol/unscopables", ["es.symbol.unscopables"]) }, WeakMap: { from: pV(null, ["esnext.weak-map.from"].concat(c(AV))), of: pV(null, ["esnext.weak-map.of"].concat(c(AV))) }, WeakSet: { from: pV(null, ["esnext.weak-set.from"].concat(c(wV))), of: pV(null, ["esnext.weak-set.of"].concat(c(wV))) }, Int8Array: vV, Uint8Array: vV, Uint8ClampedArray: vV, Int16Array: vV, Uint16Array: vV, Int32Array: vV, Uint32Array: vV, Float32Array: vV, Float64Array: vV }, jV = { at: pV("instance/at", ["esnext.string.at"]), anchor: pV(null, ["es.string.anchor"]), big: pV(null, ["es.string.big"]), bind: pV("instance/bind", ["es.function.bind"]), blink: pV(null, ["es.string.blink"]), bold: pV(null, ["es.string.bold"]), codePointAt: pV("instance/code-point-at", ["es.string.code-point-at"]), codePoints: pV("instance/code-points", ["esnext.string.code-points"]), concat: pV("instance/concat", ["es.array.concat"], void 0, ["String"]), copyWithin: pV("instance/copy-within", ["es.array.copy-within"]), description: pV(null, ["es.symbol", "es.symbol.description"]), endsWith: pV("instance/ends-with", ["es.string.ends-with"]), entries: pV("instance/entries", mV), every: pV("instance/every", ["es.array.every"]), exec: pV(null, ["es.regexp.exec"]), fill: pV("instance/fill", ["es.array.fill"]), filter: pV("instance/filter", ["es.array.filter"]), finally: pV(null, ["es.promise.finally"].concat(bV)), find: pV("instance/find", ["es.array.find"]), findIndex: pV("instance/find-index", ["es.array.find-index"]), fixed: pV(null, ["es.string.fixed"]), flags: pV("instance/flags", ["es.regexp.flags"]), flatMap: pV("instance/flat-map", ["es.array.flat-map", "es.array.unscopables.flat-map"]), flat: pV("instance/flat", ["es.array.flat"]), fontcolor: pV(null, ["es.string.fontcolor"]), fontsize: pV(null, ["es.string.fontsize"]), forEach: pV("instance/for-each", ["es.array.for-each", "web.dom-collections.for-each"]), includes: pV("instance/includes", ["es.array.includes", "es.string.includes"]), indexOf: pV("instance/index-of", ["es.array.index-of"]), italic: pV(null, ["es.string.italics"]), join: pV(null, ["es.array.join"]), keys: pV("instance/keys", mV), lastIndex: pV(null, ["esnext.array.last-index"]), lastIndexOf: pV("instance/last-index-of", ["es.array.last-index-of"]), lastItem: pV(null, ["esnext.array.last-item"]), link: pV(null, ["es.string.link"]), map: pV("instance/map", ["es.array.map"]), match: pV(null, ["es.string.match", "es.regexp.exec"]), matchAll: pV("instance/match-all", ["es.string.match-all"]), name: pV(null, ["es.function.name"]), padEnd: pV("instance/pad-end", ["es.string.pad-end"]), padStart: pV("instance/pad-start", ["es.string.pad-start"]), reduce: pV("instance/reduce", ["es.array.reduce"]), reduceRight: pV("instance/reduce-right", ["es.array.reduce-right"]), repeat: pV("instance/repeat", ["es.string.repeat"]), replace: pV(null, ["es.string.replace", "es.regexp.exec"]), replaceAll: pV("instance/replace-all", ["esnext.string.replace-all"]), reverse: pV("instance/reverse", ["es.array.reverse"]), search: pV(null, ["es.string.search", "es.regexp.exec"]), slice: pV("instance/slice", ["es.array.slice"]), small: pV(null, ["es.string.small"]), some: pV("instance/some", ["es.array.some"]), sort: pV("instance/sort", ["es.array.sort"]), splice: pV("instance/splice", ["es.array.splice"]), split: pV(null, ["es.string.split", "es.regexp.exec"]), startsWith: pV("instance/starts-with", ["es.string.starts-with"]), strike: pV(null, ["es.string.strike"]), sub: pV(null, ["es.string.sub"]), sup: pV(null, ["es.string.sup"]), toFixed: pV(null, ["es.number.to-fixed"]), toISOString: pV(null, ["es.date.to-iso-string"]), toJSON: pV(null, ["es.date.to-json", "web.url.to-json"]), toPrecision: pV(null, ["es.number.to-precision"]), toString: pV(null, ["es.object.to-string", "es.regexp.to-string", "es.date.to-string"]), trim: pV("instance/trim", ["es.string.trim"]), trimEnd: pV("instance/trim-end", ["es.string.trim-end"]), trimLeft: pV("instance/trim-left", ["es.string.trim-start"]), trimRight: pV("instance/trim-right", ["es.string.trim-end"]), trimStart: pV("instance/trim-start", ["es.string.trim-start"]), values: pV("instance/values", mV), __defineGetter__: pV(null, ["es.object.define-getter"]), __defineSetter__: pV(null, ["es.object.define-setter"]), __lookupGetter__: pV(null, ["es.object.lookup-getter"]), __lookupSetter__: pV(null, ["es.object.lookup-setter"]) }, PV = new Set(["es.object.to-string", "es.object.define-getter", "es.object.define-setter", "es.object.lookup-getter", "es.object.lookup-setter", "es.regexp.exec"]), IV = t.types;
      function FV(e2, t2) {
        var r2, n2, s2 = e2.node.object;
        IV.isIdentifier(s2) ? (r2 = s2, n2 = IV.cloneNode(s2)) : (r2 = e2.scope.generateDeclaredUidIdentifier("context"), n2 = IV.assignmentExpression("=", IV.cloneNode(r2), s2)), e2.replaceWith(IV.memberExpression(IV.callExpression(t2, [n2]), IV.identifier("call"))), e2.parentPath.unshiftContainer("arguments", r2);
      }
      function kV(e2) {
        return "core-js/modules/" + e2 + ".js";
      }
      function OV(e2, t2, r2) {
        return t2 ? t2 + "/core-js/" + e2 + r2 : "core-js-pure/features/" + e2 + ".js";
      }
      var RV = t.types, NV = function(e2, t2) {
        if (t2(e2))
          return true;
        if (!e2.startsWith("es."))
          return false;
        var r2 = "esnext." + e2.slice(3);
        return !!CG[r2] && t2(r2);
      }, BV = uG(function(e2, t2) {
        var r2 = e2.getUtils, n2 = e2.method, s2 = e2.shouldInjectPolyfill, a2 = e2.createMetaResolver, i2 = e2.debug, o2 = e2.babel, u2 = t2.version, l2 = u2 === void 0 ? 3 : u2, c2 = t2.proposals, p2 = t2.shippedProposals, d2 = t2["#__secret_key__@babel/runtime__compatibility"], h2 = (d2 = d2 === void 0 ? {} : d2).useBabelRuntime, m2 = d2.ext, y2 = m2 === void 0 ? ".js" : m2, g2 = o2.caller(function(e3) {
          return (e3 == null ? void 0 : e3.name) === "babel-loader";
        }), v2 = a2({ global: SV, static: TV, instance: jV }), b2 = new Set(iV(l2)), E2 = h2 ? c2 ? h2 + "/core-js" : h2 + "/core-js-stable" : c2 ? "core-js-pure/features" : "core-js-pure/stable";
        function x2(e3, t3) {
          return !!s2(e3) && (i2(e3), t3.injectGlobalImport(kV(e3)), true);
        }
        function D2(e3, t3, r3) {
          r3 === void 0 && (r3 = true);
          for (var n3, s3 = f(e3); !(n3 = s3()).done; ) {
            var a3 = n3.value;
            r3 ? NV(a3, function(e4) {
              return x2(e4, t3);
            }) : x2(a3, t3);
          }
        }
        function A2(e3, t3, r3, n3) {
          if (e3.pure && !(n3 && e3.exclude && e3.exclude.includes(n3)) && NV(e3.name, s2))
            return r3.injectDefaultImport(E2 + "/" + e3.pure + y2, t3);
        }
        return { name: "corejs3", polyfills: CG, filterPolyfills: function(e3) {
          return !!b2.has(e3) && (!(!c2 && n2 !== "entry-global") || (!(!p2 || !lV.has(e3)) || !e3.startsWith("esnext.")));
        }, entryGlobal: function(e3, t3, r3) {
          if (e3.kind === "import") {
            var n3, a3 = (typeof (n3 = e3.source) == "string" && (n3 = n3.replace(/\\/g, "/").replace(/(\/(index)?)?(\.js)?$/i, "").toLowerCase()), hasOwnProperty.call(uV, n3) && uV[n3]);
            a3 && (a3.length === 1 && e3.source === kV(a3[0]) && s2(a3[0]) ? i2(null) : (D2(a3, t3, false), r3.remove()));
          }
        }, usageGlobal: function(e3, t3) {
          var r3 = v2(e3);
          if (r3) {
            var n3 = r3.desc.global;
            if (r3.kind !== "global" && e3.object && e3.placement === "prototype") {
              var s3 = e3.object.toLowerCase();
              n3 = n3.filter(function(e4) {
                return e4.includes(s3) || PV.has(e4);
              });
            }
            D2(n3, t3);
          }
        }, usagePure: function(e3, t3, r3) {
          if (e3.kind !== "in") {
            if (!r3.parentPath.isUnaryExpression({ operator: "delete" })) {
              var n3;
              if (e3.kind === "property") {
                if (!r3.isMemberExpression())
                  return;
                if (!r3.isReferenced())
                  return;
                if (n3 = r3.parentPath.isCallExpression({ callee: r3.node }), e3.key === "Symbol.iterator") {
                  if (!s2("es.symbol.iterator"))
                    return;
                  return void (n3 ? r3.parent.arguments.length === 0 ? (r3.parentPath.replaceWith(RV.callExpression(t3.injectDefaultImport(OV("get-iterator", h2, y2), "getIterator"), [r3.node.object])), r3.skip()) : FV(r3, t3.injectDefaultImport(OV("get-iterator-method", h2, y2), "getIteratorMethod")) : r3.replaceWith(RV.callExpression(t3.injectDefaultImport(OV("get-iterator-method", h2, y2), "getIteratorMethod"), [r3.node.object])));
                }
              }
              var a3 = v2(e3);
              if (a3) {
                if (h2 && a3.desc.pure && a3.desc.pure.slice(-6) === "/index" && (a3 = Object.assign(Object.assign({}, a3), {}, { desc: Object.assign(Object.assign({}, a3.desc), {}, { pure: a3.desc.pure.slice(0, -6) }) })), a3.kind === "global") {
                  var i3 = A2(a3.desc, a3.name, t3);
                  i3 && r3.replaceWith(i3);
                } else if (a3.kind === "static") {
                  var o3 = A2(a3.desc, a3.name, t3, e3.object);
                  o3 && r3.replaceWith(o3);
                } else if (a3.kind === "instance") {
                  var u3 = A2(a3.desc, a3.name + "InstanceProperty", t3, e3.object);
                  if (!u3)
                    return;
                  n3 ? FV(r3, u3) : r3.replaceWith(RV.callExpression(u3, [r3.node.object]));
                }
              }
            }
          } else
            e3.key === "Symbol.iterator" && r3.replaceWith(RV.callExpression(t3.injectDefaultImport(OV("is-iterable", h2, y2), "isIterable"), [r3.node.right]));
        }, visitor: n2 === "usage-global" && { CallExpression: function(e3) {
          if (e3.get("callee").isImport()) {
            var t3 = r2(e3);
            D2(g2 ? EV : bV, t3);
          }
        }, Function: function(e3) {
          e3.node.async && D2(bV, r2(e3));
        }, "ForOfStatement|ArrayPattern": function(e3) {
          D2(hV, r2(e3));
        }, SpreadElement: function(e3) {
          e3.parentPath.isObjectExpression() || D2(hV, r2(e3));
        }, YieldExpression: function(e3) {
          e3.node.delegate && D2(hV, r2(e3));
        } } };
      }), _V = uG(function(e2, t2) {
        var r2 = e2.debug, n2 = t2["#__secret_key__@babel/runtime__compatibility"], s2 = (n2 = n2 === void 0 ? {} : n2).useBabelRuntime, a2 = s2 ? s2 + "/regenerator" : "regenerator-runtime";
        return { name: "regenerator", polyfills: ["regenerator-runtime"], usageGlobal: function(e3, t3) {
          LV(e3) && (r2("regenerator-runtime"), t3.injectGlobalImport("regenerator-runtime/runtime.js"));
        }, usagePure: function(e3, t3, r3) {
          LV(e3) && r3.replaceWith(t3.injectDefaultImport(a2, "regenerator-runtime"));
        } };
      }), LV = function(e2) {
        return e2.kind === "global" && e2.name === "regeneratorRuntime";
      }, MV = AG.default || AG, UV = BV.default || BV, GV = _V.default || _V, VV = "#__secret_key__@babel/runtime__compatibility";
      function WV(e2) {
        return !(e2 == null || !e2.supportsStaticESM);
      }
      var HV, XV = jF(function(e2, t2, r2) {
        var n2, s2, a2, i2, o2;
        e2.assertVersion(7);
        var u2, l2 = t2.corejs, c2 = t2.helpers, p2 = c2 === void 0 || c2, d2 = t2.regenerator, f2 = d2 === void 0 || d2, h2 = t2.useESModules, m2 = h2 !== void 0 && h2, y2 = t2.version, g2 = y2 === void 0 ? "7.0.0-beta.0" : y2, v2 = t2.absoluteRuntime, b2 = v2 !== void 0 && v2, E2 = false;
        typeof l2 == "object" && l2 !== null ? (u2 = l2.version, E2 = Boolean(l2.proposals)) : u2 = l2;
        var x2 = !!u2 && Number(u2);
        if (![false, 2, 3].includes(x2))
          throw new Error("The `core-js` version must be false, 2 or 3, but got " + JSON.stringify(u2) + ".");
        if (E2 && (!x2 || x2 < 3))
          throw new Error("The 'proposals' option is only supported when using 'corejs: 3'");
        if (typeof f2 != "boolean")
          throw new Error("The 'regenerator' option must be undefined, or a boolean.");
        if (typeof p2 != "boolean")
          throw new Error("The 'helpers' option must be undefined, or a boolean.");
        if (typeof m2 != "boolean" && m2 !== "auto")
          throw new Error("The 'useESModules' option must be undefined, or a boolean, or 'auto'.");
        if (typeof b2 != "boolean" && typeof b2 != "string")
          throw new Error("The 'absoluteRuntime' option must be undefined, a boolean, or a string.");
        if (typeof g2 != "string")
          throw new Error("The 'version' option must be a version string.");
        var D2 = function(e3, t3) {
          return !t3 || (LU.valid(t3) && (t3 = "^" + t3), !LU.intersects("<" + e3, t3) && !LU.intersects(">=8.0.0", t3));
        }("7.13.0", g2);
        function A2(e3, t3) {
          return Object.prototype.hasOwnProperty.call(e3, t3);
        }
        if (A2(t2, "useBuiltIns"))
          throw t2.useBuiltIns ? new Error("The 'useBuiltIns' option has been removed. The @babel/runtime module now uses builtins by default.") : new Error("The 'useBuiltIns' option has been removed. Use the 'corejs'option to polyfill with `core-js` via @babel/runtime.");
        if (A2(t2, "polyfill"))
          throw t2.polyfill === false ? new Error("The 'polyfill' option has been removed. The @babel/runtime module now skips polyfilling by default.") : new Error("The 'polyfill' option has been removed. Use the 'corejs'option to polyfill with `core-js` via @babel/runtime.");
        if (A2(t2, "moduleName"))
          throw new Error("The 'moduleName' option has been removed. @babel/transform-runtime no longer supports arbitrary runtimes. If you were using this to set an absolute path for Babel's standard runtimes, please use the 'absoluteRuntime' option.");
        var w2 = m2 === "auto" ? e2.caller(WV) : m2, C2 = x2 === 2, S2 = x2 === 3, T2 = ["interopRequireWildcard", "interopRequireDefault"], j2 = function(e3, t3, r3) {
          if (r3 === false)
            return e3;
          throw new Error("The 'absoluteRuntime' option is not supported when using @babel/standalone.");
        }(S2 ? "@babel/runtime-corejs3" : C2 ? "@babel/runtime-corejs2" : "@babel/runtime", 0, b2);
        function P2(e3, t3, r3) {
          return function(n3, s3, a3) {
            return Object.assign({}, e3(n3, t3, a3), { inherits: r3 });
          };
        }
        function I2(e3) {
          if (f2)
            return function(t3, r3, n3) {
              return GV(t3, e3, n3);
            };
        }
        var F2 = b2 ? ".js" : "";
        return { name: "transform-runtime", inherits: C2 ? P2(MV, (n2 = { method: "usage-pure" }, n2[VV] = { runtimeVersion: g2, useBabelRuntime: j2, ext: F2 }, n2), I2((s2 = { method: "usage-pure" }, s2[VV] = { useBabelRuntime: j2 }, s2))) : S2 ? P2(UV, (a2 = { method: "usage-pure", version: 3, proposals: E2 }, a2[VV] = { useBabelRuntime: j2, ext: F2 }, a2), I2((i2 = { method: "usage-pure" }, i2[VV] = { useBabelRuntime: j2 }, i2))) : I2((o2 = { method: "usage-pure" }, o2[VV] = { useBabelRuntime: j2 }, o2)), pre: function(e3) {
          if (p2) {
            e3.set("helperGenerator", function(r3) {
              if (!e3.availableHelper || e3.availableHelper(r3, g2)) {
                var n3 = T2.indexOf(r3) !== -1 && !EE(e3.path) ? 4 : void 0, s3 = w2 && e3.path.node.sourceType === "module" ? "helpers/esm" : "helpers";
                return function(r4, n4, s4, a3) {
                  a3 === void 0 && (a3 = false);
                  var i3 = EE(e3.path), o3 = r4 + ":" + n4 + ":" + (i3 || ""), u3 = t3.get(o3);
                  u3 ? u3 = Ju(u3) : (u3 = function(e4, t4, r5) {
                    return new xE(e4).addDefault(t4, r5);
                  }(e3.path, r4, { importedInterop: a3 && D2 ? "compiled" : "uncompiled", nameHint: n4, blockHoist: s4 }), t3.set(o3, u3));
                  return u3;
                }(j2 + "/" + s3 + "/" + r3, r3, n3, true);
              }
            });
            var t3 = new Map();
          }
        } };
      }), qV = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-shorthand-properties", visitor: { ObjectMethod: function(e3) {
          var t2 = e3.node;
          if (t2.kind === "method") {
            var r2 = xs(null, t2.params, t2.body, t2.generator, t2.async);
            r2.returnType = t2.returnType;
            var n2 = rc(t2);
            R(n2, { value: "__proto__" }) ? e3.replaceWith(Bs(n2, r2, true)) : e3.replaceWith(Bs(t2.key, r2, t2.computed));
          }
        }, ObjectProperty: function(e3) {
          var t2 = e3.node;
          if (t2.shorthand) {
            var r2 = rc(t2);
            R(r2, { value: "__proto__" }) ? e3.replaceWith(Bs(r2, t2.value, true)) : t2.shorthand = false;
          }
        } } };
      }), $V = jF(function(e2, t2) {
        var r2, n2;
        e2.assertVersion(7);
        var s2 = (r2 = e2.assumption("iterableIsArray")) != null ? r2 : t2.loose, a2 = (n2 = t2.allowArrayLike) != null ? n2 : e2.assumption("arrayLikeIsIterable");
        function i2(e3, t3) {
          return s2 && !F(e3.argument, { name: "arguments" }) ? e3.argument : t3.toArray(e3.argument, true, a2);
        }
        function o2(e3) {
          for (var t3 = 0; t3 < e3.length; t3++)
            if (be(e3[t3]))
              return true;
          return false;
        }
        function u2(e3, t3) {
          return e3.length ? (t3.push(ts(e3)), []) : e3;
        }
        function l2(e3, t3, r3) {
          for (var n3, s3 = [], a3 = [], o3 = f(e3); !(n3 = o3()).done; ) {
            var l3 = n3.value;
            if (be(l3)) {
              a3 = u2(a3, s3);
              var c2 = i2(l3, t3);
              m(c2) && c2.elements.some(function(e4) {
                return e4 === null;
              }) && (c2 = ls(r3.addHelper("arrayWithoutHoles"), [c2])), s3.push(c2);
            } else
              a3.push(l3);
          }
          return u2(a3, s3), s3;
        }
        return { name: "transform-spread", visitor: { ArrayExpression: function(e3) {
          var t3 = e3.node, r3 = e3.scope, n3 = t3.elements;
          if (o2(n3)) {
            var s3 = l2(n3, r3, this), a3 = s3[0];
            s3.length !== 1 || a3 === n3[0].argument ? (m(a3) ? s3.shift() : a3 = ts([]), e3.replaceWith(ls(Fs2(a3, Ds("concat")), s3))) : e3.replaceWith(a3);
          }
        }, CallExpression: function(e3) {
          var t3 = e3.node, r3 = e3.scope, n3 = t3.arguments;
          if (o2(n3)) {
            var s3 = RR(e3.get("callee"));
            if (s3.isSuper())
              throw e3.buildCodeFrameError("It's not possible to compile spread arguments in `super()` without compiling classes.\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.");
            var a3, i3 = r3.buildUndefinedNode();
            t3.arguments = [];
            var u3 = (a3 = n3.length === 1 && n3[0].argument.name === "arguments" ? [n3[0].argument] : l2(n3, r3, this)).shift();
            a3.length ? t3.arguments.push(ls(Fs2(u3, Ds("concat")), a3)) : t3.arguments.push(u3);
            var c2 = s3.node;
            if (s3.isMemberExpression()) {
              var p2 = r3.maybeGenerateMemoised(c2.object);
              p2 ? (c2.object = rs("=", p2, c2.object), i3 = p2) : i3 = Ju(c2.object);
            }
            t3.callee = Fs2(t3.callee, Ds("apply")), Ee(i3) && (i3 = Ws()), t3.arguments.unshift(Ju(i3));
          }
        }, NewExpression: function(e3) {
          var t3 = e3.node, r3 = e3.scope, n3 = t3.arguments;
          if (o2(n3)) {
            var s3 = l2(n3, r3, this), a3 = s3.shift();
            n3 = s3.length ? ls(Fs2(a3, Ds("concat")), s3) : a3, e3.replaceWith(ls(e3.hub.addHelper("construct"), [t3.callee, n3]));
          }
        } } };
      }), KV = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-sticky-regex", visitor: { RegExpLiteral: function(e3) {
          var t2 = e3.node;
          t2.flags.includes("y") && e3.replaceWith(ks(Ds("RegExp"), [Cs(t2.pattern), Cs(t2.flags)]));
        } } };
      }), zV = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-strict-mode", visitor: { Program: function(e3) {
          for (var t2 = 0, r2 = e3.node.directives; t2 < r2.length; t2++) {
            if (r2[t2].value.value === "use strict")
              return;
          }
          e3.unshiftContainer("directives", as(is("use strict")));
        } } };
      }), JV = jF(function(e2, t2) {
        var r2, n2;
        e2.assertVersion(7);
        var s2 = (r2 = e2.assumption("ignoreToPrimitiveHint")) != null ? r2 : t2.loose, a2 = (n2 = e2.assumption("mutableTemplateObject")) != null ? n2 : t2.loose, i2 = "taggedTemplateLiteral";
        return a2 && (i2 += "Loose"), { name: "transform-template-literals", visitor: { TaggedTemplateExpression: function(e3) {
          for (var t3 = e3.node, r3 = t3.quasi, n3 = [], s3 = [], a3 = true, o2 = 0, l2 = r3.quasis; o2 < l2.length; o2++) {
            var p2 = l2[o2].value, d2 = p2.raw, f2 = p2.cooked, h2 = f2 == null ? e3.scope.buildUndefinedNode() : Cs(f2);
            n3.push(h2), s3.push(Cs(d2)), d2 !== f2 && (a3 = false);
          }
          var m2 = [ts(n3)];
          a3 || m2.push(ts(s3));
          var y2 = e3.scope.generateUidIdentifier("templateObject");
          e3.scope.getProgramParent().push({ id: Ju(y2) }), e3.replaceWith(ls(t3.tag, [Eg.expression.ast(HV || (HV = u(["\n              ", " || (\n                ", " = ", "(", ")\n              )\n            "])), Ju(y2), y2, this.addHelper(i2), m2)].concat(c(r3.expressions))));
        }, TemplateLiteral: function(e3) {
          for (var t3 = [], r3 = e3.get("expressions"), n3 = 0, a3 = 0, i3 = e3.node.quasis; a3 < i3.length; a3++) {
            var o2 = i3[a3];
            if (o2.value.cooked && t3.push(Cs(o2.value.cooked)), n3 < r3.length) {
              var u2 = r3[n3++].node;
              R(u2, { value: "" }) || t3.push(u2);
            }
          }
          R(t3[0]) || s2 && R(t3[1]) || t3.unshift(Cs(""));
          var l2, c2 = t3[0];
          if (s2)
            for (var p2 = 1; p2 < t3.length; p2++)
              c2 = ns("+", c2, t3[p2]);
          else
            t3.length > 1 && (l2 = true, c2 = t3.reduce(function(e4, t4) {
              var r4 = Pt(t4);
              return !r4 && l2 && (r4 = true, l2 = false), r4 && E(e4) ? (e4.arguments.push(t4), e4) : ls(Fs2(e4, Ds("concat")), [t4]);
            }));
          e3.replaceWith(c2);
        } } };
      }), YV = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-typeof-symbol", visitor: { Scope: function(e3) {
          var t2 = e3.scope;
          t2.getBinding("Symbol") && t2.rename("Symbol");
        }, UnaryExpression: function(e3) {
          var t2 = e3.node, r2 = e3.parent;
          if (t2.operator === "typeof") {
            if (e3.parentPath.isBinaryExpression() && Br.indexOf(r2.operator) >= 0) {
              var n2 = e3.getOpposite();
              if (n2.isLiteral() && n2.node.value !== "symbol" && n2.node.value !== "object")
                return;
            }
            var s2 = e3.findParent(function(e4) {
              var t3;
              if (e4.isFunction())
                return ((t3 = e4.get("body.directives.0")) == null ? void 0 : t3.node.value.value) === "@babel/helpers - typeof";
            });
            if (!s2) {
              var a2 = this.addHelper("typeof");
              if (!(s2 = e3.findParent(function(e4) {
                return e4.isVariableDeclarator() && e4.node.id === a2 || e4.isFunctionDeclaration() && e4.node.id && e4.node.id.name === a2.name;
              }))) {
                var i2 = ls(a2, [t2.argument]), o2 = e3.get("argument");
                if (o2.isIdentifier() && !e3.scope.hasBinding(o2.node.name, true)) {
                  var u2 = qs("typeof", Ju(t2.argument));
                  e3.replaceWith(ps(ns("===", u2, Cs("undefined")), Cs("undefined"), i2));
                } else
                  e3.replaceWith(i2);
              }
            }
          }
        } } };
      });
      function QV(e2, t2) {
        var r2 = e2.node;
        if (r2.const)
          throw e2.buildCodeFrameError("'const' enums are not supported.");
        if (r2.declare)
          e2.remove();
        else {
          var n2 = r2.id.name, s2 = function(e3, t3, r3) {
            var n3 = function(e4, t4) {
              var r4 = Object.create(null), n4 = -1;
              return e4.node.members.map(function(s3) {
                var a3, i2 = t4.isIdentifier(s3.id) ? s3.id.name : s3.id.value, o2 = s3.initializer;
                if (o2) {
                  var u2 = function(e5, t5) {
                    return r5(e5);
                    function r5(e6) {
                      switch (e6.type) {
                        case "StringLiteral":
                          return e6.value;
                        case "UnaryExpression":
                          return n5(e6);
                        case "BinaryExpression":
                          return s4(e6);
                        case "NumericLiteral":
                          return e6.value;
                        case "ParenthesizedExpression":
                          return r5(e6.expression);
                        case "Identifier":
                          return t5[e6.name];
                        case "TemplateLiteral":
                          if (e6.quasis.length === 1)
                            return e6.quasis[0].value.cooked;
                        default:
                          return;
                      }
                    }
                    function n5(e6) {
                      var t6 = e6.argument, n6 = e6.operator, s5 = r5(t6);
                      if (s5 !== void 0)
                        switch (n6) {
                          case "+":
                            return s5;
                          case "-":
                            return -s5;
                          case "~":
                            return ~s5;
                          default:
                            return;
                        }
                    }
                    function s4(e6) {
                      var t6 = r5(e6.left);
                      if (t6 !== void 0) {
                        var n6 = r5(e6.right);
                        if (n6 !== void 0)
                          switch (e6.operator) {
                            case "|":
                              return t6 | n6;
                            case "&":
                              return t6 & n6;
                            case ">>":
                              return t6 >> n6;
                            case ">>>":
                              return t6 >>> n6;
                            case "<<":
                              return t6 << n6;
                            case "^":
                              return t6 ^ n6;
                            case "*":
                              return t6 * n6;
                            case "/":
                              return t6 / n6;
                            case "+":
                              return t6 + n6;
                            case "-":
                              return t6 - n6;
                            case "%":
                              return t6 % n6;
                            default:
                              return;
                          }
                      }
                    }
                  }(o2, r4);
                  u2 !== void 0 ? (r4[i2] = u2, typeof u2 == "number" ? (a3 = t4.numericLiteral(u2), n4 = u2) : (vE(typeof u2 == "string"), a3 = t4.stringLiteral(u2), n4 = void 0)) : (a3 = o2, n4 = void 0);
                } else {
                  if (n4 === void 0)
                    throw e4.buildCodeFrameError("Enum member must have initializer.");
                  n4++, a3 = t4.numericLiteral(n4), r4[i2] = n4;
                }
                return [i2, a3];
              });
            }(e3, t3).map(function(e4) {
              var n4 = l(e4, 2), s3 = n4[0], a3 = n4[1];
              return function(e5, t4) {
                return (e5 ? nW : sW)(t4);
              }(t3.isStringLiteral(a3), { ENUM: t3.cloneNode(r3), NAME: s3, VALUE: a3 });
            });
            return rW({ ID: t3.cloneNode(r3), ASSIGNMENTS: n3 });
          }(e2, t2, r2.id);
          switch (e2.parent.type) {
            case "BlockStatement":
            case "ExportNamedDeclaration":
            case "Program":
              if (e2.insertAfter(s2), function e3(t3) {
                if (t3.isExportDeclaration())
                  return e3(t3.parentPath);
                return !!t3.getData(n2) || (t3.setData(n2, true), false);
              }(e2.parentPath))
                e2.remove();
              else {
                var a2 = t2.isProgram(e2.parent);
                e2.scope.registerDeclaration(e2.replaceWith(function(e3, t3, r3) {
                  return t3.variableDeclaration(r3, [t3.variableDeclarator(e3)]);
                }(r2.id, t2, a2 ? "var" : "let"))[0]);
              }
              break;
            default:
              throw new Error("Unexpected enum parent '" + e2.parent.type);
          }
        }
      }
      var ZV, eW, tW, rW = Eg("\n  (function (ID) {\n    ASSIGNMENTS;\n  })(ID || (ID = {}));\n"), nW = Eg('\n  ENUM["NAME"] = VALUE;\n'), sW = Eg('\n  ENUM[ENUM["NAME"] = VALUE] = "NAME";\n');
      function aW(e2, t2, r2) {
        if (e2.node.declare || e2.node.id.type === "StringLiteral")
          e2.remove();
        else {
          if (!r2)
            throw e2.hub.file.buildCodeFrameError(e2.node.id, "Namespace not marked type-only declare. Non-declarative namespaces are only supported experimentally in Babel. To enable and review caveats see: https://babeljs.io/docs/en/babel-plugin-transform-typescript");
          var n2 = e2.node.id.name, s2 = lW(e2, t2, t2.cloneDeep(e2.node)), a2 = e2.scope.hasOwnBinding(n2);
          e2.parent.type === "ExportNamedDeclaration" ? a2 ? e2.parentPath.replaceWith(s2) : (e2.parentPath.insertAfter(s2), e2.replaceWith(iW(t2, n2)), e2.scope.registerDeclaration(e2.parentPath)) : a2 ? e2.replaceWith(s2) : e2.scope.registerDeclaration(e2.replaceWithMultiple([iW(t2, n2), s2])[0]);
        }
      }
      function iW(e2, t2) {
        return e2.variableDeclaration("let", [e2.variableDeclarator(e2.identifier(t2))]);
      }
      function oW(e2, t2, r2) {
        return e2.memberExpression(e2.identifier(t2), e2.identifier(r2));
      }
      function uW(e2, t2, r2) {
        if (e2.kind !== "const")
          throw r2.file.buildCodeFrameError(e2, "Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript");
        var n2 = e2.declarations;
        if (n2.every(function(e3) {
          return F(e3.id);
        })) {
          for (var s2, a2 = f(n2); !(s2 = a2()).done; ) {
            var i2 = s2.value;
            i2.init = rs("=", oW(Pc, t2, i2.id.name), i2.init);
          }
          return [e2];
        }
        var o2 = cc(e2), u2 = [];
        for (var l2 in o2)
          u2.push(rs("=", oW(Pc, t2, l2), Ju(o2[l2])));
        return [e2, ys(Ms(u2))];
      }
      function lW(e2, t2, r2, n2) {
        for (var s2 = new Set(), a2 = r2.id, i2 = e2.scope.generateUid(a2.name), o2 = r2.body.body, l2 = 0; l2 < o2.length; l2++) {
          var p2 = o2[l2];
          switch (p2.type) {
            case "TSModuleDeclaration":
              var d2 = lW(e2, t2, p2), f2 = p2.id.name;
              s2.has(f2) ? o2[l2] = d2 : (s2.add(f2), o2.splice(l2++, 1, iW(t2, f2), d2));
              continue;
            case "TSEnumDeclaration":
            case "FunctionDeclaration":
            case "ClassDeclaration":
              s2.add(p2.id.name);
              continue;
            case "VariableDeclaration":
              for (var h2 in t2.getBindingIdentifiers(p2))
                s2.add(h2);
              continue;
            default:
              continue;
            case "ExportNamedDeclaration":
          }
          switch (p2.declaration.type) {
            case "TSEnumDeclaration":
            case "FunctionDeclaration":
            case "ClassDeclaration":
              var m2 = p2.declaration.id.name;
              s2.add(m2), o2.splice(l2++, 1, p2.declaration, t2.expressionStatement(t2.assignmentExpression("=", oW(t2, i2, m2), t2.identifier(m2))));
              break;
            case "VariableDeclaration":
              var y2 = uW(p2.declaration, i2, e2.hub);
              o2.splice.apply(o2, [l2, y2.length].concat(c(y2))), l2 += y2.length - 1;
              break;
            case "TSModuleDeclaration":
              var g2 = lW(e2, t2, p2.declaration, t2.identifier(i2)), v2 = p2.declaration.id.name;
              s2.has(v2) ? o2[l2] = g2 : (s2.add(v2), o2.splice(l2++, 1, iW(t2, v2), g2));
          }
        }
        var b2 = t2.objectExpression([]);
        if (n2) {
          var E2 = t2.memberExpression(n2, a2);
          b2 = Eg.expression.ast(ZV || (ZV = u(["\n      ", " ||\n        (", " = ", ")\n    "])), t2.cloneNode(E2), t2.cloneNode(E2), b2);
        }
        return Eg.statement.ast(eW || (eW = u(["\n    (function (", ") {\n      ", "\n    })(", " || (", " = ", "));\n  "])), t2.identifier(i2), o2, a2, t2.cloneNode(a2), b2);
      }
      function cW(e2) {
        switch (e2.parent.type) {
          case "TSTypeReference":
          case "TSQualifiedName":
          case "TSExpressionWithTypeArguments":
          case "TSTypeQuery":
            return true;
          case "ExportSpecifier":
            return e2.parentPath.parent.exportKind === "type";
          default:
            return false;
        }
      }
      var pW = new WeakMap(), dW = new WeakMap(), fW = new WeakSet();
      function hW(e2, t2) {
        var r2 = e2.find(function(e3) {
          return e3.isProgram();
        }).node;
        return !e2.scope.hasOwnBinding(t2) && (!!pW.get(r2).has(t2) || (console.warn('The exported identifier "' + t2 + `" is not declared in Babel's scope tracker
as a JavaScript value binding, and "@babel/plugin-transform-typescript"
never encountered it as a TypeScript type declaration.
It will be treated as a JavaScript value.

This problem is likely caused by another plugin injecting
"` + t2 + '" without registering it in the scope tracker. If you are the author\n of that plugin, please use "scope.registerDeclaration(declarationPath)".'), false));
      }
      function mW(e2, t2) {
        pW.get(e2.path.node).add(t2);
      }
      var yW = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = /\*?\s*@jsx((?:Frag)?)\s+([^\s]+)/, n2 = t2.allowNamespaces, s2 = n2 === void 0 || n2, a2 = t2.jsxPragma, i2 = a2 === void 0 ? "React.createElement" : a2, o2 = t2.jsxPragmaFrag, c2 = o2 === void 0 ? "React.Fragment" : o2, p2 = t2.onlyRemoveTypeImports, d2 = p2 !== void 0 && p2, h2 = t2.allowDeclareFields, m2 = h2 !== void 0 && h2, y2 = function(e3) {
          var t3 = e3.node;
          if (!m2 && t3.declare)
            throw e3.buildCodeFrameError("The 'declare' modifier is only allowed when the 'allowDeclareFields' option of @babel/plugin-transform-typescript or @babel/preset-typescript is enabled.");
          if (t3.declare) {
            if (t3.value)
              throw e3.buildCodeFrameError("Fields with the 'declare' modifier cannot be initialized here, but only in the constructor");
            t3.decorators || e3.remove();
          } else if (t3.definite) {
            if (t3.value)
              throw e3.buildCodeFrameError("Definitely assigned fields cannot be initialized here, but only in the constructor");
            m2 || t3.decorators || e3.remove();
          } else
            m2 || t3.value || t3.decorators || at(t3) || e3.remove();
          t3.accessibility && (t3.accessibility = null), t3.abstract && (t3.abstract = null), t3.readonly && (t3.readonly = null), t3.optional && (t3.optional = null), t3.typeAnnotation && (t3.typeAnnotation = null), t3.definite && (t3.definite = null), t3.declare && (t3.declare = null), t3.override && (t3.override = null);
        }, g2 = function(e3) {
          var t3 = e3.node;
          t3.accessibility && (t3.accessibility = null), t3.abstract && (t3.abstract = null), t3.optional && (t3.optional = null), t3.override && (t3.override = null);
        }, v2 = function(e3, t3) {
          e3.node.accessibility && (e3.node.accessibility = null);
          for (var r3, n3 = [], s3 = f(e3.node.params); !(r3 = s3()).done; ) {
            var a3 = r3.value;
            a3.type !== "TSParameterProperty" || fW.has(a3.parameter) || (fW.add(a3.parameter), n3.push(a3.parameter));
          }
          if (n3.length) {
            var i3 = n3.map(function(t4) {
              var r4;
              if (F(t4))
                r4 = t4;
              else {
                if (!re(t4) || !F(t4.left))
                  throw e3.buildCodeFrameError("Parameter properties can not be destructuring patterns.");
                r4 = t4.left;
              }
              return Eg.statement.ast(tW || (tW = u(["\n              this.", " = ", ""])), Ju(r4), Ju(r4));
            });
            oO(t3, e3, i3);
          }
        };
        return { name: "transform-typescript", inherits: rk, visitor: { Pattern: b2, Identifier: b2, RestElement: b2, Program: { enter: function(e3, t3) {
          var n3 = t3.file, s3 = null, a3 = null;
          if (pW.has(e3.node) || pW.set(e3.node, new Set()), n3.ast.comments)
            for (var o3, u2 = f(n3.ast.comments); !(o3 = u2()).done; ) {
              var p3 = o3.value, h3 = r2.exec(p3.value);
              h3 && (h3[1] ? a3 = h3[2] : s3 = h3[2]);
            }
          var m3 = s3 || i2;
          if (m3) {
            var y3 = m3.split(".");
            m3 = l(y3, 1)[0];
          }
          var g3 = a3 || c2;
          if (g3) {
            var v3 = g3.split(".");
            g3 = l(v3, 1)[0];
          }
          for (var b3, x2 = f(e3.get("body")); !(b3 = x2()).done; ) {
            var D2 = b3.value;
            if (D2.isImportDeclaration()) {
              if (dW.has(t3.file.ast.program) || dW.set(t3.file.ast.program, true), D2.node.importKind === "type") {
                D2.remove();
                continue;
              }
              if (d2)
                dW.set(e3.node, false);
              else {
                if (D2.node.specifiers.length === 0) {
                  dW.set(e3.node, false);
                  continue;
                }
                for (var A2, w2 = true, C2 = [], S2 = f(D2.node.specifiers); !(A2 = S2()).done; ) {
                  var T2 = A2.value, j2 = D2.scope.getBinding(T2.local.name);
                  j2 && E2({ binding: j2, programPath: e3, pragmaImportName: m3, pragmaFragImportName: g3 }) ? C2.push(j2.path) : (w2 = false, dW.set(e3.node, false));
                }
                if (w2)
                  D2.remove();
                else
                  for (var P2, I2 = f(C2); !(P2 = I2()).done; ) {
                    P2.value.remove();
                  }
              }
            } else if (D2.isExportDeclaration() && (D2 = D2.get("declaration")), D2.isVariableDeclaration({ declare: true }))
              for (var F2 = 0, k2 = Object.keys(D2.getBindingIdentifiers()); F2 < k2.length; F2++) {
                var O2 = k2[F2];
                mW(e3.scope, O2);
              }
            else
              (D2.isTSTypeAliasDeclaration() || D2.isTSDeclareFunction() || D2.isTSInterfaceDeclaration() || D2.isClassDeclaration({ declare: true }) || D2.isTSEnumDeclaration({ declare: true }) || D2.isTSModuleDeclaration({ declare: true }) && D2.get("id").isIdentifier()) && mW(e3.scope, D2.node.id.name);
          }
        }, exit: function(e3) {
          e3.node.sourceType === "module" && dW.get(e3.node) && e3.pushContainer("body", ia());
        } }, ExportNamedDeclaration: function(e3, t3) {
          dW.has(t3.file.ast.program) || dW.set(t3.file.ast.program, true), e3.node.exportKind !== "type" ? !e3.node.source && e3.node.specifiers.length > 0 && e3.node.specifiers.every(function(t4) {
            var r3 = t4.local;
            return hW(e3, r3.name);
          }) ? e3.remove() : dW.set(t3.file.ast.program, false) : e3.remove();
        }, ExportSpecifier: function(e3) {
          !e3.parent.source && hW(e3, e3.node.local.name) && e3.remove();
        }, ExportDefaultDeclaration: function(e3, t3) {
          dW.has(t3.file.ast.program) || dW.set(t3.file.ast.program, true), F(e3.node.declaration) && hW(e3, e3.node.declaration.name) ? e3.remove() : dW.set(t3.file.ast.program, false);
        }, TSDeclareFunction: function(e3) {
          e3.remove();
        }, TSDeclareMethod: function(e3) {
          e3.remove();
        }, VariableDeclaration: function(e3) {
          e3.node.declare && e3.remove();
        }, VariableDeclarator: function(e3) {
          var t3 = e3.node;
          t3.definite && (t3.definite = null);
        }, TSIndexSignature: function(e3) {
          e3.remove();
        }, ClassDeclaration: function(e3) {
          e3.node.declare && e3.remove();
        }, Class: function(e3) {
          var t3 = e3.node;
          t3.typeParameters && (t3.typeParameters = null), t3.superTypeParameters && (t3.superTypeParameters = null), t3.implements && (t3.implements = null), t3.abstract && (t3.abstract = null), e3.get("body.body").forEach(function(t4) {
            t4.isClassMethod() || t4.isClassPrivateMethod() ? t4.node.kind === "constructor" ? v2(t4, e3) : g2(t4) : (t4.isClassProperty() || t4.isClassPrivateProperty()) && y2(t4);
          });
        }, Function: function(e3) {
          var t3 = e3.node, r3 = e3.scope;
          t3.typeParameters && (t3.typeParameters = null), t3.returnType && (t3.returnType = null);
          var n3 = t3.params;
          n3.length > 0 && F(n3[0], { name: "this" }) && n3.shift();
          for (var s3, a3 = f(e3.get("params")); !(s3 = a3()).done; ) {
            var i3 = s3.value;
            i3.type === "TSParameterProperty" && (i3.replaceWith(i3.get("parameter")), r3.registerBinding("param", i3));
          }
        }, TSModuleDeclaration: function(e3) {
          aW(e3, Pc, s2);
        }, TSInterfaceDeclaration: function(e3) {
          e3.remove();
        }, TSTypeAliasDeclaration: function(e3) {
          e3.remove();
        }, TSEnumDeclaration: function(e3) {
          QV(e3, Pc);
        }, TSImportEqualsDeclaration: function(e3) {
          throw e3.buildCodeFrameError("`import =` is not supported by @babel/plugin-transform-typescript\nPlease consider using `import <moduleName> from '<moduleName>';` alongside Typescript's --allowSyntheticDefaultImports option.");
        }, TSExportAssignment: function(e3) {
          throw e3.buildCodeFrameError("`export =` is not supported by @babel/plugin-transform-typescript\nPlease consider using `export <value>;`.");
        }, TSTypeAssertion: function(e3) {
          e3.replaceWith(e3.node.expression);
        }, TSAsExpression: function(e3) {
          var t3 = e3.node;
          do {
            t3 = t3.expression;
          } while (ht(t3));
          e3.replaceWith(t3);
        }, TSNonNullExpression: function(e3) {
          e3.replaceWith(e3.node.expression);
        }, CallExpression: function(e3) {
          e3.node.typeParameters = null;
        }, OptionalCallExpression: function(e3) {
          e3.node.typeParameters = null;
        }, NewExpression: function(e3) {
          e3.node.typeParameters = null;
        }, JSXOpeningElement: function(e3) {
          e3.node.typeParameters = null;
        }, TaggedTemplateExpression: function(e3) {
          e3.node.typeParameters = null;
        } } };
        function b2(e3) {
          var t3 = e3.node;
          t3.typeAnnotation && (t3.typeAnnotation = null), F(t3) && t3.optional && (t3.optional = null);
        }
        function E2(e3) {
          for (var t3, r3 = e3.binding, n3 = e3.programPath, s3 = e3.pragmaImportName, a3 = e3.pragmaFragImportName, i3 = f(r3.referencePaths); !(t3 = i3()).done; ) {
            if (!cW(t3.value))
              return false;
          }
          if (r3.identifier.name !== s3 && r3.identifier.name !== a3)
            return true;
          var o3 = false;
          return n3.traverse({ "JSXElement|JSXFragment": function(e4) {
            o3 = true, e4.stop();
          } }), !o3;
        }
      }), gW = jF(function(e2) {
        e2.assertVersion(7);
        var t2 = /[\ud800-\udfff]/g, r2 = /(\\+)u\{([0-9a-fA-F]+)\}/g;
        function n2(e3) {
          for (var t3 = e3.toString(16); t3.length < 4; )
            t3 = "0" + t3;
          return "\\u" + t3;
        }
        function s2(e3, t3, r3) {
          if (t3.length % 2 == 0)
            return e3;
          var s3 = String.fromCodePoint(parseInt(r3, 16)), a3 = t3.slice(0, -1) + n2(s3.charCodeAt(0));
          return s3.length === 1 ? a3 : a3 + n2(s3.charCodeAt(1));
        }
        function a2(e3) {
          return e3.replace(r2, s2);
        }
        return { name: "transform-unicode-escapes", manipulateOptions: function(e3) {
          var t3, r3 = e3.generatorOpts;
          r3.jsescOption || (r3.jsescOption = {}), (t3 = r3.jsescOption).minimal != null || (t3.minimal = false);
        }, visitor: { Identifier: function(e3) {
          var r3 = e3.node, n3 = e3.key, s3 = r3.name, a3 = s3.replace(t2, function(e4) {
            return "_u" + e4.charCodeAt(0).toString(16);
          });
          if (s3 !== a3) {
            var i2 = yc(Cs(s3), r3);
            if (n3 !== "key") {
              var o2 = e3.parentPath, u2 = e3.scope;
              if (o2.isMemberExpression({ property: r3 }) || o2.isOptionalMemberExpression({ property: r3 }))
                return o2.node.computed = true, void e3.replaceWith(i2);
              if (!u2.getBinding(s3))
                throw e3.buildCodeFrameError("Can't reference '" + s3 + "' as a bare identifier");
              u2.rename(s3, u2.generateUid(a3));
            } else
              e3.replaceWith(i2);
          }
        }, "StringLiteral|DirectiveLiteral": function(e3) {
          var t3 = e3.node.extra;
          t3 != null && t3.raw && (t3.raw = a2(t3.raw));
        }, TemplateElement: function(e3) {
          var t3 = e3.node, n3 = e3.parentPath, s3 = t3.value, i2 = function(e4) {
            for (var t4; t4 = r2.exec(e4); )
              if (t4[1].length % 2 != 0)
                return r2.lastIndex = 0, t4[0];
            return null;
          }(s3.raw);
          if (i2) {
            if (n3.parentPath.isTaggedTemplateExpression())
              throw e3.buildCodeFrameError("Can't replace Unicode escape '" + i2 + "' inside tagged template literals. You can enable '@babel/plugin-transform-template-literals' to compile them to classic strings.");
            s3.raw = a2(s3.raw);
          }
        } } };
      }), vW = jF(function(e2) {
        return e2.assertVersion(7), RN({ name: "transform-unicode-regex", feature: "unicodeFlag" });
      }), bW = { "external-helpers": OF, "syntax-async-generators": NF, "syntax-class-properties": BF, "syntax-class-static-block": _F, "syntax-decimal": LF, "syntax-decorators": MF, "syntax-do-expressions": UF, "syntax-export-default-from": GF, "syntax-flow": VF, "syntax-function-bind": WF, "syntax-function-sent": HF, "syntax-module-blocks": XF, "syntax-import-meta": qF, "syntax-jsx": $F, "syntax-import-assertions": KF, "syntax-object-rest-spread": zF, "syntax-optional-catch-binding": JF, "syntax-pipeline-operator": QF, "syntax-record-and-tuple": ZF, "syntax-top-level-await": ek, "syntax-typescript": rk, "proposal-async-generator-functions": jk, "proposal-class-properties": AO, "proposal-class-static-block": CO, "proposal-decorators": LO, "proposal-do-expressions": MO, "proposal-dynamic-import": VO, "proposal-export-default-from": WO, "proposal-export-namespace-from": XO, "proposal-function-bind": qO, "proposal-function-sent": $O, "proposal-json-strings": zO, "proposal-logical-assignment-operators": YO, "proposal-nullish-coalescing-operator": ZO, "proposal-numeric-separator": rR, "proposal-object-rest-spread": PR, "proposal-optional-catch-binding": FR, "proposal-optional-chaining": qR, "proposal-pipeline-operator": JR, "proposal-private-methods": YR, "proposal-private-property-in-object": ZR, "proposal-throw-expressions": tN, "proposal-unicode-property-regex": BN, "transform-async-to-generator": _N, "transform-arrow-functions": LN, "transform-block-scoped-functions": MN, "transform-block-scoping": HN, "transform-classes": hB, "transform-computed-properties": mB, "transform-destructuring": yB, "transform-dotall-regex": gB, "transform-duplicate-keys": vB, "transform-exponentiation-operator": xB, "transform-flow-comments": DB, "transform-flow-strip-types": AB, "transform-for-of": FB, "transform-function-name": kB, "transform-instanceof": OB, "transform-jscript": RB, "transform-literals": NB, "transform-member-expression-literals": BB, "transform-modules-amd": qB, "transform-modules-commonjs": t_, "transform-modules-systemjs": i_, "transform-modules-umd": l_, "transform-named-capturing-groups-regex": c_, "transform-new-target": p_, "transform-object-assign": d_, "transform-object-super": f_, "transform-object-set-prototype-of-to-assign": h_, "transform-parameters": SR, "transform-property-literals": m_, "transform-property-mutators": E_, "transform-proto-to-assign": x_, "transform-react-constant-elements": D_, "transform-react-display-name": A_, "transform-react-inline-elements": C_, "transform-react-jsx": L_, "transform-react-jsx-compat": M_, "transform-react-jsx-development": U_, "transform-react-jsx-self": G_, "transform-react-jsx-source": W_, "transform-regenerator": gM, "transform-reserved-words": vM, "transform-runtime": XV, "transform-shorthand-properties": qV, "transform-spread": $V, "transform-sticky-regex": KV, "transform-strict-mode": zV, "transform-template-literals": JV, "transform-typeof-symbol": YV, "transform-typescript": yW, "transform-unicode-escapes": gW, "transform-unicode-regex": vW }, EW = function(e2, t2) {
        var r2 = false, n2 = "commonjs", s2 = false;
        t2 !== void 0 && (t2.loose !== void 0 && (r2 = t2.loose), t2.modules !== void 0 && (n2 = t2.modules), t2.spec !== void 0 && (s2 = t2.spec));
        var a2 = { loose: r2 };
        return { plugins: [[JV, { loose: r2, spec: s2 }], NB, kB, [LN, { spec: s2 }], MN, [hB, a2], f_, qV, vB, [mB, a2], [FB, a2], KV, gW, vW, [$V, a2], [SR, a2], [yB, a2], HN, YV, OB, (n2 === "commonjs" || n2 === "cjs") && [t_, a2], n2 === "systemjs" && [i_, a2], n2 === "amd" && [qB, a2], n2 === "umd" && [l_, a2], [gM, { async: false, asyncGenerators: false }]].filter(Boolean) };
      }, xW = function(e2, t2) {
        var r2 = false;
        return t2 !== void 0 && t2.loose !== void 0 && (r2 = t2.loose), { plugins: [KF, qF, ek, XO, YO, [qR, { loose: r2 }], [ZO, { loose: r2 }], [AO, { loose: r2 }], zO, rR, [YR, { loose: r2 }]] };
      }, DW = function(e2, t2) {
        t2 === void 0 && (t2 = {});
        var r2 = t2, n2 = r2.loose, s2 = n2 !== void 0 && n2, a2 = r2.useBuiltIns, i2 = a2 !== void 0 && a2, o2 = r2.decoratorsLegacy, u2 = o2 !== void 0 && o2, l2 = r2.decoratorsBeforeExport;
        return { presets: [[xW, { loose: s2, useBuiltIns: i2 }]], plugins: [CO, [LO, { legacy: u2, decoratorsBeforeExport: l2 }], $O, ZR, tN] };
      }, AW = function(e2, t2) {
        t2 === void 0 && (t2 = {});
        var r2 = t2, n2 = r2.loose, s2 = n2 !== void 0 && n2, a2 = r2.useBuiltIns, i2 = a2 !== void 0 && a2, o2 = r2.decoratorsLegacy, u2 = o2 !== void 0 && o2, l2 = r2.decoratorsBeforeExport, c2 = r2.pipelineProposal, p2 = c2 === void 0 ? "minimal" : c2, d2 = r2.recordAndTupleSyntax;
        return { presets: [[DW, { loose: s2, useBuiltIns: i2, decoratorsLegacy: u2, decoratorsBeforeExport: l2 }]], plugins: [LF, [ZF, { syntaxType: d2 === void 0 ? "hash" : d2 }], XF, WO, [JR, { proposal: p2 }], MO] };
      }, wW = ["transform-typeof-symbol"];
      var CW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-async-generators", manipulateOptions: function(e4, t3) {
            t3.plugins.push("asyncGenerators");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-async-generators/lib"), SW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-class-properties", manipulateOptions: function(e4, t3) {
            t3.plugins.push("classProperties", "classPrivateProperties", "classPrivateMethods");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-class-properties/lib"), TW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-dynamic-import", manipulateOptions: function(e4, t3) {
            t3.plugins.push("dynamicImport");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-dynamic-import/lib"), jW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-export-namespace-from", manipulateOptions: function(e4, t3) {
            t3.plugins.push("exportNamespaceFrom");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-export-namespace-from/lib"), PW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-json-strings", manipulateOptions: function(e4, t3) {
            t3.plugins.push("jsonStrings");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-json-strings/lib"), IW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-logical-assignment-operators", manipulateOptions: function(e4, t3) {
            t3.plugins.push("logicalAssignment");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-logical-assignment-operators/lib"), FW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-nullish-coalescing-operator", manipulateOptions: function(e4, t3) {
            t3.plugins.push("nullishCoalescingOperator");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-nullish-coalescing-operator/lib"), kW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-numeric-separator", manipulateOptions: function(e4, t3) {
            t3.plugins.push("numericSeparator");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-numeric-separator/lib"), OW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-object-rest-spread", manipulateOptions: function(e4, t3) {
            t3.plugins.push("objectRestSpread");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-object-rest-spread/lib"), RW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-optional-catch-binding", manipulateOptions: function(e4, t3) {
            t3.plugins.push("optionalCatchBinding");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-optional-catch-binding/lib"), NW = zt(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = void 0;
        var r2 = (0, RF.declare)(function(e3) {
          return e3.assertVersion(7), { name: "syntax-optional-chaining", manipulateOptions: function(e4, t3) {
            t3.plugins.push("optionalChaining");
          } };
        });
        t2.default = r2;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/plugin-syntax-optional-chaining/lib"), BW = zt(function(e2, t2) {
        t2.__esModule = true, t2.default = void 0;
        var r2 = { allowInsertArrow: false, specCompliant: false };
        t2.default = function(e3) {
          var t3 = e3.types;
          return { name: "transform-async-arrows-in-class", visitor: { ArrowFunctionExpression: function(e4) {
            e4.node.async && e4.findParent(t3.isClassMethod) && e4.arrowFunctionToExpression(r2);
          } } };
        }, e2.exports = t2.default;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/preset-modules/lib/plugins/transform-async-arrows-in-class"), _W = zt(function(e2, t2) {
        t2.__esModule = true, t2.default = void 0;
        t2.default = function(e3) {
          var t3 = e3.types, r2 = function(e4) {
            return e4.parentKey === "params" && e4.parentPath && t3.isArrowFunctionExpression(e4.parentPath);
          };
          return { name: "transform-edge-default-parameters", visitor: { AssignmentPattern: function(e4) {
            e4.find(r2) && e4.parent.shorthand && (e4.parent.shorthand = false, (e4.parent.extra || {}).shorthand = false, e4.scope.rename(e4.parent.key.name));
          } } };
        }, e2.exports = t2.default;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/preset-modules/lib/plugins/transform-edge-default-parameters"), LW = zt(function(e2, t2) {
        t2.__esModule = true, t2.default = void 0;
        t2.default = function(e3) {
          var t3 = e3.types;
          return { name: "transform-edge-function-name", visitor: { FunctionExpression: { exit: function(e4) {
            if (!e4.node.id && t3.isIdentifier(e4.parent.id)) {
              var r2 = t3.cloneNode(e4.parent.id), n2 = e4.scope.getBinding(r2.name);
              (n2 == null ? void 0 : n2.constantViolations.length) && e4.scope.rename(r2.name), e4.node.id = r2;
            }
          } } } };
        }, e2.exports = t2.default;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/preset-modules/lib/plugins/transform-edge-function-name"), MW = zt(function(e2, t2) {
        t2.__esModule = true, t2.default = void 0;
        t2.default = function(e3) {
          var t3 = e3.types;
          return { name: "transform-tagged-template-caching", visitor: { TaggedTemplateExpression: function(e4, r2) {
            var n2 = r2.get("processed");
            if (n2 || (n2 = new Map(), r2.set("processed", n2)), n2.has(e4.node))
              return e4.skip();
            var s2 = e4.node.quasi.expressions, a2 = r2.get("identity");
            a2 || (a2 = e4.scope.getProgramParent().generateDeclaredUidIdentifier("_"), r2.set("identity", a2), e4.scope.getBinding(a2.name).path.get("init").replaceWith(t3.arrowFunctionExpression([t3.identifier("t")], t3.identifier("t"))));
            var i2 = t3.taggedTemplateExpression(a2, t3.templateLiteral(e4.node.quasi.quasis, s2.map(function() {
              return t3.numericLiteral(0);
            })));
            n2.set(i2, true);
            var o2 = e4.scope.getProgramParent().generateDeclaredUidIdentifier("t");
            e4.scope.getBinding(o2.name).path.parent.kind = "let";
            var u2 = t3.logicalExpression("||", o2, t3.assignmentExpression("=", o2, i2)), l2 = t3.callExpression(e4.node.tag, [u2].concat(c(s2)));
            e4.replaceWith(l2);
          } } };
        }, e2.exports = t2.default;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/preset-modules/lib/plugins/transform-tagged-template-caching"), UW = zt(function(e2, t2) {
        t2.__esModule = true, t2.default = function(e3) {
          var t3 = e3.types;
          return { name: "transform-safari-block-shadowing", visitor: { VariableDeclarator: function(e4) {
            var r2 = e4.parent.kind;
            if (r2 === "let" || r2 === "const") {
              var n2 = e4.scope.block;
              if (!t3.isFunction(n2) && !t3.isProgram(n2))
                for (var s2 = t3.getOuterBindingIdentifiers(e4.node.id), a2 = 0, i2 = Object.keys(s2); a2 < i2.length; a2++) {
                  var o2 = i2[a2], u2 = e4.scope;
                  if (u2.hasOwnBinding(o2))
                    for (; u2 = u2.parent; ) {
                      if (u2.hasOwnBinding(o2)) {
                        e4.scope.rename(o2);
                        break;
                      }
                      if (t3.isFunction(u2.block) || t3.isProgram(u2.block))
                        break;
                    }
                }
            }
          } } };
        }, e2.exports = t2.default;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/preset-modules/lib/plugins/transform-safari-block-shadowing"), GW = zt(function(e2, t2) {
        function r2(e3) {
          if (e3.isVariableDeclaration()) {
            var t3 = e3.getFunctionParent(), r3 = e3.node.declarations[0].id.name;
            t3 && t3.scope.hasOwnBinding(r3) && t3.scope.getOwnBinding(r3).kind === "param" && e3.scope.rename(r3);
          }
        }
        t2.__esModule = true, t2.default = void 0;
        t2.default = function() {
          return { name: "transform-safari-for-shadowing", visitor: { ForXStatement: function(e3) {
            r2(e3.get("left"));
          }, ForStatement: function(e3) {
            r2(e3.get("init"));
          } } };
        }, e2.exports = t2.default;
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/@babel/preset-modules/lib/plugins/transform-safari-for-shadowing");
      var VW = jF(function(e2) {
        e2.assertVersion(7);
        var t2 = e2.assumption("noDocumentAll"), r2 = e2.assumption("pureGetters");
        return { name: "bugfix-v8-spread-parameters-in-optional-chaining", visitor: { "OptionalCallExpression|OptionalMemberExpression": function(e3) {
          (function(e4) {
            for (var t3, r3, n2 = e4, s2 = []; n2.isOptionalMemberExpression() || n2.isOptionalCallExpression(); ) {
              var a2 = n2.node;
              s2.push(a2), n2.isOptionalMemberExpression() ? n2 = RR(n2.get("object")) : n2.isOptionalCallExpression() && (n2 = RR(n2.get("callee")));
            }
            for (var i2 = 0; i2 < s2.length; i2++) {
              var o2 = s2[i2];
              if (Pe(o2) && (r3 = void 0, (r3 = (t3 = o2.arguments).findIndex(function(e5) {
                return be(e5);
              })) >= 0 && r3 !== t3.length - 1)) {
                if (o2.optional)
                  return true;
                if (je(s2[i2 + 1], { optional: true }))
                  return true;
              }
            }
            return false;
          })(e3) && MR(e3, { noDocumentAll: t2, pureGetters: r2 });
        } } };
      }), WW = { "bugfix/transform-async-arrows-in-class": function() {
        return BW;
      }, "bugfix/transform-edge-default-parameters": function() {
        return _W;
      }, "bugfix/transform-edge-function-name": function() {
        return LW;
      }, "bugfix/transform-safari-block-shadowing": function() {
        return UW;
      }, "bugfix/transform-safari-for-shadowing": function() {
        return GW;
      }, "bugfix/transform-tagged-template-caching": function() {
        return MW;
      }, "bugfix/transform-v8-spread-parameters-in-optional-chaining": function() {
        return VW;
      }, "proposal-async-generator-functions": function() {
        return jk;
      }, "proposal-class-properties": function() {
        return AO;
      }, "proposal-class-static-block": function() {
        return CO;
      }, "proposal-dynamic-import": function() {
        return VO;
      }, "proposal-export-namespace-from": function() {
        return XO;
      }, "proposal-json-strings": function() {
        return zO;
      }, "proposal-logical-assignment-operators": function() {
        return YO;
      }, "proposal-nullish-coalescing-operator": function() {
        return ZO;
      }, "proposal-numeric-separator": function() {
        return rR;
      }, "proposal-object-rest-spread": function() {
        return PR;
      }, "proposal-optional-catch-binding": function() {
        return FR;
      }, "proposal-optional-chaining": function() {
        return qR;
      }, "proposal-private-methods": function() {
        return YR;
      }, "proposal-private-property-in-object": function() {
        return ZR;
      }, "proposal-unicode-property-regex": function() {
        return BN;
      }, "syntax-async-generators": function() {
        return CW;
      }, "syntax-class-properties": function() {
        return SW;
      }, "syntax-class-static-block": function() {
        return _F;
      }, "syntax-dynamic-import": function() {
        return TW;
      }, "syntax-export-namespace-from": function() {
        return jW;
      }, "syntax-json-strings": function() {
        return PW;
      }, "syntax-logical-assignment-operators": function() {
        return IW;
      }, "syntax-nullish-coalescing-operator": function() {
        return FW;
      }, "syntax-numeric-separator": function() {
        return kW;
      }, "syntax-object-rest-spread": function() {
        return OW;
      }, "syntax-optional-catch-binding": function() {
        return RW;
      }, "syntax-optional-chaining": function() {
        return NW;
      }, "syntax-private-property-in-object": function() {
        return QR;
      }, "syntax-top-level-await": function() {
        return ek;
      }, "transform-arrow-functions": function() {
        return LN;
      }, "transform-async-to-generator": function() {
        return _N;
      }, "transform-block-scoped-functions": function() {
        return MN;
      }, "transform-block-scoping": function() {
        return HN;
      }, "transform-classes": function() {
        return hB;
      }, "transform-computed-properties": function() {
        return mB;
      }, "transform-destructuring": function() {
        return yB;
      }, "transform-dotall-regex": function() {
        return gB;
      }, "transform-duplicate-keys": function() {
        return vB;
      }, "transform-exponentiation-operator": function() {
        return xB;
      }, "transform-for-of": function() {
        return FB;
      }, "transform-function-name": function() {
        return kB;
      }, "transform-literals": function() {
        return NB;
      }, "transform-member-expression-literals": function() {
        return BB;
      }, "transform-modules-amd": function() {
        return qB;
      }, "transform-modules-commonjs": function() {
        return t_;
      }, "transform-modules-systemjs": function() {
        return i_;
      }, "transform-modules-umd": function() {
        return l_;
      }, "transform-named-capturing-groups-regex": function() {
        return c_;
      }, "transform-new-target": function() {
        return p_;
      }, "transform-object-super": function() {
        return f_;
      }, "transform-parameters": function() {
        return SR;
      }, "transform-property-literals": function() {
        return m_;
      }, "transform-regenerator": function() {
        return gM;
      }, "transform-reserved-words": function() {
        return vM;
      }, "transform-shorthand-properties": function() {
        return qV;
      }, "transform-spread": function() {
        return $V;
      }, "transform-sticky-regex": function() {
        return KV;
      }, "transform-template-literals": function() {
        return JV;
      }, "transform-typeof-symbol": function() {
        return YV;
      }, "transform-unicode-escapes": function() {
        return gW;
      }, "transform-unicode-regex": function() {
        return vW;
      } }, HW = { "proposal-class-static-block": "7.12.0", "proposal-private-property-in-object": "7.10.0" }, XW = Function.call.bind(Object.hasOwnProperty);
      for (var qW = { auto: "transform-modules-commonjs", amd: "transform-modules-amd", commonjs: "transform-modules-commonjs", cjs: "transform-modules-commonjs", systemjs: "transform-modules-systemjs", umd: "transform-modules-umd" }, $W = { "transform-async-to-generator": { chrome: "55", opera: "42", edge: "15", firefox: "52", safari: "10.1", node: "7.6", ios: "10.3", samsung: "6", electron: "1.6" }, "bugfix/transform-async-arrows-in-class": { chrome: "55", opera: "42", edge: "15", firefox: "52", safari: "11", node: "7.6", ios: "11", samsung: "6", electron: "1.6" }, "transform-parameters": { chrome: "49", opera: "36", edge: "15", firefox: "53", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "bugfix/transform-edge-default-parameters": { chrome: "49", opera: "36", edge: "18", firefox: "52", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "transform-function-name": { chrome: "51", opera: "38", edge: "14", firefox: "53", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "bugfix/transform-edge-function-name": { chrome: "51", opera: "38", edge: "79", firefox: "53", safari: "10", node: "6.5", ios: "10", samsung: "5", electron: "1.2" }, "transform-block-scoping": { chrome: "49", opera: "36", edge: "14", firefox: "51", safari: "10", node: "6", ios: "10", samsung: "5", electron: "0.37" }, "bugfix/transform-safari-block-shadowing": { chrome: "49", opera: "36", edge: "12", firefox: "44", safari: "11", node: "6", ie: "11", ios: "11", samsung: "5", electron: "0.37" }, "bugfix/transform-safari-for-shadowing": { chrome: "49", opera: "36", edge: "12", firefox: "4", safari: "11", node: "6", ie: "11", ios: "11", samsung: "5", electron: "0.37" }, "transform-template-literals": { chrome: "41", opera: "28", edge: "13", firefox: "34", safari: "9", node: "4", ios: "9", samsung: "3.4", electron: "0.21" }, "bugfix/transform-tagged-template-caching": { chrome: "41", opera: "28", edge: "12", firefox: "34", safari: "13", node: "4", ios: "13", samsung: "3.4", electron: "0.21" }, "proposal-optional-chaining": { chrome: "80", opera: "67", edge: "80", firefox: "74", safari: "13.1", node: "14", ios: "13.4", samsung: "13", electron: "8.0" }, "bugfix/transform-v8-spread-parameters-in-optional-chaining": { firefox: "74", safari: "13.1", ios: "13.4" } }, KW = {}, zW = {}, JW = 0, YW = Object.keys(JS); JW < YW.length; JW++) {
        var QW = YW[JW];
        Object.hasOwnProperty.call(WW, QW) && (KW[QW] = JS[QW]);
      }
      for (var ZW = 0, eH = Object.keys($W); ZW < eH.length; ZW++) {
        var tH = eH[ZW];
        Object.hasOwnProperty.call(WW, tH) && (zW[tH] = $W[tH]);
      }
      KW["proposal-class-properties"] = KW["proposal-private-methods"];
      var rH = { bugfixes: "bugfixes", configPath: "configPath", corejs: "corejs", debug: "debug", exclude: "exclude", forceAllTransforms: "forceAllTransforms", ignoreBrowserslistConfig: "ignoreBrowserslistConfig", include: "include", loose: "loose", modules: "modules", shippedProposals: "shippedProposals", spec: "spec", targets: "targets", useBuiltIns: "useBuiltIns", browserslistEnv: "browserslistEnv" }, nH = { false: false, auto: "auto", amd: "amd", commonjs: "commonjs", cjs: "cjs", systemjs: "systemjs", umd: "umd" }, sH = { false: false, entry: "entry", usage: "usage" }, aH = ["web.timers", "web.immediate", "web.dom.iterable"], iH = new mC("@babel/preset-env"), oH = Object.keys(KW), uH = ["proposal-dynamic-import"].concat(c(Object.keys(qW).map(function(e2) {
        return qW[e2];
      }))), lH = function(e2, t2, r2) {
        return Array.from(function(e3, t3) {
          return new Set([].concat(c(oH), c(e3 === "exclude" ? uH : []), c(t3 ? t3 == 2 ? [].concat(c(Object.keys(TR)), aH) : Object.keys(wG) : [])));
        }(t2, r2)).filter(function(t3) {
          return e2 instanceof RegExp && e2.test(t3);
        });
      }, cH = function(e2, t2, r2) {
        if (e2 === void 0 && (e2 = []), e2.length === 0)
          return [];
        var n2 = e2.map(function(e3) {
          return lH(function(e4) {
            if (e4 instanceof RegExp)
              return e4;
            try {
              return new RegExp("^" + pH(e4) + "$");
            } catch (e5) {
              return null;
            }
          }(e3), t2, r2);
        }), s2 = e2.filter(function(e3, t3) {
          return n2[t3].length === 0;
        });
        return iH.invariant(s2.length === 0, "The plugins/built-ins '" + s2.join(", ") + "' passed to the '" + t2 + "' option are not\n    valid. Please check data/[plugin-features|built-in-features].js in babel-preset-env"), function(e3) {
          var t3;
          return (t3 = []).concat.apply(t3, c(e3));
        }(n2);
      }, pH = function(e2) {
        return e2.replace(/^(@babel\/|babel-)(plugin-)?/, "");
      };
      function dH(e2) {
        iH.validateTopLevelOptions(e2, rH);
        var t2, r2, n2, s2 = ((t2 = e2.useBuiltIns) === void 0 && (t2 = false), iH.invariant(sH[t2.toString()] || t2 === sH.false, `The 'useBuiltIns' option must be either
    'false' (default) to indicate no polyfill,
    '"entry"' to indicate replacing the entry polyfill, or
    '"usage"' to import only used polyfills per file`), t2), a2 = function(e3, t3) {
          var r3, n3 = false;
          t3 && e3 === void 0 ? (r3 = 2, console.warn("\nWARNING (@babel/preset-env): We noticed you're using the `useBuiltIns` option without declaring a core-js version. Currently, we assume version 2.x when no version is passed. Since this default version will likely change in future versions of Babel, we recommend explicitly setting the core-js version you are using via the `corejs` option.\n\nYou should also be sure that the version you pass to the `corejs` option matches the version specified in your `package.json`'s `dependencies` section. If it doesn't, you need to run one of the following commands:\n\n  npm install --save core-js@2    npm install --save core-js@3\n  yarn add core-js@2              yarn add core-js@3\n\nMore info about useBuiltIns: https://babeljs.io/docs/en/babel-preset-env#usebuiltins\nMore info about core-js: https://babeljs.io/docs/en/babel-preset-env#corejs")) : typeof e3 == "object" && e3 !== null ? (r3 = e3.version, n3 = Boolean(e3.proposals)) : r3 = e3;
          var s3 = !!r3 && LU.coerce(String(r3));
          if (!t3 && s3 && console.warn("\nWARNING (@babel/preset-env): The `corejs` option only has an effect when the `useBuiltIns` option is not `false`\n"), t3 && (!s3 || s3.major < 2 || s3.major > 3))
            throw new RangeError("Invalid Option: The version passed to `corejs` is invalid. Currently, only core-js@2 and core-js@3 are supported.");
          return { version: s3, proposals: n3 };
        }(e2.corejs, s2), i2 = cH(e2.include, rH.include, !!a2.version && a2.version.major), o2 = cH(e2.exclude, rH.exclude, !!a2.version && a2.version.major);
        return function(e3, t3) {
          e3 === void 0 && (e3 = []), t3 === void 0 && (t3 = []);
          var r3 = e3.filter(function(e4) {
            return t3.indexOf(e4) >= 0;
          });
          iH.invariant(r3.length === 0, "The plugins/built-ins '" + r3.join(", ") + `' were found in both the "include" and
    "exclude" options.`);
        }(i2, o2), { bugfixes: iH.validateBooleanOption(rH.bugfixes, e2.bugfixes, false), configPath: iH.validateStringOption(rH.configPath, e2.configPath, ar.cwd()), corejs: a2, debug: iH.validateBooleanOption(rH.debug, e2.debug, false), include: i2, exclude: o2, forceAllTransforms: iH.validateBooleanOption(rH.forceAllTransforms, e2.forceAllTransforms, false), ignoreBrowserslistConfig: iH.validateBooleanOption(rH.ignoreBrowserslistConfig, e2.ignoreBrowserslistConfig, false), loose: iH.validateBooleanOption(rH.loose, e2.loose), modules: (n2 = e2.modules, n2 === void 0 && (n2 = nH.auto), iH.invariant(nH[n2.toString()] || n2 === nH.false, `The 'modules' option must be one of 
 - 'false' to indicate no module processing
 - a specific module type: 'commonjs', 'amd', 'umd', 'systemjs' - 'auto' (default) which will automatically select 'false' if the current
   process is known to support ES module syntax, or "commonjs" otherwise
`), n2), shippedProposals: iH.validateBooleanOption(rH.shippedProposals, e2.shippedProposals, false), spec: iH.validateBooleanOption(rH.spec, e2.spec, false), targets: (r2 = e2.targets, typeof r2 == "string" || Array.isArray(r2) ? { browsers: r2 } : Object.assign({}, r2)), useBuiltIns: s2, browserslistEnv: iH.validateStringOption(rH.browserslistEnv, e2.browserslistEnv) };
      }
      var fH, hH, mH, yH, gH = new Set(["proposal-class-static-block", "proposal-private-property-in-object"]), vH = { "proposal-async-generator-functions": "syntax-async-generators", "proposal-class-properties": "syntax-class-properties", "proposal-class-static-block": "syntax-class-static-block", "proposal-json-strings": "syntax-json-strings", "proposal-nullish-coalescing-operator": "syntax-nullish-coalescing-operator", "proposal-numeric-separator": "syntax-numeric-separator", "proposal-object-rest-spread": "syntax-object-rest-spread", "proposal-optional-catch-binding": "syntax-optional-catch-binding", "proposal-optional-chaining": "syntax-optional-chaining", "proposal-private-methods": "syntax-class-properties", "proposal-private-property-in-object": "syntax-private-property-in-object", "proposal-unicode-property-regex": null }, bH = Object.keys(vH).map(function(e2) {
        return [e2, vH[e2]];
      }), EH = { pluginSyntaxMap: new Map(bH), proposalPlugins: gH }, xH = { "transform-async-to-generator": ["bugfix/transform-async-arrows-in-class"], "transform-parameters": ["bugfix/transform-edge-default-parameters"], "transform-function-name": ["bugfix/transform-edge-function-name"], "transform-block-scoping": ["bugfix/transform-safari-block-shadowing", "bugfix/transform-safari-for-shadowing"], "transform-template-literals": ["bugfix/transform-tagged-template-caching"], "proposal-optional-chaining": ["bugfix/transform-v8-spread-parameters-in-optional-chaining"] };
      function DH(e2) {
        var t2 = e2.node;
        if (t2.specifiers.length === 0)
          return t2.source.value;
      }
      function AH(e2) {
        var t2 = e2.node;
        if (C(t2)) {
          var r2 = t2.expression;
          return E(r2) && F(r2.callee) && r2.callee.name === "require" && r2.arguments.length === 1 && R(r2.arguments[0]) ? r2.arguments[0].value : void 0;
        }
      }
      function wH(e2) {
        return e2 === "@babel/polyfill" || e2 === "core-js";
      }
      function CH(e2) {
        return e2 === "regenerator-runtime/runtime" || e2 === "regenerator-runtime/runtime.js";
      }
      function SH() {
        return { name: "preset-env/remove-regenerator", visitor: { ImportDeclaration: function(e2) {
          CH(DH(e2)) && (this.regeneratorImportExcluded = true, e2.remove());
        }, Program: function(e2) {
          var t2 = this;
          e2.get("body").forEach(function(e3) {
            CH(AH(e3)) && (t2.regeneratorImportExcluded = true, e3.remove());
          });
        } }, pre: function() {
          this.regeneratorImportExcluded = false;
        }, post: function() {
          if (this.opts.debug && this.regeneratorImportExcluded) {
            var e2 = this.file.opts.filename;
            ar.env.BABEL_ENV === "test" && (e2 = e2.replace(/\\/g, "/")), console.log("\n[" + e2 + "] Based on your targets, regenerator-runtime import excluded.");
          }
        } };
      }
      var TH = "\n  `@babel/polyfill` is deprecated. Please, use required parts of `core-js`\n  and `regenerator-runtime/runtime` separately", jH = "\n  When setting `useBuiltIns: 'usage'`, polyfills are automatically imported when needed.\n  Please remove the direct import of `SPECIFIER` or use `useBuiltIns: 'entry'` instead.";
      function PH(e2, t2) {
        var r2 = e2.template, n2 = t2.regenerator, s2 = t2.deprecated, a2 = t2.usage;
        return { name: "preset-env/replace-babel-polyfill", visitor: { ImportDeclaration: function(e3) {
          var t3 = DH(e3);
          a2 && wH(t3) ? (console.warn(jH.replace("SPECIFIER", t3)), s2 || e3.remove()) : t3 === "@babel/polyfill" && (s2 ? console.warn(TH) : n2 ? e3.replaceWithMultiple(r2.ast(fH || (fH = u(['\n              import "core-js";\n              import "regenerator-runtime/runtime.js";\n            '])))) : e3.replaceWith(r2.ast(hH || (hH = u(['\n              import "core-js";\n            '])))));
        }, Program: function(e3) {
          e3.get("body").forEach(function(e4) {
            var t3 = AH(e4);
            a2 && wH(t3) ? (console.warn(jH.replace("SPECIFIER", t3)), s2 || e4.remove()) : t3 === "@babel/polyfill" && (s2 ? console.warn(TH) : n2 ? e4.replaceWithMultiple(r2.ast(mH || (mH = u(['\n                require("core-js");\n                require("regenerator-runtime/runtime.js");\n              '])))) : e4.replaceWith(r2.ast(yH || (yH = u(['\n                require("core-js");\n              '])))));
          });
        } } };
      }
      var IH, FH, kH, OH = zt(function(e2, t2) {
        var r2;
        t2 = e2.exports = p2, r2 = typeof ar == "object" && ar.env && ar.env.NODE_DEBUG && /\bsemver\b/i.test(ar.env.NODE_DEBUG) ? function() {
          var e3 = Array.prototype.slice.call(arguments, 0);
          e3.unshift("SEMVER"), console.log.apply(console, e3);
        } : function() {
        }, t2.SEMVER_SPEC_VERSION = "2.0.0";
        var n2 = Number.MAX_SAFE_INTEGER || 9007199254740991, s2 = t2.re = [], a2 = t2.src = [], i2 = t2.tokens = {}, o2 = 0;
        function u2(e3) {
          i2[e3] = o2++;
        }
        u2("NUMERICIDENTIFIER"), a2[i2.NUMERICIDENTIFIER] = "0|[1-9]\\d*", u2("NUMERICIDENTIFIERLOOSE"), a2[i2.NUMERICIDENTIFIERLOOSE] = "[0-9]+", u2("NONNUMERICIDENTIFIER"), a2[i2.NONNUMERICIDENTIFIER] = "\\d*[a-zA-Z-][a-zA-Z0-9-]*", u2("MAINVERSION"), a2[i2.MAINVERSION] = "(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")\\.(" + a2[i2.NUMERICIDENTIFIER] + ")", u2("MAINVERSIONLOOSE"), a2[i2.MAINVERSIONLOOSE] = "(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")\\.(" + a2[i2.NUMERICIDENTIFIERLOOSE] + ")", u2("PRERELEASEIDENTIFIER"), a2[i2.PRERELEASEIDENTIFIER] = "(?:" + a2[i2.NUMERICIDENTIFIER] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASEIDENTIFIERLOOSE"), a2[i2.PRERELEASEIDENTIFIERLOOSE] = "(?:" + a2[i2.NUMERICIDENTIFIERLOOSE] + "|" + a2[i2.NONNUMERICIDENTIFIER] + ")", u2("PRERELEASE"), a2[i2.PRERELEASE] = "(?:-(" + a2[i2.PRERELEASEIDENTIFIER] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIER] + ")*))", u2("PRERELEASELOOSE"), a2[i2.PRERELEASELOOSE] = "(?:-?(" + a2[i2.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + a2[i2.PRERELEASEIDENTIFIERLOOSE] + ")*))", u2("BUILDIDENTIFIER"), a2[i2.BUILDIDENTIFIER] = "[0-9A-Za-z-]+", u2("BUILD"), a2[i2.BUILD] = "(?:\\+(" + a2[i2.BUILDIDENTIFIER] + "(?:\\." + a2[i2.BUILDIDENTIFIER] + ")*))", u2("FULL"), u2("FULLPLAIN"), a2[i2.FULLPLAIN] = "v?" + a2[i2.MAINVERSION] + a2[i2.PRERELEASE] + "?" + a2[i2.BUILD] + "?", a2[i2.FULL] = "^" + a2[i2.FULLPLAIN] + "$", u2("LOOSEPLAIN"), a2[i2.LOOSEPLAIN] = "[v=\\s]*" + a2[i2.MAINVERSIONLOOSE] + a2[i2.PRERELEASELOOSE] + "?" + a2[i2.BUILD] + "?", u2("LOOSE"), a2[i2.LOOSE] = "^" + a2[i2.LOOSEPLAIN] + "$", u2("GTLT"), a2[i2.GTLT] = "((?:<|>)?=?)", u2("XRANGEIDENTIFIERLOOSE"), a2[i2.XRANGEIDENTIFIERLOOSE] = a2[i2.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*", u2("XRANGEIDENTIFIER"), a2[i2.XRANGEIDENTIFIER] = a2[i2.NUMERICIDENTIFIER] + "|x|X|\\*", u2("XRANGEPLAIN"), a2[i2.XRANGEPLAIN] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIER] + ")(?:" + a2[i2.PRERELEASE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGEPLAINLOOSE"), a2[i2.XRANGEPLAINLOOSE] = "[v=\\s]*(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + a2[i2.XRANGEIDENTIFIERLOOSE] + ")(?:" + a2[i2.PRERELEASELOOSE] + ")?" + a2[i2.BUILD] + "?)?)?", u2("XRANGE"), a2[i2.XRANGE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAIN] + "$", u2("XRANGELOOSE"), a2[i2.XRANGELOOSE] = "^" + a2[i2.GTLT] + "\\s*" + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COERCE"), a2[i2.COERCE] = "(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])", u2("COERCERTL"), s2[i2.COERCERTL] = new RegExp(a2[i2.COERCE], "g"), u2("LONETILDE"), a2[i2.LONETILDE] = "(?:~>?)", u2("TILDETRIM"), a2[i2.TILDETRIM] = "(\\s*)" + a2[i2.LONETILDE] + "\\s+", s2[i2.TILDETRIM] = new RegExp(a2[i2.TILDETRIM], "g");
        u2("TILDE"), a2[i2.TILDE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAIN] + "$", u2("TILDELOOSE"), a2[i2.TILDELOOSE] = "^" + a2[i2.LONETILDE] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("LONECARET"), a2[i2.LONECARET] = "(?:\\^)", u2("CARETTRIM"), a2[i2.CARETTRIM] = "(\\s*)" + a2[i2.LONECARET] + "\\s+", s2[i2.CARETTRIM] = new RegExp(a2[i2.CARETTRIM], "g");
        u2("CARET"), a2[i2.CARET] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAIN] + "$", u2("CARETLOOSE"), a2[i2.CARETLOOSE] = "^" + a2[i2.LONECARET] + a2[i2.XRANGEPLAINLOOSE] + "$", u2("COMPARATORLOOSE"), a2[i2.COMPARATORLOOSE] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + ")$|^$", u2("COMPARATOR"), a2[i2.COMPARATOR] = "^" + a2[i2.GTLT] + "\\s*(" + a2[i2.FULLPLAIN] + ")$|^$", u2("COMPARATORTRIM"), a2[i2.COMPARATORTRIM] = "(\\s*)" + a2[i2.GTLT] + "\\s*(" + a2[i2.LOOSEPLAIN] + "|" + a2[i2.XRANGEPLAIN] + ")", s2[i2.COMPARATORTRIM] = new RegExp(a2[i2.COMPARATORTRIM], "g");
        u2("HYPHENRANGE"), a2[i2.HYPHENRANGE] = "^\\s*(" + a2[i2.XRANGEPLAIN] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAIN] + ")\\s*$", u2("HYPHENRANGELOOSE"), a2[i2.HYPHENRANGELOOSE] = "^\\s*(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + a2[i2.XRANGEPLAINLOOSE] + ")\\s*$", u2("STAR"), a2[i2.STAR] = "(<|>)?=?\\s*\\*";
        for (var l2 = 0; l2 < o2; l2++)
          r2(l2, a2[l2]), s2[l2] || (s2[l2] = new RegExp(a2[l2]));
        function c2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2)
            return e3;
          if (typeof e3 != "string")
            return null;
          if (e3.length > 256)
            return null;
          if (!(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]).test(e3))
            return null;
          try {
            return new p2(e3, t3);
          } catch (e4) {
            return null;
          }
        }
        function p2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof p2) {
            if (e3.loose === t3.loose)
              return e3;
            e3 = e3.version;
          } else if (typeof e3 != "string")
            throw new TypeError("Invalid Version: " + e3);
          if (e3.length > 256)
            throw new TypeError("version is longer than 256 characters");
          if (!(this instanceof p2))
            return new p2(e3, t3);
          r2("SemVer", e3, t3), this.options = t3, this.loose = !!t3.loose;
          var a3 = e3.trim().match(t3.loose ? s2[i2.LOOSE] : s2[i2.FULL]);
          if (!a3)
            throw new TypeError("Invalid Version: " + e3);
          if (this.raw = e3, this.major = +a3[1], this.minor = +a3[2], this.patch = +a3[3], this.major > n2 || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > n2 || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > n2 || this.patch < 0)
            throw new TypeError("Invalid patch version");
          a3[4] ? this.prerelease = a3[4].split(".").map(function(e4) {
            if (/^[0-9]+$/.test(e4)) {
              var t4 = +e4;
              if (t4 >= 0 && t4 < n2)
                return t4;
            }
            return e4;
          }) : this.prerelease = [], this.build = a3[5] ? a3[5].split(".") : [], this.format();
        }
        t2.parse = c2, t2.valid = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 ? r3.version : null;
        }, t2.clean = function(e3, t3) {
          var r3 = c2(e3.trim().replace(/^[=v]+/, ""), t3);
          return r3 ? r3.version : null;
        }, t2.SemVer = p2, p2.prototype.format = function() {
          return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version;
        }, p2.prototype.toString = function() {
          return this.version;
        }, p2.prototype.compare = function(e3) {
          return r2("SemVer.compare", this.version, this.options, e3), e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.compareMain(e3) || this.comparePre(e3);
        }, p2.prototype.compareMain = function(e3) {
          return e3 instanceof p2 || (e3 = new p2(e3, this.options)), f2(this.major, e3.major) || f2(this.minor, e3.minor) || f2(this.patch, e3.patch);
        }, p2.prototype.comparePre = function(e3) {
          if (e3 instanceof p2 || (e3 = new p2(e3, this.options)), this.prerelease.length && !e3.prerelease.length)
            return -1;
          if (!this.prerelease.length && e3.prerelease.length)
            return 1;
          if (!this.prerelease.length && !e3.prerelease.length)
            return 0;
          var t3 = 0;
          do {
            var n3 = this.prerelease[t3], s3 = e3.prerelease[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.compareBuild = function(e3) {
          e3 instanceof p2 || (e3 = new p2(e3, this.options));
          var t3 = 0;
          do {
            var n3 = this.build[t3], s3 = e3.build[t3];
            if (r2("prerelease compare", t3, n3, s3), n3 === void 0 && s3 === void 0)
              return 0;
            if (s3 === void 0)
              return 1;
            if (n3 === void 0)
              return -1;
            if (n3 !== s3)
              return f2(n3, s3);
          } while (++t3);
        }, p2.prototype.inc = function(e3, t3) {
          switch (e3) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t3);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t3);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "prerelease":
              this.prerelease.length === 0 && this.inc("patch", t3), this.inc("pre", t3);
              break;
            case "major":
              this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              this.prerelease.length === 0 && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (this.prerelease.length === 0)
                this.prerelease = [0];
              else {
                for (var r3 = this.prerelease.length; --r3 >= 0; )
                  typeof this.prerelease[r3] == "number" && (this.prerelease[r3]++, r3 = -2);
                r3 === -1 && this.prerelease.push(0);
              }
              t3 && (this.prerelease[0] === t3 ? isNaN(this.prerelease[1]) && (this.prerelease = [t3, 0]) : this.prerelease = [t3, 0]);
              break;
            default:
              throw new Error("invalid increment argument: " + e3);
          }
          return this.format(), this.raw = this.version, this;
        }, t2.inc = function(e3, t3, r3, n3) {
          typeof r3 == "string" && (n3 = r3, r3 = void 0);
          try {
            return new p2(e3, r3).inc(t3, n3).version;
          } catch (e4) {
            return null;
          }
        }, t2.diff = function(e3, t3) {
          if (g2(e3, t3))
            return null;
          var r3 = c2(e3), n3 = c2(t3), s3 = "";
          if (r3.prerelease.length || n3.prerelease.length) {
            s3 = "pre";
            var a3 = "prerelease";
          }
          for (var i3 in r3)
            if ((i3 === "major" || i3 === "minor" || i3 === "patch") && r3[i3] !== n3[i3])
              return s3 + i3;
          return a3;
        }, t2.compareIdentifiers = f2;
        var d2 = /^[0-9]+$/;
        function f2(e3, t3) {
          var r3 = d2.test(e3), n3 = d2.test(t3);
          return r3 && n3 && (e3 = +e3, t3 = +t3), e3 === t3 ? 0 : r3 && !n3 ? -1 : n3 && !r3 ? 1 : e3 < t3 ? -1 : 1;
        }
        function h2(e3, t3, r3) {
          return new p2(e3, r3).compare(new p2(t3, r3));
        }
        function m2(e3, t3, r3) {
          return h2(e3, t3, r3) > 0;
        }
        function y2(e3, t3, r3) {
          return h2(e3, t3, r3) < 0;
        }
        function g2(e3, t3, r3) {
          return h2(e3, t3, r3) === 0;
        }
        function v2(e3, t3, r3) {
          return h2(e3, t3, r3) !== 0;
        }
        function b2(e3, t3, r3) {
          return h2(e3, t3, r3) >= 0;
        }
        function E2(e3, t3, r3) {
          return h2(e3, t3, r3) <= 0;
        }
        function x2(e3, t3, r3, n3) {
          switch (t3) {
            case "===":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 === r3;
            case "!==":
              return typeof e3 == "object" && (e3 = e3.version), typeof r3 == "object" && (r3 = r3.version), e3 !== r3;
            case "":
            case "=":
            case "==":
              return g2(e3, r3, n3);
            case "!=":
              return v2(e3, r3, n3);
            case ">":
              return m2(e3, r3, n3);
            case ">=":
              return b2(e3, r3, n3);
            case "<":
              return y2(e3, r3, n3);
            case "<=":
              return E2(e3, r3, n3);
            default:
              throw new TypeError("Invalid operator: " + t3);
          }
        }
        function D2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof D2) {
            if (e3.loose === !!t3.loose)
              return e3;
            e3 = e3.value;
          }
          if (!(this instanceof D2))
            return new D2(e3, t3);
          r2("comparator", e3, t3), this.options = t3, this.loose = !!t3.loose, this.parse(e3), this.semver === A2 ? this.value = "" : this.value = this.operator + this.semver.version, r2("comp", this);
        }
        t2.rcompareIdentifiers = function(e3, t3) {
          return f2(t3, e3);
        }, t2.major = function(e3, t3) {
          return new p2(e3, t3).major;
        }, t2.minor = function(e3, t3) {
          return new p2(e3, t3).minor;
        }, t2.patch = function(e3, t3) {
          return new p2(e3, t3).patch;
        }, t2.compare = h2, t2.compareLoose = function(e3, t3) {
          return h2(e3, t3, true);
        }, t2.compareBuild = function(e3, t3, r3) {
          var n3 = new p2(e3, r3), s3 = new p2(t3, r3);
          return n3.compare(s3) || n3.compareBuild(s3);
        }, t2.rcompare = function(e3, t3, r3) {
          return h2(t3, e3, r3);
        }, t2.sort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(e4, n3, r3);
          });
        }, t2.rsort = function(e3, r3) {
          return e3.sort(function(e4, n3) {
            return t2.compareBuild(n3, e4, r3);
          });
        }, t2.gt = m2, t2.lt = y2, t2.eq = g2, t2.neq = v2, t2.gte = b2, t2.lte = E2, t2.cmp = x2, t2.Comparator = D2;
        var A2 = {};
        function w2(e3, t3) {
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), e3 instanceof w2)
            return e3.loose === !!t3.loose && e3.includePrerelease === !!t3.includePrerelease ? e3 : new w2(e3.raw, t3);
          if (e3 instanceof D2)
            return new w2(e3.value, t3);
          if (!(this instanceof w2))
            return new w2(e3, t3);
          if (this.options = t3, this.loose = !!t3.loose, this.includePrerelease = !!t3.includePrerelease, this.raw = e3, this.set = e3.split(/\s*\|\|\s*/).map(function(e4) {
            return this.parseRange(e4.trim());
          }, this).filter(function(e4) {
            return e4.length;
          }), !this.set.length)
            throw new TypeError("Invalid SemVer Range: " + e3);
          this.format();
        }
        function C2(e3, t3) {
          for (var r3 = true, n3 = e3.slice(), s3 = n3.pop(); r3 && n3.length; )
            r3 = n3.every(function(e4) {
              return s3.intersects(e4, t3);
            }), s3 = n3.pop();
          return r3;
        }
        function S2(e3) {
          return !e3 || e3.toLowerCase() === "x" || e3 === "*";
        }
        function T2(e3, t3, r3, n3, s3, a3, i3, o3, u3, l3, c3, p3, d3) {
          return ((t3 = S2(r3) ? "" : S2(n3) ? ">=" + r3 + ".0.0" : S2(s3) ? ">=" + r3 + "." + n3 + ".0" : ">=" + t3) + " " + (o3 = S2(u3) ? "" : S2(l3) ? "<" + (+u3 + 1) + ".0.0" : S2(c3) ? "<" + u3 + "." + (+l3 + 1) + ".0" : p3 ? "<=" + u3 + "." + l3 + "." + c3 + "-" + p3 : "<=" + o3)).trim();
        }
        function j2(e3, t3, n3) {
          for (var s3 = 0; s3 < e3.length; s3++)
            if (!e3[s3].test(t3))
              return false;
          if (t3.prerelease.length && !n3.includePrerelease) {
            for (s3 = 0; s3 < e3.length; s3++)
              if (r2(e3[s3].semver), e3[s3].semver !== A2 && e3[s3].semver.prerelease.length > 0) {
                var a3 = e3[s3].semver;
                if (a3.major === t3.major && a3.minor === t3.minor && a3.patch === t3.patch)
                  return true;
              }
            return false;
          }
          return true;
        }
        function P2(e3, t3, r3) {
          try {
            t3 = new w2(t3, r3);
          } catch (e4) {
            return false;
          }
          return t3.test(e3);
        }
        function I2(e3, t3, r3, n3) {
          var s3, a3, i3, o3, u3;
          switch (e3 = new p2(e3, n3), t3 = new w2(t3, n3), r3) {
            case ">":
              s3 = m2, a3 = E2, i3 = y2, o3 = ">", u3 = ">=";
              break;
            case "<":
              s3 = y2, a3 = b2, i3 = m2, o3 = "<", u3 = "<=";
              break;
            default:
              throw new TypeError('Must provide a hilo val of "<" or ">"');
          }
          if (P2(e3, t3, n3))
            return false;
          for (var l3 = 0; l3 < t3.set.length; ++l3) {
            var c3 = t3.set[l3], d3 = null, f3 = null;
            if (c3.forEach(function(e4) {
              e4.semver === A2 && (e4 = new D2(">=0.0.0")), d3 = d3 || e4, f3 = f3 || e4, s3(e4.semver, d3.semver, n3) ? d3 = e4 : i3(e4.semver, f3.semver, n3) && (f3 = e4);
            }), d3.operator === o3 || d3.operator === u3)
              return false;
            if ((!f3.operator || f3.operator === o3) && a3(e3, f3.semver))
              return false;
            if (f3.operator === u3 && i3(e3, f3.semver))
              return false;
          }
          return true;
        }
        D2.prototype.parse = function(e3) {
          var t3 = this.options.loose ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], r3 = e3.match(t3);
          if (!r3)
            throw new TypeError("Invalid comparator: " + e3);
          this.operator = r3[1] !== void 0 ? r3[1] : "", this.operator === "=" && (this.operator = ""), r3[2] ? this.semver = new p2(r3[2], this.options.loose) : this.semver = A2;
        }, D2.prototype.toString = function() {
          return this.value;
        }, D2.prototype.test = function(e3) {
          if (r2("Comparator.test", e3, this.options.loose), this.semver === A2 || e3 === A2)
            return true;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          return x2(e3, this.operator, this.semver, this.options);
        }, D2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof D2))
            throw new TypeError("a Comparator is required");
          var r3;
          if (t3 && typeof t3 == "object" || (t3 = { loose: !!t3, includePrerelease: false }), this.operator === "")
            return this.value === "" || (r3 = new w2(e3.value, t3), P2(this.value, r3, t3));
          if (e3.operator === "")
            return e3.value === "" || (r3 = new w2(this.value, t3), P2(e3.semver, r3, t3));
          var n3 = !(this.operator !== ">=" && this.operator !== ">" || e3.operator !== ">=" && e3.operator !== ">"), s3 = !(this.operator !== "<=" && this.operator !== "<" || e3.operator !== "<=" && e3.operator !== "<"), a3 = this.semver.version === e3.semver.version, i3 = !(this.operator !== ">=" && this.operator !== "<=" || e3.operator !== ">=" && e3.operator !== "<="), o3 = x2(this.semver, "<", e3.semver, t3) && (this.operator === ">=" || this.operator === ">") && (e3.operator === "<=" || e3.operator === "<"), u3 = x2(this.semver, ">", e3.semver, t3) && (this.operator === "<=" || this.operator === "<") && (e3.operator === ">=" || e3.operator === ">");
          return n3 || s3 || a3 && i3 || o3 || u3;
        }, t2.Range = w2, w2.prototype.format = function() {
          return this.range = this.set.map(function(e3) {
            return e3.join(" ").trim();
          }).join("||").trim(), this.range;
        }, w2.prototype.toString = function() {
          return this.range;
        }, w2.prototype.parseRange = function(e3) {
          var t3 = this.options.loose;
          e3 = e3.trim();
          var n3 = t3 ? s2[i2.HYPHENRANGELOOSE] : s2[i2.HYPHENRANGE];
          e3 = e3.replace(n3, T2), r2("hyphen replace", e3), e3 = e3.replace(s2[i2.COMPARATORTRIM], "$1$2$3"), r2("comparator trim", e3, s2[i2.COMPARATORTRIM]), e3 = (e3 = (e3 = e3.replace(s2[i2.TILDETRIM], "$1~")).replace(s2[i2.CARETTRIM], "$1^")).split(/\s+/).join(" ");
          var a3 = t3 ? s2[i2.COMPARATORLOOSE] : s2[i2.COMPARATOR], o3 = e3.split(" ").map(function(e4) {
            return function(e5, t4) {
              return r2("comp", e5, t4), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    r2("caret", e8, t6);
                    var n4 = t6.loose ? s2[i2.CARETLOOSE] : s2[i2.CARET];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("caret", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = n5 === "0" ? ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + ".0 <" + (+n5 + 1) + ".0.0" : i3 ? (r2("replaceCaret pr", i3), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + (+n5 + 1) + ".0.0") : (r2("no pr"), o4 = n5 === "0" ? s3 === "0" ? ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + s3 + "." + (+a4 + 1) : ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0" : ">=" + n5 + "." + s3 + "." + a4 + " <" + (+n5 + 1) + ".0.0"), r2("caret return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("caret", e5), e5 = function(e6, t5) {
                return e6.trim().split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    var n4 = t6.loose ? s2[i2.TILDELOOSE] : s2[i2.TILDE];
                    return e8.replace(n4, function(t7, n5, s3, a4, i3) {
                      var o4;
                      return r2("tilde", e8, t7, n5, s3, a4, i3), S2(n5) ? o4 = "" : S2(s3) ? o4 = ">=" + n5 + ".0.0 <" + (+n5 + 1) + ".0.0" : S2(a4) ? o4 = ">=" + n5 + "." + s3 + ".0 <" + n5 + "." + (+s3 + 1) + ".0" : i3 ? (r2("replaceTilde pr", i3), o4 = ">=" + n5 + "." + s3 + "." + a4 + "-" + i3 + " <" + n5 + "." + (+s3 + 1) + ".0") : o4 = ">=" + n5 + "." + s3 + "." + a4 + " <" + n5 + "." + (+s3 + 1) + ".0", r2("tilde return", o4), o4;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("tildes", e5), e5 = function(e6, t5) {
                return r2("replaceXRanges", e6, t5), e6.split(/\s+/).map(function(e7) {
                  return function(e8, t6) {
                    e8 = e8.trim();
                    var n4 = t6.loose ? s2[i2.XRANGELOOSE] : s2[i2.XRANGE];
                    return e8.replace(n4, function(n5, s3, a4, i3, o4, u3) {
                      r2("xRange", e8, n5, s3, a4, i3, o4, u3);
                      var l3 = S2(a4), c3 = l3 || S2(i3), p3 = c3 || S2(o4), d3 = p3;
                      return s3 === "=" && d3 && (s3 = ""), u3 = t6.includePrerelease ? "-0" : "", l3 ? n5 = s3 === ">" || s3 === "<" ? "<0.0.0-0" : "*" : s3 && d3 ? (c3 && (i3 = 0), o4 = 0, s3 === ">" ? (s3 = ">=", c3 ? (a4 = +a4 + 1, i3 = 0, o4 = 0) : (i3 = +i3 + 1, o4 = 0)) : s3 === "<=" && (s3 = "<", c3 ? a4 = +a4 + 1 : i3 = +i3 + 1), n5 = s3 + a4 + "." + i3 + "." + o4 + u3) : c3 ? n5 = ">=" + a4 + ".0.0" + u3 + " <" + (+a4 + 1) + ".0.0" + u3 : p3 && (n5 = ">=" + a4 + "." + i3 + ".0" + u3 + " <" + a4 + "." + (+i3 + 1) + ".0" + u3), r2("xRange return", n5), n5;
                    });
                  }(e7, t5);
                }).join(" ");
              }(e5, t4), r2("xrange", e5), e5 = function(e6, t5) {
                return r2("replaceStars", e6, t5), e6.trim().replace(s2[i2.STAR], "");
              }(e5, t4), r2("stars", e5), e5;
            }(e4, this.options);
          }, this).join(" ").split(/\s+/);
          return this.options.loose && (o3 = o3.filter(function(e4) {
            return !!e4.match(a3);
          })), o3 = o3.map(function(e4) {
            return new D2(e4, this.options);
          }, this);
        }, w2.prototype.intersects = function(e3, t3) {
          if (!(e3 instanceof w2))
            throw new TypeError("a Range is required");
          return this.set.some(function(r3) {
            return C2(r3, t3) && e3.set.some(function(e4) {
              return C2(e4, t3) && r3.every(function(r4) {
                return e4.every(function(e5) {
                  return r4.intersects(e5, t3);
                });
              });
            });
          });
        }, t2.toComparators = function(e3, t3) {
          return new w2(e3, t3).set.map(function(e4) {
            return e4.map(function(e5) {
              return e5.value;
            }).join(" ").trim().split(" ");
          });
        }, w2.prototype.test = function(e3) {
          if (!e3)
            return false;
          if (typeof e3 == "string")
            try {
              e3 = new p2(e3, this.options);
            } catch (e4) {
              return false;
            }
          for (var t3 = 0; t3 < this.set.length; t3++)
            if (j2(this.set[t3], e3, this.options))
              return true;
          return false;
        }, t2.satisfies = P2, t2.maxSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== -1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minSatisfying = function(e3, t3, r3) {
          var n3 = null, s3 = null;
          try {
            var a3 = new w2(t3, r3);
          } catch (e4) {
            return null;
          }
          return e3.forEach(function(e4) {
            a3.test(e4) && (n3 && s3.compare(e4) !== 1 || (s3 = new p2(n3 = e4, r3)));
          }), n3;
        }, t2.minVersion = function(e3, t3) {
          e3 = new w2(e3, t3);
          var r3 = new p2("0.0.0");
          if (e3.test(r3))
            return r3;
          if (r3 = new p2("0.0.0-0"), e3.test(r3))
            return r3;
          r3 = null;
          for (var n3 = 0; n3 < e3.set.length; ++n3) {
            e3.set[n3].forEach(function(e4) {
              var t4 = new p2(e4.semver.version);
              switch (e4.operator) {
                case ">":
                  t4.prerelease.length === 0 ? t4.patch++ : t4.prerelease.push(0), t4.raw = t4.format();
                case "":
                case ">=":
                  r3 && !m2(r3, t4) || (r3 = t4);
                  break;
                case "<":
                case "<=":
                  break;
                default:
                  throw new Error("Unexpected operation: " + e4.operator);
              }
            });
          }
          if (r3 && e3.test(r3))
            return r3;
          return null;
        }, t2.validRange = function(e3, t3) {
          try {
            return new w2(e3, t3).range || "*";
          } catch (e4) {
            return null;
          }
        }, t2.ltr = function(e3, t3, r3) {
          return I2(e3, t3, "<", r3);
        }, t2.gtr = function(e3, t3, r3) {
          return I2(e3, t3, ">", r3);
        }, t2.outside = I2, t2.prerelease = function(e3, t3) {
          var r3 = c2(e3, t3);
          return r3 && r3.prerelease.length ? r3.prerelease : null;
        }, t2.intersects = function(e3, t3, r3) {
          return e3 = new w2(e3, r3), t3 = new w2(t3, r3), e3.intersects(t3);
        }, t2.coerce = function(e3, t3) {
          if (e3 instanceof p2)
            return e3;
          typeof e3 == "number" && (e3 = String(e3));
          if (typeof e3 != "string")
            return null;
          var r3 = null;
          if ((t3 = t3 || {}).rtl) {
            for (var n3; (n3 = s2[i2.COERCERTL].exec(e3)) && (!r3 || r3.index + r3[0].length !== e3.length); )
              r3 && n3.index + n3[0].length === r3.index + r3[0].length || (r3 = n3), s2[i2.COERCERTL].lastIndex = n3.index + n3[1].length + n3[2].length;
            s2[i2.COERCERTL].lastIndex = -1;
          } else
            r3 = e3.match(s2[i2.COERCE]);
          if (r3 === null)
            return null;
          return c2(r3[2] + "." + (r3[3] || "0") + "." + (r3[4] || "0"), t3);
        };
      }, "/$$rollup_base$$/packages/babel-preset-env/node_modules/babel-plugin-polyfill-corejs2/node_modules/semver"), RH = ["method", "targets", "ignoreBrowserslistConfig", "configPath", "debug", "shouldInjectPolyfill", "absoluteImports"], NH = t, BH = NH.types, _H = NH.template;
      function LH(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }
      function MH(e2) {
        if (e2.isIdentifier() && !e2.scope.hasBinding(e2.node.name, true))
          return e2.node.name;
        var t2 = e2.evaluate().deopt;
        return t2 && t2.isIdentifier() ? t2.node.name : void 0;
      }
      function UH(e2, t2) {
        t2 === void 0 && (t2 = false);
        var r2 = e2.node, n2 = e2.parent, s2 = e2.scope;
        if (e2.isStringLiteral())
          return r2.value;
        var a2 = r2.name, i2 = e2.isIdentifier();
        if (i2 && !t2 && !n2.computed)
          return a2;
        if (t2 && e2.isMemberExpression() && e2.get("object").isIdentifier({ name: "Symbol" }) && !s2.hasBinding("Symbol", true)) {
          var o2 = UH(e2.get("property"), e2.node.computed);
          if (o2)
            return "Symbol." + o2;
        }
        if (!i2 || s2.hasBinding(a2, true)) {
          var u2 = e2.evaluate().value;
          if (typeof u2 == "string")
            return u2;
        }
      }
      function GH(e2) {
        if (e2.isMemberExpression() && e2.get("property").isIdentifier({ name: "prototype" })) {
          var t2 = MH(e2.get("object"));
          return t2 ? { id: t2, placement: "prototype" } : { id: null, placement: null };
        }
        var r2 = MH(e2);
        if (r2)
          return { id: r2, placement: "static" };
        var n2, s2 = e2.evaluate().value;
        return s2 !== void 0 ? { id: (n2 = s2, Object.prototype.toString.call(n2).slice(8, -1)), placement: "prototype" } : e2.isRegExpLiteral() ? { id: "RegExp", placement: "prototype" } : e2.isFunction() ? { id: "Function", placement: "prototype" } : { id: null, placement: null };
      }
      function VH(e2) {
        return e2._blockHoist = 3, e2;
      }
      var WH = t.types, HH = function() {
        function e2(e3) {
          this._imports = new WeakMap(), this._anonymousImports = new WeakMap(), this._lastImports = new WeakMap(), this._resolver = e3;
        }
        var t2 = e2.prototype;
        return t2.storeAnonymous = function(e3, t3, r2) {
          var n2 = this._normalizeKey(e3, t3), s2 = this._ensure(this._anonymousImports, e3, Set);
          if (!s2.has(n2)) {
            var a2 = r2(e3.node.sourceType === "script", WH.stringLiteral(this._resolver(t3)));
            s2.add(n2), this._injectImport(e3, a2);
          }
        }, t2.storeNamed = function(e3, t3, r2, n2) {
          var s2 = this._normalizeKey(e3, t3, r2), a2 = this._ensure(this._imports, e3, Map);
          if (!a2.has(s2)) {
            var i2 = n2(e3.node.sourceType === "script", WH.stringLiteral(this._resolver(t3)), WH.identifier(r2)), o2 = i2.node, u2 = i2.name;
            a2.set(s2, u2), this._injectImport(e3, o2);
          }
          return WH.identifier(a2.get(s2));
        }, t2._injectImport = function(e3, t3) {
          var r2 = this._lastImports.get(e3);
          r2 = (r2 = r2 && r2.node && r2.parent === e3.node && r2.container === e3.node.body ? r2.insertAfter(t3) : e3.unshiftContainer("body", t3))[r2.length - 1], this._lastImports.set(e3, r2);
        }, t2._ensure = function(e3, t3, r2) {
          var n2 = e3.get(t3);
          return n2 || (n2 = new r2(), e3.set(t3, n2)), n2;
        }, t2._normalizeKey = function(e3, t3, r2) {
          r2 === void 0 && (r2 = "");
          var n2 = e3.node.sourceType;
          return (r2 && n2) + "::" + t3 + "::" + r2;
        }, e2;
      }();
      function XH(e2, t2) {
        return t2.length ? '  - The following "' + e2 + `" patterns didn't match any polyfill:
` + t2.map(function(e3) {
          return "    " + String(e3) + "\n";
        }).join("") : "";
      }
      function qH(e2, t2, r2, n2) {
        var s2, a2, i2, o2, u2 = function(e3) {
          var r3 = function(e4) {
            if (e4 instanceof RegExp)
              return e4;
            try {
              return new RegExp("^" + e4 + "$");
            } catch (e5) {
              return null;
            }
          }(e3);
          if (!r3)
            return false;
          for (var n3, a3 = false, i3 = f(t2); !(n3 = i3()).done; ) {
            var o3 = n3.value;
            r3.test(o3) && (a3 = true, s2.add(o3));
          }
          return !a3;
        }, l2 = s2 = new Set(), c2 = Array.from(r2).filter(u2), p2 = s2 = new Set(), d2 = Array.from(n2).filter(u2), h2 = (a2 = l2, i2 = p2, o2 = new Set(), a2.forEach(function(e3) {
          return i2.has(e3) && o2.add(e3);
        }), o2);
        if (h2.size > 0 || c2.length > 0 || d2.length > 0)
          throw new Error('Error while validating the "' + e2 + '" provider options:\n' + XH("include", c2) + XH("exclude", d2) + function(e3) {
            return e3.size ? '  - The following polyfills were matched both by "include" and "exclude" patterns:\n' + Array.from(e3, function(e4) {
              return "    " + e4 + "\n";
            }).join("") : "";
          }(h2));
        return { include: l2, exclude: p2 };
      }
      var $H = function(e2) {
        function t2(t3, r2, n2, s2) {
          return e2({ kind: "property", object: t3, key: r2, placement: n2 }, s2);
        }
        return { ReferencedIdentifier: function(t3) {
          var r2 = t3.node.name;
          t3.scope.getBindingIdentifier(r2) || e2({ kind: "global", name: r2 }, t3);
        }, MemberExpression: function(e3) {
          var r2 = UH(e3.get("property"), e3.node.computed);
          if (r2 && r2 !== "prototype") {
            var n2 = e3.get("object"), s2 = n2.scope.getBinding(n2.node.name);
            if (!s2 || !s2.path.isImportNamespaceSpecifier()) {
              var a2 = GH(n2);
              return t2(a2.id, r2, a2.placement, e3);
            }
          }
        }, ObjectPattern: function(e3) {
          var r2, n2 = e3.parentPath, s2 = e3.parent;
          if (n2.isVariableDeclarator())
            r2 = n2.get("init");
          else if (n2.isAssignmentExpression())
            r2 = n2.get("right");
          else if (n2.isFunction()) {
            var a2 = n2.parentPath;
            (a2.isCallExpression() || a2.isNewExpression()) && a2.node.callee === s2 && (r2 = a2.get("arguments")[e3.key]);
          }
          var i2 = null, o2 = null;
          if (r2) {
            var u2 = GH(r2);
            i2 = u2.id, o2 = u2.placement;
          }
          for (var l2, c2 = f(e3.get("properties")); !(l2 = c2()).done; ) {
            var p2 = l2.value;
            if (p2.isObjectProperty()) {
              var d2 = UH(p2.get("key"));
              d2 && t2(i2, d2, o2, p2);
            }
          }
        }, BinaryExpression: function(t3) {
          if (t3.node.operator === "in") {
            var r2 = GH(t3.get("right")), n2 = UH(t3.get("left"), true);
            n2 && e2({ kind: "in", object: r2.id, key: n2, placement: r2.placement }, t3);
          }
        } };
      }, KH = function(e2) {
        return { ImportDeclaration: function(t2) {
          var r2 = function(e3) {
            var t3 = e3.node;
            if (t3.specifiers.length === 0)
              return t3.source.value;
          }(t2);
          r2 && e2({ kind: "import", source: r2 }, t2);
        }, Program: function(t2) {
          t2.get("body").forEach(function(t3) {
            var r2 = function(e3) {
              var t4 = e3.node;
              if (BH.isExpressionStatement(t4)) {
                var r3 = t4.expression;
                return BH.isCallExpression(r3) && BH.isIdentifier(r3.callee) && r3.callee.name === "require" && r3.arguments.length === 1 && BH.isStringLiteral(r3.arguments[0]) ? r3.arguments[0].value : void 0;
              }
            }(t3);
            r2 && e2({ kind: "import", source: r2 }, t3);
          });
        } };
      };
      var zH = new Set(["global", "globalThis", "self", "window"]);
      function JH(e2) {
        var t2 = e2.static, r2 = e2.instance, n2 = e2.global;
        return function(e3) {
          if (e3.kind === "global" && n2 && LH(n2, e3.name))
            return { kind: "global", desc: n2[e3.name], name: e3.name };
          if (e3.kind === "property" || e3.kind === "in") {
            var s2 = e3.placement, a2 = e3.object, i2 = e3.key;
            if (a2 && s2 === "static") {
              if (n2 && zH.has(a2) && LH(n2, i2))
                return { kind: "global", desc: n2[i2], name: i2 };
              if (t2 && LH(t2, a2) && LH(t2[a2], i2))
                return { kind: "static", desc: t2[a2][i2], name: a2 + "$" + i2 };
            }
            if (r2 && LH(r2, i2))
              return { kind: "instance", desc: r2[i2], name: "" + i2 };
          }
        };
      }
      var YH = sT.default || sT;
      function QH(e2, t2, r2, n2, s2, a2) {
        var i2, l2, c2, p2, d2, f2 = function(e3, t3) {
          var r3, n3, s3 = e3.method, a3 = e3.targets, i3 = e3.ignoreBrowserslistConfig, u2 = e3.configPath, l3 = e3.debug, c3 = e3.shouldInjectPolyfill, p3 = e3.absoluteImports, d3 = o(e3, RH);
          if (s3 === "usage-global")
            r3 = "usageGlobal";
          else if (s3 === "entry-global")
            r3 = "entryGlobal";
          else {
            if (s3 !== "usage-pure")
              throw typeof s3 != "string" ? new Error(".method must be a string") : new Error('.method must be one of "entry-global", "usage-global" or "usage-pure" (received ' + JSON.stringify(s3) + ")");
            r3 = "usagePure";
          }
          if (typeof c3 == "function") {
            if (e3.include || e3.exclude)
              throw new Error(".include and .exclude are not supported when using the .shouldInjectPolyfill function.");
          } else if (c3 != null)
            throw new Error(".shouldInjectPolyfill must be a function, or undefined (received " + JSON.stringify(c3) + ")");
          if (p3 != null && typeof p3 != "boolean" && typeof p3 != "string")
            throw new Error(".absoluteImports must be a boolean, a string, or undefined (received " + JSON.stringify(p3) + ")");
          if (a3 || u2 || i3) {
            var f3 = typeof a3 == "string" || Array.isArray(a3) ? { browsers: a3 } : a3;
            n3 = YH(f3, { ignoreBrowserslistConfig: i3, configPath: u2 });
          } else
            n3 = t3.targets();
          return { method: s3, methodName: r3, targets: n3, absoluteImports: p3 != null && p3, shouldInjectPolyfill: c3, debug: !!l3, providerOptions: d3 };
        }(t2, a2), h2 = f2.method, m2 = f2.methodName, y2 = f2.targets, g2 = f2.debug, v2 = f2.shouldInjectPolyfill, b2 = f2.providerOptions, E2 = f2.absoluteImports, x2 = function(e3) {
          return function(t3) {
            var r3 = t3.findParent(function(e4) {
              return e4.isProgram();
            });
            return { injectGlobalImport: function(t4) {
              e3.storeAnonymous(r3, t4, function(e4, t5) {
                return e4 ? _H.statement.ast(IH || (IH = u(["require(", ")"])), t5) : BH.importDeclaration([], t5);
              });
            }, injectNamedImport: function(t4, n3, s3) {
              return s3 === void 0 && (s3 = n3), e3.storeNamed(r3, t4, n3, function(e4, t5, n4) {
                var a3 = r3.scope.generateUidIdentifier(s3);
                return { node: e4 ? VH(_H.statement.ast(FH || (FH = u(["\n                  var ", " = require(", ").", "\n                "])), a3, t5, n4)) : BH.importDeclaration([BH.importSpecifier(a3, n4)], t5), name: a3.name };
              });
            }, injectDefaultImport: function(t4, n3) {
              return n3 === void 0 && (n3 = t4), e3.storeNamed(r3, t4, "default", function(e4, t5) {
                var s3 = r3.scope.generateUidIdentifier(n3);
                return { node: e4 ? VH(_H.statement.ast(kH || (kH = u(["var ", " = require(", ")"])), s3, t5)) : BH.importDeclaration([BH.importDefaultSpecifier(s3)], t5), name: s3.name };
              });
            } };
          };
        }(new HH(function(e3) {
          return function(e4, t3, r3) {
            if (r3 === false)
              return t3;
            throw new Error('"absoluteImports" is not supported in bundles prepared for the browser.');
          }(0, e3, E2);
        })), D2 = new Map(), A2 = { babel: a2, getUtils: x2, method: t2.method, targets: y2, createMetaResolver: JH, shouldInjectPolyfill: function(t3) {
          if (p2 === void 0)
            throw new Error("Internal error in the " + e2.name + " provider: shouldInjectPolyfill() can't be called during initialization.");
          if (p2.has(t3) || console.warn("Internal error in the " + w2.name + ' provider: unknown polyfill "' + t3 + '".'), d2 && !d2(t3))
            return false;
          var r3 = YS(t3, y2, { compatData: c2, includes: i2, excludes: l2 });
          if (v2 && typeof (r3 = v2(t3, r3)) != "boolean")
            throw new Error(".shouldInjectPolyfill must return a boolean.");
          return r3;
        }, debug: function(e3) {
          s2().found = true, g2 && e3 && (s2().polyfills.has(w2.name) || s2().polyfills.set(e3, c2 && e3 && c2[e3]));
        }, assertDependency: function(e3, t3) {
          if (t3 === void 0 && (t3 = "*"), r2 !== false && !E2) {
            var a3 = t3 === "*" ? e3 : e3 + "@^" + t3;
            !r2.all && function(e4, t4, r3) {
              var n3 = e4.get(t4);
              n3 === void 0 && (n3 = r3(), e4.set(t4, n3));
              return n3;
            }(D2, e3 + " :: " + n2, function() {
              return true;
            }) || s2().missingDeps.add(a3);
          }
        } }, w2 = e2(A2, b2, n2);
        if (typeof w2[m2] != "function")
          throw new Error('The "' + (w2.name || e2.name) + `" provider doesn't support the "` + h2 + '" polyfilling method.');
        Array.isArray(w2.polyfills) ? (p2 = new Set(w2.polyfills), d2 = w2.filterPolyfills) : w2.polyfills ? (p2 = new Set(Object.keys(w2.polyfills)), c2 = w2.polyfills, d2 = w2.filterPolyfills) : p2 = new Set();
        var C2 = qH(w2.name || e2.name, p2, b2.include || [], b2.exclude || []);
        return i2 = C2.include, l2 = C2.exclude, { debug: g2, method: h2, targets: y2, provider: w2, callProvider: function(e3, t3) {
          var r3 = x2(t3);
          w2[m2](e3, r3, t3);
        } };
      }
      function ZH(e2) {
        return jF(function(t2, r2, n2) {
          t2.assertVersion(7);
          var s2, a2 = t2.traverse, i2 = function(e3, t3) {
            var r3 = e3.missingDependencies, n3 = r3 === void 0 ? {} : r3;
            if (n3 === false)
              return false;
            var s3 = t3.caller(function(e4) {
              return e4 == null ? void 0 : e4.name;
            }), a3 = n3.log, i3 = a3 === void 0 ? "deferred" : a3, o3 = n3.inject, u3 = o3 === void 0 ? s3 === "rollup-plugin-babel" ? "throw" : "import" : o3, l2 = n3.all;
            return { log: i3, inject: u3, all: l2 !== void 0 && l2 };
          }(r2, t2), o2 = QH(e2, r2, i2, n2, function() {
            return s2;
          }, t2), u2 = o2.debug, c2 = o2.method, p2 = o2.targets, d2 = o2.provider, h2 = o2.callProvider, m2 = c2 === "entry-global" ? KH : $H, y2 = d2.visitor ? a2.visitors.merge([m2(h2), d2.visitor]) : m2(h2);
          return u2 && u2 !== "#__secret_key__@babel/preset-env__don't_log_debug_header_and_resolved_targets" && (console.log(d2.name + ": `DEBUG` option"), console.log("\nUsing targets: " + function(e3) {
            return JSON.stringify(KS(e3), null, 2);
          }(p2)), console.log("\nUsing polyfills with `" + c2 + "` method:")), { name: "inject-polyfills", visitor: y2, pre: function() {
            var e3;
            s2 = { polyfills: new Map(), found: false, providers: new Set(), missingDeps: new Set() }, (e3 = d2.pre) == null || e3.apply(this, arguments);
          }, post: function() {
            var e3;
            if ((e3 = d2.post) == null || e3.apply(this, arguments), i2 !== false && (i2.log, s2.missingDeps), u2)
              if (this.filename && console.log("\n[" + this.filename + "]"), s2.polyfills.size !== 0) {
                c2 === "entry-global" ? console.log("The " + d2.name + " polyfill entry has been replaced with the following polyfills:") : console.log("The " + d2.name + " polyfill added the following polyfills:");
                for (var t3, r3 = f(s2.polyfills); !(t3 = r3()).done; ) {
                  var n3 = l(t3.value, 2), a3 = n3[0], o3 = n3[1];
                  if (o3) {
                    var h3 = zS(a3, p2, o3), m3 = JSON.stringify(h3).replace(/,/g, ", ").replace(/^\{"/, '{ "').replace(/"\}$/, '" }');
                    console.log("  " + a3 + " " + m3);
                  } else
                    console.log("  " + a3);
                }
              } else
                console.log(c2 === "entry-global" ? s2.found ? "Based on your targets, the " + d2.name + " polyfill did not add any polyfill." : "The entry point for the " + d2.name + " polyfill has not been found." : "Based on your code and targets, the " + d2.name + " polyfill did not add any polyfill.");
          } };
        });
      }
      var eX = function(e2, t2, r2, n2) {
        return r2 === void 0 && (r2 = []), { name: e2, pure: t2, global: r2, meta: n2 };
      }, tX = function(e2, t2, r2) {
        return r2 === void 0 && (r2 = null), eX(t2[0], e2, t2, { minRuntimeVersion: r2 });
      }, rX = function(e2) {
        return eX(e2[0], null, e2);
      }, nX = function(e2, t2) {
        return eX(t2, e2, []);
      }, sX = ["es6.object.to-string", "es6.array.iterator", "web.dom.iterable"], aX = ["es6.string.iterator"].concat(sX), iX = ["es6.object.to-string", "es6.promise"], oX = { DataView: rX(["es6.typed.data-view"]), Float32Array: rX(["es6.typed.float32-array"]), Float64Array: rX(["es6.typed.float64-array"]), Int8Array: rX(["es6.typed.int8-array"]), Int16Array: rX(["es6.typed.int16-array"]), Int32Array: rX(["es6.typed.int32-array"]), Map: tX("map", ["es6.map"].concat(c(aX))), Number: rX(["es6.number.constructor"]), Promise: tX("promise", iX), RegExp: rX(["es6.regexp.constructor"]), Set: tX("set", ["es6.set"].concat(c(aX))), Symbol: tX("symbol", ["es6.symbol"]), Uint8Array: rX(["es6.typed.uint8-array"]), Uint8ClampedArray: rX(["es6.typed.uint8-clamped-array"]), Uint16Array: rX(["es6.typed.uint16-array"]), Uint32Array: rX(["es6.typed.uint32-array"]), WeakMap: tX("weak-map", ["es6.weak-map"].concat(c(aX))), WeakSet: tX("weak-set", ["es6.weak-set"].concat(c(aX))), setImmediate: nX("set-immediate", "web.immediate"), clearImmediate: nX("clear-immediate", "web.immediate"), parseFloat: nX("parse-float", "es6.parse-float"), parseInt: nX("parse-int", "es6.parse-int") }, uX = { __defineGetter__: rX(["es7.object.define-getter"]), __defineSetter__: rX(["es7.object.define-setter"]), __lookupGetter__: rX(["es7.object.lookup-getter"]), __lookupSetter__: rX(["es7.object.lookup-setter"]), anchor: rX(["es6.string.anchor"]), big: rX(["es6.string.big"]), bind: rX(["es6.function.bind"]), blink: rX(["es6.string.blink"]), bold: rX(["es6.string.bold"]), codePointAt: rX(["es6.string.code-point-at"]), copyWithin: rX(["es6.array.copy-within"]), endsWith: rX(["es6.string.ends-with"]), entries: rX(sX), every: rX(["es6.array.every"]), fill: rX(["es6.array.fill"]), filter: rX(["es6.array.filter"]), finally: rX(["es7.promise.finally"].concat(iX)), find: rX(["es6.array.find"]), findIndex: rX(["es6.array.find-index"]), fixed: rX(["es6.string.fixed"]), flags: rX(["es6.regexp.flags"]), flatMap: rX(["es7.array.flat-map"]), fontcolor: rX(["es6.string.fontcolor"]), fontsize: rX(["es6.string.fontsize"]), forEach: rX(["es6.array.for-each"]), includes: rX(["es6.string.includes", "es7.array.includes"]), indexOf: rX(["es6.array.index-of"]), italics: rX(["es6.string.italics"]), keys: rX(sX), lastIndexOf: rX(["es6.array.last-index-of"]), link: rX(["es6.string.link"]), map: rX(["es6.array.map"]), match: rX(["es6.regexp.match"]), name: rX(["es6.function.name"]), padStart: rX(["es7.string.pad-start"]), padEnd: rX(["es7.string.pad-end"]), reduce: rX(["es6.array.reduce"]), reduceRight: rX(["es6.array.reduce-right"]), repeat: rX(["es6.string.repeat"]), replace: rX(["es6.regexp.replace"]), search: rX(["es6.regexp.search"]), small: rX(["es6.string.small"]), some: rX(["es6.array.some"]), sort: rX(["es6.array.sort"]), split: rX(["es6.regexp.split"]), startsWith: rX(["es6.string.starts-with"]), strike: rX(["es6.string.strike"]), sub: rX(["es6.string.sub"]), sup: rX(["es6.string.sup"]), toISOString: rX(["es6.date.to-iso-string"]), toJSON: rX(["es6.date.to-json"]), toString: rX(["es6.object.to-string", "es6.date.to-string", "es6.regexp.to-string"]), trim: rX(["es6.string.trim"]), trimEnd: rX(["es7.string.trim-right"]), trimLeft: rX(["es7.string.trim-left"]), trimRight: rX(["es7.string.trim-right"]), trimStart: rX(["es7.string.trim-left"]), values: rX(sX) };
      "es6.array.slice" in TR && (uX.slice = rX(["es6.array.slice"]));
      var lX = { Array: { from: tX("array/from", ["es6.symbol", "es6.array.from"].concat(c(aX))), isArray: tX("array/is-array", ["es6.array.is-array"]), of: tX("array/of", ["es6.array.of"]) }, Date: { now: tX("date/now", ["es6.date.now"]) }, JSON: { stringify: nX("json/stringify", "es6.symbol") }, Math: { acosh: tX("math/acosh", ["es6.math.acosh"], "7.0.1"), asinh: tX("math/asinh", ["es6.math.asinh"], "7.0.1"), atanh: tX("math/atanh", ["es6.math.atanh"], "7.0.1"), cbrt: tX("math/cbrt", ["es6.math.cbrt"], "7.0.1"), clz32: tX("math/clz32", ["es6.math.clz32"], "7.0.1"), cosh: tX("math/cosh", ["es6.math.cosh"], "7.0.1"), expm1: tX("math/expm1", ["es6.math.expm1"], "7.0.1"), fround: tX("math/fround", ["es6.math.fround"], "7.0.1"), hypot: tX("math/hypot", ["es6.math.hypot"], "7.0.1"), imul: tX("math/imul", ["es6.math.imul"], "7.0.1"), log1p: tX("math/log1p", ["es6.math.log1p"], "7.0.1"), log10: tX("math/log10", ["es6.math.log10"], "7.0.1"), log2: tX("math/log2", ["es6.math.log2"], "7.0.1"), sign: tX("math/sign", ["es6.math.sign"], "7.0.1"), sinh: tX("math/sinh", ["es6.math.sinh"], "7.0.1"), tanh: tX("math/tanh", ["es6.math.tanh"], "7.0.1"), trunc: tX("math/trunc", ["es6.math.trunc"], "7.0.1") }, Number: { EPSILON: tX("number/epsilon", ["es6.number.epsilon"]), MIN_SAFE_INTEGER: tX("number/min-safe-integer", ["es6.number.min-safe-integer"]), MAX_SAFE_INTEGER: tX("number/max-safe-integer", ["es6.number.max-safe-integer"]), isFinite: tX("number/is-finite", ["es6.number.is-finite"]), isInteger: tX("number/is-integer", ["es6.number.is-integer"]), isSafeInteger: tX("number/is-safe-integer", ["es6.number.is-safe-integer"]), isNaN: tX("number/is-nan", ["es6.number.is-nan"]), parseFloat: tX("number/parse-float", ["es6.number.parse-float"]), parseInt: tX("number/parse-int", ["es6.number.parse-int"]) }, Object: { assign: tX("object/assign", ["es6.object.assign"]), create: tX("object/create", ["es6.object.create"]), defineProperties: tX("object/define-properties", ["es6.object.define-properties"]), defineProperty: tX("object/define-property", ["es6.object.define-property"]), entries: tX("object/entries", ["es7.object.entries"]), freeze: tX("object/freeze", ["es6.object.freeze"]), getOwnPropertyDescriptor: tX("object/get-own-property-descriptor", ["es6.object.get-own-property-descriptor"]), getOwnPropertyDescriptors: tX("object/get-own-property-descriptors", ["es7.object.get-own-property-descriptors"]), getOwnPropertyNames: tX("object/get-own-property-names", ["es6.object.get-own-property-names"]), getOwnPropertySymbols: tX("object/get-own-property-symbols", ["es6.symbol"]), getPrototypeOf: tX("object/get-prototype-of", ["es6.object.get-prototype-of"]), is: tX("object/is", ["es6.object.is"]), isExtensible: tX("object/is-extensible", ["es6.object.is-extensible"]), isFrozen: tX("object/is-frozen", ["es6.object.is-frozen"]), isSealed: tX("object/is-sealed", ["es6.object.is-sealed"]), keys: tX("object/keys", ["es6.object.keys"]), preventExtensions: tX("object/prevent-extensions", ["es6.object.prevent-extensions"]), seal: tX("object/seal", ["es6.object.seal"]), setPrototypeOf: tX("object/set-prototype-of", ["es6.object.set-prototype-of"]), values: tX("object/values", ["es7.object.values"]) }, Promise: { all: rX(aX), race: rX(aX) }, Reflect: { apply: tX("reflect/apply", ["es6.reflect.apply"]), construct: tX("reflect/construct", ["es6.reflect.construct"]), defineProperty: tX("reflect/define-property", ["es6.reflect.define-property"]), deleteProperty: tX("reflect/delete-property", ["es6.reflect.delete-property"]), get: tX("reflect/get", ["es6.reflect.get"]), getOwnPropertyDescriptor: tX("reflect/get-own-property-descriptor", ["es6.reflect.get-own-property-descriptor"]), getPrototypeOf: tX("reflect/get-prototype-of", ["es6.reflect.get-prototype-of"]), has: tX("reflect/has", ["es6.reflect.has"]), isExtensible: tX("reflect/is-extensible", ["es6.reflect.is-extensible"]), ownKeys: tX("reflect/own-keys", ["es6.reflect.own-keys"]), preventExtensions: tX("reflect/prevent-extensions", ["es6.reflect.prevent-extensions"]), set: tX("reflect/set", ["es6.reflect.set"]), setPrototypeOf: tX("reflect/set-prototype-of", ["es6.reflect.set-prototype-of"]) }, String: { at: nX("string/at", "es7.string.at"), fromCodePoint: tX("string/from-code-point", ["es6.string.from-code-point"]), raw: tX("string/raw", ["es6.string.raw"]) }, Symbol: { asyncIterator: rX(["es6.symbol", "es7.symbol.async-iterator"]), for: nX("symbol/for", "es6.symbol"), hasInstance: nX("symbol/has-instance", "es6.symbol"), isConcatSpreadable: nX("symbol/is-concat-spreadable", "es6.symbol"), iterator: eX("es6.symbol", "symbol/iterator", aX), keyFor: nX("symbol/key-for", "es6.symbol"), match: tX("symbol/match", ["es6.regexp.match"]), replace: nX("symbol/replace", "es6.symbol"), search: nX("symbol/search", "es6.symbol"), species: nX("symbol/species", "es6.symbol"), split: nX("symbol/split", "es6.symbol"), toPrimitive: nX("symbol/to-primitive", "es6.symbol"), toStringTag: nX("symbol/to-string-tag", "es6.symbol"), unscopables: nX("symbol/unscopables", "es6.symbol") } }, cX = { "web.timers": {}, "web.immediate": {}, "web.dom.iterable": {} }, pX = { "es6.parse-float": {}, "es6.parse-int": {}, "es7.string.at": {} };
      var dX = t.types, fX = Function.call.bind(Object.hasOwnProperty), hX = ZH(function(e2, t2) {
        var r2 = t2["#__secret_key__@babel/preset-env__compatibility"], n2 = (r2 = r2 === void 0 ? {} : r2).entryInjectRegenerator, s2 = t2["#__secret_key__@babel/runtime__compatibility"], a2 = (s2 = s2 === void 0 ? {} : s2).useBabelRuntime, i2 = s2.runtimeVersion, o2 = s2.ext, u2 = o2 === void 0 ? ".js" : o2, l2 = e2.createMetaResolver({ global: oX, static: lX, instance: uX }), c2 = e2.debug, p2 = e2.shouldInjectPolyfill, d2 = e2.method, f2 = function(e3, t3, r3) {
          var n3 = Object.keys(e3), s3 = !n3.length, a3 = n3.some(function(e4) {
            return e4 !== "node";
          });
          return Object.assign(Object.assign(Object.assign({}, r3), t3 === "usage-pure" ? pX : null), s3 || a3 ? cX : null);
        }(e2.targets, d2, TR), h2 = a2 ? a2 + "/core-js" : d2 === "usage-pure" ? "core-js/library/fn" : "core-js/modules";
        function m2(e3, t3) {
          typeof e3 != "string" ? e3.forEach(function(e4) {
            return m2(e4, t3);
          }) : fX(f2, e3) && p2(e3) && (c2(e3), t3.injectGlobalImport(h2 + "/" + e3 + ".js"));
        }
        function y2(e3, t3, r3) {
          var n3 = e3.pure, s3 = e3.meta, a3 = e3.name;
          if (n3 && p2(a3) && (!(i2 && s3 && s3.minRuntimeVersion) || function(e4, t4) {
            return !(t4 && e4 && (OH.valid(t4) && (t4 = "^" + t4), OH.intersects("<" + e4, t4) || OH.intersects(">=8.0.0", t4)));
          }(s3 && s3.minRuntimeVersion, i2)))
            return r3.injectDefaultImport(h2 + "/" + n3 + u2, t3);
        }
        return { name: "corejs2", polyfills: f2, entryGlobal: function(e3, t3, r3) {
          e3.kind === "import" && e3.source === "core-js" && (c2(null), m2(Object.keys(f2), t3), n2 && t3.injectGlobalImport("regenerator-runtime/runtime.js"), r3.remove());
        }, usageGlobal: function(e3, t3) {
          var r3 = l2(e3);
          if (r3) {
            var n3 = r3.desc.global;
            if (r3.kind !== "global" && e3.object && e3.placement === "prototype") {
              var s3 = e3.object.toLowerCase();
              n3 = n3.filter(function(e4) {
                return e4.includes(s3);
              });
            }
            m2(n3, t3);
          }
        }, usagePure: function(e3, t3, r3) {
          if (e3.kind !== "in") {
            if (!r3.parentPath.isUnaryExpression({ operator: "delete" })) {
              if (e3.kind === "property") {
                if (!r3.isMemberExpression())
                  return;
                if (!r3.isReferenced())
                  return;
                if (e3.key === "Symbol.iterator" && p2("es6.symbol") && r3.parentPath.isCallExpression({ callee: r3.node }) && r3.parent.arguments.length === 0)
                  return r3.parentPath.replaceWith(dX.callExpression(t3.injectDefaultImport(h2 + "/get-iterator" + u2, "getIterator"), [r3.node.object])), void r3.skip();
              }
              var n3 = l2(e3);
              if (n3) {
                var s3 = y2(n3.desc, n3.name, t3);
                s3 && r3.replaceWith(s3);
              }
            }
          } else
            e3.key === "Symbol.iterator" && r3.replaceWith(dX.callExpression(t3.injectDefaultImport(h2 + "/is-iterable" + u2, "isIterable"), [r3.node.right]));
        }, visitor: d2 === "usage-global" && { YieldExpression: function(t3) {
          t3.node.delegate && m2("web.dom.iterable", e2.getUtils(t3));
        }, "ForOfStatement|ArrayPattern": function(t3) {
          aX.forEach(function(r3) {
            return m2(r3, e2.getUtils(t3));
          });
        } } };
      }), mX = wG, yX = aV, gX = oV, vX = new Set(["esnext.global-this", "esnext.string.match-all"]), bX = {};
      Object.keys(mX).forEach(function(e2, t2) {
        bX[e2] = t2;
      });
      var EX = function(e2, t2, r2, n2) {
        return r2 === void 0 && (r2 = t2[0]), { name: r2, pure: e2, global: t2.sort(function(e3, t3) {
          return bX[e3] - bX[t3];
        }), exclude: n2 };
      }, xX = function(e2) {
        return EX(null, [e2].concat(SX));
      }, DX = ["es.array.iterator", "web.dom-collections.iterator"], AX = ["es.string.iterator"].concat(DX), wX = ["es.object.to-string"].concat(DX), CX = ["es.object.to-string"].concat(c(AX)), SX = ["es.typed-array.copy-within", "es.typed-array.every", "es.typed-array.fill", "es.typed-array.filter", "es.typed-array.find", "es.typed-array.find-index", "es.typed-array.for-each", "es.typed-array.includes", "es.typed-array.index-of", "es.typed-array.iterator", "es.typed-array.join", "es.typed-array.last-index-of", "es.typed-array.map", "es.typed-array.reduce", "es.typed-array.reduce-right", "es.typed-array.reverse", "es.typed-array.set", "es.typed-array.slice", "es.typed-array.some", "es.typed-array.sort", "es.typed-array.subarray", "es.typed-array.to-locale-string", "es.typed-array.to-string", "es.object.to-string", "es.array.iterator", "es.array-buffer.slice"], TX = { from: EX(null, ["es.typed-array.from"]), of: EX(null, ["es.typed-array.of"]) }, jX = ["es.promise", "es.object.to-string"], PX = [].concat(jX, c(AX)), IX = ["es.map", "esnext.map.delete-all", "esnext.map.every", "esnext.map.filter", "esnext.map.find", "esnext.map.find-key", "esnext.map.includes", "esnext.map.key-of", "esnext.map.map-keys", "esnext.map.map-values", "esnext.map.merge", "esnext.map.reduce", "esnext.map.some", "esnext.map.update"].concat(c(CX)), FX = ["es.set", "esnext.set.add-all", "esnext.set.delete-all", "esnext.set.difference", "esnext.set.every", "esnext.set.filter", "esnext.set.find", "esnext.set.intersection", "esnext.set.is-disjoint-from", "esnext.set.is-subset-of", "esnext.set.is-superset-of", "esnext.set.join", "esnext.set.map", "esnext.set.reduce", "esnext.set.some", "esnext.set.symmetric-difference", "esnext.set.union"].concat(c(CX)), kX = ["es.weak-map", "esnext.weak-map.delete-all"].concat(c(CX)), OX = ["es.weak-set", "esnext.weak-set.add-all", "esnext.weak-set.delete-all"].concat(c(CX)), RX = ["web.url"].concat(c(CX)), NX = { AggregateError: EX("aggregate-error", ["esnext.aggregate-error"].concat(c(AX))), ArrayBuffer: EX(null, ["es.array-buffer.constructor", "es.array-buffer.slice", "es.object.to-string"]), DataView: EX(null, ["es.data-view", "es.array-buffer.slice", "es.object.to-string"]), Date: EX(null, ["es.date.to-string"]), Float32Array: xX("es.typed-array.float32-array"), Float64Array: xX("es.typed-array.float64-array"), Int8Array: xX("es.typed-array.int8-array"), Int16Array: xX("es.typed-array.int16-array"), Int32Array: xX("es.typed-array.int32-array"), Uint8Array: xX("es.typed-array.uint8-array"), Uint8ClampedArray: xX("es.typed-array.uint8-clamped-array"), Uint16Array: xX("es.typed-array.uint16-array"), Uint32Array: xX("es.typed-array.uint32-array"), Map: EX("map/index", IX), Number: EX(null, ["es.number.constructor"]), Observable: EX("observable/index", ["esnext.observable", "esnext.symbol.observable", "es.object.to-string"].concat(c(CX))), Promise: EX("promise/index", jX), RegExp: EX(null, ["es.regexp.constructor", "es.regexp.exec", "es.regexp.to-string"]), Set: EX("set/index", FX), Symbol: EX("symbol/index", ["es.symbol", "es.symbol.description", "es.object.to-string"]), URL: EX("url/index", ["web.url"].concat(c(RX))), URLSearchParams: EX("url-search-params/index", RX), WeakMap: EX("weak-map/index", kX), WeakSet: EX("weak-set/index", OX), clearImmediate: EX("clear-immediate", ["web.immediate"]), compositeKey: EX("composite-key", ["esnext.composite-key"]), compositeSymbol: EX("composite-symbol", ["esnext.composite-symbol"]), fetch: EX(null, jX), globalThis: EX("global-this", ["es.global-this"]), parseFloat: EX("parse-float", ["es.parse-float"]), parseInt: EX("parse-int", ["es.parse-int"]), queueMicrotask: EX("queue-microtask", ["web.queue-microtask"]), setImmediate: EX("set-immediate", ["web.immediate"]), setInterval: EX("set-interval", ["web.timers"]), setTimeout: EX("set-timeout", ["web.timers"]) }, BX = { Array: { from: EX("array/from", ["es.array.from", "es.string.iterator"]), isArray: EX("array/is-array", ["es.array.is-array"]), of: EX("array/of", ["es.array.of"]) }, ArrayBuffer: { isView: EX(null, ["es.array-buffer.is-view"]) }, Date: { now: EX("date/now", ["es.date.now"]) }, JSON: { stringify: EX("json/stringify", [], "es.symbol") }, Math: { DEG_PER_RAD: EX("math/deg-per-rad", ["esnext.math.deg-per-rad"]), RAD_PER_DEG: EX("math/rad-per-deg", ["esnext.math.rad-per-deg"]), acosh: EX("math/acosh", ["es.math.acosh"]), asinh: EX("math/asinh", ["es.math.asinh"]), atanh: EX("math/atanh", ["es.math.atanh"]), cbrt: EX("math/cbrt", ["es.math.cbrt"]), clamp: EX("math/clamp", ["esnext.math.clamp"]), clz32: EX("math/clz32", ["es.math.clz32"]), cosh: EX("math/cosh", ["es.math.cosh"]), degrees: EX("math/degrees", ["esnext.math.degrees"]), expm1: EX("math/expm1", ["es.math.expm1"]), fround: EX("math/fround", ["es.math.fround"]), fscale: EX("math/fscale", ["esnext.math.fscale"]), hypot: EX("math/hypot", ["es.math.hypot"]), iaddh: EX("math/iaddh", ["esnext.math.iaddh"]), imul: EX("math/imul", ["es.math.imul"]), imulh: EX("math/imulh", ["esnext.math.imulh"]), isubh: EX("math/isubh", ["esnext.math.isubh"]), log10: EX("math/log10", ["es.math.log10"]), log1p: EX("math/log1p", ["es.math.log1p"]), log2: EX("math/log2", ["es.math.log2"]), radians: EX("math/radians", ["esnext.math.radians"]), scale: EX("math/scale", ["esnext.math.scale"]), seededPRNG: EX("math/seeded-prng", ["esnext.math.seeded-prng"]), sign: EX("math/sign", ["es.math.sign"]), signbit: EX("math/signbit", ["esnext.math.signbit"]), sinh: EX("math/sinh", ["es.math.sinh"]), tanh: EX("math/tanh", ["es.math.tanh"]), trunc: EX("math/trunc", ["es.math.trunc"]), umulh: EX("math/umulh", ["esnext.math.umulh"]) }, Map: { from: EX(null, ["esnext.map.from"].concat(c(IX))), groupBy: EX(null, ["esnext.map.group-by"].concat(c(IX))), keyBy: EX(null, ["esnext.map.key-by"].concat(c(IX))), of: EX(null, ["esnext.map.of"].concat(c(IX))) }, Number: { EPSILON: EX("number/epsilon", ["es.number.epsilon"]), MAX_SAFE_INTEGER: EX("number/max-safe-integer", ["es.number.max-safe-integer"]), MIN_SAFE_INTEGER: EX("number/min-safe-integer", ["es.number.min-safe-integer"]), fromString: EX("number/from-string", ["esnext.number.from-string"]), isFinite: EX("number/is-finite", ["es.number.is-finite"]), isInteger: EX("number/is-integer", ["es.number.is-integer"]), isNaN: EX("number/is-nan", ["es.number.is-nan"]), isSafeInteger: EX("number/is-safe-integer", ["es.number.is-safe-integer"]), parseFloat: EX("number/parse-float", ["es.number.parse-float"]), parseInt: EX("number/parse-int", ["es.number.parse-int"]) }, Object: { assign: EX("object/assign", ["es.object.assign"]), create: EX("object/create", ["es.object.create"]), defineProperties: EX("object/define-properties", ["es.object.define-properties"]), defineProperty: EX("object/define-property", ["es.object.define-property"]), entries: EX("object/entries", ["es.object.entries"]), freeze: EX("object/freeze", ["es.object.freeze"]), fromEntries: EX("object/from-entries", ["es.object.from-entries", "es.array.iterator"]), getOwnPropertyDescriptor: EX("object/get-own-property-descriptor", ["es.object.get-own-property-descriptor"]), getOwnPropertyDescriptors: EX("object/get-own-property-descriptors", ["es.object.get-own-property-descriptors"]), getOwnPropertyNames: EX("object/get-own-property-names", ["es.object.get-own-property-names"]), getOwnPropertySymbols: EX("object/get-own-property-symbols", ["es.symbol"]), getPrototypeOf: EX("object/get-prototype-of", ["es.object.get-prototype-of"]), is: EX("object/is", ["es.object.is"]), isExtensible: EX("object/is-extensible", ["es.object.is-extensible"]), isFrozen: EX("object/is-frozen", ["es.object.is-frozen"]), isSealed: EX("object/is-sealed", ["es.object.is-sealed"]), keys: EX("object/keys", ["es.object.keys"]), preventExtensions: EX("object/prevent-extensions", ["es.object.prevent-extensions"]), seal: EX("object/seal", ["es.object.seal"]), setPrototypeOf: EX("object/set-prototype-of", ["es.object.set-prototype-of"]), values: EX("object/values", ["es.object.values"]) }, Promise: { all: EX(null, PX), allSettled: EX(null, ["es.promise.all-settled"].concat(c(PX))), any: EX(null, ["esnext.promise.any"].concat(c(PX))), race: EX(null, PX), try: EX(null, ["esnext.promise.try"].concat(c(PX))) }, Reflect: { apply: EX("reflect/apply", ["es.reflect.apply"]), construct: EX("reflect/construct", ["es.reflect.construct"]), defineMetadata: EX("reflect/define-metadata", ["esnext.reflect.define-metadata"]), defineProperty: EX("reflect/define-property", ["es.reflect.define-property"]), deleteMetadata: EX("reflect/delete-metadata", ["esnext.reflect.delete-metadata"]), deleteProperty: EX("reflect/delete-property", ["es.reflect.delete-property"]), get: EX("reflect/get", ["es.reflect.get"]), getMetadata: EX("reflect/get-metadata", ["esnext.reflect.get-metadata"]), getMetadataKeys: EX("reflect/get-metadata-keys", ["esnext.reflect.get-metadata-keys"]), getOwnMetadata: EX("reflect/get-own-metadata", ["esnext.reflect.get-own-metadata"]), getOwnMetadataKeys: EX("reflect/get-own-metadata-keys", ["esnext.reflect.get-own-metadata-keys"]), getOwnPropertyDescriptor: EX("reflect/get-own-property-descriptor", ["es.reflect.get-own-property-descriptor"]), getPrototypeOf: EX("reflect/get-prototype-of", ["es.reflect.get-prototype-of"]), has: EX("reflect/has", ["es.reflect.has"]), hasMetadata: EX("reflect/has-metadata", ["esnext.reflect.has-metadata"]), hasOwnMetadata: EX("reflect/has-own-metadata", ["esnext.reflect.has-own-metadata"]), isExtensible: EX("reflect/is-extensible", ["es.reflect.is-extensible"]), metadata: EX("reflect/metadata", ["esnext.reflect.metadata"]), ownKeys: EX("reflect/own-keys", ["es.reflect.own-keys"]), preventExtensions: EX("reflect/prevent-extensions", ["es.reflect.prevent-extensions"]), set: EX("reflect/set", ["es.reflect.set"]), setPrototypeOf: EX("reflect/set-prototype-of", ["es.reflect.set-prototype-of"]) }, Set: { from: EX(null, ["esnext.set.from"].concat(c(FX))), of: EX(null, ["esnext.set.of"].concat(c(FX))) }, String: { fromCodePoint: EX("string/from-code-point", ["es.string.from-code-point"]), raw: EX("string/raw", ["es.string.raw"]) }, Symbol: { asyncIterator: EX("symbol/async-iterator", ["es.symbol.async-iterator"]), dispose: EX("symbol/dispose", ["esnext.symbol.dispose"]), for: EX("symbol/for", [], "es.symbol"), hasInstance: EX("symbol/has-instance", ["es.symbol.has-instance", "es.function.has-instance"]), isConcatSpreadable: EX("symbol/is-concat-spreadable", ["es.symbol.is-concat-spreadable", "es.array.concat"]), iterator: EX("symbol/iterator", ["es.symbol.iterator"].concat(c(CX))), keyFor: EX("symbol/key-for", [], "es.symbol"), match: EX("symbol/match", ["es.symbol.match", "es.string.match"]), observable: EX("symbol/observable", ["esnext.symbol.observable"]), patternMatch: EX("symbol/pattern-match", ["esnext.symbol.pattern-match"]), replace: EX("symbol/replace", ["es.symbol.replace", "es.string.replace"]), search: EX("symbol/search", ["es.symbol.search", "es.string.search"]), species: EX("symbol/species", ["es.symbol.species", "es.array.species"]), split: EX("symbol/split", ["es.symbol.split", "es.string.split"]), toPrimitive: EX("symbol/to-primitive", ["es.symbol.to-primitive", "es.date.to-primitive"]), toStringTag: EX("symbol/to-string-tag", ["es.symbol.to-string-tag", "es.object.to-string", "es.math.to-string-tag", "es.json.to-string-tag"]), unscopables: EX("symbol/unscopables", ["es.symbol.unscopables"]) }, WeakMap: { from: EX(null, ["esnext.weak-map.from"].concat(c(kX))), of: EX(null, ["esnext.weak-map.of"].concat(c(kX))) }, WeakSet: { from: EX(null, ["esnext.weak-set.from"].concat(c(OX))), of: EX(null, ["esnext.weak-set.of"].concat(c(OX))) }, Int8Array: TX, Uint8Array: TX, Uint8ClampedArray: TX, Int16Array: TX, Uint16Array: TX, Int32Array: TX, Uint32Array: TX, Float32Array: TX, Float64Array: TX }, _X = { at: EX("instance/at", ["esnext.string.at"]), anchor: EX(null, ["es.string.anchor"]), big: EX(null, ["es.string.big"]), bind: EX("instance/bind", ["es.function.bind"]), blink: EX(null, ["es.string.blink"]), bold: EX(null, ["es.string.bold"]), codePointAt: EX("instance/code-point-at", ["es.string.code-point-at"]), codePoints: EX("instance/code-points", ["esnext.string.code-points"]), concat: EX("instance/concat", ["es.array.concat"], void 0, ["String"]), copyWithin: EX("instance/copy-within", ["es.array.copy-within"]), description: EX(null, ["es.symbol", "es.symbol.description"]), endsWith: EX("instance/ends-with", ["es.string.ends-with"]), entries: EX("instance/entries", wX), every: EX("instance/every", ["es.array.every"]), exec: EX(null, ["es.regexp.exec"]), fill: EX("instance/fill", ["es.array.fill"]), filter: EX("instance/filter", ["es.array.filter"]), finally: EX(null, ["es.promise.finally"].concat(jX)), find: EX("instance/find", ["es.array.find"]), findIndex: EX("instance/find-index", ["es.array.find-index"]), fixed: EX(null, ["es.string.fixed"]), flags: EX("instance/flags", ["es.regexp.flags"]), flatMap: EX("instance/flat-map", ["es.array.flat-map", "es.array.unscopables.flat-map"]), flat: EX("instance/flat", ["es.array.flat"]), fontcolor: EX(null, ["es.string.fontcolor"]), fontsize: EX(null, ["es.string.fontsize"]), forEach: EX("instance/for-each", ["es.array.for-each", "web.dom-collections.for-each"]), includes: EX("instance/includes", ["es.array.includes", "es.string.includes"]), indexOf: EX("instance/index-of", ["es.array.index-of"]), italic: EX(null, ["es.string.italics"]), join: EX(null, ["es.array.join"]), keys: EX("instance/keys", wX), lastIndex: EX(null, ["esnext.array.last-index"]), lastIndexOf: EX("instance/last-index-of", ["es.array.last-index-of"]), lastItem: EX(null, ["esnext.array.last-item"]), link: EX(null, ["es.string.link"]), map: EX("instance/map", ["es.array.map"]), match: EX(null, ["es.string.match", "es.regexp.exec"]), matchAll: EX("instance/match-all", ["es.string.match-all"]), name: EX(null, ["es.function.name"]), padEnd: EX("instance/pad-end", ["es.string.pad-end"]), padStart: EX("instance/pad-start", ["es.string.pad-start"]), reduce: EX("instance/reduce", ["es.array.reduce"]), reduceRight: EX("instance/reduce-right", ["es.array.reduce-right"]), repeat: EX("instance/repeat", ["es.string.repeat"]), replace: EX(null, ["es.string.replace", "es.regexp.exec"]), replaceAll: EX("instance/replace-all", ["esnext.string.replace-all"]), reverse: EX("instance/reverse", ["es.array.reverse"]), search: EX(null, ["es.string.search", "es.regexp.exec"]), slice: EX("instance/slice", ["es.array.slice"]), small: EX(null, ["es.string.small"]), some: EX("instance/some", ["es.array.some"]), sort: EX("instance/sort", ["es.array.sort"]), splice: EX("instance/splice", ["es.array.splice"]), split: EX(null, ["es.string.split", "es.regexp.exec"]), startsWith: EX("instance/starts-with", ["es.string.starts-with"]), strike: EX(null, ["es.string.strike"]), sub: EX(null, ["es.string.sub"]), sup: EX(null, ["es.string.sup"]), toFixed: EX(null, ["es.number.to-fixed"]), toISOString: EX(null, ["es.date.to-iso-string"]), toJSON: EX(null, ["es.date.to-json", "web.url.to-json"]), toPrecision: EX(null, ["es.number.to-precision"]), toString: EX(null, ["es.object.to-string", "es.regexp.to-string", "es.date.to-string"]), trim: EX("instance/trim", ["es.string.trim"]), trimEnd: EX("instance/trim-end", ["es.string.trim-end"]), trimLeft: EX("instance/trim-left", ["es.string.trim-start"]), trimRight: EX("instance/trim-right", ["es.string.trim-end"]), trimStart: EX("instance/trim-start", ["es.string.trim-start"]), values: EX("instance/values", wX), __defineGetter__: EX(null, ["es.object.define-getter"]), __defineSetter__: EX(null, ["es.object.define-setter"]), __lookupGetter__: EX(null, ["es.object.lookup-getter"]), __lookupSetter__: EX(null, ["es.object.lookup-setter"]) }, LX = new Set(["es.object.to-string", "es.object.define-getter", "es.object.define-setter", "es.object.lookup-getter", "es.object.lookup-setter", "es.regexp.exec"]), MX = t.types;
      function UX(e2, t2) {
        var r2, n2, s2 = e2.node.object;
        MX.isIdentifier(s2) ? (r2 = s2, n2 = MX.cloneNode(s2)) : (r2 = e2.scope.generateDeclaredUidIdentifier("context"), n2 = MX.assignmentExpression("=", MX.cloneNode(r2), s2)), e2.replaceWith(MX.memberExpression(MX.callExpression(t2, [n2]), MX.identifier("call"))), e2.parentPath.unshiftContainer("arguments", r2);
      }
      function GX(e2) {
        return "core-js/modules/" + e2 + ".js";
      }
      function VX(e2, t2, r2) {
        return t2 ? t2 + "/core-js/" + e2 + r2 : "core-js-pure/features/" + e2 + ".js";
      }
      var WX = t.types, HX = function(e2, t2) {
        if (t2(e2))
          return true;
        if (!e2.startsWith("es."))
          return false;
        var r2 = "esnext." + e2.slice(3);
        return !!mX[r2] && t2(r2);
      }, XX = ZH(function(e2, t2) {
        var r2 = e2.getUtils, n2 = e2.method, s2 = e2.shouldInjectPolyfill, a2 = e2.createMetaResolver, i2 = e2.debug, o2 = e2.babel, u2 = t2.version, l2 = u2 === void 0 ? 3 : u2, c2 = t2.proposals, p2 = t2.shippedProposals, d2 = t2["#__secret_key__@babel/runtime__compatibility"], h2 = (d2 = d2 === void 0 ? {} : d2).useBabelRuntime, m2 = d2.ext, y2 = m2 === void 0 ? ".js" : m2, g2 = o2.caller(function(e3) {
          return (e3 == null ? void 0 : e3.name) === "babel-loader";
        }), v2 = a2({ global: NX, static: BX, instance: _X }), b2 = new Set(yX(l2)), E2 = h2 ? c2 ? h2 + "/core-js" : h2 + "/core-js-stable" : c2 ? "core-js-pure/features" : "core-js-pure/stable";
        function x2(e3, t3) {
          return !!s2(e3) && (i2(e3), t3.injectGlobalImport(GX(e3)), true);
        }
        function D2(e3, t3, r3) {
          r3 === void 0 && (r3 = true);
          for (var n3, s3 = f(e3); !(n3 = s3()).done; ) {
            var a3 = n3.value;
            r3 ? HX(a3, function(e4) {
              return x2(e4, t3);
            }) : x2(a3, t3);
          }
        }
        function A2(e3, t3, r3, n3) {
          if (e3.pure && !(n3 && e3.exclude && e3.exclude.includes(n3)) && HX(e3.name, s2))
            return r3.injectDefaultImport(E2 + "/" + e3.pure + y2, t3);
        }
        return { name: "corejs3", polyfills: mX, filterPolyfills: function(e3) {
          return !!b2.has(e3) && (!(!c2 && n2 !== "entry-global") || (!(!p2 || !vX.has(e3)) || !e3.startsWith("esnext.")));
        }, entryGlobal: function(e3, t3, r3) {
          if (e3.kind === "import") {
            var n3, a3 = (typeof (n3 = e3.source) == "string" && (n3 = n3.replace(/\\/g, "/").replace(/(\/(index)?)?(\.js)?$/i, "").toLowerCase()), hasOwnProperty.call(gX, n3) && gX[n3]);
            a3 && (a3.length === 1 && e3.source === GX(a3[0]) && s2(a3[0]) ? i2(null) : (D2(a3, t3, false), r3.remove()));
          }
        }, usageGlobal: function(e3, t3) {
          var r3 = v2(e3);
          if (r3) {
            var n3 = r3.desc.global;
            if (r3.kind !== "global" && e3.object && e3.placement === "prototype") {
              var s3 = e3.object.toLowerCase();
              n3 = n3.filter(function(e4) {
                return e4.includes(s3) || LX.has(e4);
              });
            }
            D2(n3, t3);
          }
        }, usagePure: function(e3, t3, r3) {
          if (e3.kind !== "in") {
            if (!r3.parentPath.isUnaryExpression({ operator: "delete" })) {
              var n3;
              if (e3.kind === "property") {
                if (!r3.isMemberExpression())
                  return;
                if (!r3.isReferenced())
                  return;
                if (n3 = r3.parentPath.isCallExpression({ callee: r3.node }), e3.key === "Symbol.iterator") {
                  if (!s2("es.symbol.iterator"))
                    return;
                  return void (n3 ? r3.parent.arguments.length === 0 ? (r3.parentPath.replaceWith(WX.callExpression(t3.injectDefaultImport(VX("get-iterator", h2, y2), "getIterator"), [r3.node.object])), r3.skip()) : UX(r3, t3.injectDefaultImport(VX("get-iterator-method", h2, y2), "getIteratorMethod")) : r3.replaceWith(WX.callExpression(t3.injectDefaultImport(VX("get-iterator-method", h2, y2), "getIteratorMethod"), [r3.node.object])));
                }
              }
              var a3 = v2(e3);
              if (a3) {
                if (h2 && a3.desc.pure && a3.desc.pure.slice(-6) === "/index" && (a3 = Object.assign(Object.assign({}, a3), {}, { desc: Object.assign(Object.assign({}, a3.desc), {}, { pure: a3.desc.pure.slice(0, -6) }) })), a3.kind === "global") {
                  var i3 = A2(a3.desc, a3.name, t3);
                  i3 && r3.replaceWith(i3);
                } else if (a3.kind === "static") {
                  var o3 = A2(a3.desc, a3.name, t3, e3.object);
                  o3 && r3.replaceWith(o3);
                } else if (a3.kind === "instance") {
                  var u3 = A2(a3.desc, a3.name + "InstanceProperty", t3, e3.object);
                  if (!u3)
                    return;
                  n3 ? UX(r3, u3) : r3.replaceWith(WX.callExpression(u3, [r3.node.object]));
                }
              }
            }
          } else
            e3.key === "Symbol.iterator" && r3.replaceWith(WX.callExpression(t3.injectDefaultImport(VX("is-iterable", h2, y2), "isIterable"), [r3.node.right]));
        }, visitor: n2 === "usage-global" && { CallExpression: function(e3) {
          if (e3.get("callee").isImport()) {
            var t3 = r2(e3);
            D2(g2 ? PX : jX, t3);
          }
        }, Function: function(e3) {
          e3.node.async && D2(jX, r2(e3));
        }, "ForOfStatement|ArrayPattern": function(e3) {
          D2(AX, r2(e3));
        }, SpreadElement: function(e3) {
          e3.parentPath.isObjectExpression() || D2(AX, r2(e3));
        }, YieldExpression: function(e3) {
          e3.node.delegate && D2(AX, r2(e3));
        } } };
      }), qX = ZH(function(e2, t2) {
        var r2 = e2.debug, n2 = t2["#__secret_key__@babel/runtime__compatibility"], s2 = (n2 = n2 === void 0 ? {} : n2).useBabelRuntime, a2 = s2 ? s2 + "/regenerator" : "regenerator-runtime";
        return { name: "regenerator", polyfills: ["regenerator-runtime"], usageGlobal: function(e3, t3) {
          $X(e3) && (r2("regenerator-runtime"), t3.injectGlobalImport("regenerator-runtime/runtime.js"));
        }, usagePure: function(e3, t3, r3) {
          $X(e3) && r3.replaceWith(t3.injectDefaultImport(a2, "regenerator-runtime"));
        } };
      }), $X = function(e2) {
        return e2.kind === "global" && e2.name === "regeneratorRuntime";
      }, KX = hX.default || hX, zX = XX.default || XX, JX = qX.default || qX;
      function YX(e2, t2) {
        return Object.keys(e2).reduce(function(r2, n2) {
          return t2.has(n2) || (r2[n2] = e2[n2]), r2;
        }, {});
      }
      var QX = { withProposals: { withoutBugfixes: KW, withBugfixes: Object.assign({}, KW, zW) }, withoutProposals: { withoutBugfixes: YX(KW, EH.proposalPlugins), withBugfixes: YX(Object.assign({}, KW, zW), EH.proposalPlugins) } };
      var ZX = function(e2) {
        var t2 = WW[e2]();
        if (!t2)
          throw new Error('Could not find plugin "' + e2 + '". Ensure there is an entry in ./available-plugins.js for it.');
        return t2;
      }, eq = function(e2) {
        return e2.reduce(function(e3, t2) {
          return e3[t2.match(/^(es|es6|es7|esnext|web)\./) ? "builtIns" : "plugins"].add(t2), e3;
        }, { all: e2, plugins: new Set(), builtIns: new Set() });
      };
      function tq(e2) {
        return !(e2 == null || !e2.supportsStaticESM);
      }
      function rq(e2) {
        return !(e2 == null || !e2.supportsDynamicImport);
      }
      function nq(e2) {
        return !(e2 == null || !e2.supportsExportNamespaceFrom);
      }
      function sq(e2) {
        return !(e2 == null || !e2.supportsTopLevelAwait);
      }
      var aq = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = e2.targets(), n2 = dH(t2), s2 = n2.bugfixes, a2 = n2.configPath, i2 = n2.debug, o2 = n2.exclude, u2 = n2.forceAllTransforms, l2 = n2.ignoreBrowserslistConfig, c2 = n2.include, p2 = n2.loose, d2 = n2.modules, f2 = n2.shippedProposals, h2 = n2.spec, m2 = n2.targets, y2 = n2.useBuiltIns, g2 = n2.corejs, v2 = g2.version, b2 = g2.proposals, E2 = n2.browserslistEnv, x2 = r2;
        if (LU.lt(e2.version, "7.13.0") || t2.targets || t2.configPath || t2.browserslistEnv || t2.ignoreBrowserslistConfig) {
          var D2 = false;
          m2 != null && m2.uglify && (D2 = true, delete m2.uglify, console.warn("\nThe uglify target has been deprecated. Set the top level\noption `forceAllTransforms: true` instead.\n")), x2 = function(e3, t3, r3, n3) {
            return e3 != null && e3.esmodules && e3.browsers && console.warn("\n@babel/preset-env: esmodules and browsers targets have been specified together.\n`browsers` target, `" + e3.browsers.toString() + "` will be ignored.\n"), sT(e3, { ignoreBrowserslistConfig: t3, configPath: r3, browserslistEnv: n3 });
          }(m2, l2, a2, E2);
        }
        var A2, w2, C2 = u2 || D2 ? {} : x2, S2 = eq(c2), T2 = eq(o2), j2 = function(e3, t3) {
          return e3 ? t3 ? QX.withProposals.withBugfixes : QX.withProposals.withoutBugfixes : t3 ? QX.withoutProposals.withBugfixes : QX.withoutProposals.withoutBugfixes;
        }(f2, s2), P2 = d2 === "auto" && (e2.caller == null ? void 0 : e2.caller(nq)) || d2 === false && !YS("proposal-export-namespace-from", C2, { compatData: j2, includes: S2.plugins, excludes: T2.plugins }), I2 = function(e3) {
          var t3 = e3.modules, r3 = e3.transformations, n3 = e3.shouldTransformESM, s3 = e3.shouldTransformDynamicImport, a3 = e3.shouldTransformExportNamespaceFrom, i3 = e3.shouldParseTopLevelAwait, o3 = [];
          return t3 !== false && r3[t3] ? (n3 && o3.push(r3[t3]), s3 && n3 && t3 !== "umd" ? o3.push("proposal-dynamic-import") : (s3 && console.warn("Dynamic import can only be supported when transforming ES modules to AMD, CommonJS or SystemJS. Only the parser plugin will be enabled."), o3.push("syntax-dynamic-import"))) : o3.push("syntax-dynamic-import"), a3 ? o3.push("proposal-export-namespace-from") : o3.push("syntax-export-namespace-from"), i3 && o3.push("syntax-top-level-await"), o3;
        }({ modules: d2, transformations: qW, shouldTransformESM: d2 !== "auto" || !(e2.caller != null && e2.caller(tq)), shouldTransformDynamicImport: d2 !== "auto" || !(e2.caller != null && e2.caller(rq)), shouldTransformExportNamespaceFrom: !P2, shouldParseTopLevelAwait: !e2.caller || e2.caller(sq) }), F2 = function(e3, t3, r3, n3, s3, a3, i3) {
          var o3 = new Set(), u3 = { compatData: e3, includes: t3, excludes: r3 };
          for (var l3 in e3)
            if (YS(l3, n3, u3))
              o3.add(l3);
            else if (i3) {
              var c3 = i3.get(l3);
              c3 && o3.add(c3);
            }
          return s3 && s3.forEach(function(e4) {
            return !r3.has(e4) && o3.add(e4);
          }), a3 && a3.forEach(function(e4) {
            return !t3.has(e4) && o3.delete(e4);
          }), o3;
        }(j2, S2.plugins, T2.plugins, C2, I2, function(e3) {
          return e3.loose ? wW : null;
        }({ loose: p2 }), EH.pluginSyntaxMap);
        w2 = xH, (A2 = F2).forEach(function(e3) {
          var t3;
          (t3 = w2[e3]) == null || t3.forEach(function(e4) {
            return A2.delete(e4);
          });
        }), function(e3, t3) {
          e3.forEach(function(r3) {
            XW(HW, r3) && LU.lt(t3, HW[r3]) && e3.delete(r3);
          });
        }(F2, e2.version);
        var k2 = function(e3) {
          var t3 = e3.useBuiltIns, r3 = e3.corejs, n3 = e3.polyfillTargets, s3 = e3.include, a3 = e3.exclude, i3 = e3.proposals, o3 = e3.shippedProposals, u3 = e3.regenerator, l3 = e3.debug, c3 = [];
          if (t3 === "usage" || t3 === "entry") {
            var p3 = { method: t3 + "-global", version: r3 ? r3.toString() : void 0, targets: n3, include: s3, exclude: a3, proposals: i3, shippedProposals: o3, debug: l3 };
            r3 && (t3 === "usage" ? (r3.major === 2 ? c3.push([KX, p3], [PH, { usage: true }]) : c3.push([zX, p3], [PH, { usage: true, deprecated: true }]), u3 && c3.push([JX, { method: "usage-global", debug: l3 }])) : r3.major === 2 ? c3.push([PH, { regenerator: u3 }], [KX, p3]) : (c3.push([zX, p3], [PH, { deprecated: true }]), u3 || c3.push([SH, p3])));
          }
          return c3;
        }({ useBuiltIns: y2, corejs: v2, polyfillTargets: x2, include: S2.builtIns, exclude: T2.builtIns, proposals: b2, shippedProposals: f2, regenerator: F2.has("transform-regenerator"), debug: i2 }), O2 = y2 !== false, R2 = Array.from(F2).map(function(e3) {
          return e3 === "proposal-class-properties" || e3 === "proposal-private-methods" || e3 === "proposal-private-property-in-object" ? [ZX(e3), { loose: p2 ? "#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error" : "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error" }] : [ZX(e3), { spec: h2, loose: p2, useBuiltIns: O2 }];
        }).concat(k2);
        return i2 && (console.log("@babel/preset-env: `DEBUG` option"), console.log("\nUsing targets:"), console.log(JSON.stringify(KS(x2), null, 2)), console.log("\nUsing modules transform: " + d2.toString()), console.log("\nUsing plugins:"), F2.forEach(function(e3) {
          !function(e4, t3, r3) {
            var n3 = zS(e4, t3, r3), s3 = r3[e4];
            if (s3) {
              for (var a3 = "{", i3 = true, o3 = 0, u3 = Object.keys(n3); o3 < u3.length; o3++) {
                var l3 = u3[o3];
                i3 || (a3 += ","), i3 = false, a3 += " " + l3, s3[l3] && (a3 += " < " + s3[l3]);
              }
              a3 += " }", console.log("  " + e4 + " " + a3);
            } else
              console.log("  " + e4);
          }(e3, x2, j2);
        }), y2 || console.log("\nUsing polyfills: No polyfills were added, since the `useBuiltIns` option was not set.")), { plugins: R2 };
      });
      var iq = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2, n2 = ((r2 = t2) === void 0 && (r2 = {}), { all: r2.all, allowDeclareFields: r2.allowDeclareFields });
        return { plugins: [[AB, { all: n2.all, allowDeclareFields: n2.allowDeclareFields }]] };
      }), oq = new Map([["react", ["cloneElement", "createContext", "createElement", "createFactory", "createRef", "forwardRef", "isValidElement", "memo", "lazy"]], ["react-dom", ["createPortal"]]]), uq = jF(function(e2) {
        return e2.assertVersion(7), { name: "transform-react-pure-annotations", visitor: { CallExpression: function(e3) {
          (function(e4) {
            if (!M(e4.node.callee)) {
              for (var t2, r2 = e4.get("callee"), n2 = f(oq); !(t2 = n2()).done; )
                for (var s2, a2 = l(t2.value, 2), i2 = a2[0], o2 = f(a2[1]); !(s2 = o2()).done; ) {
                  var u2 = s2.value;
                  if (r2.referencesImport(i2, u2))
                    return true;
                }
              return false;
            }
            for (var c2, p2 = f(oq); !(c2 = p2()).done; ) {
              var d2 = l(c2.value, 2), h2 = d2[0], m2 = d2[1], y2 = e4.get("callee.object");
              if (y2.referencesImport(h2, "default") || y2.referencesImport(h2, "*")) {
                for (var g2, v2 = f(m2); !(g2 = v2()).done; ) {
                  var b2 = g2.value;
                  if (F(e4.node.callee.property, { name: b2 }))
                    return true;
                }
                return false;
              }
            }
            return false;
          })(e3) && ok(e3);
        } } };
      });
      var lq = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = function(e3) {
          e3 === void 0 && (e3 = {});
          var t3 = e3, r3 = t3.pragma, n3 = t3.pragmaFrag, s3 = e3, a3 = s3.pure, i3 = s3.throwIfNamespace, o3 = i3 === void 0 || i3, u3 = s3.runtime, l3 = u3 === void 0 ? "classic" : u3, c2 = s3.importSource, p2 = s3.useBuiltIns, d2 = s3.useSpread;
          return l3 === "classic" && (r3 = r3 || "React.createElement", n3 = n3 || "React.Fragment"), { development: !!e3.development, importSource: c2, pragma: r3, pragmaFrag: n3, pure: a3, runtime: l3, throwIfNamespace: o3, useBuiltIns: p2, useSpread: d2 };
        }(t2), n2 = r2.development, s2 = r2.importSource, a2 = r2.pragma, i2 = r2.pragmaFrag, o2 = r2.pure, u2 = r2.runtime, l2 = r2.throwIfNamespace;
        return { plugins: [[n2 ? U_ : L_, { importSource: s2, pragma: a2, pragmaFrag: i2, runtime: u2, throwIfNamespace: l2, pure: o2, useBuiltIns: !!t2.useBuiltIns, useSpread: t2.useSpread }], A_, o2 !== false && uq].filter(Boolean) };
      }), cq = new mC("@babel/preset-typescript");
      var pq, dq, fq = jF(function(e2, t2) {
        e2.assertVersion(7);
        var r2 = function(e3) {
          e3 === void 0 && (e3 = {});
          var t3 = e3, r3 = t3.allowNamespaces, n3 = r3 === void 0 || r3, s3 = t3.jsxPragma, a3 = t3.onlyRemoveTypeImports, i3 = cq.validateStringOption("jsxPragmaFrag", e3.jsxPragmaFrag, "React.Fragment"), o3 = cq.validateBooleanOption("allExtensions", e3.allExtensions, false), u3 = cq.validateBooleanOption("isTSX", e3.isTSX, false);
          return u3 && cq.invariant(o3, "isTSX:true requires allExtensions:true"), { allExtensions: o3, allowNamespaces: n3, isTSX: u3, jsxPragma: s3, jsxPragmaFrag: i3, onlyRemoveTypeImports: a3 };
        }(t2), n2 = r2.allExtensions, s2 = r2.allowNamespaces, a2 = r2.isTSX, i2 = r2.jsxPragma, o2 = r2.jsxPragmaFrag, u2 = r2.onlyRemoveTypeImports, l2 = function(e3) {
          return { allowDeclareFields: t2.allowDeclareFields, allowNamespaces: s2, isTSX: e3, jsxPragma: i2, jsxPragmaFrag: o2, onlyRemoveTypeImports: u2 };
        };
        return { overrides: n2 ? [{ plugins: [[yW, l2(a2)]] }] : [{ test: /\.ts$/, plugins: [[yW, l2(false)]] }, { test: /\.tsx$/, plugins: [[yW, l2(true)]] }] };
      }), hq = ["text/jsx", "text/babel"], mq = 0;
      function yq(e2, t2) {
        var r2 = document.createElement("script");
        t2.type && r2.setAttribute("type", t2.type), r2.text = function(e3, t3) {
          var r3;
          return t3.url != null ? r3 = t3.url : (r3 = "Inline Babel script", ++mq > 1 && (r3 += " (" + mq + ")")), e3(t3.content, function(e4, t4) {
            var r4 = e4.presets;
            return r4 || (r4 = e4.type === "module" ? ["react", ["env", { targets: { esmodules: true }, modules: false }]] : ["react", "env"]), { filename: t4, presets: r4, plugins: e4.plugins || ["proposal-class-properties", "proposal-object-rest-spread", "transform-flow-strip-types"], sourceMaps: "inline", sourceFileName: t4 };
          }(t3, r3)).code;
        }(e2, t2), pq.appendChild(r2);
      }
      function gq(e2, t2) {
        var r2 = e2.getAttribute(t2);
        return r2 === "" ? [] : r2 ? r2.split(",").map(function(e3) {
          return e3.trim();
        }) : null;
      }
      function vq(e2, t2) {
        var r2 = [], n2 = t2.length;
        function s2() {
          var t3, s3;
          for (s3 = 0; s3 < n2; s3++)
            if ((t3 = r2[s3]).loaded && !t3.executed)
              t3.executed = true, yq(e2, t3);
            else if (!t3.loaded && !t3.error && !t3.async)
              break;
        }
        t2.forEach(function(e3, t3) {
          var n3, a2, i2, o2, u2 = { async: e3.hasAttribute("async"), type: e3.getAttribute("data-type"), error: false, executed: false, plugins: gq(e3, "data-plugins"), presets: gq(e3, "data-presets") };
          e3.src ? (r2[t3] = Object.assign({}, u2, { content: null, loaded: false, url: e3.src }), n3 = e3.src, a2 = function(e4) {
            r2[t3].loaded = true, r2[t3].content = e4, s2();
          }, i2 = function() {
            r2[t3].error = true, s2();
          }, (o2 = new XMLHttpRequest()).open("GET", n3, true), "overrideMimeType" in o2 && o2.overrideMimeType("text/plain"), o2.onreadystatechange = function() {
            if (o2.readyState === 4) {
              if (o2.status !== 0 && o2.status !== 200)
                throw i2(), new Error("Could not load " + n3);
              a2(o2.responseText);
            }
          }, o2.send(null)) : r2[t3] = Object.assign({}, u2, { content: e3.innerHTML, loaded: true, url: e3.getAttribute("data-module") || null });
        }), s2();
      }
      var bq = Array.isArray || function(e2) {
        return Object.prototype.toString.call(e2) === "[object Array]";
      };
      function Eq(e2, t2) {
        return bq(t2) && typeof t2[0] == "string" ? Object.prototype.hasOwnProperty.call(e2, t2[0]) ? [e2[t2[0]]].concat(t2.slice(1)) : void 0 : typeof t2 == "string" ? e2[t2] : t2;
      }
      function xq(e2) {
        var t2 = (e2.presets || []).map(function(e3) {
          var t3 = Eq(wq, e3);
          if (!t3)
            throw new Error('Invalid preset specified in Babel options: "' + e3 + '"');
          return bq(t3) && typeof t3[0] == "object" && Object.prototype.hasOwnProperty.call(t3[0], "buildPreset") && (t3[0] = Object.assign({}, t3[0], { buildPreset: t3[0].buildPreset })), t3;
        }), r2 = (e2.plugins || []).map(function(e3) {
          var t3 = Eq(Aq, e3);
          if (!t3)
            throw new Error('Invalid plugin specified in Babel options: "' + e3 + '"');
          return t3;
        });
        return Object.assign({ babelrc: false }, e2, { presets: t2, plugins: r2 });
      }
      function Dq(e2, t2) {
        return cF(e2, xq(t2));
      }
      var Aq = {}, wq = {}, Cq = pA;
      function Sq(e2, t2) {
        Object.prototype.hasOwnProperty.call(Aq, e2) && console.warn('A plugin named "' + e2 + '" is already registered, it will be overridden'), Aq[e2] = t2;
      }
      function Tq(e2) {
        Object.keys(e2).forEach(function(t2) {
          return Sq(t2, e2[t2]);
        });
      }
      function jq(e2, t2) {
        Object.prototype.hasOwnProperty.call(wq, e2) && (e2 === "env" ? console.warn("@babel/preset-env is now included in @babel/standalone, please remove @babel/preset-env-standalone") : console.warn('A preset named "' + e2 + '" is already registered, it will be overridden')), wq[e2] = t2;
      }
      function Pq(e2) {
        Object.keys(e2).forEach(function(t2) {
          return jq(t2, e2[t2]);
        });
      }
      Tq(bW), Pq({ env: aq, es2015: EW, es2016: function() {
        return { plugins: [Aq["transform-exponentiation-operator"]] };
      }, es2017: function() {
        return { plugins: [Aq["transform-async-to-generator"]] };
      }, react: lq, "stage-0": function(e2, t2) {
        t2 === void 0 && (t2 = {});
        var r2 = t2, n2 = r2.loose, s2 = n2 !== void 0 && n2, a2 = r2.useBuiltIns, i2 = a2 !== void 0 && a2, o2 = r2.decoratorsLegacy, u2 = o2 !== void 0 && o2, l2 = r2.decoratorsBeforeExport, c2 = r2.pipelineProposal, p2 = c2 === void 0 ? "minimal" : c2, d2 = r2.importAssertionsVersion;
        return { presets: [[AW, { loose: s2, useBuiltIns: i2, decoratorsLegacy: u2, decoratorsBeforeExport: l2, pipelineProposal: p2, importAssertionsVersion: d2 === void 0 ? "september-2020" : d2 }]], plugins: [qO] };
      }, "stage-1": AW, "stage-2": DW, "stage-3": xW, "es2015-loose": { presets: [[EW, { loose: true }]] }, "es2015-no-commonjs": { presets: [[EW, { modules: false }]] }, typescript: fq, flow: iq });
      function Iq() {
        Fq();
      }
      function Fq(e2) {
        !function(e3, t2) {
          pq = document.getElementsByTagName("head")[0], t2 || (t2 = document.getElementsByTagName("script"));
          for (var r2 = [], n2 = 0; n2 < t2.length; n2++) {
            var s2 = t2.item(n2), a2 = s2.type.split(";")[0];
            hq.indexOf(a2) !== -1 && r2.push(s2);
          }
          r2.length !== 0 && (console.warn("You are using the in-browser Babel transformer. Be sure to precompile your scripts for production - https://babeljs.io/docs/setup/"), vq(e3, r2));
        }(Dq, e2);
      }
      typeof window != "undefined" && (dq = window) != null && dq.addEventListener && window.addEventListener("DOMContentLoaded", Iq, false), e.availablePlugins = Aq, e.availablePresets = wq, e.buildExternalHelpers = Cq, e.disableScriptTags = function() {
        window.removeEventListener("DOMContentLoaded", Iq);
      }, e.registerPlugin = Sq, e.registerPlugins = Tq, e.registerPreset = jq, e.registerPresets = Pq, e.transform = Dq, e.transformFromAst = function(e2, t2, r2) {
        return gF(e2, t2, xq(r2));
      }, e.transformScriptTags = Fq, e.version = "7.14.7", Object.defineProperty(e, "__esModule", { value: true });
    });
  }
});

// src/lib/babel.dynamic.import.js
var require_babel_dynamic_import = __commonJS({
  "src/lib/babel.dynamic.import.js"(exports2) {
    function myCustomPlugin() {
      return {
        visitor: {
          CallExpression(path) {
            if (path.node.callee.type == "Import") {
              path.node.callee.type = "Identifier";
              path.node.callee.name = "asyncRequire";
            }
          }
        }
      };
    }
    exports2.default = myCustomPlugin;
  }
});

// src/lib/babel.import.meta.js
var require_babel_import_meta = __commonJS({
  "src/lib/babel.import.meta.js"(exports2) {
    function myCustomPlugin() {
      return {
        visitor: {
          MetaProperty(path) {
            if (path.node.meta.name == "import") {
              path.node.meta.name = "importMeta";
            }
          }
        }
      };
    }
    exports2.default = myCustomPlugin;
  }
});

// src/Kawix.ts
var Kawix_exports = {};
__export(Kawix_exports, {
  Installer: () => Installer,
  KModule: () => KModule,
  Kawix: () => Kawix
});
async function Typescript(filename, module2, options) {
  let content = import_fs.default.readFileSync(filename, "utf8");
  content = content.replace(/^\uFEFF/gm, "").replace(/^\u00BB\u00BF/gm, "");
  if (content.startsWith("#!")) {
    let i = content.indexOf("\r");
    if (i < 0)
      i = content.indexOf("\n");
    if (i > 0)
      content = content.substring(i + 1);
    if (content[0] == "\n")
      content = content.substring(1);
  }
  if (content.startsWith("// ESBUILD PACKAGE")) {
    module2["_compile"](content, filename);
  } else {
    let info = await global.kawix.compileSource(content, Object.assign({}, options, {
      filename
    }));
    return info;
  }
}
var import_fs, import_module, import_os, import_path, import_crypto, import_http, import_https, Deferred, _KModule, KModule, Installer, Kawix, defaultJs;
var init_Kawix = __esm({
  "src/Kawix.ts"() {
    import_fs = __toModule(require("fs"));
    import_module = __toModule(require("module"));
    import_os = __toModule(require("os"));
    import_path = __toModule(require("path"));
    import_crypto = __toModule(require("crypto"));
    import_http = __toModule(require("http"));
    import_https = __toModule(require("https"));
    Deferred = class {
      constructor() {
        this._promise = new Promise((resolve, reject) => {
          this.resolve = resolve;
          this.reject = reject;
        });
      }
      get promise() {
        return this._promise;
      }
    };
    _KModule = class {
      static addVirtualFile(path, filedata) {
        if (typeof filedata == "function") {
          filedata = filedata();
        }
        this.$files.set(import_path.default.posix.join("/virtual", path), filedata);
      }
      static addExtensionLoader(ext, loader) {
        import_module.default["_extensions"][ext] = function(module2, filename) {
          let defaultPreload = function() {
            module2._compile("exports.__kawix__compile = true; exports.__local__vars = { module, require, __dirname, __filename, global, Buffer }; exports.__filename = " + JSON.stringify(filename), filename);
          };
          if (loader.preload) {
            loader.preload(module2, filename, defaultPreload);
          } else {
            defaultPreload();
          }
        };
        this.addExtensionLoader[ext] = loader;
        this.extensionCompilers[ext] = loader.compile;
      }
      constructor(module2) {
        this.$module = module2;
      }
      get extensions() {
        let item = {};
        for (let id in this.extensionCompilers) {
          item[id] = true;
        }
        return item;
      }
      get extensionCompilers() {
        return _KModule.extensionCompilers;
      }
      get languages() {
        return _KModule.languages;
      }
      injectImport() {
      }
      injectImports() {
      }
      disableInjectImport() {
      }
      addVirtualFile() {
        return _KModule.addVirtualFile.apply(_KModule, arguments);
      }
      addExtensionLoader() {
        return _KModule.addExtensionLoader.apply(_KModule, arguments);
      }
      import(request, parent = null) {
        if (!parent)
          parent = this.$module;
        return global.kawix.import(request, parent);
      }
    };
    KModule = _KModule;
    KModule.languages = {
      "json": ".json",
      "javascript": ".js",
      "ecmascript": ".js",
      "typescript": ".ts"
    };
    KModule.extensionCompilers = {};
    KModule.extensionLoaders = {};
    KModule.$files = new Map();
    Installer = class {
      constructor(kawix2) {
        this.$kawix = kawix2;
      }
      getBinFolder() {
        if (import_os.default.platform() == "linux") {
          if (process.getuid() == 0) {
            return "/usr/KwRuntime/bin";
          } else {
            return import_path.default.join(import_os.default.homedir(), "KwRuntime", "bin");
          }
        }
        if (import_os.default.platform() == "win32") {
          return import_path.default.join(import_os.default.homedir(), "KwRuntime", "bin");
        }
      }
      install(href, name, exe = "kwrun") {
        if (import_os.default.platform() == "linux" || import_os.default.platform() == "darwin") {
          let bin = this.getBinFolder();
          let cmd = import_path.default.join(bin, exe);
          let out = import_path.default.join(bin, name);
          import_fs.default.writeFileSync(out, [
            `#!${cmd}`,
            `export {default} from ${JSON.stringify(href)}`,
            `export * from ${JSON.stringify(href)}`
          ].join("\n"));
          import_fs.default.chmodSync(out, "775");
          console.info("Installed!");
        } else if (import_os.default.platform() == "win32") {
          let bin = this.getBinFolder();
          let cmd = import_path.default.join(bin, exe);
          let out = import_path.default.join(bin, name + ".cmd");
          import_fs.default.writeFileSync(out, [
            `@echo off`,
            `"${cmd}" "${href}" %*`
          ].join("\n"));
          console.info("Installed!");
        }
      }
      selfInstall() {
        if (import_os.default.platform() == "linux" || import_os.default.platform() == "darwin") {
          return this.selfInstallUnix();
        } else if (import_os.default.platform() == "win32") {
          return this.selfInstallWin32();
        }
      }
      selfInstallWin32() {
        let kawixFolder = import_path.default.join(import_os.default.homedir(), "KwRuntime");
        if (!import_fs.default.existsSync(kawixFolder))
          import_fs.default.mkdirSync(kawixFolder);
        let bin = import_path.default.join(kawixFolder, "bin");
        if (!import_fs.default.existsSync(bin))
          import_fs.default.mkdirSync(bin);
        if (process.env.PATH.indexOf(bin) < 0) {
          let child = require("child_process");
          child.execSync(`setx path "${bin};%path%"`);
        }
        let exe = this.$kawix.executable;
        let nodev = process.version.split(".")[0].substring(1);
        let content = `@echo off
"${exe.cmd}" "${exe.args.join('" "')}" %*`;
        let binFile = import_path.default.join(bin, "kwrun-n" + nodev + ".cmd");
        import_fs.default.writeFileSync(binFile, content);
        content = `@echo off
"${exe.cmd}" --http-parser-legacy "${exe.args.join('" "')}" %*`;
        binFile = import_path.default.join(bin, "kwrun-legacy-n" + nodev + ".cmd");
        import_fs.default.writeFileSync(binFile, content);
        let files = import_fs.default.readdirSync(bin);
        let fileinfo = files.filter((a) => a.startsWith("kwrun-") && a.endsWith(".cmd")).map((a) => ({ name: a, v: a.split("-").slice(-1)[0].split(".")[0].substring(1) }));
        fileinfo.sort((a, b) => Number(a.v) - Number(b.v));
        if (fileinfo.length) {
          let v = fileinfo[fileinfo.length - 1].v;
          import_fs.default.writeFileSync(import_path.default.join(bin, "kwrun.cmd"), import_fs.default.readFileSync(import_path.default.join(bin, "kwrun-n" + v + ".cmd")));
          import_fs.default.writeFileSync(import_path.default.join(bin, "kwrun-legacy.cmd"), import_fs.default.readFileSync(import_path.default.join(bin, "kwrun-legacy-n" + v + ".cmd")));
        }
      }
      selfInstallUnix() {
        let kawixFolder = import_path.default.join(import_os.default.homedir(), "KwRuntime");
        if (process.getuid() == 0) {
          kawixFolder = "/usr/KwRuntime";
          if (!import_fs.default.existsSync("/usr/KwRuntime"))
            import_fs.default.mkdirSync("/usr/KwRuntime");
          import_fs.default.symlinkSync("/usr/KwRuntime", kawixFolder);
          kawixFolder = "/usr/KwRuntime";
        } else {
          if (!import_fs.default.existsSync(kawixFolder))
            import_fs.default.mkdirSync(kawixFolder);
        }
        let bin = import_path.default.join(kawixFolder, "bin");
        if (!import_fs.default.existsSync(bin))
          import_fs.default.mkdirSync(bin);
        let exe = this.$kawix.executable;
        let nodev = process.version.split(".")[0].substring(1);
        let content = `#!${exe.cmd}
process.argv[1] = ${JSON.stringify(exe.args[0])};require(process.argv[1]);`;
        let binFile = import_path.default.join(bin, "kwrun-n" + nodev);
        import_fs.default.writeFileSync(binFile, content);
        import_fs.default.chmodSync(binFile, "775");
        content = `#!${exe.cmd} --http-parser-legacy ${exe.args.join(" ")}`;
        binFile = import_path.default.join(bin, "kwrun-legacy-n" + nodev);
        import_fs.default.writeFileSync(binFile, content);
        import_fs.default.chmodSync(binFile, "775");
        let files = import_fs.default.readdirSync(bin);
        let fileinfo = files.filter((a) => a.startsWith("kwrun-")).map((a) => ({ name: a, v: a.split("-").slice(-1)[0].substring(1) }));
        fileinfo.sort((a, b) => Number(a.v) - Number(b.v));
        if (fileinfo.length) {
          let v = fileinfo[fileinfo.length - 1].v;
          try {
            import_fs.default.unlinkSync(import_path.default.join(bin, "kwrun"));
          } catch (e) {
          }
          try {
            import_fs.default.unlinkSync(import_path.default.join(bin, "kwrun-legacy"));
          } catch (e) {
          }
          import_fs.default.symlinkSync(import_path.default.join(bin, "kwrun-n" + v), import_path.default.join(bin, "kwrun"));
          import_fs.default.symlinkSync(import_path.default.join(bin, "kwrun-legacy-n" + v), import_path.default.join(bin, "kwrun-legacy"));
        }
        let pathsToWrite = [];
        pathsToWrite.push(import_path.default.join(import_os.default.homedir(), ".profile"));
        pathsToWrite.push(import_path.default.join(import_os.default.homedir(), ".bashrc"));
        pathsToWrite.push(import_path.default.join(import_os.default.homedir(), ".zshrc"));
        let config = import_path.default.join(import_os.default.homedir(), ".config");
        if (!import_fs.default.existsSync(config))
          import_fs.default.mkdirSync(config);
        config = import_path.default.join(config, "fish");
        if (!import_fs.default.existsSync(config))
          import_fs.default.mkdirSync(config);
        config = import_path.default.join(config, "config.fish");
        pathsToWrite.push(config);
        if (process.getuid() == 0) {
          pathsToWrite.push("/etc/profile");
          pathsToWrite.push("/etc/bash.bashrc");
          pathsToWrite.push("/etc/fish/config.fish");
          if (!import_fs.default.existsSync("/etc/fish"))
            import_fs.default.mkdirSync("/etc/fish");
        }
        let lines = [
          "# KWRUNTIME PATH #",
          `export "PATH=${bin}:$PATH"`
        ];
        for (let i = 0; i < pathsToWrite.length; i++) {
          let path = pathsToWrite[i];
          if (!import_fs.default.existsSync(path)) {
            import_fs.default.writeFileSync(path, lines.join("\n"));
          } else {
            let content2 = import_fs.default.readFileSync(path, "utf8");
            let lns = content2.split("\n");
            let i2 = lns.indexOf(lines[0]);
            if (i2 < 0) {
              lns.push(lines[0]);
              lns.push(lines[1]);
            } else {
              lns[i2 + 1] = lines[1];
            }
            import_fs.default.writeFileSync(path, lns.join("\n"));
          }
        }
        console.info("Application added to PATH. Maybe you need restart shell.");
      }
    };
    Kawix = class {
      constructor() {
        this.appArguments = [];
        this.optionsArguments = [];
        this.$importing = new Map();
        this.$modCache = new Map();
        this.$originals = new Map();
        this.$startParams = {};
      }
      get argv() {
        return this.appArguments;
      }
      get version() {
        return "1.1.3";
      }
      get installer() {
        if (!this.$installer) {
          this.$installer = new Installer(this);
        }
        return this.$installer;
      }
      get executable() {
        return {
          cmd: this.originalArgv[0],
          args: [this.originalArgv[1]]
        };
      }
      async main() {
        return 0;
      }
      $getCache(path) {
        let md5 = import_crypto.default.createHash("md5").update(path).digest("hex");
        let file = import_path.default.posix.join(this.$cacheFolder, md5 + ".json"), stat = null, data = null;
        try {
          stat = import_fs.default.statSync(path);
        } catch (e) {
        }
        if (!stat)
          return null;
        if (!import_fs.default.existsSync(file))
          return;
        let content = import_fs.default.readFileSync(file, "utf8");
        data = JSON.parse(content);
        let mtimeMs = Math.ceil(stat.mtimeMs / 1e3) * 1e3;
        if (data.mtimeMs == mtimeMs) {
          return data;
        }
      }
      $saveCache(path, cache) {
        let md5 = import_crypto.default.createHash("md5").update(path).digest("hex");
        let file = import_path.default.join(this.$cacheFolder, md5 + ".json");
        import_fs.default.writeFileSync(file, JSON.stringify(cache));
      }
      $addOriginalURL(file, url) {
        this.$originals.set(file, url);
        if (this.$originals.size > 100) {
          this.$originals.delete(this.$originals.keys().next().value);
        }
      }
      async $getNetworkContent(url) {
        let uri = new URL(url);
        let id = import_crypto.default.createHash("md5").update(url).digest("hex");
        let ext = import_path.default.extname(uri.pathname);
        let name = import_path.default.basename(uri.pathname);
        if (!ext)
          name += ".ts";
        let file = import_path.default.join(this.$networkContentFolder, id + "-" + name);
        if (import_fs.default.existsSync(file)) {
          this.$addOriginalURL(file, url);
          return { file };
        }
        let vfile = import_path.default.posix.join("/virtual/$app-cache/network", id + "-" + name);
        let virtual = KModule.$files.get(vfile);
        if (virtual) {
          import_fs.default.writeFileSync(file, virtual.content);
          this.$addOriginalURL(file, url);
          return {
            file,
            virtual: true
          };
        }
        let getContent = async function(url2) {
          let def = {}, redir = "";
          let promise = new Promise(function(a, b) {
            def.resolve = a;
            def.reject = b;
          });
          let items = { http: import_http.default, https: import_https.default };
          let req = items[url2.startsWith("http:") ? "http" : "https"].get(url2, {
            headers: {
              "user-agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
            }
          }, function(res) {
            if (res.statusCode == 302) {
              redir = res.headers.location;
              return def.resolve();
            }
            if (res.statusCode != 200) {
              def.reject(new Error("Invalid status code from network response: " + String(res.statusCode) + " from " + url2));
              return;
            }
            let buffers = [];
            res.on("data", function(bytes) {
              buffers.push(bytes);
            });
            res.on("end", function() {
              def.resolve(Buffer.concat(buffers));
            });
            res.on("error", def.reject);
          });
          req.on("error", def.reject);
          let c = await promise;
          if (redir) {
            return await getContent(redir);
          }
          return c;
        };
        let options = {
          [url]: true
        };
        let extSet = new Set();
        for (let id2 in KModule.extensionCompilers) {
          extSet.add(id2);
        }
        for (let id2 in import_module.default["_extensions"]) {
          extSet.add(id2);
        }
        for (let ext2 of extSet) {
          options[`${uri.protocol}//${uri.host}${uri.pathname}${ext2}${uri.search}`] = true;
        }
        let urls = Object.keys(options), error = null;
        for (let i = 0; i < urls.length; i++) {
          try {
            let content = await getContent(urls[i]);
            import_fs.default.writeFileSync(file, content);
            this.$addOriginalURL(file, urls[i]);
            return {
              file,
              content
            };
          } catch (e) {
            error = e;
          }
        }
        if (error)
          throw error;
      }
      requireSync(request, parent, originalRequire = null) {
        if (import_module.default.builtinModules.indexOf(request) >= 0) {
          return import_module.default["_load"](request, parent);
        }
        let resolv = this.importResolve(request, parent, true);
        let cached = this.$getCachedExports(resolv.request);
        if (cached) {
          return cached.data;
        }
        let getExports = () => {
          if (resolv.from == "virtual") {
            let file = resolv.virtual;
            let name = resolv.request;
            let exp = this.$modCache.get(name);
            if (exp)
              return exp;
            let mod1 = new import_module.default(name, module);
            mod1.filename = name;
            mod1["__kawix__virtual"] = true;
            let source = {
              stat: file.stat,
              content: file.content.toString()
            };
            if (file.transpiled) {
              mod1["requireSync"] = (path) => this.requireSync(path, mod1);
              let content = `require = module.requireSync;${source.content}`;
              mod1["_compile"](content, name);
              cached = {
                module: mod1,
                mode: "node",
                exports: mod1.exports,
                executed: true,
                content: source.content,
                result: {
                  code: source.content
                },
                filename: name
              };
            } else {
              throw new Error("Not available for require: " + name);
            }
            return mod1.exports;
          }
          if (resolv.from != "node") {
            throw new Error(`${resolv.request} not available to be required in sync mode`);
          }
          global.kawix.disableCompile = true;
          try {
            let exp = null;
            if (originalRequire) {
              exp = originalRequire(resolv.request);
            }
            exp = import_module.default["_load"](resolv.request, parent);
            cached = {
              module: import_module.default["_cache"][resolv.request],
              mode: "node",
              exports: exp,
              executed: true,
              filename: resolv.request
            };
            return exp;
          } catch (e) {
            throw e;
          } finally {
            global.kawix.disableCompile = false;
          }
        };
        let exports2 = getExports();
        if (cached)
          this.$modCache.set(resolv.request, cached);
        return exports2;
      }
      importResolve(request, parent = null, syncMode = false) {
        var _a;
        if (import_module.default.builtinModules.indexOf(request) >= 0) {
          return {
            request
          };
        }
        if (!syncMode) {
          if ((request.startsWith("./") || request.startsWith("../") || request.startsWith("/")) && (parent == null ? void 0 : parent.__kawix__network)) {
            if (!request.startsWith("/virtual")) {
              let newUri = new URL(request, parent.__kawix__meta.uri);
              let url = `${newUri.protocol}//${newUri.host}${newUri.pathname}${newUri.search}`;
              return {
                from: "network",
                request: url
              };
            }
          }
        }
        let possibles = [];
        if ((request.startsWith("./") || request.startsWith("../")) && (parent == null ? void 0 : parent.__kawix__virtual)) {
          request = import_path.default.posix.join(import_path.default.posix.dirname(parent.filename), request);
        } else if (!import_path.default.isAbsolute(request) && (parent == null ? void 0 : parent.__kawix__virtual)) {
          let dirname = import_path.default.posix.dirname(parent.filename);
          while (dirname && dirname != "/" && dirname != ".") {
            possibles.push(import_path.default.posix.join(dirname, "node_modules", request));
            dirname = import_path.default.posix.dirname(dirname);
          }
          dirname = import_path.default.posix.dirname(parent.filename);
          while (dirname && dirname != "/" && dirname != ".") {
            possibles.push(import_path.default.posix.join(dirname, request));
            dirname = import_path.default.posix.dirname(dirname);
          }
        }
        if (request.startsWith("/virtual") || possibles.length) {
          let file = null, name = "";
          possibles.push(request);
          for (let ext in KModule.extensionCompilers) {
            possibles.push(request + ext);
          }
          for (let i = 0; i < possibles.length; i++) {
            name = possibles[i];
            file = KModule.$files.get(name);
            if (file) {
              if ((_a = file.stat) == null ? void 0 : _a.isdirectory) {
                let f = import_path.default.posix.join(name, "package.json");
                let psource = KModule.$files.get(f);
                if (psource) {
                  let pjson = JSON.parse(psource.content.toString());
                  if (pjson.main)
                    possibles.push(import_path.default.posix.join(name, pjson.main));
                }
                possibles.push(name + "/index.js");
                possibles.push(name + "/main.js");
                file = null;
                continue;
              }
              break;
            }
          }
          if (file) {
            return {
              from: "virtual",
              virtual: file,
              request: name
            };
          }
        } else if (request.startsWith("http://") || request.startsWith("https://")) {
          return {
            from: "network",
            request
          };
        } else if (request.startsWith("gh+/") || request.startsWith("github+/") || request.startsWith("github://")) {
          let parts = request.split("/");
          if (request.startsWith("github://"))
            parts.shift();
          let parts1 = parts[2].split("@");
          let name = parts1[0];
          let version = parts1[1] || "master";
          let url = `https://raw.githubusercontent.com/${parts[1]}/${name}/${version}/${parts.slice(3).join("/")}`;
          return {
            from: "network",
            request: url
          };
        } else if (request.startsWith("gitlab+/") || request.startsWith("gitlab://")) {
          let parts = request.split("/");
          if (request.startsWith("gitlab://"))
            parts.shift();
          let parts1 = parts[2].split("@");
          let name = parts1[0];
          let version = parts1[1] || "master";
          let url = `https://gitlab.com/${parts[1]}/${name}/-/raw/${version}/${parts.slice(3).join("/")}`;
          return {
            from: "network",
            request: url
          };
        }
        if (request.startsWith("npm://")) {
          return {
            from: "npm",
            request
          };
        }
        request = import_module.default["_resolveFilename"](request, parent);
        return {
          from: "node",
          request
        };
      }
      $getCachedExports(request) {
        let info = this.$modCache.get(request);
        if (!info)
          return;
        if (info.builtin) {
          return {
            data: info.exports
          };
        }
        if (info.mode == "node") {
          if (info.location) {
            return {
              data: require(info.location.main)
            };
          }
        }
        if (info.executed) {
          return {
            data: info.module.exports
          };
        }
      }
      async import(request, parent = null, scope = null) {
        let cache = this.$getCachedExports(request);
        if (cache)
          return cache.data;
        let info = await this.importInfo(request, parent, scope);
        let getExportsFromInfo = async (info2) => {
          if (info2.builtin) {
            return info2.exports;
          }
          if (info2.mode == "node") {
            if (info2.location) {
              return require(info2.location.main);
            } else if (!info2.executed) {
              info2.module["requireSync"] = (path) => this.requireSync(path, info2.module);
              info2.module["_compile"](info2.result.code, info2.filename);
              return info2.exports = info2.module.exports;
            }
          }
          if (!info2.executed) {
            let goodPreloadedModules = [];
            if (info2.preloadedModules) {
              for (let i2 = 0; i2 < info2.preloadedModules.length; i2++) {
                let itemInfo = info2.preloadedModules[i2];
                let exp = await getExportsFromInfo(itemInfo);
                goodPreloadedModules.push(exp);
              }
              let i = info2.vars.names.indexOf("preloadedModules");
              info2.vars.values[i] = goodPreloadedModules;
            }
            await this.defaultExecute(info2, info2.module.exports);
            info2.executed = true;
            info2.exports = info2.module.exports;
            return info2.exports;
          } else {
            return info2.exports || info2.module.exports;
          }
        };
        return getExportsFromInfo(info);
      }
      async importInfo(request, parent = null, scope = null) {
        if (import_module.default.builtinModules.indexOf(request) >= 0) {
          return {
            builtin: true,
            exports: import_module.default["_load"](request, parent)
          };
        }
        if (!scope) {
          scope = new Map();
        }
        let resolv = this.importResolve(request, parent);
        let cached = this.$modCache.get(resolv.request);
        if (cached) {
          return cached;
        }
        let item = scope.get(resolv.request);
        if (item)
          return item;
        let importing = this.$importing.get(resolv.request);
        if (importing) {
          let def = new Deferred();
          importing.defs.push(def);
          return await def.promise;
        } else {
          let error = null, result = null;
          let importing2 = {
            defs: [],
            name: resolv.request,
            time: Date.now()
          };
          try {
            this.$importing.set(importing2.name, importing2);
            result = await this.$importInfo(resolv, parent, scope);
          } catch (e) {
            error = e;
          }
          if (result) {
            this.$modCache.set(resolv.request, result);
          }
          let defs = importing2.defs;
          this.$importing.delete(importing2.name);
          if (defs.length) {
            setImmediate(() => {
              for (let i = 0; i < defs.length; i++) {
                if (error)
                  defs[i].reject(error);
                else
                  defs[i].resolve(result);
              }
            });
          }
          if (error)
            throw error;
          return result;
        }
      }
      async $importInfo(resolv, parent, scope) {
        let conv = null, meta = null;
        if (resolv.virtual) {
          let file = resolv.virtual;
          let name = resolv.request;
          let mod1 = new import_module.default(name, module);
          mod1.filename = name;
          mod1["__kawix__virtual"] = true;
          let source = {
            stat: file.stat,
            content: file.content.toString()
          };
          if (file.transpiled) {
            return {
              module: mod1,
              mode: "node",
              filename: name,
              vars: {
                names: [],
                values: []
              },
              content: source.content,
              result: {
                code: `require = module.requireSync;${source.content}`
              },
              preloadedModules: []
            };
          } else {
            mod1["_compile"]("exports.__source = " + JSON.stringify(source) + ";exports.__kawix__compile = true; exports.__local__vars = { module, require, __dirname, __filename, global, Buffer }; exports.__filename = " + JSON.stringify(name), name);
            let base = {
              module: mod1,
              executed: false,
              filename: name,
              vars: {
                names: [],
                values: []
              },
              content: source.content,
              result: {
                code: `${source.content}`
              },
              requires: [],
              preloadedModules: []
            };
            scope.set(resolv.request, base);
            try {
              if (mod1.exports.__kawix__compile) {
                let result = await this.defaultCompile(mod1, null, scope);
                Object.assign(base, result);
              } else {
                base.executed = true;
              }
              return base;
            } catch (e) {
              scope.delete(resolv.request);
              throw e;
            }
          }
        } else if (resolv.request.startsWith("http://")) {
          let uri = new URL(resolv.request);
          let url = `${uri.protocol}//${uri.host}${uri.pathname}`;
          meta = {
            url,
            uri
          };
          conv = await this.$getNetworkContent(resolv.request);
        } else if (resolv.request.startsWith("https://")) {
          let uri = new URL(resolv.request);
          let url = `${uri.protocol}//${uri.host}${uri.pathname}`;
          meta = {
            url,
            uri
          };
          conv = await this.$getNetworkContent(resolv.request);
        } else if (resolv.request.startsWith("npm://")) {
          let name = resolv.request.substring(6);
          let mod = await this.import("github://kwruntime/std@1.1.0/package/yarn.ts", null, scope);
          let reg = new mod.Registry();
          let location = await reg.resolve(name);
          return {
            module: null,
            mode: "node",
            location
          };
        }
        let filename = (conv == null ? void 0 : conv.file) || resolv.request;
        try {
          let module2 = import_module.default["_cache"][filename], mod = null;
          if (!module2) {
            mod = import_module.default["_load"](filename, parent);
            module2 = import_module.default["_cache"][filename];
          }
          let base = {
            module: module2,
            filename,
            executed: false,
            vars: {
              names: [],
              values: []
            },
            content: "",
            result: {
              code: ""
            },
            requires: [],
            preloadedModules: []
          };
          scope.set(resolv.request, base);
          if (mod.__kawix__compile) {
            let result = await this.defaultCompile(module2, meta, scope);
            Object.assign(base, result);
          } else {
            base.executed = true;
            base.content = import_fs.default.readFileSync(filename, "utf8");
            base.result.code = base.content;
          }
          return base;
        } catch (e) {
          scope.delete(resolv.request);
          throw e;
        }
      }
      async compileSource(source, options) {
        let original = this.$originals.get(options.filename);
        console.log("[32m[kwruntime] Compiling:[0m", original || options.filename);
        let result = null, requires = [], nhead = [];
        source = source.replace(/^\uFEFF/gm, "").replace(/^\u00BB\u00BF/gm, "");
        if (source.startsWith("#!")) {
          let i = source.indexOf("\r") || source.indexOf("\n");
          if (i > 0)
            source = source.substring(i + 1);
          if (source[0] == "\n")
            source = source.substring(1);
        }
        let b = "//KWCORE--STARTING--LINE\n";
        let fname = options.filename;
        if (!fname.endsWith(".ts")) {
          fname += ".ts";
        }
        result = global.Babel.transform(b + source, {
          filename: fname,
          "plugins": Object.values(global.BabelPlugins).concat(options.plugins || []),
          presets: [[global.Babel.availablePresets["env"], { "targets": { node: 8 } }], global.Babel.availablePresets["typescript"]],
          compact: false
        });
        let aliases = {};
        let head_i = result.code.indexOf(b), z = 0;
        if (head_i < 0)
          head_i = result.code.length;
        if (head_i >= 0) {
          let head = result.code.substring(0, head_i);
          let lines = head.split(/\n/g);
          for (let i = 0; i < lines.length; i++) {
            let line = lines[i];
            if (line.indexOf('require("') >= 0) {
              let mod = line.match(/require\(\"([^\"]+)\"\)/)[1], alias = "";
              let i2 = mod.indexOf("##");
              if (i2 > 0) {
                alias = mod.substring(i2 + 2);
                mod = mod.substring(0, i2);
                aliases[alias] = z;
              }
              if (aliases[mod] !== void 0) {
                line = line.replace(/require\(\"([^\"]+)\"\)/, "preloadedModules[" + aliases[mod] + "]");
              } else {
                requires.push(mod);
                line = line.replace(/require\(\"([^\"]+)\"\)/, "preloadedModules[" + String(z++) + "]");
              }
            }
            nhead.push(line);
          }
        }
        if (requires.length > 0) {
          result.code = nhead.join("\n") + result.code.substring(head_i);
        }
        return {
          content: source,
          result,
          requires
        };
      }
      async defaultExecute(info, exports2) {
        let func = Function(info.vars.names.join(","), info.result.code);
        await func.apply(func, info.vars.values);
        delete exports2.__kawix__compile;
        if (exports2.kawixPreload) {
          await exports2.kawixPreload();
        }
        return exports2;
      }
      async defaultCompileAndExecute(module2, meta, scope = null) {
        let info = await this.defaultCompile(module2, meta, scope);
        return await this.defaultExecute(info, module2.exports);
      }
      async defaultCompile(module2, meta = null, scope = null) {
        let data = module2.exports;
        if (!scope)
          scope = new Map();
        module2.__kawix__compiled = true;
        let filename = data.__filename;
        let cache = data.__cache, savecache = false;
        if (!filename.startsWith("/virtual")) {
          cache = this.$getCache(filename);
          savecache = true;
        }
        let content = null, requires = [], nhead = [], result = null;
        if (meta == null ? void 0 : meta.url) {
          module2.__kawix__network = true;
          module2.__kawix__meta = meta;
          data.__local__vars["__filename"] = `/$NETWORK/${meta.uri.protocol.replace(":", "")}${meta.uri.pathname}`;
          data.__local__vars["__dirname"] = import_path.default.normalize(import_path.default.join(data.__local__vars["__filename"], ".."));
          data.__local__vars["importMeta"] = { meta };
        } else {
          data.__local__vars["importMeta"] = {
            meta: {
              url: "file://" + filename
            }
          };
        }
        let kmodule = data.__local__vars["KModule"] = new KModule(module2);
        data.__local__vars["asyncRequire"] = kmodule.import.bind(kmodule);
        data.__local__vars["require"] = (request) => this.requireSync(request, module2);
        let keys = Object.keys(data.__local__vars);
        let values = Object.values(data.__local__vars);
        values.push(data);
        keys.push("exports");
        if (!cache) {
          content = (data.__source || {}).content;
          if (content) {
            if (content.startsWith("// ESBUILD PACKAGE")) {
              module2._compile(content, filename);
              return;
            } else {
              let info = await this.compileSource(content, {
                filename
              });
              result = info.result;
              requires = info.requires;
            }
          } else {
            let compiler = null;
            for (let id in KModule.extensionCompilers) {
              if (filename.endsWith(id)) {
                compiler = KModule.extensionCompilers[id];
                break;
              }
            }
            compiler = compiler || KModule.extensionCompilers[".ts"];
            let info = await compiler(filename, module2);
            if (!info)
              return;
            result = info.result;
            requires = info.requires;
          }
          let stat = (data.__source || {}).stat;
          if (!stat)
            stat = import_fs.default.statSync(filename);
          cache = {
            mtimeMs: Math.ceil(stat.mtimeMs / 1e3) * 1e3,
            content,
            result: {
              code: result.code
            },
            requires,
            time: Date.now()
          };
          if (savecache)
            this.$saveCache(filename, cache);
        } else {
          content = cache.content;
          requires = cache.requires;
          result = cache.result;
        }
        let preloadedModules = [];
        if (requires.length > 0) {
          keys.push("preloadedModules");
          values.push(preloadedModules);
          for (let i = 0; i < requires.length; i++) {
            preloadedModules.push(await this.importInfo(requires[i], module2, scope));
          }
        }
        return {
          module: module2,
          filename,
          vars: {
            names: keys,
            values
          },
          content,
          requires,
          result,
          preloadedModules
        };
      }
      $init() {
        this.originalArgv = process.argv;
        this.appArguments = process.argv.slice(2);
        let offset = 0;
        for (let i = 0; i < this.appArguments.length; i++) {
          let arg = this.appArguments[i];
          if (arg.startsWith("--")) {
            let vl = arg.split("=");
            let name = vl[0].substring(2);
            let value = (vl[1] || "").trim();
            this.$startParams[name] = value;
            this.$startParams[name + "_Array"] = this.$startParams[name + "_Array"] || [];
            this.$startParams[name + "_Array"].push(value);
            this.optionsArguments.push(arg);
            offset++;
          } else {
            this.$startParams[".values"] = this.$startParams[".values"] || [];
            this.$startParams[".values"].push(arg);
          }
        }
        if (offset > 0)
          this.appArguments = this.appArguments.slice(offset);
        this.mainFilename = this.appArguments[0];
        let folder = process.env.RUNTIME_CACHE_FOLDER || import_path.default.join(import_os.default.homedir(), ".kawi");
        if (!folder.startsWith("/virtual")) {
          if (!import_fs.default.existsSync(folder))
            import_fs.default.mkdirSync(folder);
          this.$mainFolder = folder;
          folder = import_path.default.join(folder, "genv2");
          if (!import_fs.default.existsSync(folder))
            import_fs.default.mkdirSync(folder);
          this.$cacheFolder = folder;
          folder = import_path.default.join(folder, "network");
          if (!import_fs.default.existsSync(folder))
            import_fs.default.mkdirSync(folder);
          this.$networkContentFolder = folder;
        } else {
          this.$mainFolder = folder;
          this.$cacheFolder = import_path.default.posix.join(folder, "genv2");
          this.$networkContentFolder = import_path.default.posix.join(folder, "network");
        }
      }
    };
    KModule.addExtensionLoader(".ts", {
      compile: Typescript
    });
    defaultJs = import_module.default["_extensions"][".js"];
    KModule.addExtensionLoader(".js", {
      compile: Typescript,
      preload: function(module2, filename, defaultPreload) {
        var _a;
        if (((_a = module2.parent) == null ? void 0 : _a["__kawix__compiled"]) && !global.kawix.disableCompile) {
          defaultPreload();
        } else {
          defaultJs(module2, filename);
        }
      }
    });
  }
});

// src/index.js
var fs = require("fs");
var Module2 = require("module");
var Path2 = require("path");
global.Babel = require_babel_min();
global.BabelPlugins = {
  dynamicImport: require_babel_dynamic_import().default,
  importMeta: require_babel_import_meta().default
};
var kawix = (init_Kawix(), Kawix_exports).Kawix;
var kwcore = global.kwcore = global.kawix = new kawix();
kwcore.$init();
var program = async function() {
  try {
    if (kwcore.$startParams["self-install"] !== void 0) {
      await kwcore.installer.selfInstall();
    }
    if (kwcore.$startParams["install"] !== void 0) {
      let href = kwcore.$startParams["install"];
      let name = kwcore.$startParams["name"];
      let exe = kwcore.$startParams["executable"];
      if (!name || !href) {
        console.error("Parameters: --install, --name are required to be non empty");
        process.exit(1);
      }
      await kwcore.installer.install(href, name, exe);
    } else if (kwcore.appArguments[0]) {
      let fname = global.kwcore.appArguments[0];
      if (fname.startsWith("http:") || fname.startsWith("https:") || fname.startsWith("gh+/") || fname.startsWith("github+/") || fname.startsWith("gitlab+/") || fname.startsWith("gh+/") || fname.startsWith("github://") || fname.startsWith("gitlab://")) {
      } else if (!Path2.isAbsolute(fname)) {
        fname = Path2.join(process.cwd(), fname);
        global.kwcore.mainFilename = fname;
      }
      module.__kawix__compiled = true;
      let mod = await global.kwcore.import(fname, module);
      if (mod && mod.Program) {
        await mod.Program.main(global.kwcore.appArguments);
      }
    }
  } catch (e) {
    console.error(e);
  }
};
program();
/*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */
/*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
     * @license  MIT
     */
